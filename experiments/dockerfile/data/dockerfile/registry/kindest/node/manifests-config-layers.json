{
    "manifests": {
        "TEST": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9198,
                "digest": "sha256:3ac0225e42ff64d59875292f25289f416cfcfe450034aa51763a777e2efce97d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 817,
                    "digest": "sha256:36fe337c94cf87f03a89fc79790efd6e2c5eb8f36a0cbc7b4272085a5df13059"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 817,
                    "digest": "sha256:36fe337c94cf87f03a89fc79790efd6e2c5eb8f36a0cbc7b4272085a5df13059"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 38035964,
                    "digest": "sha256:11dd8b7111672eeb62620fece93e347860361dcb0bd7378d7778d7f2d369124a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28035564,
                    "digest": "sha256:6802f165c17b4d655e679f750d0843a7543aa670a17997e40b71541d2ca375f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:3cad87b7b534f5e7ff32a01acc8265cd9c0e38462f2b07b87f0908353beb814d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 355,
                    "digest": "sha256:959b46c5fcf5fd4c241f409aa69507c73035535da6dbe0f57eb64225ea5ffe62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401549,
                    "digest": "sha256:8b6471d4fdd02adbee7790732d1727346c39c252c46372c5392d67028453ac93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10698946,
                    "digest": "sha256:dd71a30b7856bb189cbd4576ea4f03824ea3468c0aba73b80a18249c23007aad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1127540,
                    "digest": "sha256:b615c25a7a6993432fda9a5bb592430286fc4f2d896f617c046d391d99a96d62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303873681,
                    "digest": "sha256:8bb01aae5332020741378b7dff07912290b8a02496c17e885212aa9d494f1487"
                }
            ]
        },
        "alpha-v1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8773,
                "digest": "sha256:912e7411c58e853fff533be9fc33eb4d820c422d11308aa3a5e6d63de47c5b98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 328,
                    "digest": "sha256:f8dcf0e5edfe2b26f23b66e7e7334a6331517ff2bb3d496c41cf294586c9a188"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:50c177382fc6ea93dd92930c4ff559878e5cd617fd79999b30c662e212ff1cf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401535,
                    "digest": "sha256:6c23ba0aa26e1b35be0ab8eee69c70486cdb8cb6beae3cb9c8ba92f28de17a7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121426,
                    "digest": "sha256:418feec238bf186d995929d4371739a01efc385c1f381ced7189511650b00c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1482,
                    "digest": "sha256:3e5a738ac0d675928b4052901bd9afa3da48b468b1903735e89ac529333d30ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 287060789,
                    "digest": "sha256:455fd6ea92822bdbb449beca978b7a246ddfcb23eac75ded5f8c8a528b870771"
                }
            ]
        },
        "v1.11.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8219,
                "digest": "sha256:6fa4a216c61a6029e23560171c611ca6d68e8fdb63329da60be10832b0f78131"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5644,
                    "digest": "sha256:859fef2ca79d1cb1e12a40a83a58a40581b2075df8b8e6d9e1abd7efc163feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71298952,
                    "digest": "sha256:ec47119c48699adba5e0cc0d61247dd4098db10312277a07d28617b20e3dca8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 318598820,
                    "digest": "sha256:99117f1bded05b93431619bfafc39ef37dbfbc5e7aa2a02cbb68018e697c029a"
                }
            ]
        },
        "v1.11.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6351,
                "digest": "sha256:38a152454e86c58116ef19a6c1979f9521c5649241dfbc9a495a16fb57498170"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 18058948,
                    "digest": "sha256:7ba0c30ce37c51cedda25d72a37a4cee375dc046d6bcaac8fb852cfad33c689d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33392327,
                    "digest": "sha256:784481d899cc6c03da91efbb8acb0f45fa731768cbb7835a92b3a3914e387ae5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30956039,
                    "digest": "sha256:91f2d2c258ed1231be3ab8e7c4c625ddbe3bd8c70eb69d161cb957b05eb9d04a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15657324,
                    "digest": "sha256:1c716c5a37d25bf98789f35fa01201feec437f7b40f695ef97479553daf122d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1063124,
                    "digest": "sha256:414e530d39d272de23b54783fdbee334e128df09c1f9f1c49e050c23c3408673"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176225912,
                    "digest": "sha256:5599612e05e4b977ba31ee5b30a83adf4689303112181b5ba8ced2ef78ba8a43"
                }
            ]
        },
        "v1.12.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8219,
                "digest": "sha256:81ee40f964f5ecec804973df16c066efbc07c0a8bf2eea210619fd8d3495f25e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5644,
                    "digest": "sha256:859fef2ca79d1cb1e12a40a83a58a40581b2075df8b8e6d9e1abd7efc163feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71298952,
                    "digest": "sha256:ec47119c48699adba5e0cc0d61247dd4098db10312277a07d28617b20e3dca8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 319641712,
                    "digest": "sha256:19c7f70e1a483acf9a61cda7762130e60aa8d669790d2edbfe043e6ef456aae4"
                }
            ]
        },
        "v1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8478,
                "digest": "sha256:58eadc0ca522676253c583f23c832c0528cb3950917072fa04a1b1d618e78077"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32034160,
                    "digest": "sha256:473ede7ed136b710ab2dd51579af038b7d00fbbf6a1790c6294c93666203c0a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:c46b5fa4d940569e49988515c1ea0295f56d0a16228d8f854e27613f467ec892"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:93ae3df89c92cb1d20e9c09f499e693d3a8a8cef161f7158f7a9a3b5d06e4ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6b1eed27cadec5de8051d56697b0b67527e4076deedceefb41b7b2ea9b900459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 795,
                    "digest": "sha256:fe9f28e8f84fa4dc34f2c9d44565888e6680e429ab69c0b9b4c7ca7878df7d4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:9c2e410c2835534a0376d10935f06ef5948d48f0ec2aeb2d1b3d053578a916a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36114285,
                    "digest": "sha256:47a4788c52d00c52502c965b6aace616989f9f3831abd8f72e4e14c4fafe4769"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57914088,
                    "digest": "sha256:e34f255dfc02c89ee5d334b71e24ddb0315b1adb4b8b1775b26a9c2ac173efac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15657322,
                    "digest": "sha256:685419526e3374ab9ebe22588c7e7b9a3b4a94bfd7c6a3972f6dcd2d2b315912"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1063118,
                    "digest": "sha256:0b220f05891e31bd26d364ac2050798f89035d6c13bbb4e47534d77b8bac4a16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 256721388,
                    "digest": "sha256:8fbf4aa3c04e75ab476d6eaa8de1ff3ee4a20da14a3c7f5a9db212f3dbed8a73"
                }
            ]
        },
        "v1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8474,
                "digest": "sha256:6c500d4dd8338117012558e7b79aecc6f628071ed6d00e3140f14525b1b77d1b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32034160,
                    "digest": "sha256:473ede7ed136b710ab2dd51579af038b7d00fbbf6a1790c6294c93666203c0a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:c46b5fa4d940569e49988515c1ea0295f56d0a16228d8f854e27613f467ec892"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:93ae3df89c92cb1d20e9c09f499e693d3a8a8cef161f7158f7a9a3b5d06e4ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6b1eed27cadec5de8051d56697b0b67527e4076deedceefb41b7b2ea9b900459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 795,
                    "digest": "sha256:fe9f28e8f84fa4dc34f2c9d44565888e6680e429ab69c0b9b4c7ca7878df7d4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:9c2e410c2835534a0376d10935f06ef5948d48f0ec2aeb2d1b3d053578a916a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 36127973,
                    "digest": "sha256:333f0a67efb7c6a1e34a5dab1d95dede41d1e5e702bee06068f7aeec23cabaa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57914342,
                    "digest": "sha256:b95071799aaff139cf7f6861ffd657252ebf40482d15ebe2f42ce7b9fea7a6dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15657324,
                    "digest": "sha256:82e5ba2c4d203da4ee11e311ca03da51667c92e3cc2d4f5bc9bd668925e622ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1063731,
                    "digest": "sha256:bf7d176ae5bd37c1c1ff7f2f84f64f53a0aa14a869fc465c181b7573cb394760"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 256753140,
                    "digest": "sha256:95b8de9c6123a2a01ce3c4cd41727977349d2b5c513a4f4461160bbab9fddaed"
                }
            ]
        },
        "v1.12.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8485,
                "digest": "sha256:4a61fa22c0399c00f04f89d9cda1e1ed98a66fc1849e286efe2e89d6029143c5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:3a4ca58d4906905a45a72b1967850491cf8abad4019cfbe8b008a28a5d5c5e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 791,
                    "digest": "sha256:e8c2f98379f8030cc375bc80c807c4af2510a5c0bdf3c286da46a556c801907a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 34972877,
                    "digest": "sha256:7d4692e6872a89c3f21bda32d1c55f441e995200654598b871777e374af9bb35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57918283,
                    "digest": "sha256:e7cf7bfec1faefe10441b7d3e3fc477d42578355a62f4ea13dd8f463a49fbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15657319,
                    "digest": "sha256:7043ccc4ac48e3bc708605f8d9838f26a831d1af371b5719737a993aa266aa1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1061050,
                    "digest": "sha256:3b090600b949224b6e69b845df65afa0d9952f2bd21a1d1f7e99e7a90db41d3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 256857570,
                    "digest": "sha256:f7574621a0312854aa42a55b0c8a08a82bb6bb379373f7665133707b999d7ebb"
                }
            ]
        },
        "v1.12.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8773,
                "digest": "sha256:acc1e51472677d50927988c7d999c03bc86181eeaaa066788233bb075028cf71"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 328,
                    "digest": "sha256:f8dcf0e5edfe2b26f23b66e7e7334a6331517ff2bb3d496c41cf294586c9a188"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:50c177382fc6ea93dd92930c4ff559878e5cd617fd79999b30c662e212ff1cf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401535,
                    "digest": "sha256:6c23ba0aa26e1b35be0ab8eee69c70486cdb8cb6beae3cb9c8ba92f28de17a7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121426,
                    "digest": "sha256:418feec238bf186d995929d4371739a01efc385c1f381ced7189511650b00c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1482,
                    "digest": "sha256:3e5a738ac0d675928b4052901bd9afa3da48b468b1903735e89ac529333d30ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 271621734,
                    "digest": "sha256:aa4c28a767e58b4fb84d999c3357ff05a56e8707ea532a2099becaec41d4bf59"
                }
            ]
        },
        "v1.12.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8917,
                "digest": "sha256:6e6f83551560e266beecc20e27eeea50eea229c79549f8f34f07782606a2847a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 333,
                    "digest": "sha256:a360520981cf92a1ce72a0fe8bc4ee73f212cce97368929037f038e02929742f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:dc9ad9b3f2d7b460672e19622707e1d74930a33710ef63a36512386da7813036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401550,
                    "digest": "sha256:85dce63bb084b0508aa799782696f2fdd4b47c646466dc4bd447667374c318d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121429,
                    "digest": "sha256:7cdaaa2442eb310fb2851165bcd257d1a962bc03e16d5bce41b92a7ab200a268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1362,
                    "digest": "sha256:232c5227543d4c8ca705a7c315098722a6eb03948f4ea47a0bd998d2ad8a1ef6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 270135651,
                    "digest": "sha256:9094ae3ac7fc0c288aca0b9595ca1f7df112737f498467f03d9e445882f86402"
                }
            ]
        },
        "v1.13.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8955,
                "digest": "sha256:fb45eb2aa0052eff3b471f5f14696f981a13fbb5932f7423aafadd369139cd2b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55554964,
                    "digest": "sha256:45edd976aeadca4efeae1032701252d9f071a3078408ff3f5c01bf1fce430bd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:25a49a5ef18f6dba44ae009f0aec8a2850dcd79014b951d78657f18c75210268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 901,
                    "digest": "sha256:ac9964da2ccf913d680ccd0943fb02977c24d8c56d2a51688a5b566347a902f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401551,
                    "digest": "sha256:a9e631f193b57c0ce011b1e6d74b9de55f297c7816c132c6553d0d7605a47c8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121428,
                    "digest": "sha256:3d2abb89014a24816ffac4b8c485bed92b9ec80cd45a05a8253ebe0df34ce785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1767,
                    "digest": "sha256:c4dcd9c54845debc085b193691a28211998246ca382301754621a4f33340b627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 240159425,
                    "digest": "sha256:6c80ca147ab18b889647a45348912916ca3780643e33796975bab7369564ebaf"
                }
            ]
        },
        "v1.13.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8255,
                "digest": "sha256:f70239385f2ecd75126559fd2e927d0ca87ee2db5d70bb744c63911cf8a54e98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28809294,
                    "digest": "sha256:d94cf711eb1df9e05b5ab9c367f7417c481e9b5deee1724f93b96c77bff11c8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31042,
                    "digest": "sha256:5dc1ea4c1ef986e00d114cccc9e5fbbe6bd5b8f35145cacb0f12ae3389c4e0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2147ebd301d69260017329191f4072fbb193e2c1c092542270947091c6eaa60c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2955d4b7554096a19ae03fac9a539a3106b871165d9beef32fb6f3b16bed6c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6826,
                    "digest": "sha256:9937ead333055dc9315921b2658fc8100ac560864ab70b3bca4468dddef8cc8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77584840,
                    "digest": "sha256:3087a5604ee706afcf76247fc71ebfb57dd205af95a434a0d504258930a32b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291738324,
                    "digest": "sha256:2bffaee254796e593deace16f10cf27a3c56366cd480fb778a86cc32f057114a"
                }
            ]
        },
        "v1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8481,
                "digest": "sha256:2d69a822937ae4efe7d823b71449869fb9b6ed8360ab2be640c9cdc0751161e9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:3a4ca58d4906905a45a72b1967850491cf8abad4019cfbe8b008a28a5d5c5e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 791,
                    "digest": "sha256:e8c2f98379f8030cc375bc80c807c4af2510a5c0bdf3c286da46a556c801907a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 34972877,
                    "digest": "sha256:7d4692e6872a89c3f21bda32d1c55f441e995200654598b871777e374af9bb35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57918283,
                    "digest": "sha256:e7cf7bfec1faefe10441b7d3e3fc477d42578355a62f4ea13dd8f463a49fbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15657319,
                    "digest": "sha256:7043ccc4ac48e3bc708605f8d9838f26a831d1af371b5719737a993aa266aa1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1061050,
                    "digest": "sha256:3b090600b949224b6e69b845df65afa0d9952f2bd21a1d1f7e99e7a90db41d3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278139640,
                    "digest": "sha256:cddd2d92435c4141861c50b13214addd3ecd7fd5ad9242aa5110bf01ce862e72"
                }
            ]
        },
        "v1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8485,
                "digest": "sha256:f30a33de05b8019344de1313f03ce938d77196195e25a765c654e617b2f56335"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:3a4ca58d4906905a45a72b1967850491cf8abad4019cfbe8b008a28a5d5c5e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 791,
                    "digest": "sha256:e8c2f98379f8030cc375bc80c807c4af2510a5c0bdf3c286da46a556c801907a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 34972877,
                    "digest": "sha256:7d4692e6872a89c3f21bda32d1c55f441e995200654598b871777e374af9bb35"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57918283,
                    "digest": "sha256:e7cf7bfec1faefe10441b7d3e3fc477d42578355a62f4ea13dd8f463a49fbfb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 15657319,
                    "digest": "sha256:7043ccc4ac48e3bc708605f8d9838f26a831d1af371b5719737a993aa266aa1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1061050,
                    "digest": "sha256:3b090600b949224b6e69b845df65afa0d9952f2bd21a1d1f7e99e7a90db41d3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 332112435,
                    "digest": "sha256:2c80750d0b6a5326e178e6b3393961337435b0a1d0cf8e6b0f5638f52f841e6f"
                }
            ]
        },
        "v1.13.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8009,
                "digest": "sha256:eaecf3d2c4de6081259198ba45370d417c6c01519efc8eb019844d4d8d475604"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 795,
                    "digest": "sha256:deaa7b341935e0c45d53c07f493d3d67eede61995904be429f38b15ef84a9462"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:6c79d7ec1c1c4e6cb539b964276ed662cde9c13b1fc2040c7c7f1d2120e440b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 34968540,
                    "digest": "sha256:8f392aafce95bbae3bbd5cd32f2b8b2a28ee03e770372872f21e99efc76d5b2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57918267,
                    "digest": "sha256:d9f424624c6743a1e3ff2453baa1931302e3e9b37c1de0b4cecce02233af87bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401535,
                    "digest": "sha256:4aa64674dd0825521c538e7dfce471f88c32007281b10559ac89adc9795b1a3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1127567,
                    "digest": "sha256:afa12fa5cbdfe7ca7d4353d7bd2f4177f0eda5195fa9d5ac03fe9cbe8feaecb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 332127768,
                    "digest": "sha256:525e8f63f77d67e97e64cc7e17d42e1088bc8435bcf86814b16a188be5cdfa1e"
                }
            ]
        },
        "v1.13.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8769,
                "digest": "sha256:cc1e0889b1a3a18b508030724e3e614635d0c0408d94d18a6f1bc03b14bcaa75"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 328,
                    "digest": "sha256:f8dcf0e5edfe2b26f23b66e7e7334a6331517ff2bb3d496c41cf294586c9a188"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:50c177382fc6ea93dd92930c4ff559878e5cd617fd79999b30c662e212ff1cf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401535,
                    "digest": "sha256:6c23ba0aa26e1b35be0ab8eee69c70486cdb8cb6beae3cb9c8ba92f28de17a7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121426,
                    "digest": "sha256:418feec238bf186d995929d4371739a01efc385c1f381ced7189511650b00c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1482,
                    "digest": "sha256:3e5a738ac0d675928b4052901bd9afa3da48b468b1903735e89ac529333d30ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 241581478,
                    "digest": "sha256:b431bd5d5284d8433c3a8dae88c62253db709ec4c9e07782f3e1af917cc1e422"
                }
            ]
        },
        "v1.13.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8917,
                "digest": "sha256:8fb01075e3910b0bb1ae989a56c10fd2731d4ca7fbafc12acdd7df169297003b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 333,
                    "digest": "sha256:a360520981cf92a1ce72a0fe8bc4ee73f212cce97368929037f038e02929742f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:dc9ad9b3f2d7b460672e19622707e1d74930a33710ef63a36512386da7813036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401550,
                    "digest": "sha256:85dce63bb084b0508aa799782696f2fdd4b47c646466dc4bd447667374c318d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121429,
                    "digest": "sha256:7cdaaa2442eb310fb2851165bcd257d1a962bc03e16d5bce41b92a7ab200a268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1362,
                    "digest": "sha256:232c5227543d4c8ca705a7c315098722a6eb03948f4ea47a0bd998d2ad8a1ef6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 240111702,
                    "digest": "sha256:b55cb9b57c0e498fbcbce7f9874bdd1e9a034aee9c7fc6e0f646df8bba630ca5"
                }
            ]
        },
        "v1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8008,
                "digest": "sha256:d230ff71782fb245182e8aed136a74472c686acd96fcf19f0ea7233fb5c28837"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 795,
                    "digest": "sha256:deaa7b341935e0c45d53c07f493d3d67eede61995904be429f38b15ef84a9462"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 793,
                    "digest": "sha256:6c79d7ec1c1c4e6cb539b964276ed662cde9c13b1fc2040c7c7f1d2120e440b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 34968540,
                    "digest": "sha256:8f392aafce95bbae3bbd5cd32f2b8b2a28ee03e770372872f21e99efc76d5b2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 57918267,
                    "digest": "sha256:d9f424624c6743a1e3ff2453baa1931302e3e9b37c1de0b4cecce02233af87bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401535,
                    "digest": "sha256:4aa64674dd0825521c538e7dfce471f88c32007281b10559ac89adc9795b1a3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1127567,
                    "digest": "sha256:afa12fa5cbdfe7ca7d4353d7bd2f4177f0eda5195fa9d5ac03fe9cbe8feaecb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 359076085,
                    "digest": "sha256:1a9c283461c095e53ee49e9282cb818256ff0a8cee7d093258e4162b2a4504d0"
                }
            ]
        },
        "v1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8659,
                "digest": "sha256:017b5ee94c35a946b0d0d4ebfb58f3416b9d7aa66d2d8c748a5672198199fec0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29761618,
                    "digest": "sha256:7eab35e32a16ff1387d61b34bddec80cc134f691c428065bdb4c81a3a339fb44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 864,
                    "digest": "sha256:9c0b49bd5b97141e4edf0018e1345d0e6d44ab1a80ac86c753ef7ca1f96f6284"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193,
                    "digest": "sha256:76ea149966fabba8a80d6f2c9f22589f7b851f60ca712e844bdd67038a63e554"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d56480354398151b0726ab0aa1e02a6c51ebfbada0eaa3611748d4d27c3c05ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 816,
                    "digest": "sha256:1741e60671c2d050b8681e08863f71654f2f11c3336b116e87945494fb74b8ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 816,
                    "digest": "sha256:1741e60671c2d050b8681e08863f71654f2f11c3336b116e87945494fb74b8ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 54602044,
                    "digest": "sha256:014fabc8aa7f3b3e57ed03df591e22f4a4603b783bdd9685f00222ffce7b621b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 306,
                    "digest": "sha256:691bb2d9d7f226201e90f7d63d27204bc3f3b1f8ac0863fd3d442c3b911a9338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 879,
                    "digest": "sha256:d4bf292828a0504deb78c14be57a1d09fe7ebf6f683dd531400e54579137b6ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401611,
                    "digest": "sha256:a64e2c37a109799084960b7c49529ca7d0ced5ca52fd59910288427710b9e0d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121305,
                    "digest": "sha256:254e2531f939d356c4e60b5f2157324055db592a914fbf9224fc2a503d5ebd0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1460,
                    "digest": "sha256:26e84d9cba8735d4a82b288658d65e5e6a09470730808722cd191cdf65fd0e59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 303873541,
                    "digest": "sha256:6c1da77e1813e920f91b146a764672a0750904276a67d078be940d737c0b8d2d"
                }
            ]
        },
        "v1.14.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 1943,
                "digest": "sha256:8d3dc3d58c95d74eb77fde95246c0876e253874d356facad106e8c66dc711580"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107610794,
                    "digest": "sha256:d90aaaa042df0b81ce70be86feadb76da4a61ed38b82e3080b6d921dbe4a4f04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 325940303,
                    "digest": "sha256:63e5ac8f77b3430b2c03d7e40d9ea1fe8e296cadb90cbe1d4a84f0fca008a6e9"
                }
            ]
        },
        "v1.14.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8771,
                "digest": "sha256:9fb4c7da1d9fc73c8269e69578511a792e4a18040992c7ee70b63f67169e85d7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 328,
                    "digest": "sha256:f8dcf0e5edfe2b26f23b66e7e7334a6331517ff2bb3d496c41cf294586c9a188"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:50c177382fc6ea93dd92930c4ff559878e5cd617fd79999b30c662e212ff1cf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401535,
                    "digest": "sha256:6c23ba0aa26e1b35be0ab8eee69c70486cdb8cb6beae3cb9c8ba92f28de17a7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121426,
                    "digest": "sha256:418feec238bf186d995929d4371739a01efc385c1f381ced7189511650b00c18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1482,
                    "digest": "sha256:3e5a738ac0d675928b4052901bd9afa3da48b468b1903735e89ac529333d30ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268550234,
                    "digest": "sha256:c74697f9c48e10d754062276bd150b8a08cff46a579cedcf961eb02687eae0fd"
                }
            ]
        },
        "v1.14.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8917,
                "digest": "sha256:e566e81c48cdf0b46fd585a38a4a385983199e31d10e296f1c1960ef272ca9ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 333,
                    "digest": "sha256:a360520981cf92a1ce72a0fe8bc4ee73f212cce97368929037f038e02929742f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:dc9ad9b3f2d7b460672e19622707e1d74930a33710ef63a36512386da7813036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401550,
                    "digest": "sha256:85dce63bb084b0508aa799782696f2fdd4b47c646466dc4bd447667374c318d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121429,
                    "digest": "sha256:7cdaaa2442eb310fb2851165bcd257d1a962bc03e16d5bce41b92a7ab200a268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1362,
                    "digest": "sha256:232c5227543d4c8ca705a7c315098722a6eb03948f4ea47a0bd998d2ad8a1ef6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 267073059,
                    "digest": "sha256:17dd92deb19a32f907dc502fb0e086b57d04de0ede19a69e3d429640a6bd38b3"
                }
            ]
        },
        "v1.14.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8957,
                "digest": "sha256:4d53072ec035d82a70e9d88972d0eb63846706a892438238b6b54a4531c33a9d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55554964,
                    "digest": "sha256:45edd976aeadca4efeae1032701252d9f071a3078408ff3f5c01bf1fce430bd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:25a49a5ef18f6dba44ae009f0aec8a2850dcd79014b951d78657f18c75210268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 901,
                    "digest": "sha256:ac9964da2ccf913d680ccd0943fb02977c24d8c56d2a51688a5b566347a902f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401551,
                    "digest": "sha256:a9e631f193b57c0ce011b1e6d74b9de55f297c7816c132c6553d0d7605a47c8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121428,
                    "digest": "sha256:3d2abb89014a24816ffac4b8c485bed92b9ec80cd45a05a8253ebe0df34ce785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1767,
                    "digest": "sha256:c4dcd9c54845debc085b193691a28211998246ca382301754621a4f33340b627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 266851440,
                    "digest": "sha256:86162f099c704feae014ed1efef10a1df7c6d6bf2d6ab9518823036e63562b10"
                }
            ]
        },
        "v1.14.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7782,
                "digest": "sha256:3e8a33ff4e2a94954937d16912d1b07c28af973dadff70e09e950ec357a0c8dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261386,
                    "digest": "sha256:581d4a63c85043868dda5105a1dcea94019abce0b356ad595af427d56497733c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30490,
                    "digest": "sha256:4e15a5b44820090e7a1ebd4b825b34eb905595918926bd3a569f739df3bd76b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5ac1242872f0b7a81667f7aae34fd317997465491c6e0c3e0e7d23faba540d5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:523182728f233e7a2ade872b2b404faeec58b85d5f85c233cf23c5d65b9528c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3722,
                    "digest": "sha256:30d19713f7c7b77b668e78a2fc3852d488bbf53d0ab4e87cce10b2585e49a69e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111887486,
                    "digest": "sha256:b4a261d89118db7ea402914addf1818c69782501cfdc3baafb07d0fcd960fd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 265702680,
                    "digest": "sha256:7f297113fe0769be1feb836e97a3f0dd7eade6b1733e15aa2a2264c484556984"
                }
            ]
        },
        "v1.15.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8915,
                "digest": "sha256:1a930cac869e01a574f87c99a19febfb80167e986a31b75d18516c62c288960a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55555518,
                    "digest": "sha256:13ac287405f1fee519cc992cac25a03a861bf403eb87c0485d7f36c84bee9b4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 333,
                    "digest": "sha256:a360520981cf92a1ce72a0fe8bc4ee73f212cce97368929037f038e02929742f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 900,
                    "digest": "sha256:dc9ad9b3f2d7b460672e19622707e1d74930a33710ef63a36512386da7813036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401550,
                    "digest": "sha256:85dce63bb084b0508aa799782696f2fdd4b47c646466dc4bd447667374c318d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121429,
                    "digest": "sha256:7cdaaa2442eb310fb2851165bcd257d1a962bc03e16d5bce41b92a7ab200a268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1362,
                    "digest": "sha256:232c5227543d4c8ca705a7c315098722a6eb03948f4ea47a0bd998d2ad8a1ef6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 363783374,
                    "digest": "sha256:2123d611b88c21c596e7bd41b7956158a0ac61438fd4a9aba9e9a977d70d6fdc"
                }
            ]
        },
        "v1.15.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8219,
                "digest": "sha256:54b7f451c143ee1f5a6903d3b64376f5482116a080965402b879bdaeed8a3c00"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5644,
                    "digest": "sha256:859fef2ca79d1cb1e12a40a83a58a40581b2075df8b8e6d9e1abd7efc163feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71298952,
                    "digest": "sha256:ec47119c48699adba5e0cc0d61247dd4098db10312277a07d28617b20e3dca8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 413607057,
                    "digest": "sha256:4b05af6dab5a1dde8d1a5a7ecb0317ca6c9d4f9741c7601a323dc30012678b25"
                }
            ]
        },
        "v1.15.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:1dfa5e21a8fc8ffa75ef7212d2056d78985b4e1f7984191c25757caea248306d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:220a2ab59f17010f21ded671324e15f21ddba92bf2d693c071ad98ff026bce28",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.15.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8957,
                "digest": "sha256:8ca0c8463ebeb20ba11819a940f5e49fbfe6915d8b391d4419667def93aa6bf2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29800246,
                    "digest": "sha256:09fe536fe3e411c4fb4668571d3a715d868e2bcfb0c85d27232659847e7d9c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 858,
                    "digest": "sha256:4326ed393c122a5405a107f1f49b078547c684d462d8aed43fd0a753f44e87ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 209,
                    "digest": "sha256:73a8f76105d804e6923d5daf8fd3e87e0db4490df366a41153ded0fabeb93044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61a147631503722e57a1b5c637ab2cef44141c45969c8e0f0ef0f162599a2f06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 821,
                    "digest": "sha256:ebf284b29a9b8956e451ef126c86afa3dd82ca30514a6fee0c206544560b59b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 55554964,
                    "digest": "sha256:45edd976aeadca4efeae1032701252d9f071a3078408ff3f5c01bf1fce430bd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 512,
                    "digest": "sha256:25a49a5ef18f6dba44ae009f0aec8a2850dcd79014b951d78657f18c75210268"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 901,
                    "digest": "sha256:ac9964da2ccf913d680ccd0943fb02977c24d8c56d2a51688a5b566347a902f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17401551,
                    "digest": "sha256:a9e631f193b57c0ce011b1e6d74b9de55f297c7816c132c6553d0d7605a47c8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12121428,
                    "digest": "sha256:3d2abb89014a24816ffac4b8c485bed92b9ec80cd45a05a8253ebe0df34ce785"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1767,
                    "digest": "sha256:c4dcd9c54845debc085b193691a28211998246ca382301754621a4f33340b627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 363855990,
                    "digest": "sha256:1a7ee4f6771189d0e5061ae8fe78f6fd5507fa00a30240710a5a1cc4cbef378d"
                }
            ]
        },
        "v1.15.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7782,
                "digest": "sha256:2cfa9123a75514e9c968c93cd26001f5d9e001f6bed0f92b4644e8a4bb62ceb8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261386,
                    "digest": "sha256:581d4a63c85043868dda5105a1dcea94019abce0b356ad595af427d56497733c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30490,
                    "digest": "sha256:4e15a5b44820090e7a1ebd4b825b34eb905595918926bd3a569f739df3bd76b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5ac1242872f0b7a81667f7aae34fd317997465491c6e0c3e0e7d23faba540d5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:523182728f233e7a2ade872b2b404faeec58b85d5f85c233cf23c5d65b9528c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3722,
                    "digest": "sha256:30d19713f7c7b77b668e78a2fc3852d488bbf53d0ab4e87cce10b2585e49a69e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111887486,
                    "digest": "sha256:b4a261d89118db7ea402914addf1818c69782501cfdc3baafb07d0fcd960fd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362719578,
                    "digest": "sha256:f4ab5d96d4638de7cbd2f2a72e3177594c6f358e57034b1d5b3ba75a3461c1f2"
                }
            ]
        },
        "v1.15.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8080,
                "digest": "sha256:eb2510b2d98fd814d47506908288f6b22501384042d345293206d26ba57f34ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28272270,
                    "digest": "sha256:cc5a81c29aabc68f3accf136ad5d1738904898296a367f807e0afb82c2f76d6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30581,
                    "digest": "sha256:81c62728355f60c09e71f3706586cce3f15677526dccb3c47d25abd61ad46e1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ed9cffdd962a232b1d4ac5c63042f1c3bd032ad7be970ad7d2bf2ab18a336781"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6a46f000fce20f9ea03fcec6689eb2208e780af6528ce7d851a1e287d0e96c22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3754,
                    "digest": "sha256:6bd890da28be3b501e0dc75627755a536831416ed3268f47c2a517065f4edd5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70939215,
                    "digest": "sha256:0d88bd219ffe6a750db5a010abf845989a9d9d88041d8d9c016ec5724e146e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 412111405,
                    "digest": "sha256:f1748fcd74c84d14cde667a9957a62a4e215718299af43a3661e5f48eef1d9ec"
                }
            ]
        },
        "v1.16.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10487,
                "digest": "sha256:a795d12e10c1eab690860ace84760c1f144c77d880aac12de4ad3718a34f3419"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261386,
                    "digest": "sha256:581d4a63c85043868dda5105a1dcea94019abce0b356ad595af427d56497733c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30490,
                    "digest": "sha256:4e15a5b44820090e7a1ebd4b825b34eb905595918926bd3a569f739df3bd76b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5ac1242872f0b7a81667f7aae34fd317997465491c6e0c3e0e7d23faba540d5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:523182728f233e7a2ade872b2b404faeec58b85d5f85c233cf23c5d65b9528c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 817,
                    "digest": "sha256:0b7e3826e5e53ea839191bef961240cc06174890b8703c72955fb56ab01f3a37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 817,
                    "digest": "sha256:0b7e3826e5e53ea839191bef961240cc06174890b8703c72955fb56ab01f3a37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17247688,
                    "digest": "sha256:efa14379a0564a0b4b380e24b1111da57cebcddc255eefd35b9cecc56a73b044"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280,
                    "digest": "sha256:9589eb37154902a9449bf9e1ebe94f385ebb296528d3604304607ea8d7f2cb2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44751659,
                    "digest": "sha256:aa167b3504d8fcb4db7cf7c6d59a97a8c9fd2cb4e07631eef4114b12d39e7be6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 663,
                    "digest": "sha256:a32fbbf53be3c8eaa8fe0094c91b5860e0c88b97a013fa4c155a8d9fcb07c41c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215,
                    "digest": "sha256:9674656303e386b4404402d270d5cfc8275f01cdef790950a99d31f770714111"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 410,
                    "digest": "sha256:31e206b8286cf9b38931bd175c8caf74668d1fc110e5c67ed32f094c98ff97c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37051515,
                    "digest": "sha256:614eccbf29768132e7e8331cdfa1bdb50d759c4a3c61da7b29de8ef6f6306d8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12801576,
                    "digest": "sha256:456512f5b27049f322b549b49e214ee9369898383c4d284e6273c44b3c903b18"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1768,
                    "digest": "sha256:e75459e0126fc3b8c51f46d9a2281963e21ae4c50fe82fe2c876f1485e671fb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 310823332,
                    "digest": "sha256:5dff9b082d6ae305810e3f09c7933ad255ce3b2d106b3eb1bfa85a11a6f9dde9"
                }
            ]
        },
        "v1.16.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:80f5d0497934d8b5b45718718a2f3d7cc194327eff851162db5ce57e6784f8bf",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:efd41f2d8fdebce13c5ffa3b4ec4ffeb5cc1062ae4e2fabc360e5af8651aa55d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.16.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7765,
                "digest": "sha256:f36548f9c97c03f691fb0d562068a850bc71c9d0d993e3621a016661254e021c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28271170,
                    "digest": "sha256:da6fc00e4d0bef7c29c9e233b2dffb0e0cdbaee3300265b9f0ef1c1411f00688"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30580,
                    "digest": "sha256:c3c0be9d84b35cce16232fcdaa4cfdbd71afd01a45bef931aa88024b6dcf7390"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:9c1dda927878fdf06a20a339f2b21b83cfb4b46473c2faab61ad80ac356bbcb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:4b8880231fa0d466822e967ef711018af20a5b74f494c41dee8c6f6c984e28e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3725,
                    "digest": "sha256:e59eb606472c4d6ac3b567195b18e8a4ced0df79d6d9f35de79d21aca96e1074"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111495711,
                    "digest": "sha256:2cc3c883d82ca16e50653ef7daeb0ffd261a21ac2efe224438e59b3f6d4f87ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 296950216,
                    "digest": "sha256:fe84f6264084bf4f51d4c695eda2a5e0f33ba09b7f594b5a072c5ff6fac7b7fb"
                }
            ]
        },
        "v1.16.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7782,
                "digest": "sha256:14809a9a48fcb0014211aefd4bd4a9f916f3a5578ae90aa2c4d653ac7e1b2a69"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261386,
                    "digest": "sha256:581d4a63c85043868dda5105a1dcea94019abce0b356ad595af427d56497733c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30490,
                    "digest": "sha256:4e15a5b44820090e7a1ebd4b825b34eb905595918926bd3a569f739df3bd76b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5ac1242872f0b7a81667f7aae34fd317997465491c6e0c3e0e7d23faba540d5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:523182728f233e7a2ade872b2b404faeec58b85d5f85c233cf23c5d65b9528c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3722,
                    "digest": "sha256:30d19713f7c7b77b668e78a2fc3852d488bbf53d0ab4e87cce10b2585e49a69e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111887486,
                    "digest": "sha256:b4a261d89118db7ea402914addf1818c69782501cfdc3baafb07d0fcd960fd68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 310785957,
                    "digest": "sha256:7f3816a5bc891b5e892108e0ecde714669854fc829b41c3244a996ea63f1bc9f"
                }
            ]
        },
        "v1.16.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8078,
                "digest": "sha256:2e80b87cbe0299fea5e409d9893cf3f5041892fe8124dac1644b3dca47689db6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28272270,
                    "digest": "sha256:cc5a81c29aabc68f3accf136ad5d1738904898296a367f807e0afb82c2f76d6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30581,
                    "digest": "sha256:81c62728355f60c09e71f3706586cce3f15677526dccb3c47d25abd61ad46e1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ed9cffdd962a232b1d4ac5c63042f1c3bd032ad7be970ad7d2bf2ab18a336781"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6a46f000fce20f9ea03fcec6689eb2208e780af6528ce7d851a1e287d0e96c22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3754,
                    "digest": "sha256:6bd890da28be3b501e0dc75627755a536831416ed3268f47c2a517065f4edd5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70939215,
                    "digest": "sha256:0d88bd219ffe6a750db5a010abf845989a9d9d88041d8d9c016ec5724e146e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 360131681,
                    "digest": "sha256:49b6e05e1dbb7612ddcb84fa9505b5abf355e2577468210127d28022d5b58e79"
                }
            ]
        },
        "v1.16.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8219,
                "digest": "sha256:f74990728e72a3153a4731940dd91a1eb84a799d71a697d57e5cd710af10dfba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5644,
                    "digest": "sha256:859fef2ca79d1cb1e12a40a83a58a40581b2075df8b8e6d9e1abd7efc163feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71298952,
                    "digest": "sha256:ec47119c48699adba5e0cc0d61247dd4098db10312277a07d28617b20e3dca8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 365798507,
                    "digest": "sha256:9db40713f10df24833cd494434ddc54693921374382ca4e0931a6d3ec82c16a0"
                }
            ]
        },
        "v1.17.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8080,
                "digest": "sha256:ec6ab22d89efc045f4da4fc862f6a13c64c0670fa7656fbecdec5307380f9cb0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28272270,
                    "digest": "sha256:cc5a81c29aabc68f3accf136ad5d1738904898296a367f807e0afb82c2f76d6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30581,
                    "digest": "sha256:81c62728355f60c09e71f3706586cce3f15677526dccb3c47d25abd61ad46e1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ed9cffdd962a232b1d4ac5c63042f1c3bd032ad7be970ad7d2bf2ab18a336781"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6a46f000fce20f9ea03fcec6689eb2208e780af6528ce7d851a1e287d0e96c22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3754,
                    "digest": "sha256:6bd890da28be3b501e0dc75627755a536831416ed3268f47c2a517065f4edd5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 70939215,
                    "digest": "sha256:0d88bd219ffe6a750db5a010abf845989a9d9d88041d8d9c016ec5724e146e7e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 361436890,
                    "digest": "sha256:af5240f230f01db58eb52b64f3aaf0b3e94c3253eb569be390ab5ce2714a4dca"
                }
            ]
        },
        "v1.17.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8255,
                "digest": "sha256:6183bbb5ea4c1af46eddfedb197e7585eb32f61096aac3318e1a0ecf33c9d9f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28809294,
                    "digest": "sha256:d94cf711eb1df9e05b5ab9c367f7417c481e9b5deee1724f93b96c77bff11c8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31042,
                    "digest": "sha256:5dc1ea4c1ef986e00d114cccc9e5fbbe6bd5b8f35145cacb0f12ae3389c4e0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2147ebd301d69260017329191f4072fbb193e2c1c092542270947091c6eaa60c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2955d4b7554096a19ae03fac9a539a3106b871165d9beef32fb6f3b16bed6c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6826,
                    "digest": "sha256:9937ead333055dc9315921b2658fc8100ac560864ab70b3bca4468dddef8cc8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77584840,
                    "digest": "sha256:3087a5604ee706afcf76247fc71ebfb57dd205af95a434a0d504258930a32b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 402971976,
                    "digest": "sha256:8fcbd3d6c157def4004e045e0f5650d325d5a73ed8e292fb75c6508881f1413f"
                }
            ]
        },
        "v1.17.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:dc3b39906635dffc7d2e79c5d4f5a20c0ba7841bf8538c1860df5ac990150a69",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:9ad6cfc5a676c6bdd1380c10dddd2b1d37f175dfbfc0127c7473f7f1452977de",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.17.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8106,
                "digest": "sha256:df953f7b867a39cdfcc34a9ec3ea9b70d08237008e209aa590c4a031106b2938"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28275627,
                    "digest": "sha256:93956c6f8d9ea3e705e03e79d66a5c2acc9a4ac10ed6fb5c6cf654ba9c297df5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30599,
                    "digest": "sha256:46bddb84d1c5e5324fcc5efc270c7e081cc9966c125ac56c900dbca6b7a2fe06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:15fa850485767a7b5ef5a59fcd74b158b9a7faffef6254d4cf0c8d86d347e1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:8aa40341c4fa46ae7bf3b1915da155fd05e53bcc06cfea0606a055b781dd14cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3815,
                    "digest": "sha256:6573e04c79b2f9200781c5f27c756e686b5f40120d587712544f8c61aef27340"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73274361,
                    "digest": "sha256:05eeb17c04f6773622b5bed8c21efaa20ab142b11e00b9ced92b32f7cdf499ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362781254,
                    "digest": "sha256:26477b8d8d5f923187f6cd7511db453b8fdff99915101ac84f8e72bf6fca7f77"
                }
            ]
        },
        "v1.17.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8219,
                "digest": "sha256:bbb98b2ba9067358992caa8cf6b65aae4ea3cff79c833ba71a27d0ee63c169d1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5644,
                    "digest": "sha256:859fef2ca79d1cb1e12a40a83a58a40581b2075df8b8e6d9e1abd7efc163feaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 71298952,
                    "digest": "sha256:ec47119c48699adba5e0cc0d61247dd4098db10312277a07d28617b20e3dca8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362936970,
                    "digest": "sha256:5ba672fedf2ba951371a3381b94ad6f3c67362686bf02e0ab57ff13828b1dfa8"
                }
            ]
        },
        "v1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8054,
                "digest": "sha256:a4f7b8f9d8ee2a14de169e4312d7358f09d399bc1833a845c70e1d5f30f24776"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276663,
                    "digest": "sha256:a9c68053c4b2379a9ad5b7306236a13f469cfd18e727dd4e76470af366445b45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30633,
                    "digest": "sha256:f2b9c43fe7e5dcfee42adb18336072154126bc052cc1c578e64d27a8aeaabc97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:90491034717d4c1d1e0b37a4bde4f3a0e26630af7d360b7c0248660ccbef59d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:781c6270286751c77c20928c68fa3edd532f0d3d11108db32020c8840f0ea6cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5536,
                    "digest": "sha256:6dec72d70e516baf9c76109b0d3d1542f7bf69fa25da21ae0ab06b589a07f582"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73275989,
                    "digest": "sha256:0644374a69b53a684ce96ffa959c7a9fea55c38720867fb9254ea3f709e61636"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 366454771,
                    "digest": "sha256:30f05408233fd36e97b3c974b2e01c5f1d8dfc8344f9867c3f7d5684322715c0"
                }
            ]
        },
        "v1.18.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8298,
                "digest": "sha256:f4403d4d65801c0ee7ec6c42e7829701ae1b35737744698bbd338900082a5cbf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31340118,
                    "digest": "sha256:d8b994c442864dd519627740d3a4d134f385a2caa54b7f59bf9d372adcf7def0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:b0773f3f14174f9bc8047861c64c2aa0cc581e73b16b48194a2884ad3918d01b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:5b20aefff2dc282ec6e2f496acce5b228bd1dfc30057a8ed41eae0513191b312"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7750,
                    "digest": "sha256:6f44fb9b2033def442fd107223bfd5f3d79b9c66254aaf7331d1d5db6661c3b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75831269,
                    "digest": "sha256:46f8fc57c0d064838bea4f660c04104b35f55a68df98cb9458795e544b966d40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 348414007,
                    "digest": "sha256:750d932ce0f679784098672aff41dbf504960f4b14222829666c403091bee4dc"
                }
            ]
        },
        "v1.18.19": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2821,
                    "digest": "sha256:9dc1ef37c0b78edcaa475495449671ce3e3bd1dcbe305d95e734336f1300fae4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2821,
                    "digest": "sha256:293814a8676b0f89c57ace209e2e84a7f983344d9f003aa92e302be683b9c6ef",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.18.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8222,
                "digest": "sha256:354eeddd21f3970b23df890fed3290a32951e843ca9de5a7c623c35b01ad3684"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556247,
                    "digest": "sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32304,
                    "digest": "sha256:fc878cd0a91c7bece56f668b2c79a19d94dd5471dae41fe5a7e14b4ae65251f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:6154df8ff9882934dc5bf265b8b85a3aeadba06387447ffa440f7af7f32b0e1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:fee5db0ff82f7aa5ace63497df4802bbadf8f2779ed3e1858605b791dc449425"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5729,
                    "digest": "sha256:65f86a4d5f6567587189e9d546b95ccb2f0dfca973b81ce45e3f1f662c224975"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73678468,
                    "digest": "sha256:21a979f63fed76d9981ab2ae161bb00785afa93eacb3c234b84196023c3a66fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 366480095,
                    "digest": "sha256:e5a0f9400e15fd854862a3276fcb16c6f433f4697c82e7b42b5186b936aaaa4c"
                }
            ]
        },
        "v1.18.20": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:2641f1eab9c1173aadea3309108685859c54483e69945f83208ab12141210b50",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:d6511a8fc984f1d33bf479316c2973b59f3e984967de32f886bf2f9b418a6fa8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.18.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8290,
                "digest": "sha256:5f5149b3e2a80ed93ea41cda8367a99089932a8b935d235126621bf37ba670cf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556492,
                    "digest": "sha256:a4a2a29f9ba48efd3d2075f395538b2eec56fb1bedfb7aecf5e54174446f9e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32317,
                    "digest": "sha256:127c9761dcbaa288abc58fc56437c2f2ffbe611b9f7f30e0b5b43cd348bb2094"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:d13bf203e905463e64d89b14509aafa983fb8baf7c1931fe0a65652aeb6c838f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:4039240d2e0b4bcb42ccbce75bc54570e471ad81457478de35fbeef63536e9c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5746,
                    "digest": "sha256:deeeb8095d1ac7cfcc35be304f5ce4df868387c64be5dc4fd7236a03222f820d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75062758,
                    "digest": "sha256:809d80d246f47363c3db6e500e745ac0f2990fb7cb22afdde31bf296c6222d4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 369340845,
                    "digest": "sha256:bb624b5f0d8daa819ca3dee8802b4f477d23fb62c323452dde648c8247bfa272"
                }
            ]
        },
        "v1.18.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8160,
                "digest": "sha256:57b7b26a75b9c45e1adf31229f6f6c14b6317fd414894273c9835592af28e620"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556756,
                    "digest": "sha256:692c352adcf2821d6988021248da6b276cb738808f69dcc7bbb74a9c952146f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32327,
                    "digest": "sha256:97058a342707e39028c2597a4306fd3b1a2ebaf5423f8e514428c73fa508960c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:2821b8e766f41f4f148dc2d378c41d60f3d2cbe6f03b2585dd5653c3873740ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:4e643cc37772c094642f3168c56d1fcbcc9a07ecf72dbb5afdc35baf57e8bc29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 5747,
                    "digest": "sha256:5808cd40979be45e2d29fc7d201d5776da460760e1c70636ff85700481543a79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 76337314,
                    "digest": "sha256:223c8584a889b7854007d75388fb251a7fd35f694a1ea02c0436ce737609c4f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 369363779,
                    "digest": "sha256:2cde9cf2e88c18aebfbb0ab0e7a0f81859907c01b949038306a586695c1d7cbf"
                }
            ]
        },
        "v1.18.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8255,
                "digest": "sha256:fae0fef20e68d35a5eec4bb83bdc4666c5c100e1d6aabce7eba2a354ba872dc7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28809294,
                    "digest": "sha256:d94cf711eb1df9e05b5ab9c367f7417c481e9b5deee1724f93b96c77bff11c8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31042,
                    "digest": "sha256:5dc1ea4c1ef986e00d114cccc9e5fbbe6bd5b8f35145cacb0f12ae3389c4e0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2147ebd301d69260017329191f4072fbb193e2c1c092542270947091c6eaa60c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2955d4b7554096a19ae03fac9a539a3106b871165d9beef32fb6f3b16bed6c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6826,
                    "digest": "sha256:9937ead333055dc9315921b2658fc8100ac560864ab70b3bca4468dddef8cc8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77584840,
                    "digest": "sha256:3087a5604ee706afcf76247fc71ebfb57dd205af95a434a0d504258930a32b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 406541734,
                    "digest": "sha256:e87d2d371d669931f6bf98a68ffc8eda0169aad1fe87a1765c3150dd5940037b"
                }
            ]
        },
        "v1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8255,
                "digest": "sha256:adeab450f589278ec5506afb94c416c780071f2de08a6ce2442aabc79165c786"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28809294,
                    "digest": "sha256:d94cf711eb1df9e05b5ab9c367f7417c481e9b5deee1724f93b96c77bff11c8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31042,
                    "digest": "sha256:5dc1ea4c1ef986e00d114cccc9e5fbbe6bd5b8f35145cacb0f12ae3389c4e0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2147ebd301d69260017329191f4072fbb193e2c1c092542270947091c6eaa60c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2955d4b7554096a19ae03fac9a539a3106b871165d9beef32fb6f3b16bed6c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6826,
                    "digest": "sha256:9937ead333055dc9315921b2658fc8100ac560864ab70b3bca4468dddef8cc8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77584840,
                    "digest": "sha256:3087a5604ee706afcf76247fc71ebfb57dd205af95a434a0d504258930a32b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 398438670,
                    "digest": "sha256:306759a9b4572a66e064893f6d86354e0dd897e2525093ed2bb796d72af533dc"
                }
            ]
        },
        "v1.19.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8253,
                "digest": "sha256:37ddbc9063d2ae1a9587f79fd184bef370fd49bb853cf0521aef6ddd17399c99"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28809294,
                    "digest": "sha256:d94cf711eb1df9e05b5ab9c367f7417c481e9b5deee1724f93b96c77bff11c8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31042,
                    "digest": "sha256:5dc1ea4c1ef986e00d114cccc9e5fbbe6bd5b8f35145cacb0f12ae3389c4e0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2147ebd301d69260017329191f4072fbb193e2c1c092542270947091c6eaa60c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2955d4b7554096a19ae03fac9a539a3106b871165d9beef32fb6f3b16bed6c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6826,
                    "digest": "sha256:9937ead333055dc9315921b2658fc8100ac560864ab70b3bca4468dddef8cc8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77584840,
                    "digest": "sha256:3087a5604ee706afcf76247fc71ebfb57dd205af95a434a0d504258930a32b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 398490899,
                    "digest": "sha256:79c94b6b15cf30db7eb0b55886268e86d71fcfe039013d3d80a89b170f19ab6d"
                }
            ]
        },
        "v1.19.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2821,
                    "digest": "sha256:cbecc517bfad65e368cd7975d1e8a4f558d91160c051d0b1d10ff81488f5fb06",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2821,
                    "digest": "sha256:558780c13d9736d9ba55fa695a5bb8f403a53e42b95bea54fbdc4712181f5e3f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.19.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:85e79f860f3648d2a3a9aeedb6716f5037215b2372d8ab8b9b2b889a5c8c2959",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:2c61e1f4afa7cadf40e32bc610e10b3189f287268a1c863cf762824fbc217404",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.19.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8212,
                "digest": "sha256:2bf906d6909f2c6714a451cb24769892db68e7086572775f081b70277da53e11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31337938,
                    "digest": "sha256:7a14fb4cd302ea60d4b208f17bb50098b52a17183a2137c08299a3b915d7cbae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:b8b1fecc905c746712dc231f73c5d630927892af991ce140673eb77dd9b697cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:75ac8019c9736cea870759cf87bf752344fd3fb2dbf7a3921e9c60e140213900"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6840,
                    "digest": "sha256:ce30d277bc43b665fef026a927cd1ea3d49d61c7076d938c3623c172a82016d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75516916,
                    "digest": "sha256:9ae475fe6b3e1de5f18cefd711f7f4829a33ad845378d7142eb18236f15e6af0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 420755114,
                    "digest": "sha256:bcbb4d7851c6c0a8a8b0c16b8b560f0ac1cc2be575ccbddcb8d98ff32cbbd216"
                }
            ]
        },
        "v1.19.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8212,
                "digest": "sha256:b23ced01867279f670447b4a77d5ef27454c82d4da5463d56dd4e5b4773851a4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31337938,
                    "digest": "sha256:7a14fb4cd302ea60d4b208f17bb50098b52a17183a2137c08299a3b915d7cbae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:b8b1fecc905c746712dc231f73c5d630927892af991ce140673eb77dd9b697cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:75ac8019c9736cea870759cf87bf752344fd3fb2dbf7a3921e9c60e140213900"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6840,
                    "digest": "sha256:ce30d277bc43b665fef026a927cd1ea3d49d61c7076d938c3623c172a82016d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75516916,
                    "digest": "sha256:9ae475fe6b3e1de5f18cefd711f7f4829a33ad845378d7142eb18236f15e6af0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 419999787,
                    "digest": "sha256:f59ae8005e9e8caf50d45cf2206f1c8a6f765393a311bcb7b909889f5dd6d8ec"
                }
            ]
        },
        "v1.19.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8298,
                "digest": "sha256:62d6655a44bc76a1567d177d496041cf8a2b9e914ee821a16a505d3a88013eb9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31340118,
                    "digest": "sha256:d8b994c442864dd519627740d3a4d134f385a2caa54b7f59bf9d372adcf7def0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:b0773f3f14174f9bc8047861c64c2aa0cc581e73b16b48194a2884ad3918d01b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:5b20aefff2dc282ec6e2f496acce5b228bd1dfc30057a8ed41eae0513191b312"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7750,
                    "digest": "sha256:6f44fb9b2033def442fd107223bfd5f3d79b9c66254aaf7331d1d5db6661c3b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75831269,
                    "digest": "sha256:46f8fc57c0d064838bea4f660c04104b35f55a68df98cb9458795e544b966d40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 330036193,
                    "digest": "sha256:7a0d4c84152b4ce1a4f61c3c04a046eaf03b05aaee6bc31e9fbbc661dad8da9a"
                }
            ]
        },
        "v1.20.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8255,
                "digest": "sha256:ad1bcd4daa6607940a897527b6e7479c523759ad17d7f26b3d0e088fc062fef5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28809294,
                    "digest": "sha256:d94cf711eb1df9e05b5ab9c367f7417c481e9b5deee1724f93b96c77bff11c8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31042,
                    "digest": "sha256:5dc1ea4c1ef986e00d114cccc9e5fbbe6bd5b8f35145cacb0f12ae3389c4e0a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:2147ebd301d69260017329191f4072fbb193e2c1c092542270947091c6eaa60c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:2955d4b7554096a19ae03fac9a539a3106b871165d9beef32fb6f3b16bed6c4a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6826,
                    "digest": "sha256:9937ead333055dc9315921b2658fc8100ac560864ab70b3bca4468dddef8cc8e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77584840,
                    "digest": "sha256:3087a5604ee706afcf76247fc71ebfb57dd205af95a434a0d504258930a32b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 399907084,
                    "digest": "sha256:ae350abe4295bef6b10adb46522f2a6178791a7e97b6c906f418bb9331d58142"
                }
            ]
        },
        "v1.20.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:cceb1bfeb9fe7c65e344a6372ef6ef4a349d6d7aefba621b822f44cff0070cfd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:3afb5e66c86e6c5004e3a8dd373640c7e494bcab107157b9eca605a7baa849b1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.20.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 15274,
                "digest": "sha256:d2e9338f01bc642176d0cdbce54755c2eaaade7ed1ec0bb8b6b24f299c9f2413"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31348436,
                    "digest": "sha256:de21e52cfb21f634ab48959716b6f989328d5324043d6a259ca15df8a04e7f8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:9e557bdec7d1561d0553244d6aa08a4f152c6d6656c780009e85e8591d81a1af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:8f57cefb68887255bfffe7e6ddee55ac93c131dc9ceedf6bbf1dfec7836abe75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9203,
                    "digest": "sha256:b605f18f4a71d745d1c8b4241063d0d8c202a64efb7d1f85357bddb3fec663b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 77334118,
                    "digest": "sha256:37291372a63ed45bcb71f9fa0d5c57aea7772ffc92bc0c829a6f203312638f23"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 362832347,
                    "digest": "sha256:ab5e0f7c52accab0ac7cb1eb9024981a8fee15521a2830a269e86abeff844131"
                }
            ]
        },
        "v1.20.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2821,
                    "digest": "sha256:688fba5ce6b825be62a7c7fe1415b35da2bdfbb5a69227c499ea4cc0008661ca",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2821,
                    "digest": "sha256:4c68efafa97d278a75a5b4677fb27e4986b03301739f1f87575af32202da9cfe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.21.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:f4eaad3d61dfe1228b43407dc9db980cd0a2e254588d133762750e605f5f368a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:76ec5e9969179acac692ce1ae308cdb8bdaf70c8ecb80a376f7b3a01f58cd206",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.21.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:c92d79188b958150ffde9437e9b49fb301fd8d1a11eee384475fe3c3eea76f02",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:f35554e42a1081cfc9f7bce5635aea15996e4ec842b689e1508a8746de7d309b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.21.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:05eefdedfcb6113402ac631782adfa3d9f8b75c38eac783e3da4f44f6404dae0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:56860e523f18a45218c2953cae17d42381d26427b80fac1e02212d537509d245",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.21.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0ffd370ba816b2214f407877784ef596344047ce4505b6aa227c74317027b88b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:fd84f34a8ca9a1ad8d8659e5c161adbb72c03f84477e69b5467d4d1afbbb285e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.21.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:9d07ff05e4afefbba983fac311807b3c17a5f36e7061f6cb7e2ba756255b2be4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:19c2315068fd5951aa478ef7b9d1771572c8ea58fbfbf7bc81f7b153679d7a6c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:f97edf7f7ed53c57762b24f90a34fad101386c5bd4d93baeb45449557148c717",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:c5fd3ea063d091c793b7bf5fda79260015e802513cbdbba33cd8d3200b58a4fe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:100b3558428386d1372591f8d62add85b900538d94db8e455b66ebaf05a3ca3a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:7f539328bebb0483e4a91ae48fcd067619cd9fa28f4bf3b3d624858e30571a8e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:fdd535adcded3e6e2ca8b6fd82d443c6b1972729330d5fbf957cd8190738c7b0",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:66ac1067c46b1d4544223d85aeb64807e82d92237eb94aecf9165698b15e122b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:41e599fbbc038175c570c9aec9f9f59311d77be1b54f7f4de1a41d974dcd4cea",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:06e1a888829a564f8840d740d1165ea179ed559ea1fd897ef3a42433f20a3cbd",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:71d2432433562bce581bf13715e4b82d97d895a10f3ca5d8d32863f5189c627d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0ac6d2f1d52fc1b5098b259e0064b9badb753ef0c3185be3c67bb47cf510edee",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:447b36474e03a6529f059643b4f047c16a8b329ba39ba9268abf5fadd3f227e4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:841d670b412680b61ab93191c1b030053f290d6b4b56112e9cf1899b40e2b13d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ca3587e6e545a96c07bf82e2c46503d9ef86fc704f44c17577fca7bcabf5f978",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:d3c56a1a9e3bb93e44be546fb71ed81a748f412d5f173bf8459ee2e3e58930d8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:d409e1b1b04d3290195e0263e12606e1b83d5289e1f80e54914f60cd1237499d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:c74782f6c045edc818b7be47d28e9a787a8e934b63a1d164e3168fb0c7a50ff6",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:c195c17f2a9f6ad5bbddc9eb8bad68fa21709162aabf2b84e4a3896db05c0808",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:8860207ec061d1a8227c619d4d7eb452657d6fe1a2fc26aa509fa99f548c7e53",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.22.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ad5b8404c4052781365a4e70bb7d17c5331e4177bd4a7cd214339316cd6193b6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:302f7c1e5b7c7179146ee732be15b8b896cd602daa8e81a323910b8ab4ca790c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:2f93d3c7b12a3e93e6c1f34f331415e105979961fcddbe69a4e3ab5a93ccbb35",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:dc5d18ada66727cb04b9332d79946cf06e1c2a5c1d8458e36f53e1d780997c47",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:355a1e3b7b0fe315c896f63a73847c554aac8fb8615c6bf47f1ca303009e9a2d",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:e8b2da47533323f5217a06e841a1febe0418d396d90799183cf10f1e042fcb5f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0d4d9019a27c5f0edb4709cc026e87d52c352f795f519a930155793760d196aa",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:8cafbe8e7e31bcf572118e5a87674a59196925b9618d1693d6a15a026fb62b84",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:934835129873881bbfac668e1da74890c749afed16e020cd173b77788841155c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:e76d724b12a047d16b7b8a994a1d873323a9879e1ae9c13edf3985d38b66da80",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:e7968cda1b4ff790d5b0b5b0c29bda0404cdb825fd939fe50fd5accc43e3a730",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:b096a7d969f0751ac47afebb7eca52e397b464a76ab1a72d678b4f41d9392a0e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:f559910527eff599dca806a407dbaf7912048105b7ad92ee9f4a537a22fb49e4",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:d0df8f0f18616d0c773c98dc4e9b3bb763788ece8876bf6b4c04d31dd21d2789",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0df8215895129c0d3221cda19847d1296c4f29ec93487339149333bd9d899e5a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:970f5e9a092a0900152449ea9c82f4620491bfab9c0d21ab1072531688de8a41",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:1742ff7f0b79a8aaae347b9c2ffaf9738910e721d649301791c812c162092753",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:0415a7bb1275c23c9315d97c5bfd7aecfdf8a8ea0562911f653711d947f7bec0",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:a69c29d3d502635369a5fe92d8e503c09581fcd406ba6598acc5d80ff5ba81b1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:c0dbdf07f05a4633184037d82f51318c2bc3c1792bd5c510e6e49735b219c104",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.23.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:51d988ac40b04965b5379e251a113cdd44150b758ae339b0e941769e584040f5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:2fea44361d7173d15e2ac158db1e876f1b8a33984fcc691119e37904d74cabe2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:8e3b1732d8d1e8b4f74c60d3504abf8472b6884d930d2f14013818cd9ff3f7e2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:47a1073d14ca16bdb4dada89729d02be6415fcf37a9cb0cfdbd53f944288df4c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:fd82cddc87336d91aa0a2fc35f3c7a9463c53fd8e9575e9052d2c75c61f5b083",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:52230a9babc80c98effb86101047296e120da54d5b0ce644f7b70a1eeabfad4a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0bdca26bd7fe65c823640b14253ea7bac4baad9336b332c94850f84d8102f873",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ec40667e3a832f8574ff1380ccf91dd83763772102db0807dcb7e32a8131cebd",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:c9e00e2b228e47ba3c96eaf0309b27dc3f73e444944e4c900016fd07b1b805cb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:7085bca4aa35fef017831b91159c284903a7e41b65eb624352d8637e6b1695bf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:24473777a1eef985dc405c23ab9f4daddb1352ca23db60b75de9e7c408096491",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:a160d23ad5d48363f25b231d1688a4fd6935cbe6eb26bd5d19247256141c835d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:cdc9decabd92a947a82117e03ed26c4cde03753f42c3ff7ca56bab39b6ec5200",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:451ec078de5827b669649e2b689604417d71031a38ef7a19a7a48cd45ffeb4a8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:1f0cee2282f43150b52dc7933183ed96abdcfc8d293f30ec07082495874876f1",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 742,
                    "digest": "sha256:4616d7ad9e7104df2feb21c95ad3853e86da81c41b82187509c5bfb884ade819",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:e812632818ae40cee2a9a22123ceb075f8550d132f860d67e2c35b7caf0fa215",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:045e3c66c8327c667b55f575789eefb9b74a0d1d62b34ebf12c358e14648c7c9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ba6a8a1bc35139cc0947a9269a6db577cf7a6ba37cab8088fd04142546dc0c21",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:6b8cf33d0dd50192934fc5feae6c2085c1d813172618dfca7e99ded1d4e573c2",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ec13a9319ee30ab5e842517a9dffdb8e3c0e36151ffdef82b41be537ac124fbc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:404ccc0620dc40a3f6cf5863c6390548d106d00af54377b1adc409f3ac63ace3",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.24.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:5c015142d9b60a0f6c45573f809957076514e38ec973565e2b2fe828b91597f5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:7b69d086100548e9cf6c5660fc321c78c9250e5100b8db937d6b16497869958e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:db0089929bbf03b5c6f2a4e2a7000e0b362900dbb5395d2c5f62a5a1daf8d54b",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:330d2e41561eb88cad65b4816cb05becb7bcfc17f2331901272c639f1e45655b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.0-beta.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:7cfc2ef2bdc04f88ee30d984bbb67b2d1d5fdafe5ca94bd64ab032564af1dcb9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:aa542a678115d8eecd57532765653259f61cd1961c5c63b85baf5f6cbf8fc336",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ca09b39e6fc53fc37ba9757ba701ce1b8246380f26cd42b9bb9cb60c7af4b8d9",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:35a330f69450bea0f84e6c6044fd549db7c753d630b117d0894b4b5949cf3bd0",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ca7371d5d1f680778e40e9bcbbea06c3c61ac6f0e1a29cba5c58ff2dae1ba7f5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:f5870bcee16d2bc044876c6af0e07fe32a6bb24186e377829e61451f28077e9d",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:06bd8a1c3af74cf360a524aa0c4a59922e023a1fb3526ee748609d4823f560f3",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:3b2127454d2e55a96e594debf450b80e87fe3273f0c7f74aa0c6be9972b8467e",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:6e0f9005eba4010e364aa1bb25c8d7c64f050f744258eb68c4eb40c284c3c0dd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0c49319ae9caf5ccc84f9ad6e15a133054d50164acc089ee88505f65cdacbbbc",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:f1de3b0670462f43280114eccceab8bf1b9576d2afe0582f8f74529da6fd0365",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:5a781e2fe307fa77b7e9babd83cce628d6a840b42130f81ee7302140cfaa5fa1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:b5ce984f5651f44457edf263c1fe93459df8d5d63db7f108ccf5ea4b8d4d9820",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:a1e86e6713067cb87aecabde3c6430a281a4d5167701dba58cc8ee9bc07120fe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.25.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:c588703c49cfd75af1f101cac85bc00c3df176b9c26a628985fb4abc6513f8e2",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:155c60f39cf00b5a29a8a3a049cbe1a541812f7dd6d3dfa798fe31128bdf0345",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:3264cbae4b80c241743d12644b2506fff13dce07fcadf29079c1d06a47b399dd",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:36a22ea7ff0381daf50b12fd1d41e8cd8f6625a4041b6e4d41f084adbe8c2da1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:fb00f222d5a6bc42d024fd5292fbc63143cfa9610c01d1d0e2a84354114f86d6",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:04fc4dcabe617fdb73c773ac6eaeecb5fe601789dc00ec245b0e06393f7249e9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:040a8d4cdc2391152d262b9a3fda674c771326a4d602b0347e3deff9e7210a33",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:7ad3632c71b65083a255ffa5d746ad39238b618508848f49e994dd4321354853",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ad06ec62683fe300927150377e43df432da2228261bedf8eb2442fe5956d5e58",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:73f30c6f49b97aa178d14483dfb3ad47a1e014a53589ec02191c3fcd1df7cb71",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:c39462fc9f460e13627cbd835b7d1268e4fd1a82d23833864e33ac1aaa79ee7a",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:0bc165e66595b83233fee7c18793bfa4dcd02c3112cfaba677e70e6edfea3bbe",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:94eb63275ad6305210041cdb5aca87c8562cc50fa152dbec3fef8c58479db4ff",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:3dc28d458c92e3252c78752ade134d7231ce8e3565f2de4e437a77b171d046ea",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:a539833d26264444ab3b8f5e56e23fa3361436445fa23c864e6dec622458858f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:354b7b57f16dc42d5ccc8c7eb3c3c8b3818531d35bc82600ba874a85fa1fa28a",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.26.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:5e5d789e90c1512c8c480844e0985bc3b4da4ba66179cc5b540fe5b785ca97b5",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:26ae311549359a62de298e6a99daff1b5cb4806161ade7816b82f23ab0489622",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:bac1b0e00322ba0269a5811fb574dab91f93176d9f00cec3b3eb0832beb1ce84",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:b7f2f9e1f8325afdd63ffd78d12270153a07c4a3d6c31bc717060cdbcebb2d8c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:4992b70e56a3de9c917adfb4fefe24ca2ee6fb1b8f3e31257e9ae8836ab8a271",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:bb9512ea3574c2a7ab49a0e743a18d96c1fd6ad3d6cbbeb5309f1785d2a1751b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:3d9813786f6985463bc219b1b74f1410e62630347afce24d30e06069160c7a62",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:72de0e8909ecf2cc5c020752bf69b43b0f6d5deb54595959e66c09961c143de1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ec04b9f650954c033c978db9c25a9071b449179b0e509df258350c2f3034fb57",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:6554631aa743b4db1302c04d97b1bc73c34802b4d2cdcb5875a21f6edd780da8",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:30c5d91cab1f2915ad61f38b6279254397c433fc745b74533daa3c1e16617326",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:f72a6686e25f80052f37b177215a0a353ed23718d8ee2739cc17cfdb4b8feffb",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ff631c3718962dc5a5e8adf1f48803c2675feebcd4eef674dd5a943576cf1d33",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:d48ca709adfa1b5d0109def39b5203ff5f8b4c1333082ca26772c24079f029d1",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.27.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:9dd3392d79af1b084671b05bcf65b21de476256ad1dcc853d9f3b10b4ac52dde",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:de0b3dfe848ccf07e24f4278eaf93edb857b6231b39773f46b36a2b1a6543ae9",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.28.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:9f3ff58f19dcf1a0611d11e8ac989fdb30a28f40f236f59f0bea31fb956ccf5c",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:35ef07082349730b9b1e931b81e15d807ede7651a2a7f725def6ba72687a6d73",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.28.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:642bf43eea1d3450bc1a768531849bc7e3bc6c98f9f56ccd48319c73b20c8838",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:360c4e69f1d421013a35164897cf7dfc2d6cbd8dfaeea29e7d8100f3e71cdd3c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.28.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:a99353a19f3f8958bc4d9b808425224b6ff0f03b0c1ef7ae18eda5ccc0c21342",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:09d5f5570fe26151630008b005f84abae433313e6a68f1e19b57e5489c071643",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.28.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:9ba4d311e7861d27b210e5960e5ce921a7c53d3c67e0545fd8a1cb9a76dfa2cb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:2bbf55860a6d38e25e5db113a1035f2286c87fb4f7b1594cfc3643a17b59351f",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.29.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:54a50c9354f11ce0aa56a85d2cacb1b950f85eab3fe1caf988826d1f89bf37eb",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:8ccbd8bc4d52c467f3c79eeeb434827c225600a1d7385a4b1c19d9e038c9e0c0",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.29.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:d34a7da566284eed828f5f3293b56497731abfa5f8a989d7d6101031ef88d562",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:e9686f49fb37fa4a705dc8b10952c5b49b60c49589dea7d16f7ceb3055756aaf",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.29.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:acc9e82a5a5bd3dfccfd03117e9ef5f96b46108b55cd647fb5e7d0d1a35c9c6f",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:068aaa834c09ab60d925a8569c6b5f5b9cf46eccf670499176f3267f2ac3189c",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.29.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:ea40a6bd365a17f71fd3883a1d34a0791d7d6b0eb75832c6d85b6f2326827f1e",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:e63a7f74e80b746328fbaa70be406639d0c31c8c8cf0a3d57efdd23c64fe4bba",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        },
        "v1.30.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:2af5d1b382926abcd6336312d652cd045b7cc47475844a608669c71b1fefcfbc",
                    "platform": {
                        "architecture": "amd64",
                        "os": "linux"
                    }
                },
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 743,
                    "digest": "sha256:5e4ce6f9033bdb9ce81a7fd699c8e67cfcacfab57076058e3e6f33c32036b42b",
                    "platform": {
                        "architecture": "arm64",
                        "os": "linux"
                    }
                }
            ]
        }
    },
    "tags": [
        "TEST",
        "alpha-v1.14.1",
        "v1.11.10",
        "v1.11.3",
        "v1.12.10",
        "v1.12.2",
        "v1.12.3",
        "v1.12.5",
        "v1.12.8",
        "v1.12.9",
        "v1.13.10",
        "v1.13.12",
        "v1.13.2",
        "v1.13.3",
        "v1.13.4",
        "v1.13.6",
        "v1.13.7",
        "v1.14.0",
        "v1.14.1",
        "v1.14.10",
        "v1.14.2",
        "v1.14.3",
        "v1.14.6",
        "v1.14.9",
        "v1.15.0",
        "v1.15.11",
        "v1.15.12",
        "v1.15.3",
        "v1.15.6",
        "v1.15.7",
        "v1.16.1",
        "v1.16.15",
        "v1.16.2",
        "v1.16.3",
        "v1.16.4",
        "v1.16.9",
        "v1.17.0",
        "v1.17.11",
        "v1.17.17",
        "v1.17.2",
        "v1.17.5",
        "v1.18.0",
        "v1.18.15",
        "v1.18.19",
        "v1.18.2",
        "v1.18.20",
        "v1.18.4",
        "v1.18.6",
        "v1.18.8",
        "v1.19.0",
        "v1.19.1",
        "v1.19.11",
        "v1.19.16",
        "v1.19.3",
        "v1.19.4",
        "v1.19.7",
        "v1.20.0",
        "v1.20.15",
        "v1.20.2",
        "v1.20.7",
        "v1.21.1",
        "v1.21.10",
        "v1.21.12",
        "v1.21.14",
        "v1.21.2",
        "v1.22.0",
        "v1.22.1",
        "v1.22.13",
        "v1.22.15",
        "v1.22.17",
        "v1.22.2",
        "v1.22.4",
        "v1.22.5",
        "v1.22.7",
        "v1.22.9",
        "v1.23.0",
        "v1.23.1",
        "v1.23.10",
        "v1.23.12",
        "v1.23.13",
        "v1.23.17",
        "v1.23.3",
        "v1.23.4",
        "v1.23.5",
        "v1.23.6",
        "v1.24.0",
        "v1.24.1",
        "v1.24.12",
        "v1.24.13",
        "v1.24.15",
        "v1.24.17",
        "v1.24.2",
        "v1.24.3",
        "v1.24.4",
        "v1.24.6",
        "v1.24.7",
        "v1.25.0",
        "v1.25.0-beta.0",
        "v1.25.1",
        "v1.25.11",
        "v1.25.16",
        "v1.25.2",
        "v1.25.3",
        "v1.25.8",
        "v1.25.9",
        "v1.26.0",
        "v1.26.13",
        "v1.26.14",
        "v1.26.15",
        "v1.26.2",
        "v1.26.3",
        "v1.26.4",
        "v1.26.6",
        "v1.27.0",
        "v1.27.1",
        "v1.27.10",
        "v1.27.11",
        "v1.27.13",
        "v1.27.2",
        "v1.27.3",
        "v1.28.0",
        "v1.28.6",
        "v1.28.7",
        "v1.28.9",
        "v1.29.0",
        "v1.29.1",
        "v1.29.2",
        "v1.29.4",
        "v1.30.0"
    ],
    "configs": {
        "TEST": {
            "architecture": "amd64",
            "config": {
                "Hostname": "f4a260bb1032",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:latest",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-04-09T14:57:36.341869267-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "f4a260bb1032111a8f69389a72fd78981bea4488211978c27b151e1bcbcf114f",
            "container_config": {
                "Hostname": "f4a260bb1032",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:latest",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-04-09T14:57:36.341869267-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-04-09T21:58:11.515482004Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T21:20:43.366000265Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T21:20:43.654360865Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-08T21:20:44.914321503Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-04-08T21:21:20.338997232Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2019-04-08T22:12:25.85693194Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T22:12:37.626714099Z",
                    "created_by": "|2 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false DEBIAN_FRONTEND=noninteractive /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && add-apt-repository         \"deb https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"containerd.io\""
                },
                {
                    "created": "2019-04-08T22:12:39.310410239Z",
                    "created_by": "|2 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false DEBIAN_FRONTEND=noninteractive /bin/sh -c mkdir -p /etc/containerd && containerd config default > /etc/containerd/config.toml"
                },
                {
                    "created": "2019-04-08T22:12:40.554327747Z",
                    "created_by": "|2 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false DEBIAN_FRONTEND=noninteractive /bin/sh -c mkdir -p /etc/systemd/system/kubelet.service.d/ && echo $'[Service]\\nEnvironment=\"KUBELET_EXTRA_ARGS=--container-runtime=remote --runtime-request-timeout=15m --container-runtime-endpoint=unix:///run/containerd/containerd.sock\\n' >> /etc/systemd/system/kubelet.service.d/0-containerd.conf"
                },
                {
                    "created": "2019-04-08T22:12:40.866008697Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T22:12:41.114173248Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T22:12:43.939535374Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture)     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-04-08T22:14:28.178134557Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.13.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T22:14:31.26635901Z",
                    "created_by": "|5 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.13.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture)     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin"
                },
                {
                    "created": "2019-04-08T22:14:31.592266393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-08T22:14:31.888471819Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T20:50:58.426397636Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:77c0f7d759eddd116ca6005c52dfe9fd43e08f411fda2c3be774b9ccf18e9b47 in /usr/local/bin/ "
                },
                {
                    "created": "2019-04-09T20:50:58.786136591Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T21:58:11.515482004Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:bd1c1b29c23889b959cb21eae12a0023bba5a71b70fb355115e5400f87238794",
                    "sha256:bd1c1b29c23889b959cb21eae12a0023bba5a71b70fb355115e5400f87238794",
                    "sha256:c567a4272fbd7df8b646913c61499bde186bda0b58a8269b674ff47afcbf0ec1",
                    "sha256:9bae2d094a8ad6df64ab7c83c662734e95f647c17f12e8a49597bc403e6f9472",
                    "sha256:3b5365aa738f6f7071a79099341d9c9d99c309eecdf16e26cb3ecedd60001ef5",
                    "sha256:3e8afe0a6eba28e7db5d4cd740e842ad3767b51d58914f5039b18a8d4b124b6b",
                    "sha256:3175348ec916616907ca6268c6dd905da83cc8d584e31146ebf7dd271e16248e",
                    "sha256:e354a13cd264aad3a0a02c60412643e9180de98d9c6a70b2bc21e40a76490481",
                    "sha256:13897f5b4bdd519fed3c8cb6ca9485ac90ffb5aeee44732742c3ec499683ab8b",
                    "sha256:ed1ddb5211baf6bcd216136fc2578a39cb8ca4f72adea945ff3431270038cf62"
                ]
            }
        },
        "alpha-v1.14.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3b1197e65037",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-13T18:44:29.333047075-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "3b1197e650372adb17d88a5cb032b0c1ad7a9bf777dd8d98d2908b2bce34cbe9",
            "container_config": {
                "Hostname": "3b1197e65037",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-13T18:44:29.333047075-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-05-14T01:45:01.652351337Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-05-06T21:04:22.52159248Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f478b3848bf324098d8c2485a33a10d2cf4b703b1fcf773f1bdd693019d81a85 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-05-06T21:04:23.945463598Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-05-06T21:04:24.217083061Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:24.476445131Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:27.346131515Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-05-06T21:04:27.677045659Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:30.713917534Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-05-06T21:04:31.001110933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.285633985Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.566790175Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a3bfacb5f0a146bca849ef339c798d6f485e85265b8a655501a5e7c73d981157 in /usr/local/bin/ "
                },
                {
                    "created": "2019-05-06T21:04:31.833494382Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-14T01:45:01.652351337Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:05f9d9fb2780111c7cb62dcf97c623090fca58e7b5ab1b9f4771325701b253b7",
                    "sha256:dec95273f43513149a3204a7ad644d8a18b64a2e9a343979ebbb89775dbe9b77",
                    "sha256:526c3c410751c7d5beacb168d8d3559ab5da7db784f26b47654fc1946da3eb31",
                    "sha256:ed6116872bd77e946d47f8a98c9e932497e7639af57a6e7e3fb7731e8cd700ed",
                    "sha256:6c31b510354a74d0871845bd67738525e62a881846e9372cc1c20fb547c48127",
                    "sha256:950ce291a3390b968898a6c42679251c05be248eb9b47797c5069fc47816c5d9"
                ]
            }
        },
        "v1.11.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5934b18498da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "5934b18498dac342fc88d125326e64aaeb4117358b4339e6158112039512d777",
            "container_config": {
                "Hostname": "5934b18498da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-05-01T03:03:24.215369819Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CNI_VERSION=v0.8.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CRICTL_VERSION=v1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.5 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-01T03:03:24.215369819Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:c4c33d8c77ca7fe74b3360c8a76b01cb1a3394de1490685e1a2e652cf788e7dd",
                    "sha256:dec58d310b8ec87970becf1f83c7594032274aa1576e46ff4bb674a6d522c4f7",
                    "sha256:05b50b47a392178a2977429d17fa870b589d3fbb6ab2a4b830b460d65b1fa34f"
                ]
            }
        },
        "v1.11.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "dacf295cd304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20181008-e1ca987",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2018-10-08T16:52:25.050054225-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "dacf295cd304c31723f0fbaae1d63a4c84703c2a8ca7417457c1697bb1f3b474",
            "container_config": {
                "Hostname": "dacf295cd304",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20181008-e1ca987",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2018-10-08T16:52:25.050054225-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2018-10-08T23:52:33.829415573Z",
            "docker_version": "18.03.0-ce",
            "history": [
                {
                    "created": "2018-08-10T18:15:10.239117458Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb6e16162f5df03916d0553335816350385d69a27093b0e2d70b19c25906ce37 in / "
                },
                {
                    "created": "2018-08-10T18:15:10.516883961Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:11:35.945200617Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ARCH=amd64",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:11:55.576625734Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:29.375467594Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c echo \"deb http://ftp.debian.org/debian stretch-backports main\"         > /etc/apt/sources.list.d/backports.list     && clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd/stretch-backports systemd-sysv/stretch-backports libsystemd0/stretch-backports       iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2018-10-01T20:12:29.860504303Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=17.03.2~ce-0~debian-stretch",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:30.134118238Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:40.79435706Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=17.03.2~ce-0~debian-stretch /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH=\"${ARCH}\" add-apt-repository         \"deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2018-10-01T20:12:41.149312192Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:41.439141883Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:41.69155038Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:41.991859651Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:44.143827699Z",
                    "created_by": "|8 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz CNI_VERSION=0.6.0 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=17.03.2~ce-0~debian-stretch /bin/sh -c curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2018-10-01T20:12:44.46230981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-01T20:12:44.768513683Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:50:35.979298547Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:317ac87615600013f410a7b43bae9e37bb2ced6575e09c6962cac07426286269 in /usr/local/bin/ "
                },
                {
                    "created": "2018-10-08T23:50:36.243092164Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:50:36.496445465Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-08T23:52:33.829415573Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0c1604b64aedf4f5060a25da1b96b21aa803a878ce475633d02a4aba854252a7",
                    "sha256:e69cfe219b85d97f578b33c919955dc32211efe62ce114ece45de3375f53ce62",
                    "sha256:e1b7ef1aad45c45c89af3f3088ab9a3a2f13daa72874283fd5aa1f95d68f5f84",
                    "sha256:170ac6d3f0e7b4fb4f4e2ffc6cce56a7f21c1e66ba38069d59ab37c200fbeb8a",
                    "sha256:bf33a10930e71dd2d6562e6bd870bbf523a0f193e8ef997d406002960ab6ab7c",
                    "sha256:f1838c723ea462d72529b698253c7b7e558969cfc4b6fcc577fd4239f746d7e1"
                ]
            }
        },
        "v1.12.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2038e43dc666",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "2038e43dc6666e2a00389d6112c303f4e04b9f2de4b79575e7a4cca08ed71b83",
            "container_config": {
                "Hostname": "2038e43dc666",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-05-01T02:58:12.723847439Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CNI_VERSION=v0.8.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CRICTL_VERSION=v1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.5 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-01T02:58:12.723847439Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:c4c33d8c77ca7fe74b3360c8a76b01cb1a3394de1490685e1a2e652cf788e7dd",
                    "sha256:dec58d310b8ec87970becf1f83c7594032274aa1576e46ff4bb674a6d522c4f7",
                    "sha256:9eea379dfefeee84cf9b3ed3aa0dd7f917c80cbb3252bf75f0b5bfd168eaff02"
                ]
            }
        },
        "v1.12.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "81c49bd0dada",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20181107-6f628d7",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2018-11-07T16:23:55.673946057-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "81c49bd0dada3672e94f294dc49291f5c07b57730a198f39400255623e7e2276",
            "container_config": {
                "Hostname": "81c49bd0dada",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20181107-6f628d7",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2018-11-07T16:23:55.673946057-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2018-11-08T00:24:13.502000189Z",
            "docker_version": "18.03.0-ce",
            "history": [
                {
                    "created": "2018-10-19T00:47:54.68590759Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcd068f67af2788dbd57729c0c8193f022ec5c37fefb8704390c59081152e6fc in / "
                },
                {
                    "created": "2018-10-19T00:47:55.423310694Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-10-19T00:47:56.094954537Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-19T00:47:56.775696561Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-10-19T00:47:56.963343052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T06:57:45.276350608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ARCH=amd64",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T06:57:45.568364628Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:02:48.978326282Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2018-11-08T00:02:50.053326137Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2018-11-08T00:03:20.956083114Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2018-11-08T00:03:21.502155547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:21.738977712Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:35.810376098Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH=\"${ARCH}\" add-apt-repository         \"deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2018-11-08T00:03:36.312479566Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:36.589869433Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:36.853447472Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:37.154247851Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:39.410640452Z",
                    "created_by": "|8 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz CNI_VERSION=0.6.0 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2018-11-08T00:03:39.733453603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:39.984882561Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:40.26876905Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a50807990cdde1dc48399406ffc890681bbb542e7e74baf19edcd86157ec88a6 in /usr/local/bin/ "
                },
                {
                    "created": "2018-11-08T00:03:40.516013887Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:03:40.805095177Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:24:13.502000189Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:102645f1cf722254bbfb7135b524db45fbbac400e79e4d54266c000a5f5bc400",
                    "sha256:ae1f631f14b7667ca37dca207c631d64947c60d923995cf0d73ceb1b08c406bb",
                    "sha256:2146d867acf390370d4d0c7b51951551e0e91fb600b69dbc8922d531b05b12bc",
                    "sha256:76c033092e100f56899d7402823c5cb6ce345442b3382d7b240350ef4252187e",
                    "sha256:32d77d0df10157eaba4e315f795fa44b0a5300b4af8c9582f5b526d9c1d2e3e4",
                    "sha256:2dd224e3283b69cc92a090436247b1d8d547f60d0b006ff17ccb82f97a774baf",
                    "sha256:4f2983d46bcc700a44f1c996a8418b1342a8337f72d3fb53c8a4cd7eafd5f415",
                    "sha256:b065cfc29a8ff6791bb4bb1daecc35569dc038d7400b2b027421ac59659826b8",
                    "sha256:00cab34675d1128f91f1b808e10aa3640f9281e6b7db2569f7cc1a6794c85a21",
                    "sha256:7f380aa5805e54483d79fbf7567a050ccd40ff11007a0b62a03989ab9cfe463b",
                    "sha256:6eb10d070ed2830df500c26b6b0cc23c57afe9a075093d7cf3fe1c7b9d87aa51"
                ]
            }
        },
        "v1.12.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d5294f059e2f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20181203-d055041",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2018-12-16T04:11:08.679742-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "d5294f059e2f7c776a64418fa3bfbf3ce4c978f023d44eaaa040b46c63a2d5d6",
            "container_config": {
                "Hostname": "d5294f059e2f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20181203-d055041",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2018-12-16T04:11:08.679742-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2018-12-16T12:11:38.6507197Z",
            "docker_version": "18.09.0",
            "history": [
                {
                    "created": "2018-10-19T00:47:54.68590759Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcd068f67af2788dbd57729c0c8193f022ec5c37fefb8704390c59081152e6fc in / "
                },
                {
                    "created": "2018-10-19T00:47:55.423310694Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-10-19T00:47:56.094954537Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-19T00:47:56.775696561Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-10-19T00:47:56.963343052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T06:57:45.276350608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ARCH=amd64",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-06T06:57:45.568364628Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-08T00:02:48.978326282Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2018-11-08T00:02:50.053326137Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2018-12-04T02:30:02.022891466Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2018-12-04T02:30:02.510675313Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:02.81013711Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:37.554408364Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH=\"${ARCH}\" add-apt-repository         \"deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2018-12-04T02:30:38.000006211Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:38.264863705Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:38.536092921Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:38.780500564Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:40.995269119Z",
                    "created_by": "|8 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz CNI_VERSION=0.6.0 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2018-12-04T02:30:41.360325381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:30:41.604174794Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:33:35.47014871Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:19237563cad2369a955407742754384a6711f2b123edd498ecaf3292e5f922cf in /usr/local/bin/ "
                },
                {
                    "created": "2018-12-04T02:33:35.742669041Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T02:33:36.034133957Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-16T12:11:38.6507197Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:102645f1cf722254bbfb7135b524db45fbbac400e79e4d54266c000a5f5bc400",
                    "sha256:ae1f631f14b7667ca37dca207c631d64947c60d923995cf0d73ceb1b08c406bb",
                    "sha256:2146d867acf390370d4d0c7b51951551e0e91fb600b69dbc8922d531b05b12bc",
                    "sha256:76c033092e100f56899d7402823c5cb6ce345442b3382d7b240350ef4252187e",
                    "sha256:32d77d0df10157eaba4e315f795fa44b0a5300b4af8c9582f5b526d9c1d2e3e4",
                    "sha256:2dd224e3283b69cc92a090436247b1d8d547f60d0b006ff17ccb82f97a774baf",
                    "sha256:7068db306dc121e5a1993e248453ed5653f3e219afd96e2222606489a1af8973",
                    "sha256:dfd3bf0938475a3d4eac765f21f1526a1158137bfe527678dc9c3b81938b4136",
                    "sha256:b085391865e98903dc4e243c42b20a253c728aec40dd7d082032e1f9aa0df969",
                    "sha256:c4c061666056512009676f316e7c921eb4fc0a36798b5838652c5401325e0b12",
                    "sha256:0185417ba3fcb3104c2bd1c9bee0f436e560cad0af9b1c46883949d539108c8c"
                ]
            }
        },
        "v1.12.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "f7218f31dcec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190211-a8c9fc8",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-02-11T14:11:01.206666829-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "f7218f31dceceb23b4cf5362e58bd3f92bab3eabd6363dd5491ac6f94dedcad6",
            "container_config": {
                "Hostname": "f7218f31dcec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190211-a8c9fc8",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-02-11T14:11:01.206666829-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-02-11T22:11:20.949747254Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.064561045Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ARCH=amd64",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.356699872Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.642746187Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-02-11T21:37:15.750691619Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-02-11T21:37:48.68328103Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2019-02-11T21:37:49.273500112Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:49.535706106Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:05.196963443Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH=\"${ARCH}\" add-apt-repository         \"deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2019-02-11T21:38:05.75572608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.014180147Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.267996265Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.522648521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:08.762308704Z",
                    "created_by": "|8 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz CNI_VERSION=0.6.0 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-02-11T21:38:09.12050676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:09.421707798Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:09.707347179Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:58fd3a6c18ca55f2892ac710caa9989b01b9f3af9c3a506a242c7d8d4d3be2d8 in /usr/local/bin/ "
                },
                {
                    "created": "2019-02-11T21:38:09.994147158Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:10.26753474Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T22:11:20.949747254Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:4f2e4dce3e5cbcf8a8b26c40b8fc36df435a0083c88dca3a39f111b121224b3a",
                    "sha256:ef574ce8e4dc981fb8979149d8ca1b6e4fb2dc00be69bbad08e31bcc791b4c56",
                    "sha256:b9480e7b86bd1653b1bfd30915698a5b1138ebc4f178707cc59ebe9bc3d2928a",
                    "sha256:be828bf8155e5b469348fae7417f85e2d85072e6ad30b7a0511b5c7ae1cf192b",
                    "sha256:7b743eedab5394fa5cf846861d79dd415ab1a16423ad61a13b7ec77587f5970e",
                    "sha256:1ffc6c0f19b821382a9c2b0195c5e2b15e8e15d8aeb243c23716cfc3fe1b5ecd",
                    "sha256:cf8afbdf5fb053cfdfe0134fc3dae2b8b262afc32fac4fda279b6fc1a64a5b8c"
                ]
            }
        },
        "v1.12.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "909f1494f12b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-16T18:28:23.334438502-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "909f1494f12be49a6338be9a64e802fee6e07486963ddcb30e2857153091d531",
            "container_config": {
                "Hostname": "909f1494f12b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-16T18:28:23.334438502-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-05-17T01:28:57.149005143Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-05-06T21:04:22.52159248Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f478b3848bf324098d8c2485a33a10d2cf4b703b1fcf773f1bdd693019d81a85 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-05-06T21:04:23.945463598Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-05-06T21:04:24.217083061Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:24.476445131Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:27.346131515Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-05-06T21:04:27.677045659Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:30.713917534Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-05-06T21:04:31.001110933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.285633985Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.566790175Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a3bfacb5f0a146bca849ef339c798d6f485e85265b8a655501a5e7c73d981157 in /usr/local/bin/ "
                },
                {
                    "created": "2019-05-06T21:04:31.833494382Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-17T01:28:57.149005143Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:05f9d9fb2780111c7cb62dcf97c623090fca58e7b5ab1b9f4771325701b253b7",
                    "sha256:dec95273f43513149a3204a7ad644d8a18b64a2e9a343979ebbb89775dbe9b77",
                    "sha256:526c3c410751c7d5beacb168d8d3559ab5da7db784f26b47654fc1946da3eb31",
                    "sha256:ed6116872bd77e946d47f8a98c9e932497e7639af57a6e7e3fb7731e8cd700ed",
                    "sha256:6c31b510354a74d0871845bd67738525e62a881846e9372cc1c20fb547c48127",
                    "sha256:a7d8a4f55aaff7288917381db8fd1e41c68f2cbf88b95bab8143cbecc526f479"
                ]
            }
        },
        "v1.12.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "86e3ba09c738",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T17:00:09.583414214-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "86e3ba09c7389f851636214cac0744ed4167a8942db2750d5c7af9eb623e1b07",
            "container_config": {
                "Hostname": "86e3ba09c738",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T17:00:09.583414214-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-06-26T00:00:36.186591578Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-06-17T23:45:21.71391078Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ae060733b6027b371f2a8a55c9e8f7954b1bd3766470a91d2ebfcbd0cd5b8f96 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-06-17T23:45:23.107851709Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-06-17T23:45:23.368637488Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:23.616304522Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:26.514171024Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-06-17T23:45:26.812552299Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:29.812339254Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-06-17T23:45:30.102841797Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:30.321451892Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-24T20:08:12.892517439Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:87220329babadff48be85f0352d52c1652a1ab99086307686917e28233fe5137 in /usr/local/bin/ "
                },
                {
                    "created": "2019-06-24T20:08:13.126682498Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-26T00:00:36.186591578Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:9fe135056acc87064f0340a95bf549f060f9759a4b7294bf2dc4e5892893cb24",
                    "sha256:82e417495ab6d69743236c36b36339a464ee0c28d9ef4b718d3d49a9e7ea151d",
                    "sha256:d370ad65101aedd8dbf82e89b9cb99bfe8b818548e781670b395d179103e5ef0",
                    "sha256:26ec162eb017a026df89ed692dba7586930c7448a8e29baa72fa7257bce0b839",
                    "sha256:ed4ac64abb6d7ffa39daac39859852f99678ff5fd266157c69da0ec22767355f",
                    "sha256:fd83314f1af1dd1ab7f838d59f0704aa45cba99395c958e8da88737c9ec390ef"
                ]
            }
        },
        "v1.13.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "363b244e3b2b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190819-26e1eb5@sha256:e609eaa7853289ef603db647ae9568b32093b2347f839a2117d98a08bfc7ab17",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-08-20T12:38:43.853790532-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "363b244e3b2b5f56abbc3471a419cea130ba5d1b20cc2c289a70d83e5466603d",
            "container_config": {
                "Hostname": "363b244e3b2b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190819-26e1eb5@sha256:e609eaa7853289ef603db647ae9568b32093b2347f839a2117d98a08bfc7ab17",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-08-20T12:38:43.853790532-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-08-20T19:39:08.97135884Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-08-19T22:01:39.632266727Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-08-19T22:01:40.311939253Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:1cd3cd755840e6aa49c2a3399d39454877f6de42c8735a0a81596bdb0e3c3908 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-08-19T22:01:41.704335765Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-08-19T22:01:41.962936139Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:42.240605Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:44.722794301Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-08-19T22:01:45.053467637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:48.233257963Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-08-19T22:01:48.546640816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:48.789848409Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T00:40:10.229555184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:646a31951c20ab8e0e8aab629391bf28d4999578d3da3f30688040bc034e4713 in /usr/local/bin/ "
                },
                {
                    "created": "2019-08-20T00:40:10.463425721Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T19:39:08.97135884Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:45e75ed7a47bac6c06aabb48f82728e5477960fedd6cf1a2313fa38856496a7b",
                    "sha256:50e8ff70051220f99a2b730a2b5c3c37b6ca676fe9d7d0ac117c30fae3489e47",
                    "sha256:a9ca921ab491c90738d35a9edd419e48dd8dd5c9ce767b7ccc352979bdcb5d68",
                    "sha256:68c8378b6755ce5f3f20a489d18a835bd5541e5df9667ed2f9729224cd849c00",
                    "sha256:ebdcf8d273feca35051fc22a34c70b20d4b63ea8e25bc4025a7fe0b69b2a01cc",
                    "sha256:08522a0e2c7914d0546706c0c3f984649817ca74e90c3aa2fb0d083b578d8a78",
                    "sha256:27f6686be45608f045aaf43b17fc4e20d06c3965518d908c58d65d8e0d84abf5"
                ]
            }
        },
        "v1.13.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a0a10ad788f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a0a10ad788f8f5eb08f08e2ba00d08f31a2f727e0122744db8685b5977ed4d9c",
            "container_config": {
                "Hostname": "a0a10ad788f8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-09-14T08:27:35.006919764Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-19T21:15:22.638202373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53ca8a3f446b0751019d522066ce844f6281ffb5b15e9605cd8940176abf4c76 in / "
                },
                {
                    "created": "2020-08-19T21:15:23.510765928Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:15:24.304576357Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:15:25.240189987Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:15:25.559275011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-14T08:27:35.006919764Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:327d7aa9de643a7e07b8a258fce4f0103a1a997112abd9ca13ce42c326aae474",
                    "sha256:08b4849c15c3c5a7feaaf7bbe5cc7e82a83e6411b2aaf491884dc7f036b070af",
                    "sha256:a1beb1d2d31d68cb8987e38c8170a615968d7ba46c0c6b311d36e2891f849b70",
                    "sha256:b351340d34bcaf409df1cffdda8172a2a296635d16ba1ca74e1cd27cbfcf8d2b",
                    "sha256:220b15fd109c6f93fb9e7574749a220076bc26eedec43f3665f44c6d5042015d",
                    "sha256:f3229e6d051ead9831b113ebaf70e8f5ccb1a6c03bb649995301f74d2564c142",
                    "sha256:fcf1481e72edd8e97730ec26f0439ffd9edc99880009058076e0027a0d291a41"
                ]
            }
        },
        "v1.13.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a64aedd89114",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190211-a8c9fc8",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-02-11T13:54:11.7306977-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a64aedd891140ef56d84e656fdc1aee5aef281cc2277a36f423f1a8b145c4ae7",
            "container_config": {
                "Hostname": "a64aedd89114",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190211-a8c9fc8",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-02-11T13:54:11.7306977-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-02-11T21:54:29.736031715Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.064561045Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ARCH=amd64",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.356699872Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.642746187Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-02-11T21:37:15.750691619Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-02-11T21:37:48.68328103Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2019-02-11T21:37:49.273500112Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:49.535706106Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:05.196963443Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH=\"${ARCH}\" add-apt-repository         \"deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2019-02-11T21:38:05.75572608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.014180147Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.267996265Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.522648521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:08.762308704Z",
                    "created_by": "|8 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz CNI_VERSION=0.6.0 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-02-11T21:38:09.12050676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:09.421707798Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:09.707347179Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:58fd3a6c18ca55f2892ac710caa9989b01b9f3af9c3a506a242c7d8d4d3be2d8 in /usr/local/bin/ "
                },
                {
                    "created": "2019-02-11T21:38:09.994147158Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:10.26753474Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:54:29.736031715Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:4f2e4dce3e5cbcf8a8b26c40b8fc36df435a0083c88dca3a39f111b121224b3a",
                    "sha256:ef574ce8e4dc981fb8979149d8ca1b6e4fb2dc00be69bbad08e31bcc791b4c56",
                    "sha256:b9480e7b86bd1653b1bfd30915698a5b1138ebc4f178707cc59ebe9bc3d2928a",
                    "sha256:be828bf8155e5b469348fae7417f85e2d85072e6ad30b7a0511b5c7ae1cf192b",
                    "sha256:7b743eedab5394fa5cf846861d79dd415ab1a16423ad61a13b7ec77587f5970e",
                    "sha256:1ffc6c0f19b821382a9c2b0195c5e2b15e8e15d8aeb243c23716cfc3fe1b5ecd",
                    "sha256:409ea50f690d5cfbd2ffc724d3c9b69f9d194dfb584f543870af9e6854cf69b3"
                ]
            }
        },
        "v1.13.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d7746162336c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190211-a8c9fc8",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-02-22T16:15:45.426554684-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "d7746162336cbcbe2b23302b8fe58c7751dbad509ad639c460d0db678a07fa22",
            "container_config": {
                "Hostname": "d7746162336c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190211-a8c9fc8",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-02-22T16:15:45.426554684-08:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-02-23T00:16:11.220865033Z",
            "docker_version": "18.06.2-ce",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.064561045Z",
                    "created_by": "/bin/sh -c #(nop)  ARG ARCH=amd64",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.356699872Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:14.642746187Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-02-11T21:37:15.750691619Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-02-11T21:37:48.68328103Z",
                    "created_by": "|2 ARCH=amd64 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2019-02-11T21:37:49.273500112Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:37:49.535706106Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:05.196963443Z",
                    "created_by": "|4 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && ARCH=\"${ARCH}\" add-apt-repository         \"deb [arch=${ARCH}] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2019-02-11T21:38:05.75572608Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.6.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.014180147Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.267996265Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:06.522648521Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:08.762308704Z",
                    "created_by": "|8 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false ARCH=amd64 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_TARBALL=cni-plugins-amd64-v0.6.0.tgz CNI_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/cni-plugins-amd64-v0.6.0.tgz CNI_VERSION=0.6.0 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-02-11T21:38:09.12050676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:09.421707798Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:09.707347179Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:58fd3a6c18ca55f2892ac710caa9989b01b9f3af9c3a506a242c7d8d4d3be2d8 in /usr/local/bin/ "
                },
                {
                    "created": "2019-02-11T21:38:09.994147158Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-11T21:38:10.26753474Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-23T00:16:11.220865033Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:4f2e4dce3e5cbcf8a8b26c40b8fc36df435a0083c88dca3a39f111b121224b3a",
                    "sha256:ef574ce8e4dc981fb8979149d8ca1b6e4fb2dc00be69bbad08e31bcc791b4c56",
                    "sha256:b9480e7b86bd1653b1bfd30915698a5b1138ebc4f178707cc59ebe9bc3d2928a",
                    "sha256:be828bf8155e5b469348fae7417f85e2d85072e6ad30b7a0511b5c7ae1cf192b",
                    "sha256:7b743eedab5394fa5cf846861d79dd415ab1a16423ad61a13b7ec77587f5970e",
                    "sha256:1ffc6c0f19b821382a9c2b0195c5e2b15e8e15d8aeb243c23716cfc3fe1b5ecd",
                    "sha256:f22c15907d8984fc438ff3081c2f4f095eff2476dc6a2e573e3d30c3c1e682ee"
                ]
            }
        },
        "v1.13.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "49e1b4e46c57",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190320-962dc1b",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-03-20T09:55:21.143420309-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "49e1b4e46c57364da24a408aecd8675a1c0b511ae4cb7b976dcf748f380d4ff2",
            "container_config": {
                "Hostname": "49e1b4e46c57",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190320-962dc1b",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-03-20T09:55:21.143420309-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-03-20T16:55:47.84665062Z",
            "docker_version": "18.06.2-ce",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:15:39.567004445Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:15:39.857533581Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-03-20T16:15:41.167761863Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-03-20T16:16:14.994781737Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2019-03-20T16:16:15.583745684Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:15.877514846Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:31.518087319Z",
                    "created_by": "|3 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && add-apt-repository         \"deb https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2019-03-20T16:16:32.094653334Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:32.380075129Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:35.251603401Z",
                    "created_by": "|5 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c export ARCH=$(dpkg --print-architecture)     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-03-20T16:16:35.562147666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:35.853453609Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:36.145826551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:437ba10f9705b49ff915c301a14f94a79cf17069ca33f435921862aed45b58aa in /usr/local/bin/ "
                },
                {
                    "created": "2019-03-20T16:16:36.478121735Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:36.77515116Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:55:47.84665062Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:ca233cf83cb7a59bd5ba2120f9c13523eff94ecf844d98864122031b398cd605",
                    "sha256:4306f78b0ad3609d136220ef23dd690dd70253c6b574976079ff0b91a54c34d4",
                    "sha256:c19c663453f843e35184ab9cb2c7e9a790c12de3749ee661594695342bb762a7",
                    "sha256:82d97ccff1621cd520168201da3809d99127545aa8ce582bbb642ab86dd79463",
                    "sha256:8a21d84e82c71903192530bec8644a502b3c94fce9b677649a7ea0ac060a5041",
                    "sha256:b0c75caa2361502f06fafda646deca207361e11f0292536fbe59b4164562078b",
                    "sha256:37208979a07098f34c5054e05b2fc114e9b66d4ee6d899e6f3f130ec2378925a"
                ]
            }
        },
        "v1.13.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "7cd560cfe1b0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-16T18:45:54.645945943-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "7cd560cfe1b06fcdb541a91524ed54b9770261c1ea8e5c687d0f376bed479d48",
            "container_config": {
                "Hostname": "7cd560cfe1b0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-16T18:45:54.645945943-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-05-17T01:46:26.4124845Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-05-06T21:04:22.52159248Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f478b3848bf324098d8c2485a33a10d2cf4b703b1fcf773f1bdd693019d81a85 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-05-06T21:04:23.945463598Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-05-06T21:04:24.217083061Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:24.476445131Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:27.346131515Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-05-06T21:04:27.677045659Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:30.713917534Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-05-06T21:04:31.001110933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.285633985Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.566790175Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a3bfacb5f0a146bca849ef339c798d6f485e85265b8a655501a5e7c73d981157 in /usr/local/bin/ "
                },
                {
                    "created": "2019-05-06T21:04:31.833494382Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-17T01:46:26.4124845Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:05f9d9fb2780111c7cb62dcf97c623090fca58e7b5ab1b9f4771325701b253b7",
                    "sha256:dec95273f43513149a3204a7ad644d8a18b64a2e9a343979ebbb89775dbe9b77",
                    "sha256:526c3c410751c7d5beacb168d8d3559ab5da7db784f26b47654fc1946da3eb31",
                    "sha256:ed6116872bd77e946d47f8a98c9e932497e7639af57a6e7e3fb7731e8cd700ed",
                    "sha256:6c31b510354a74d0871845bd67738525e62a881846e9372cc1c20fb547c48127",
                    "sha256:44aeffa530fdce6dbfbff543325ac87052f95a247d9236db4455f2e5871a716a"
                ]
            }
        },
        "v1.13.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3a2378f47d11",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T16:54:04.197686434-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "3a2378f47d117319637671280a7583136fe11c8af40862ed2be25ac987182442",
            "container_config": {
                "Hostname": "3a2378f47d11",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T16:54:04.197686434-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-06-25T23:54:31.094185179Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-06-17T23:45:21.71391078Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ae060733b6027b371f2a8a55c9e8f7954b1bd3766470a91d2ebfcbd0cd5b8f96 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-06-17T23:45:23.107851709Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-06-17T23:45:23.368637488Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:23.616304522Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:26.514171024Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-06-17T23:45:26.812552299Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:29.812339254Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-06-17T23:45:30.102841797Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:30.321451892Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-24T20:08:12.892517439Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:87220329babadff48be85f0352d52c1652a1ab99086307686917e28233fe5137 in /usr/local/bin/ "
                },
                {
                    "created": "2019-06-24T20:08:13.126682498Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-25T23:54:31.094185179Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:9fe135056acc87064f0340a95bf549f060f9759a4b7294bf2dc4e5892893cb24",
                    "sha256:82e417495ab6d69743236c36b36339a464ee0c28d9ef4b718d3d49a9e7ea151d",
                    "sha256:d370ad65101aedd8dbf82e89b9cb99bfe8b818548e781670b395d179103e5ef0",
                    "sha256:26ec162eb017a026df89ed692dba7586930c7448a8e29baa72fa7257bce0b839",
                    "sha256:ed4ac64abb6d7ffa39daac39859852f99678ff5fd266157c69da0ec22767355f",
                    "sha256:41a3990dee555ab623f6e972279a1b918ff5e9a9e3e5069d5d1a669300597b16"
                ]
            }
        },
        "v1.14.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "b882c44d722e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190320-962dc1b",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-03-25T16:48:26.227448259-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "b882c44d722e8f5b076d3163631e76366c1970158daa14e496c2da672ea4f98e",
            "container_config": {
                "Hostname": "b882c44d722e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190320-962dc1b",
                "Volumes": {
                    "/var/lib/docker": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-03-25T16:48:26.227448259-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-03-25T23:48:54.074585963Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:15:39.567004445Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:15:39.857533581Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f4d9bbfbcf12a8b317b812fd8a34fd4bbec732cf26703772e5241680054bffa4 in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-03-20T16:15:41.167761863Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-03-20T16:16:14.994781737Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       apt-transport-https ca-certificates curl software-properties-common gnupg2 lsb-release       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod aufs-tools       bash rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf"
                },
                {
                    "created": "2019-03-20T16:16:15.583745684Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DOCKER_VERSION=18.06.*",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:15.877514846Z",
                    "created_by": "/bin/sh -c #(nop)  ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:31.518087319Z",
                    "created_by": "|3 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c curl -fsSL \"https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg\" | apt-key add -     && apt-key fingerprint 0EBFCD88     && add-apt-repository         \"deb https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\"     && clean-install \"docker-ce=${DOCKER_VERSION}\""
                },
                {
                    "created": "2019-03-20T16:16:32.094653334Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:32.380075129Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:35.251603401Z",
                    "created_by": "|5 APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=false CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive DOCKER_VERSION=18.06.* /bin/sh -c export ARCH=$(dpkg --print-architecture)     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-03-20T16:16:35.562147666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:35.853453609Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:36.145826551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:437ba10f9705b49ff915c301a14f94a79cf17069ca33f435921862aed45b58aa in /usr/local/bin/ "
                },
                {
                    "created": "2019-03-20T16:16:36.478121735Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-20T16:16:36.77515116Z",
                    "created_by": "/bin/sh -c #(nop)  VOLUME [/var/lib/docker]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-25T23:48:54.074585963Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:ca233cf83cb7a59bd5ba2120f9c13523eff94ecf844d98864122031b398cd605",
                    "sha256:4306f78b0ad3609d136220ef23dd690dd70253c6b574976079ff0b91a54c34d4",
                    "sha256:c19c663453f843e35184ab9cb2c7e9a790c12de3749ee661594695342bb762a7",
                    "sha256:82d97ccff1621cd520168201da3809d99127545aa8ce582bbb642ab86dd79463",
                    "sha256:8a21d84e82c71903192530bec8644a502b3c94fce9b677649a7ea0ac060a5041",
                    "sha256:b0c75caa2361502f06fafda646deca207361e11f0292536fbe59b4164562078b",
                    "sha256:a6036721410e1be3b62e6f85ab1be2ed02e4ca3ea07afb0c5a4969cfa8282ece"
                ]
            }
        },
        "v1.14.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "1c8ad505d457",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190505-9ba015b",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-05T15:08:57.901633734-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "1c8ad505d457cf9feb3ecd5feed5dfa72b2ee003ca8fb739e2b7c742fd477a42",
            "container_config": {
                "Hostname": "1c8ad505d457",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190505-9ba015b",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-05T15:08:57.901633734-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-05-05T22:09:37.826574398Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-04-26T22:21:46.480184605Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3d102fe260ec4d6629916600b464c22ec98d92f70fbd77eb5bc9be491246aec7 in / "
                },
                {
                    "created": "2019-04-26T22:21:47.255189836Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:21:47.982343694Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:21:48.68329321Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:21:48.824016902Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T19:09:56.2597003Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T19:23:58.5430721Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T19:23:59.8962622Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-03T05:26:50.337577343Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-05-04T08:47:31.114299217Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:23929dc46a190455f0ab9c5a6376dedcedeaac1650812463b4beacdf8e8be4c8 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-05-04T08:47:32.676317967Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-05-04T08:47:32.99137393Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-04T08:47:33.370103656Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-04T08:47:39.411468191Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-05-04T08:47:39.788608729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-04T08:47:44.737877526Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin"
                },
                {
                    "created": "2019-05-04T08:47:45.156942379Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-04T08:47:45.471877149Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-05T21:18:34.12250551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:3fa04b2fd5d80f6621edd8276e7b80ba3953bf89bee01c0b5b129911c2e57a55 in /usr/local/bin/ "
                },
                {
                    "created": "2019-05-05T21:18:34.480939934Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-05T22:09:37.826574398Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:83a200b4563e64f19d5e0d77098de27136947ffeca8a999eae4c491ea67364b6",
                    "sha256:bf1832a9c5594070b8b5de91ac6e5104acfe12d8af4713b91b38366f13b32440",
                    "sha256:257a50d65acd1e1514c44f83692ef75f993986b93208ce03c1a8d52ced7532b6",
                    "sha256:566e5d6531004166dc0a129b7f696636902c0634b845bb88b808bda88719626d",
                    "sha256:55819902cdf7edf91c86d040ac9d5ffcbe5d48a95dea837954a6387a9cfbf282",
                    "sha256:55819902cdf7edf91c86d040ac9d5ffcbe5d48a95dea837954a6387a9cfbf282",
                    "sha256:0a47c9acbd7a08e8a37f24821188f48429f420457575933abe9d565e85ec796c",
                    "sha256:6a101691e8a0724860b8aa81ce98e9b8213884a641b7d8ade9c287da27d00db9",
                    "sha256:406561eec782703480d8d7c896dbb9c330a83cbe43586dbc92766e1c8e90c35f",
                    "sha256:5e1c1751382662f2317ffbd6fc6d2260ef39d55c1239bf25844c70812c2f8c16",
                    "sha256:557ae67243c7cd6909861a848dd080d87f477bdbb5f3f356b3d8fcab75c09a7b",
                    "sha256:b98ddc1c007c7e903b8745d54d930a4b2a9fb4c781bb3df0ba76f9d21754f4ff",
                    "sha256:fde756aa708a3705af46f0c9649012d46c1349270d3f06cf5a1e4dd70cf2db07"
                ]
            }
        },
        "v1.14.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "4ab457365dc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "4ab457365dc29a0b535840cb46da8a7d57cb00fec682ff696ec7353b25494d8f",
            "container_config": {
                "Hostname": "4ab457365dc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-06T19:35:23.246727802Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-06T19:35:23.246727802Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:ff9f312ce5fc5ffe22295cb8ba90612910968368b6877c5c1efb79556dcead64"
                ]
            }
        },
        "v1.14.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "635b9c03d4cd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-16T17:59:19.46503226-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "635b9c03d4cd01b0495222491ac62c231d77ab2a2b53665097d66dcc7263dc4d",
            "container_config": {
                "Hostname": "635b9c03d4cd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190506-d0ac573",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-05-16T17:59:19.46503226-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-05-17T00:59:52.547965476Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-05-06T21:04:22.52159248Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f478b3848bf324098d8c2485a33a10d2cf4b703b1fcf773f1bdd693019d81a85 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-05-06T21:04:23.945463598Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-05-06T21:04:24.217083061Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:24.476445131Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:27.346131515Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-05-06T21:04:27.677045659Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:30.713917534Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-05-06T21:04:31.001110933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.285633985Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-06T21:04:31.566790175Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a3bfacb5f0a146bca849ef339c798d6f485e85265b8a655501a5e7c73d981157 in /usr/local/bin/ "
                },
                {
                    "created": "2019-05-06T21:04:31.833494382Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-17T00:59:52.547965476Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:05f9d9fb2780111c7cb62dcf97c623090fca58e7b5ab1b9f4771325701b253b7",
                    "sha256:dec95273f43513149a3204a7ad644d8a18b64a2e9a343979ebbb89775dbe9b77",
                    "sha256:526c3c410751c7d5beacb168d8d3559ab5da7db784f26b47654fc1946da3eb31",
                    "sha256:ed6116872bd77e946d47f8a98c9e932497e7639af57a6e7e3fb7731e8cd700ed",
                    "sha256:6c31b510354a74d0871845bd67738525e62a881846e9372cc1c20fb547c48127",
                    "sha256:af646b44067b63bfbd049509beecc7fe3f7c55bd229ba483d812d88f408ba48d"
                ]
            }
        },
        "v1.14.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "732a2e2a1dc7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T16:36:01.886694641-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "732a2e2a1dc71abe06da0190a62e72cbbfa8939d7d1d540eb52c684773a0a815",
            "container_config": {
                "Hostname": "732a2e2a1dc7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T16:36:01.886694641-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-06-25T23:36:29.048745069Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-06-17T23:45:21.71391078Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ae060733b6027b371f2a8a55c9e8f7954b1bd3766470a91d2ebfcbd0cd5b8f96 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-06-17T23:45:23.107851709Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-06-17T23:45:23.368637488Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:23.616304522Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:26.514171024Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-06-17T23:45:26.812552299Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:29.812339254Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-06-17T23:45:30.102841797Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:30.321451892Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-24T20:08:12.892517439Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:87220329babadff48be85f0352d52c1652a1ab99086307686917e28233fe5137 in /usr/local/bin/ "
                },
                {
                    "created": "2019-06-24T20:08:13.126682498Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-25T23:36:29.048745069Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:9fe135056acc87064f0340a95bf549f060f9759a4b7294bf2dc4e5892893cb24",
                    "sha256:82e417495ab6d69743236c36b36339a464ee0c28d9ef4b718d3d49a9e7ea151d",
                    "sha256:d370ad65101aedd8dbf82e89b9cb99bfe8b818548e781670b395d179103e5ef0",
                    "sha256:26ec162eb017a026df89ed692dba7586930c7448a8e29baa72fa7257bce0b839",
                    "sha256:ed4ac64abb6d7ffa39daac39859852f99678ff5fd266157c69da0ec22767355f",
                    "sha256:81c3ce4732c0f199344cca84bb33eebb34af82620e5b5eeb3bd03ce6fd03cd61"
                ]
            }
        },
        "v1.14.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "08d80a2218a9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190819-26e1eb5@sha256:e609eaa7853289ef603db647ae9568b32093b2347f839a2117d98a08bfc7ab17",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-08-20T12:27:35.037077837-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "08d80a2218a9fd275f3efbda50373dd15c0d04a99d5a869eb8d263658a675e36",
            "container_config": {
                "Hostname": "08d80a2218a9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190819-26e1eb5@sha256:e609eaa7853289ef603db647ae9568b32093b2347f839a2117d98a08bfc7ab17",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-08-20T12:27:35.037077837-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-08-20T19:27:59.870205987Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-08-19T22:01:39.632266727Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-08-19T22:01:40.311939253Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:1cd3cd755840e6aa49c2a3399d39454877f6de42c8735a0a81596bdb0e3c3908 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-08-19T22:01:41.704335765Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-08-19T22:01:41.962936139Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:42.240605Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:44.722794301Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-08-19T22:01:45.053467637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:48.233257963Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-08-19T22:01:48.546640816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:48.789848409Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T00:40:10.229555184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:646a31951c20ab8e0e8aab629391bf28d4999578d3da3f30688040bc034e4713 in /usr/local/bin/ "
                },
                {
                    "created": "2019-08-20T00:40:10.463425721Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T19:27:59.870205987Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:45e75ed7a47bac6c06aabb48f82728e5477960fedd6cf1a2313fa38856496a7b",
                    "sha256:50e8ff70051220f99a2b730a2b5c3c37b6ca676fe9d7d0ac117c30fae3489e47",
                    "sha256:a9ca921ab491c90738d35a9edd419e48dd8dd5c9ce767b7ccc352979bdcb5d68",
                    "sha256:68c8378b6755ce5f3f20a489d18a835bd5541e5df9667ed2f9729224cd849c00",
                    "sha256:ebdcf8d273feca35051fc22a34c70b20d4b63ea8e25bc4025a7fe0b69b2a01cc",
                    "sha256:08522a0e2c7914d0546706c0c3f984649817ca74e90c3aa2fb0d083b578d8a78",
                    "sha256:88bd54381d3e6c465eb9401e0baac38a4817ec0a50445e67ad55a37b0c9aaf2a"
                ]
            }
        },
        "v1.14.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "0a52cb18d473",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20191115-cd8a1c9b@sha256:adc956e10590293ccb10d3c45161daa2be110612b7d1a3eb9cd4836d8f44b284",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "0a52cb18d4737fe58b6d9382fa6702b1a968a2bf3bcd143d8d4f6ccf6bb0f1b8",
            "container_config": {
                "Hostname": "0a52cb18d473",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20191115-cd8a1c9b@sha256:adc956e10590293ccb10d3c45161daa2be110612b7d1a3eb9cd4836d8f44b284",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-12-04T07:41:32.679595158Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-09-18T23:20:57.900763791Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bbdfa140633b135672ff0e1eb1a1b37afcab36216103c0b3d97337c62c5e2a1 in / "
                },
                {
                    "created": "2019-09-18T23:20:58.708996855Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:59.419239378Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:00.129065445Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:00.315065212Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:50.495866733Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.0-27-g54658b88",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:50.781620333Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:51.032082546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.16.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:57:56.718280012Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:e01298c6cefcf30807a3cf443e3c1f7fc297de55984b0871373d98c791ac0c2a in / "
                },
                {
                    "created": "2019-11-16T00:59:12.27663106Z",
                    "created_by": "|3 CNI_VERSION=v0.8.3 CONTAINERD_VERSION=v1.3.0-27-g54658b88 CRICTL_VERSION=v1.16.1 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2019-11-16T00:59:13.288638584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:59:13.571796526Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:59:13.821823397Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-04T07:41:32.679595158Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:562cdfd03b6e1f420013e9f89e43874274c8edffa80c5701c3e65636c88d9aa7",
                    "sha256:0b17926aacca04f7142e606905ad43da021f33664e2f8103e9f90391bd0b6bac",
                    "sha256:69dc412be42183270d880c5c8b7ee7f724e42e17bb921ff65c5431dc33f5f859",
                    "sha256:e5e14a632a8501facee26a7ab9f24f926df45e006cae0f1277c36cbb53c04663",
                    "sha256:fb17dea4400748686f18aa0210dd148a50f9f369fd9cbd8b28929a3740ac4302",
                    "sha256:105da31b88744e0018078532b18572c60488860296785ec42c8c5bbebd0ef580",
                    "sha256:0141f5646a54f2fb4d45892ee152037b12719bda17fb50c4ab3401a05b0410a9"
                ]
            }
        },
        "v1.15.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "98f4a4a05ccc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": {
                    "/var/lib/containerd": {}
                },
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T16:42:31.195177471-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "98f4a4a05ccce3e3e266dd4900a492ea43f8e0b056463265bb0ff791d0643017",
            "container_config": {
                "Hostname": "98f4a4a05ccc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190624-41c6eeb@sha256:b786e56fb4e698739fa4127496086ed302e06ec1df93e427c36e2be91aa24eb6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-06-25T16:42:31.195177471-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-06-25T23:43:01.67576648Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-05-06T21:04:22.057423513Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-06-17T23:45:21.71391078Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ae060733b6027b371f2a8a55c9e8f7954b1bd3766470a91d2ebfcbd0cd5b8f96 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-06-17T23:45:23.107851709Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-06-17T23:45:23.368637488Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:23.616304522Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:26.514171024Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-06-17T23:45:26.812552299Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:29.812339254Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-06-17T23:45:30.102841797Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-17T23:45:30.321451892Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-24T20:08:12.892517439Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:87220329babadff48be85f0352d52c1652a1ab99086307686917e28233fe5137 in /usr/local/bin/ "
                },
                {
                    "created": "2019-06-24T20:08:13.126682498Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-25T23:43:01.67576648Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:06a1614d9125a6cf575641f31cab1c7576a7056668e47245f6d11f126afd9887",
                    "sha256:9fe135056acc87064f0340a95bf549f060f9759a4b7294bf2dc4e5892893cb24",
                    "sha256:82e417495ab6d69743236c36b36339a464ee0c28d9ef4b718d3d49a9e7ea151d",
                    "sha256:d370ad65101aedd8dbf82e89b9cb99bfe8b818548e781670b395d179103e5ef0",
                    "sha256:26ec162eb017a026df89ed692dba7586930c7448a8e29baa72fa7257bce0b839",
                    "sha256:ed4ac64abb6d7ffa39daac39859852f99678ff5fd266157c69da0ec22767355f",
                    "sha256:52c77d0a0ebe61a01abd4fd33d1021d66372246a2c8afb21108ee13c16f93d61"
                ]
            }
        },
        "v1.15.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "69e90f82c903",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "69e90f82c90360dfd61064c648c4e2f5676c78736bec5b23936850d8cff28043",
            "container_config": {
                "Hostname": "69e90f82c903",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-05-01T02:32:27.108342123Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CNI_VERSION=v0.8.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CRICTL_VERSION=v1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.5 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-01T02:32:27.108342123Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:c4c33d8c77ca7fe74b3360c8a76b01cb1a3394de1490685e1a2e652cf788e7dd",
                    "sha256:dec58d310b8ec87970becf1f83c7594032274aa1576e46ff4bb674a6d522c4f7",
                    "sha256:fcd41aca84c4d8101a4f6f319f506243fa4f211038a1088047f89d4788545932"
                ]
            }
        },
        "v1.15.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9a2d99cd58c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9a2d99cd58c6c1cfb3575c979383b0fd53f96f0b19f470588fca1887563f4aec",
            "container_config": {
                "Hostname": "9a2d99cd58c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-07T09:27:25.842135762Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T09:27:25.842135762Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:6185db5bbf414572a2b05e19226340f785dd28c2c127470e44ea264c5e0c2416"
                ]
            }
        },
        "v1.15.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a57e93b45666",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20190819-26e1eb5@sha256:e609eaa7853289ef603db647ae9568b32093b2347f839a2117d98a08bfc7ab17",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-08-20T11:58:33.945511726-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a57e93b45666dd009338fafc3e60d41c13569b556cee29808114d5ab5d842aa0",
            "container_config": {
                "Hostname": "a57e93b45666",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20190819-26e1eb5@sha256:e609eaa7853289ef603db647ae9568b32093b2347f839a2117d98a08bfc7ab17",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-08-20T11:58:33.945511726-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-08-20T18:59:02.147094001Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-03-12T00:20:40.042003425Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fb67b3715033bf1e45c62fd971171c8957d88725a105d3ef8362415d534bc20e in / "
                },
                {
                    "created": "2019-03-12T00:20:40.84354839Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:41.552208419Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:42.239356354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:42.423852949Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.676504546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T23:25:55.977227376Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-04-29T23:25:57.2572449Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-08-19T22:01:39.632266727Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       containerd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && systemctl enable containerd     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL -o /usr/local/bin/ctr       \"https://storage.googleapis.com/bentheelder-kind-dev/containerd/linux/${ARCH}/ctr\"     && chmod +x /usr/local/bin/ctr     && echo \"done installing packages\""
                },
                {
                    "created": "2019-08-19T22:01:40.311939253Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:1cd3cd755840e6aa49c2a3399d39454877f6de42c8735a0a81596bdb0e3c3908 in /etc/systemd/system/containerd.service.d/ "
                },
                {
                    "created": "2019-08-19T22:01:41.704335765Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c containerd --version     && mkdir -p /etc/containerd     && echo 'disabled_plugins = [\"aufs\", \"btrfs\", \"zfs\"]' > /etc/containerd/config.toml     && containerd config default >> /etc/containerd/config.toml"
                },
                {
                    "created": "2019-08-19T22:01:41.962936139Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=0.7.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:42.240605Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:44.722794301Z",
                    "created_by": "|3 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"cni-plugins-${ARCH}-v${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && sha256sum /tmp/cni.tgz     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-08-19T22:01:45.053467637Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.14.0",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:48.233257963Z",
                    "created_by": "|4 CNI_BASE_URL=https://storage.googleapis.com/kubernetes-release/network-plugins/ CNI_VERSION=0.7.5 CRICTL_VERSION=v1.14.0 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-08-19T22:01:48.546640816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T22:01:48.789848409Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T00:40:10.229555184Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:646a31951c20ab8e0e8aab629391bf28d4999578d3da3f30688040bc034e4713 in /usr/local/bin/ "
                },
                {
                    "created": "2019-08-20T00:40:10.463425721Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T18:59:02.147094001Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc0390b9aa14aca6b5ab054b7eb0ddd3c104b893cc892090bb8c8a1ad72a0623",
                    "sha256:7a41b949848b791e3619aabbdfa7bd79b36657cf653ed58f717794713b91548e",
                    "sha256:bc27b16ac52500d8632518e3dc62cf62f7451a69b0885c6ebab357167146c1af",
                    "sha256:e24d55bd7b4bb5b0ae73016e3caaa9cbb49d2e5b2249d931593a015f2f705318",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:4432c94f7ff87f65829e59f0db329da93d8701ddfd060f9bb7f748e41ec54196",
                    "sha256:45e75ed7a47bac6c06aabb48f82728e5477960fedd6cf1a2313fa38856496a7b",
                    "sha256:50e8ff70051220f99a2b730a2b5c3c37b6ca676fe9d7d0ac117c30fae3489e47",
                    "sha256:a9ca921ab491c90738d35a9edd419e48dd8dd5c9ce767b7ccc352979bdcb5d68",
                    "sha256:68c8378b6755ce5f3f20a489d18a835bd5541e5df9667ed2f9729224cd849c00",
                    "sha256:ebdcf8d273feca35051fc22a34c70b20d4b63ea8e25bc4025a7fe0b69b2a01cc",
                    "sha256:08522a0e2c7914d0546706c0c3f984649817ca74e90c3aa2fb0d083b578d8a78",
                    "sha256:0c7487efaf550d6eb15f10aa41f496d6c70b63759571e7b9d1e704a494fb550f"
                ]
            }
        },
        "v1.15.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "0623a94a2093",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20191115-cd8a1c9b@sha256:adc956e10590293ccb10d3c45161daa2be110612b7d1a3eb9cd4836d8f44b284",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "0623a94a209343e484a248efb6c108b8d4b55522b30785c110d59b9d84eaed4e",
            "container_config": {
                "Hostname": "0623a94a2093",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20191115-cd8a1c9b@sha256:adc956e10590293ccb10d3c45161daa2be110612b7d1a3eb9cd4836d8f44b284",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-12-04T07:34:48.151399997Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-09-18T23:20:57.900763791Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bbdfa140633b135672ff0e1eb1a1b37afcab36216103c0b3d97337c62c5e2a1 in / "
                },
                {
                    "created": "2019-09-18T23:20:58.708996855Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:59.419239378Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:00.129065445Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:00.315065212Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:50.495866733Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.0-27-g54658b88",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:50.781620333Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:51.032082546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.16.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:57:56.718280012Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:e01298c6cefcf30807a3cf443e3c1f7fc297de55984b0871373d98c791ac0c2a in / "
                },
                {
                    "created": "2019-11-16T00:59:12.27663106Z",
                    "created_by": "|3 CNI_VERSION=v0.8.3 CONTAINERD_VERSION=v1.3.0-27-g54658b88 CRICTL_VERSION=v1.16.1 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2019-11-16T00:59:13.288638584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:59:13.571796526Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:59:13.821823397Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-04T07:34:48.151399997Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:562cdfd03b6e1f420013e9f89e43874274c8edffa80c5701c3e65636c88d9aa7",
                    "sha256:0b17926aacca04f7142e606905ad43da021f33664e2f8103e9f90391bd0b6bac",
                    "sha256:69dc412be42183270d880c5c8b7ee7f724e42e17bb921ff65c5431dc33f5f859",
                    "sha256:e5e14a632a8501facee26a7ab9f24f926df45e006cae0f1277c36cbb53c04663",
                    "sha256:fb17dea4400748686f18aa0210dd148a50f9f369fd9cbd8b28929a3740ac4302",
                    "sha256:105da31b88744e0018078532b18572c60488860296785ec42c8c5bbebd0ef580",
                    "sha256:448841a2599637883946fe2c664f1cb6a7856fa6704d89fc5bd006dd6a7a0886"
                ]
            }
        },
        "v1.15.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9dcbd77496a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200109-d9c81a89@sha256:3e7cbf766fa8661d879f8acc415b0c700788b6d0fdffe4505196d9d3718a3dfa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9dcbd77496a0e8e08992dbfb93da24504d06cc8f3d79795c6044fb65ee5d6fbb",
            "container_config": {
                "Hostname": "9dcbd77496a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200109-d9c81a89@sha256:3e7cbf766fa8661d879f8acc415b0c700788b6d0fdffe4505196d9d3718a3dfa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-01-14T00:29:56.292119022Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-12-19T04:22:52.805666468Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cf0c9e2d83fd1f85ac0ca5e96b2fba6474f4bda7c20911811337fe11817a45a in / "
                },
                {
                    "created": "2019-12-19T04:22:54.082843401Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-12-19T04:22:55.212108595Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-12-19T04:22:55.967164973Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-12-19T04:22:56.155964355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.415788394Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.563546773Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.729709762Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.17.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.898059238Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:2477dc29f059b32f83e4d5bee8e26db4bf516c84ab83b754df959d684a02e8da in / "
                },
                {
                    "created": "2020-01-09T20:40:42.995635001Z",
                    "created_by": "|3 CNI_VERSION=v0.8.4 CONTAINERD_VERSION=v1.3.2 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2020-01-09T20:40:43.620229989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:43.791151379Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:43.9340121Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-14T00:29:56.292119022Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:311cea42e10ab4e989c4ad1be03e171eeb8a6d10f7e7bd3a202bdda4b3f28103",
                    "sha256:b563258c77138c9feffab5e8afc37a24d606ec1a098c703abf6ac588277b5e0f",
                    "sha256:bd9649c81bcd376a9fe96c74b811a1b60b30468c15be2914f7f6758849c487e1",
                    "sha256:d985daa3384f0254a39e2b6d9d4dc89f29ce84e05445542e3241fe34d97f21dc",
                    "sha256:ac95e351f56acf8638a7121cb426411869097e83b34edd2b4f1743f91d26496b",
                    "sha256:5d8f4ff30a1dcae2cf2d4a8faa380bdea0805b63e562494d0524710c3d1826e1",
                    "sha256:94c890f455e5ee8fd798285722b95750844b962556a2a6b7985673dd4b3e40bd"
                ]
            }
        },
        "v1.16.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "22444393ac81",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20191009-d5ae74fc@sha256:0248d03663ae29d47b2bb64fee816a0602fd461f7b93879d5451021cad529593",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-10-14T14:06:58.204389149-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "22444393ac8146e06d0d89259bfed7daf0fd474423864a58ac3e1ab3a4c19381",
            "container_config": {
                "Hostname": "22444393ac81",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20191009-d5ae74fc@sha256:0248d03663ae29d47b2bb64fee816a0602fd461f7b93879d5451021cad529593",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {
                    "io.k8s.sigs.kind.build": "2019-10-14T14:06:58.204389149-07:00"
                },
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-10-14T21:07:25.176310284Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-09-18T23:20:57.900763791Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bbdfa140633b135672ff0e1eb1a1b37afcab36216103c0b3d97337c62c5e2a1 in / "
                },
                {
                    "created": "2019-09-18T23:20:58.708996855Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:59.419239378Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:00.129065445Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:00.315065212Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T01:27:55.033142715Z",
                    "created_by": "/bin/sh -c #(nop)  ARG DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T01:27:55.299010406Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9472b558265901ce24530d94706fe8b539a33276523bae5eb88383be7d9d279c in /usr/local/bin/clean-install "
                },
                {
                    "created": "2019-09-27T01:27:56.400389656Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c chmod +x /usr/local/bin/clean-install"
                },
                {
                    "created": "2019-10-07T23:18:53.933618072Z",
                    "created_by": "|1 DEBIAN_FRONTEND=noninteractive /bin/sh -c clean-install       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && echo \"done installing packages\""
                },
                {
                    "created": "2019-10-07T23:18:54.298011456Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:9bc7dc50240e21f9cc882a97697fcab94f6cf400165714040e7a9dd041171054 in /etc/sysctl.d/ "
                },
                {
                    "created": "2019-10-09T21:01:26.513674892Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.0-7-g0b43a311",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:15:11.164680791Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:17:21.596854741Z",
                    "created_by": "|3 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download CONTAINERD_VERSION=v1.3.0-7-g0b43a311 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export RELEASE_BASE_URL=\"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${RELEASE_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${RELEASE_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version"
                },
                {
                    "created": "2019-10-09T21:17:22.136669387Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:90ce829defff9e7d0b45c66835de3986f5f78a902899965a34d4b81059a122cb in /etc/systemd/system "
                },
                {
                    "created": "2019-10-09T21:17:23.254777225Z",
                    "created_by": "|3 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download CONTAINERD_VERSION=v1.3.0-7-g0b43a311 DEBIAN_FRONTEND=noninteractive /bin/sh -c systemctl enable containerd"
                },
                {
                    "created": "2019-10-09T21:17:23.486390455Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:1baa747480fa792ff3f8fe8925302b4c8eddc15f1445cfa30463e3baee98bf5e in /etc/containerd/config.toml "
                },
                {
                    "created": "2019-10-09T21:17:23.689650896Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:17:23.912889565Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_BASE_URL=https://github.com/containernetworking/plugins/releases/download/",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:17:28.139238169Z",
                    "created_by": "|5 CNI_BASE_URL=https://github.com/containernetworking/plugins/releases/download/ CNI_VERSION=v0.8.2 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download CONTAINERD_VERSION=v1.3.0-7-g0b43a311 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"${CNI_BASE_URL}${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz"
                },
                {
                    "created": "2019-10-09T21:17:28.53654837Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.16.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:17:31.385554345Z",
                    "created_by": "|6 CNI_BASE_URL=https://github.com/containernetworking/plugins/releases/download/ CNI_VERSION=v0.8.2 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download CONTAINERD_VERSION=v1.3.0-7-g0b43a311 CRICTL_VERSION=v1.16.1 DEBIAN_FRONTEND=noninteractive /bin/sh -c export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin     && echo 'runtime-endpoint: unix:///var/run/containerd/containerd.sock' > /etc/crictl.yaml"
                },
                {
                    "created": "2019-10-09T21:17:31.669629653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:17:31.914281066Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-09T21:17:32.179927949Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:646a31951c20ab8e0e8aab629391bf28d4999578d3da3f30688040bc034e4713 in /usr/local/bin/ "
                },
                {
                    "created": "2019-10-09T21:17:32.393582727Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-14T21:07:25.176310284Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:562cdfd03b6e1f420013e9f89e43874274c8edffa80c5701c3e65636c88d9aa7",
                    "sha256:0b17926aacca04f7142e606905ad43da021f33664e2f8103e9f90391bd0b6bac",
                    "sha256:69dc412be42183270d880c5c8b7ee7f724e42e17bb921ff65c5431dc33f5f859",
                    "sha256:e5e14a632a8501facee26a7ab9f24f926df45e006cae0f1277c36cbb53c04663",
                    "sha256:5aed1599a7575bacb48caf5d1be120237a4f7d934f7f940c54fea689018a0b59",
                    "sha256:5aed1599a7575bacb48caf5d1be120237a4f7d934f7f940c54fea689018a0b59",
                    "sha256:58e0ddeeee55d68ac997c9ab54dfc410ac0976fe8555aa13cf111d21b3b1bbae",
                    "sha256:b5634cd779f96f44b65236effeab66e56dd153a8258a858d25b7242bd0a1a684",
                    "sha256:63a872ebd395f9452b3d844e3161d98dfec4897d9ddd858561e9e6bba84534ac",
                    "sha256:373fd6f99605758749ab57c9ad01fbd36cdc1c3adea32652110a0b14ed5f827e",
                    "sha256:af1f4c383b9b75313987b81c92dfda9fb16870beb7b4fb18f568a958a259b23c",
                    "sha256:63434b6a1092c55907923e3cc281e9eaea9ac570753ddd4f1f7fffb88e6b6fe0",
                    "sha256:4e273bf57a2c8e5b825eb27cf2c2df06d0872bf7480ef1b3be64c527f8c5fcc2",
                    "sha256:757910ccbed55cc84ee03bb5b91e88a1a1eb5627ec6c2394d21ff3dc36967b48",
                    "sha256:97be611e4449dbfd6efc5de18c958483aaa342564ba02f34507fee29101d61c8",
                    "sha256:41be91c01181c0ef8486ba4553eb49eafb85357352df52df636d1dc1fd86f359"
                ]
            }
        },
        "v1.16.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d21eb28c3332",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "d21eb28c33325727f761d59020acea8de604119d78041431970e7bca0c78fe8d",
            "container_config": {
                "Hostname": "d21eb28c3332",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-07T09:52:26.969255726Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T09:52:26.969255726Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:d6989a55d2cec53729598c37db73ab960d3c5c26261da3ed4b810aff9498932d"
                ]
            }
        },
        "v1.16.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "096c0d24854e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20191111-97aac84@sha256:1d03db85e33c8f1d40654fc90f263a27747818a73642b3dfde93efad41e1cecd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "096c0d24854e8e023873e830219f579393b9cdfd243edf88fbb622ee7e1ae752",
            "container_config": {
                "Hostname": "096c0d24854e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20191111-97aac84@sha256:1d03db85e33c8f1d40654fc90f263a27747818a73642b3dfde93efad41e1cecd",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-11-11T21:34:55.278982521Z",
            "docker_version": "18.09.3",
            "history": [
                {
                    "created": "2019-10-18T18:49:19.883888588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2ccf9aec501f3fd3d745e6672319ea331cefdb97e95923441a5856215988c513 in / "
                },
                {
                    "created": "2019-10-18T18:49:20.663140602Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-18T18:49:21.400659225Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:49:22.104135149Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:49:22.258556432Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T19:05:16.3444847Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.0-27-g54658b88",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T19:05:16.5564775Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T19:05:16.7489662Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.16.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T19:05:16.9647758Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:753d1ac7684e356950d0d9088b904463345daeeae5a05a75f77dcce41970b6d9 in / "
                },
                {
                    "created": "2019-11-11T19:06:43.7538487Z",
                    "created_by": "|3 CNI_VERSION=v0.8.3 CONTAINERD_VERSION=v1.3.0-27-g54658b88 CRICTL_VERSION=v1.16.1 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2019-11-11T19:06:45.0201063Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T19:06:45.2076645Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T19:06:45.4115827Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T21:34:55.278982521Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dfc7a90ce923752296d6478881e5001f78a37adf603f3dbfbc2dba51226718a2",
                    "sha256:020f1d32db77350a96320b66a1a693c3a1e0462ba5aa821679f2ed35973914c5",
                    "sha256:de2a5db5a95c303265675374db74a71f0c774dc5af0e66b68707ee8b5fce92e3",
                    "sha256:f6bc8c0eecde7febb159383b49e972cdab894d41c87335dfc74904bdf5c61af3",
                    "sha256:c9b95305195c10b39cfdc96eda13efc743fea907d6a4fdf661f6785a3d062483",
                    "sha256:3d69ce15a7b465bc61255ae77b35c6357bf48f82ff9442e778f94d68342d4f30",
                    "sha256:110ec192e1883e7a5a16062f2fa6a48c594965f02742163b57f64cb5d2dfe306"
                ]
            }
        },
        "v1.16.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a06295b3578f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20191115-cd8a1c9b@sha256:adc956e10590293ccb10d3c45161daa2be110612b7d1a3eb9cd4836d8f44b284",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a06295b3578f5736e688e228bff89cde7afc9433f412cb1bb17efceea38a7858",
            "container_config": {
                "Hostname": "a06295b3578f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20191115-cd8a1c9b@sha256:adc956e10590293ccb10d3c45161daa2be110612b7d1a3eb9cd4836d8f44b284",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2019-12-04T07:24:58.331511454Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-09-18T23:20:57.900763791Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5bbdfa140633b135672ff0e1eb1a1b37afcab36216103c0b3d97337c62c5e2a1 in / "
                },
                {
                    "created": "2019-09-18T23:20:58.708996855Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:59.419239378Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:00.129065445Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:00.315065212Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:50.495866733Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.0-27-g54658b88",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:50.781620333Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:44:51.032082546Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.16.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:57:56.718280012Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:e01298c6cefcf30807a3cf443e3c1f7fc297de55984b0871373d98c791ac0c2a in / "
                },
                {
                    "created": "2019-11-16T00:59:12.27663106Z",
                    "created_by": "|3 CNI_VERSION=v0.8.3 CONTAINERD_VERSION=v1.3.0-27-g54658b88 CRICTL_VERSION=v1.16.1 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd systemd-sysv libsystemd0       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2019-11-16T00:59:13.288638584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:59:13.571796526Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-16T00:59:13.821823397Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-04T07:24:58.331511454Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:562cdfd03b6e1f420013e9f89e43874274c8edffa80c5701c3e65636c88d9aa7",
                    "sha256:0b17926aacca04f7142e606905ad43da021f33664e2f8103e9f90391bd0b6bac",
                    "sha256:69dc412be42183270d880c5c8b7ee7f724e42e17bb921ff65c5431dc33f5f859",
                    "sha256:e5e14a632a8501facee26a7ab9f24f926df45e006cae0f1277c36cbb53c04663",
                    "sha256:fb17dea4400748686f18aa0210dd148a50f9f369fd9cbd8b28929a3740ac4302",
                    "sha256:105da31b88744e0018078532b18572c60488860296785ec42c8c5bbebd0ef580",
                    "sha256:4d153c447a35895ee383a11c00ec2c31e1c342490066e792b4e0d9b633ca0eec"
                ]
            }
        },
        "v1.16.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d004f5c9c042",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200109-d9c81a89@sha256:3e7cbf766fa8661d879f8acc415b0c700788b6d0fdffe4505196d9d3718a3dfa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "d004f5c9c042e1bff6e8b662df8b0034b862d8c9fbde3bdb907d00e0d542ce0c",
            "container_config": {
                "Hostname": "d004f5c9c042",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200109-d9c81a89@sha256:3e7cbf766fa8661d879f8acc415b0c700788b6d0fdffe4505196d9d3718a3dfa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-01-14T01:26:57.82068049Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-12-19T04:22:52.805666468Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cf0c9e2d83fd1f85ac0ca5e96b2fba6474f4bda7c20911811337fe11817a45a in / "
                },
                {
                    "created": "2019-12-19T04:22:54.082843401Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-12-19T04:22:55.212108595Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-12-19T04:22:55.967164973Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-12-19T04:22:56.155964355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.415788394Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.563546773Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.729709762Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.17.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.898059238Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:2477dc29f059b32f83e4d5bee8e26db4bf516c84ab83b754df959d684a02e8da in / "
                },
                {
                    "created": "2020-01-09T20:40:42.995635001Z",
                    "created_by": "|3 CNI_VERSION=v0.8.4 CONTAINERD_VERSION=v1.3.2 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2020-01-09T20:40:43.620229989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:43.791151379Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:43.9340121Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-14T01:26:57.82068049Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:311cea42e10ab4e989c4ad1be03e171eeb8a6d10f7e7bd3a202bdda4b3f28103",
                    "sha256:b563258c77138c9feffab5e8afc37a24d606ec1a098c703abf6ac588277b5e0f",
                    "sha256:bd9649c81bcd376a9fe96c74b811a1b60b30468c15be2914f7f6758849c487e1",
                    "sha256:d985daa3384f0254a39e2b6d9d4dc89f29ce84e05445542e3241fe34d97f21dc",
                    "sha256:ac95e351f56acf8638a7121cb426411869097e83b34edd2b4f1743f91d26496b",
                    "sha256:5d8f4ff30a1dcae2cf2d4a8faa380bdea0805b63e562494d0524710c3d1826e1",
                    "sha256:3da1dba903cfcb2ea9505be628f444ce3571ceaefde9f3f31938412fb1e7ec50"
                ]
            }
        },
        "v1.16.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "aed59046b750",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "aed59046b750abcdd95a2c5ee40b284ffa444e71767b68a8eb93431ec3579436",
            "container_config": {
                "Hostname": "aed59046b750",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-05-01T02:23:49.739590493Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CNI_VERSION=v0.8.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CRICTL_VERSION=v1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.5 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-01T02:23:49.739590493Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:c4c33d8c77ca7fe74b3360c8a76b01cb1a3394de1490685e1a2e652cf788e7dd",
                    "sha256:dec58d310b8ec87970becf1f83c7594032274aa1576e46ff4bb674a6d522c4f7",
                    "sha256:10ee9bd3ddbad496b7d88399f9fc44e14176761d2be72f796c0adc55e3b1feb6"
                ]
            }
        },
        "v1.17.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "4c2142a8cf3f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200109-d9c81a89@sha256:3e7cbf766fa8661d879f8acc415b0c700788b6d0fdffe4505196d9d3718a3dfa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "4c2142a8cf3fc2915091cb391249b001bc2d3c162745c097836aa052ce7d572a",
            "container_config": {
                "Hostname": "4c2142a8cf3f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200109-d9c81a89@sha256:3e7cbf766fa8661d879f8acc415b0c700788b6d0fdffe4505196d9d3718a3dfa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-01-14T00:10:09.688880518Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2019-12-19T04:22:52.805666468Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9cf0c9e2d83fd1f85ac0ca5e96b2fba6474f4bda7c20911811337fe11817a45a in / "
                },
                {
                    "created": "2019-12-19T04:22:54.082843401Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-12-19T04:22:55.212108595Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-12-19T04:22:55.967164973Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-12-19T04:22:56.155964355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.415788394Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.563546773Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.729709762Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.17.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:08.898059238Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:2477dc29f059b32f83e4d5bee8e26db4bf516c84ab83b754df959d684a02e8da in / "
                },
                {
                    "created": "2020-01-09T20:40:42.995635001Z",
                    "created_by": "|3 CNI_VERSION=v0.8.4 CONTAINERD_VERSION=v1.3.2 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2020-01-09T20:40:43.620229989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:43.791151379Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T20:40:43.9340121Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-14T00:10:09.688880518Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:311cea42e10ab4e989c4ad1be03e171eeb8a6d10f7e7bd3a202bdda4b3f28103",
                    "sha256:b563258c77138c9feffab5e8afc37a24d606ec1a098c703abf6ac588277b5e0f",
                    "sha256:bd9649c81bcd376a9fe96c74b811a1b60b30468c15be2914f7f6758849c487e1",
                    "sha256:d985daa3384f0254a39e2b6d9d4dc89f29ce84e05445542e3241fe34d97f21dc",
                    "sha256:ac95e351f56acf8638a7121cb426411869097e83b34edd2b4f1743f91d26496b",
                    "sha256:5d8f4ff30a1dcae2cf2d4a8faa380bdea0805b63e562494d0524710c3d1826e1",
                    "sha256:39627ff5fb465bf132bcc7592f209c2aed7b0cdacd0619662d1d6604f2f9505c"
                ]
            }
        },
        "v1.17.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "93ae3f4e565d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "93ae3f4e565d93ee5447ae29edad219b4b5b02be79d10efb531f712c9f6c54d6",
            "container_config": {
                "Hostname": "93ae3f4e565d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-09-14T07:52:06.493413374Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-19T21:15:22.638202373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53ca8a3f446b0751019d522066ce844f6281ffb5b15e9605cd8940176abf4c76 in / "
                },
                {
                    "created": "2020-08-19T21:15:23.510765928Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:15:24.304576357Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:15:25.240189987Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:15:25.559275011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-14T07:52:06.493413374Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:327d7aa9de643a7e07b8a258fce4f0103a1a997112abd9ca13ce42c326aae474",
                    "sha256:08b4849c15c3c5a7feaaf7bbe5cc7e82a83e6411b2aaf491884dc7f036b070af",
                    "sha256:a1beb1d2d31d68cb8987e38c8170a615968d7ba46c0c6b311d36e2891f849b70",
                    "sha256:b351340d34bcaf409df1cffdda8172a2a296635d16ba1ca74e1cd27cbfcf8d2b",
                    "sha256:220b15fd109c6f93fb9e7574749a220076bc26eedec43f3665f44c6d5042015d",
                    "sha256:f3229e6d051ead9831b113ebaf70e8f5ccb1a6c03bb649995301f74d2564c142",
                    "sha256:92a38e9d7badb79453489e8bbb55672e22685582ec3a1247c5bb8a9be573a251"
                ]
            }
        },
        "v1.17.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "f9170f925851",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "f9170f925851901525ac299a6070538072065c25cfc65b50c4bb4f449b035f22",
            "container_config": {
                "Hostname": "f9170f925851",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-07T10:11:34.198928018Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T10:11:34.198928018Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:0e4d40c1aff63ea10615194d29ef3ca6d77a4140bb20f75fcac088974bc29e05"
                ]
            }
        },
        "v1.17.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "0406bdb3b351",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200206-8e42bfc5@sha256:c7e751befb963966a03aaba811b978496b4aecf64d3d12ed2351251aaf0087ad",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "0406bdb3b3513c3dfab9af3ee4228fa83028e5570732682ced1e29088ef2c4f5",
            "container_config": {
                "Hostname": "0406bdb3b351",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200206-8e42bfc5@sha256:c7e751befb963966a03aaba811b978496b4aecf64d3d12ed2351251aaf0087ad",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-02-07T01:06:27.915496436Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2020-01-16T01:20:56.203685854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8d7cb00bd95f07ddb881fb10a625cff9db36796913fcf8e5dc6a1ef47a74ae45 in / "
                },
                {
                    "created": "2020-01-16T01:20:57.000007967Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:57.706700202Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:58.410773793Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:58.56272017Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T00:34:48.620510547Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONTAINERD_VERSION=v1.3.2-31-gaa877d78",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T00:34:48.798799638Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CNI_VERSION=v0.8.5",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T00:34:48.964650663Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CRICTL_VERSION=v1.17.0",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T00:34:49.137692248Z",
                    "created_by": "/bin/sh -c #(nop) COPY dir:134fd4ca05bc7c3c84a6ea72d2ed1e8ce8f02f7e87e03b5c2038e470f7400e84 in / "
                },
                {
                    "created": "2020-02-07T00:35:26.322963376Z",
                    "created_by": "|3 CNI_VERSION=v0.8.5 CONTAINERD_VERSION=v1.3.2-31-gaa877d78 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'"
                },
                {
                    "created": "2020-02-07T00:35:27.123795153Z",
                    "created_by": "/bin/sh -c #(nop)  ENV container=docker",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T00:35:27.26576265Z",
                    "created_by": "/bin/sh -c #(nop)  STOPSIGNAL SIGRTMIN+3",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T00:35:27.420184162Z",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T01:06:27.915496436Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4cbbc216bd6a8a6d3412dd3922d421ce85ce33fc706db20fbd75cc2fb921c7ae",
                    "sha256:efb37b70f734861976c6101d09cf3190d5b94f7b1f851ca289975ce03a6e02c7",
                    "sha256:1f705bb004bc6a8e4c187d48242652dd43b556283f324650c0eb52741c283066",
                    "sha256:9497c30cbf1209988295048a71088b8ec7c0f7eabb903a0ed00fea531ce4a265",
                    "sha256:7e1b013697b4b4bc7e7a7f7552efa29af8e327a2293267e18df336c12de4ed5f",
                    "sha256:8352e411c8cd6f9b38d1288846ea9c531ccf69d4617d93ee4082a5e9cf3a3fd1",
                    "sha256:c92ece5da0b67eb56f6004af193626539b7a7adfafcca1ff7cfb0c5cc09970ab"
                ]
            }
        },
        "v1.17.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "7b163c7a4539",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "7b163c7a4539a1b959541af6b4c72ef03ea1d00b467c646d3b82653fd6396949",
            "container_config": {
                "Hostname": "7b163c7a4539",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200430-bd9e12ab",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-05-01T02:12:32.198446212Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CNI_VERSION=v0.8.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "ARG CRICTL_VERSION=v1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:15.334804047Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.5 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-30T20:13:53.968227214Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-01T02:12:32.198446212Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:c4c33d8c77ca7fe74b3360c8a76b01cb1a3394de1490685e1a2e652cf788e7dd",
                    "sha256:dec58d310b8ec87970becf1f83c7594032274aa1576e46ff4bb674a6d522c4f7",
                    "sha256:aca19135f001b0a54af2abd8683ba9fbf650ba8e2c6bc9c05fc3f7ffcd7d5453"
                ]
            }
        },
        "v1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2db52fb4c9f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200317-92225082",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "2db52fb4c9f29bd679e829e048e6d560fe5e673240623a8c7504bbb6970d6b11",
            "container_config": {
                "Hostname": "2db52fb4c9f2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200317-92225082",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-03-25T20:57:30.459180293Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2020-02-21T22:21:11.205805367Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49bd1c0bfe89a93a193774bfd334bc1151f0dca95849f81d1ac353673399585c in / "
                },
                {
                    "created": "2020-02-21T22:21:12.93485305Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:21:14.43583162Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:21:15.758873649Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:21:16.055141833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-17T23:20:03.2567561Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-17T23:20:03.2567561Z",
                    "created_by": "ARG CNI_VERSION=v0.8.5",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-17T23:20:03.2567561Z",
                    "created_by": "ARG CRICTL_VERSION=v1.17.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-17T23:20:03.2567561Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-17T23:20:58.1072147Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.5 CRICTL_VERSION=v1.17.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-03-17T23:20:58.1072147Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-17T23:20:58.1072147Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-17T23:20:58.1072147Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-25T20:57:30.459180293Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:634b4695a7c1807938e5b1653eeb5b5a489912307f0b8860e4eb5edbe46a1c52",
                    "sha256:58b94a2cb2b199da3a87966eb50418cd94ae8f3de5eb897863edf861a2b64aa7",
                    "sha256:5506ae244a4ddd468df72903e0e4a32cdbd0166f389dea267cd378dc97d82017",
                    "sha256:1a38a7750b8dd6af03538fdc77d0104e37c82809d64ef934673a38a7d10f2d99",
                    "sha256:0763e103cd68c2e9f4301589ecbad673480917f59c7e44515b6a3b4a5d2297bd",
                    "sha256:24d7658923a6e817297a24d15b01e226e80dd5ab6930cb4edd0de8b86fd5f188",
                    "sha256:f2ebda6e25921d499c8cbf4271a2673e6f1b8d96656fc553c74b1e19cee73bfc"
                ]
            }
        },
        "v1.18.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5cefa7f06c43",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20210120-1da0c5e6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "5cefa7f06c4301201534243abbf400d46da4aa9c1f42f60006742a46047842a2",
            "container_config": {
                "Hostname": "5cefa7f06c43",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20210120-1da0c5e6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-01-22T22:47:11.856008734Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-25T22:25:38.533127696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6248e4aba6d7654cf97495ddc060cc9d68c5498500fe6ae03a10d955f0cc09b4 in / "
                },
                {
                    "created": "2020-11-25T22:25:39.691105244Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:40.783661456Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:41.920719567Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:42.138514649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0-106-gce4439a8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "ARG CNI_VERSION=v0.9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "ARG CRICTL_VERSION=v1.19.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0-106-gce4439a8 CNI_VERSION=v0.9.0 CRICTL_VERSION=v1.19.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Disabling udev\"     && systemctl disable udev.service # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-22T22:47:11.856008734Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6eccfcb908da970ea498aac5de0505fe7e843e6817198da0d134241fed3118a9",
                    "sha256:e542e613aea92eae46bf6b2a05bf1c293b1b2433b9ec85829eb57b168468e39e",
                    "sha256:3f82b7860fdc994c939d3d1fc14895b6e8b247bae695ab13f3a11afc3c6eb0ec",
                    "sha256:6b12084cbddbdbaeee22dbe18fb8dbe792f1bb0b7f4f48ce8bc406aebe5db17c",
                    "sha256:e03032da158c2b301673f358fc99ebd60b553b19cfaa4dfd82e88568ba35d5df",
                    "sha256:22658e744116b2cc01caac0c4e5eaae5645bff0ab6233408b1b7331593a6fb57"
                ]
            }
        },
        "v1.18.19": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3e9ab5a1554b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210521-82de8f15",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "3e9ab5a1554bbeba758b38e46f7629a1326a9d85e817ef5353653bdee64c0a8d",
            "container_config": {
                "Hostname": "3e9ab5a1554b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210521-82de8f15",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-05-28T00:10:04.8784906Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-05-19T19:44:58.412698979Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:218192f8ea2feaa779660a584c540d40170f0041f106bc6a2eb183bd548a588c in / "
                },
                {
                    "created": "2021-05-19T19:44:59.669884049Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:00.598079551Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:45:01.602655934Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:01.800805472Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_VERSION=1.5.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/containerd-1.5.2.linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_AMD64_SHA256SUM=1e39c79905adfde0aca9ed7347f37be9fb8b89776f4df829337eeeda983bf422",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_ARM64_SHA256SUM=2aac475f960ee8a3a331256fd80e6ffb5f05328161e0f577d9b8691424a39584",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_PPC64LE_SHA256SUM=21f7a229c431d0f66616312e437e5b4d01ae56302b0b2aa18ec315ced0876e60",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/runc.amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_AMD64_SHA256SUM=ed9896e8c010b2f06cdfb55ec575865f9382e1a599078c06dcbddb86b97be285",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_ARM64_SHA256SUM=75de65187fa809ae92eaeb49cbf725c7d9f226fbc589f84bd637e31aae38c453",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_PPC64LE_SHA256SUM=40b42ff58de2e71164f03db931aa70cc0fee6eb35aa96915e23290341ca9fd49",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_VERSION=v1.21.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_AMD64_SHA256SUM=85c78a35584971625bf1c3bcd46e5404a90396f979d7586f18b11119cb623e24",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_ARM64_SHA256SUM=454eecd29fe636282339af5b73c60234a7d10e4b11b9e18937e33056763d72cf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_PPC64LE_SHA256SUM=0770100d30d430dbb67a58119ffed459856163ba01b6d71ac6fd4be7336253cf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_VERSION=v0.9.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "COPY files/usr/local/bin/* /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.6547833Z",
                    "created_by": "COPY files/etc/* /etc/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.7250266Z",
                    "created_by": "COPY files/etc/containerd/* /etc/containerd/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.8033335Z",
                    "created_by": "COPY files/etc/default/* /etc/default/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.8554085Z",
                    "created_by": "COPY files/etc/sysctl.d/* /etc/sysctl.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.9218921Z",
                    "created_by": "COPY files/etc/systemd/system/* /etc/systemd/system/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.9872581Z",
                    "created_by": "COPY files/etc/systemd/system/kubelet.service.d/* /etc/systemd/system/kubelet.service.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "RUN |22 TARGETARCH=amd64 CONTAINERD_VERSION=1.5.2 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2 CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/containerd-1.5.2.linux-amd64.tar.gz CONTAINERD_AMD64_SHA256SUM=1e39c79905adfde0aca9ed7347f37be9fb8b89776f4df829337eeeda983bf422 CONTAINERD_ARM64_SHA256SUM=2aac475f960ee8a3a331256fd80e6ffb5f05328161e0f577d9b8691424a39584 CONTAINERD_PPC64LE_SHA256SUM=21f7a229c431d0f66616312e437e5b4d01ae56302b0b2aa18ec315ced0876e60 RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/runc.amd64 RUNC_AMD64_SHA256SUM=ed9896e8c010b2f06cdfb55ec575865f9382e1a599078c06dcbddb86b97be285 RUNC_ARM64_SHA256SUM=75de65187fa809ae92eaeb49cbf725c7d9f226fbc589f84bd637e31aae38c453 RUNC_PPC64LE_SHA256SUM=40b42ff58de2e71164f03db931aa70cc0fee6eb35aa96915e23290341ca9fd49 CRICTL_VERSION=v1.21.0 CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz CRICTL_AMD64_SHA256SUM=85c78a35584971625bf1c3bcd46e5404a90396f979d7586f18b11119cb623e24 CRICTL_ARM64_SHA256SUM=454eecd29fe636282339af5b73c60234a7d10e4b11b9e18937e33056763d72cf CRICTL_PPC64LE_SHA256SUM=0770100d30d430dbb67a58119ffed459856163ba01b6d71ac6fd4be7336253cf CNI_PLUGINS_VERSION=v0.9.1 CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7 CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0 CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe /bin/sh -c echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && curl -sSL --retry 5 --output /tmp/containerd.${TARGETARCH}.tgz \"${CONTAINERD_URL}\"     && echo \"${CONTAINERD_AMD64_SHA256SUM}  /tmp/containerd.amd64.tgz\" | tee /tmp/containerd.sha256     && echo \"${CONTAINERD_ARM64_SHA256SUM}  /tmp/containerd.arm64.tgz\" | tee -a /tmp/containerd.sha256     && echo \"${CONTAINERD_PPC64LE_SHA256SUM}  /tmp/containerd.ppc64le.tgz\" | tee -a /tmp/containerd.sha256     && sha256sum --ignore-missing -c /tmp/containerd.sha256     && rm -f /tmp/containerd.sha256     && tar -C /usr/local -xzvf /tmp/containerd.${TARGETARCH}.tgz     && rm -rf /tmp/containerd.${TARGETARCH}.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /tmp/runc.${TARGETARCH} \"${RUNC_URL}\"     && echo \"${RUNC_AMD64_SHA256SUM}  /tmp/runc.amd64\" | tee /tmp/runc.sha256     && echo \"${RUNC_ARM64_SHA256SUM}  /tmp/runc.arm64\" | tee -a /tmp/runc.sha256     && echo \"${RUNC_PPC64LE_SHA256SUM}  /tmp/runc.ppc64le\" | tee -a /tmp/runc.sha256     && sha256sum --ignore-missing -c /tmp/runc.sha256     && mv /tmp/runc.${TARGETARCH} /usr/local/sbin/runc     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -sSL --retry 5 --output /tmp/crictl.${TARGETARCH}.tgz \"${CRICTL_URL}\"     && echo \"${CRICTL_AMD64_SHA256SUM}  /tmp/crictl.amd64.tgz\" | tee /tmp/crictl.sha256     && echo \"${CRICTL_ARM64_SHA256SUM}  /tmp/crictl.arm64.tgz\" | tee -a /tmp/crictl.sha256     && echo \"${CRICTL_PPC64LE_SHA256SUM}  /tmp/crictl.ppc64le.tgz\" | tee -a /tmp/crictl.sha256     && sha256sum --ignore-missing -c /tmp/crictl.sha256     && rm -f /tmp/crictl.sha256     && tar -C /usr/local/bin -xzvf /tmp/crictl.${TARGETARCH}.tgz     && rm -rf /tmp/crictl.${TARGETARCH}.tgz  && echo \"Installing CNI plugin binaries ...\"     && curl -sSL --retry 5 --output /tmp/cni.${TARGETARCH}.tgz \"${CNI_PLUGINS_URL}\"     && echo \"${CNI_PLUGINS_AMD64_SHA256SUM}  /tmp/cni.amd64.tgz\" | tee /tmp/cni.sha256     && echo \"${CNI_PLUGINS_ARM64_SHA256SUM}  /tmp/cni.arm64.tgz\" | tee -a /tmp/cni.sha256     && echo \"${CNI_PLUGINS_PPC64LE_SHA256SUM}  /tmp/cni.ppc64le.tgz\" | tee -a /tmp/cni.sha256     && sha256sum --ignore-missing -c /tmp/cni.sha256     && rm -f /tmp/cni.sha256     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.${TARGETARCH}.tgz     && rm -rf /tmp/cni.${TARGETARCH}.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Disabling udev\"     && systemctl disable udev.service # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-28T00:10:04.8784906Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1831449c580653ceca3884a1339e75b06a2f85f0856f47fdd65e24c04b1574b7",
                    "sha256:a4711bd62ffb2cc775c8d0513ea136d4842d779364575b4e5e3746aa1ef457f4",
                    "sha256:59a7b5e0e9873ea0d1bb60c3270791061371f303c31cde8aec0e1eea1e6098b5",
                    "sha256:d1123620da173b34adc3b6622223c77f326cc9296f72033f9b333a84237f046a",
                    "sha256:27e8e8548e746c270f93527122b6dc2c0f04048450fa6783c6260433451b03df",
                    "sha256:94a557da6f32c93d187785e2bd98d911d51522d8c5ebdd8235927c1135d71eba",
                    "sha256:904e4a9a0839011a48bbc1ee5f211cbb88530f987a5fedee3cb9f178d0af9869",
                    "sha256:7f6e587cd728226c879c201dba6f870af31a9b079174b9bd5bad8c55cd23b9d6",
                    "sha256:a1e46c95135f4afeeae70bac37beaf5c8d713cee4bb68bee2d8baa5c4161fc22",
                    "sha256:c3433c982ca6522a4a76e2c1ceffe60fd9d77306e7c77f97e39cf07ce0e5cf7e",
                    "sha256:99793c9223da1cd167b7dc1703cbbe86e79e3c00f9c9f59aab57d890e7199702",
                    "sha256:680c128ac27ccead0b849b025b2ed188814aaf24cb7721f0ec48b795d9aac5fe"
                ]
            }
        },
        "v1.18.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "b5527034399b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200602-f5196892",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "b5527034399bc702cb61c1ac5f16bc93c08b1e98649d2ed8b62552f634806a35",
            "container_config": {
                "Hostname": "b5527034399b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200602-f5196892",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-06-03T04:01:26.550984336Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2020-04-24T01:07:46.570210148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a58c8b447951f9e30c92e7262a2effbb8b403c2e795ebaf58456f096b5b2a720 in / "
                },
                {
                    "created": "2020-04-24T01:07:48.333199576Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:49.883984186Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:51.592036847Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:51.928109369Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-31T18:20:41.6895917Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.3.3-14-g449e9269",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-31T18:20:41.6895917Z",
                    "created_by": "ARG CNI_VERSION=v0.8.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-31T18:20:41.6895917Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-31T18:20:41.6895917Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-06-03T03:50:30.2899103Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.3.3-14-g449e9269 CNI_VERSION=v0.8.6 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-06-03T03:50:30.2899103Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-03T03:50:30.2899103Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-03T03:50:30.2899103Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-03T04:01:26.550984336Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7789f1a3d4e9258fbe5469a8d657deb6aba168d86967063e9b80ac3e1154333f",
                    "sha256:9e53fd4895597d04f8871a68caea4c686011e1fbd0be32e57e89ada2ea5c24c4",
                    "sha256:2a19bd70fcd4ce7fd73b37b1b2c710f8065817a9db821ff839fe0b4b4560e643",
                    "sha256:8891751e0a1733c5c214d17ad2b0040deccbdea0acebb963679735964d516ac2",
                    "sha256:5dfd3119978f65b5c25ff0ae2a8ad629e5da39a5d43789d8306d67da6035e5cb",
                    "sha256:0077978bdebb0757aab706be687f832d22a18172b2cb4f25533b8d8936f7069d",
                    "sha256:7dde6298adeca29aea38396ce78386a6900f63d6480b0960e10b6a6151015993"
                ]
            }
        },
        "v1.18.20": {
            "architecture": "amd64",
            "config": {
                "Hostname": "4d0ffce18904",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "4d0ffce18904957598c6fe9384445b24f9d1b9c94aac58fb0d081f61575be411",
            "container_config": {
                "Hostname": "4d0ffce18904",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-02T01:00:25.154827636Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-02T01:00:25.154827636Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:aa9ddfccca427d118a8836ae8a76ee9d73aa830a2c412b530725b6d1914ed2a1"
                ]
            }
        },
        "v1.18.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "45d519858412",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200617-368793aa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "45d51985841208bd3bcdf3b47fd415016faea7b82802be7bb8be1f8c36f7da3d",
            "container_config": {
                "Hostname": "45d519858412",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200617-368793aa",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-06-20T01:50:48.123692034Z",
            "docker_version": "19.03.11",
            "history": [
                {
                    "created": "2020-06-17T01:20:53.681386552Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b2342c7e6665d5ff3850d4f04e2521d1851eb2054f9a8d56fcf4e7c314b9f20e in / "
                },
                {
                    "created": "2020-06-17T01:20:54.523721121Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:55.294213224Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:56.126960877Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:56.323568224Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-18T02:34:40.716743233Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0-beta.1-34-g49b0743c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-18T02:34:40.716743233Z",
                    "created_by": "ARG CNI_VERSION=v0.8.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-18T02:34:40.716743233Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-18T02:34:40.716743233Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-06-18T02:35:39.254250597Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0-beta.1-34-g49b0743c CNI_VERSION=v0.8.6 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Modifying /etc/nsswitch.conf to prefer hosts\"     && sed -i /etc/nsswitch.conf -re 's#^(hosts:\\s*).*#\\1dns files#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-06-18T02:35:39.254250597Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-18T02:35:39.254250597Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-18T02:35:39.254250597Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-20T01:50:48.123692034Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e1c75a5e0bfa094c407e411eb6cc8a159ee8b060cbd0398f1693978b4af9af10",
                    "sha256:9e97312b63ff63ad98bb1f3f688fdff0721ce5111e7475b02ab652f10a4ff97d",
                    "sha256:ec1817c93e7c08d27bfee063f0f1349185a558b87b2d806768af0a8fbbf5bc11",
                    "sha256:05f3b67ed530c5b55f6140dfcdfb9746cdae7b76600de13275197d009086bb3d",
                    "sha256:a4d884898a746d6631e3d8290b06497b9d041c838e108d4c5c89606322897747",
                    "sha256:fb58e287343ec216b57fb55a8332c513366c93fa604f8ed039e48f62e74504ab",
                    "sha256:1580f55937c38613362e552a8df71450576045303765c682fd5c3823a5943b2b"
                ]
            }
        },
        "v1.18.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "c21c4c88bf1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200719-691707f6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "c21c4c88bf1cff34ecbd753a1cf6a5fd83a3ab367428e9f3124f754803692e7b",
            "container_config": {
                "Hostname": "c21c4c88bf1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200719-691707f6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-07-20T00:22:04.334738766Z",
            "docker_version": "19.03.5",
            "history": [
                {
                    "created": "2020-07-06T21:56:28.828661061Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cf87af1f0e27aa6ffad26c57edca4ca55dc97861590a2d63475085a08d3b0063 in / "
                },
                {
                    "created": "2020-07-06T21:56:29.704325263Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-07-06T21:56:30.474974715Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-06T21:56:31.295257919Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-06T21:56:31.471255509Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T04:41:59.4144706Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0-beta.2-21-ge818fe27",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T04:41:59.4144706Z",
                    "created_by": "ARG CNI_VERSION=v0.8.6-14-g6eb8e31",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T04:41:59.4144706Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T04:41:59.4144706Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-19T23:56:18.1667177Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0-beta.2-21-ge818fe27 CNI_VERSION=v0.8.6-14-g6eb8e31 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Installing containerd ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -fSL \"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\" | tar xzC /usr/local/bin  && echo \"Installing CNI binaries ...\"     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/bentheelder/containernetworking-plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-07-19T23:56:18.1667177Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-19T23:56:18.1667177Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-19T23:56:18.1667177Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-20T00:22:04.334738766Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d22cfd6a8b16689838c570b91794ed18acc752a08a10bce891cc64acc1533b3f",
                    "sha256:132bcd1e0eb5c706a017ff058b68d76c24f66f84120c51c7662de074a98cbe7a",
                    "sha256:cf0f3facc4a307e4c36e346ddb777a73e576393575043e89d2ea536b693c3ff5",
                    "sha256:544a70a875fc8e410b8a1389bf912e9536cf8167cbbfc1457bba355d5b7ce5c4",
                    "sha256:010b55b51ea48be127a78156b4c9f86af6554f1a49246e24b82871c35a99c638",
                    "sha256:abea02e6bc0660c3d214bf701aec4da6f3c002c600deaa06e4f18a32fc80d429",
                    "sha256:7be9af89a7d082c98157bdf97f5402189151f3172be3b247f9da8832d30d89ed"
                ]
            }
        },
        "v1.18.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "09ecbbd653af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "09ecbbd653af04a2eb0c6f4dc57147bbbe04a0b2c4d54db5b54d4287a56b48db",
            "container_config": {
                "Hostname": "09ecbbd653af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-09-14T07:45:50.179860346Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-19T21:15:22.638202373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53ca8a3f446b0751019d522066ce844f6281ffb5b15e9605cd8940176abf4c76 in / "
                },
                {
                    "created": "2020-08-19T21:15:23.510765928Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:15:24.304576357Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:15:25.240189987Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:15:25.559275011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-14T07:45:50.179860346Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:327d7aa9de643a7e07b8a258fce4f0103a1a997112abd9ca13ce42c326aae474",
                    "sha256:08b4849c15c3c5a7feaaf7bbe5cc7e82a83e6411b2aaf491884dc7f036b070af",
                    "sha256:a1beb1d2d31d68cb8987e38c8170a615968d7ba46c0c6b311d36e2891f849b70",
                    "sha256:b351340d34bcaf409df1cffdda8172a2a296635d16ba1ca74e1cd27cbfcf8d2b",
                    "sha256:220b15fd109c6f93fb9e7574749a220076bc26eedec43f3665f44c6d5042015d",
                    "sha256:f3229e6d051ead9831b113ebaf70e8f5ccb1a6c03bb649995301f74d2564c142",
                    "sha256:fa9efff4b49653c53ae80692e14c88e42d5a18aed2d0015f0cce3ace4a7ac341"
                ]
            }
        },
        "v1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "58d1f6db8551",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "58d1f6db855155a8c4a0b889ab5588ba8bcfb1a38febdffe0aa76a83a2a78618",
            "container_config": {
                "Hostname": "58d1f6db8551",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-08-28T22:12:16.413675392Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-19T21:15:22.638202373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53ca8a3f446b0751019d522066ce844f6281ffb5b15e9605cd8940176abf4c76 in / "
                },
                {
                    "created": "2020-08-19T21:15:23.510765928Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:15:24.304576357Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:15:25.240189987Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:15:25.559275011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-28T22:12:16.413675392Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:327d7aa9de643a7e07b8a258fce4f0103a1a997112abd9ca13ce42c326aae474",
                    "sha256:08b4849c15c3c5a7feaaf7bbe5cc7e82a83e6411b2aaf491884dc7f036b070af",
                    "sha256:a1beb1d2d31d68cb8987e38c8170a615968d7ba46c0c6b311d36e2891f849b70",
                    "sha256:b351340d34bcaf409df1cffdda8172a2a296635d16ba1ca74e1cd27cbfcf8d2b",
                    "sha256:220b15fd109c6f93fb9e7574749a220076bc26eedec43f3665f44c6d5042015d",
                    "sha256:f3229e6d051ead9831b113ebaf70e8f5ccb1a6c03bb649995301f74d2564c142",
                    "sha256:2bcedebc7c2e3873c50f9aca723b6d2668b323a4a6e57997dae781b3b465ec08"
                ]
            }
        },
        "v1.19.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "69948db556b9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "69948db556b9fc60fc5a0ead3c74ac0e47a70a2cbe0c3f7ff13669ff282b30f4",
            "container_config": {
                "Hostname": "69948db556b9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-09-14T07:32:15.70700703Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-19T21:15:22.638202373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53ca8a3f446b0751019d522066ce844f6281ffb5b15e9605cd8940176abf4c76 in / "
                },
                {
                    "created": "2020-08-19T21:15:23.510765928Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:15:24.304576357Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:15:25.240189987Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:15:25.559275011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-14T07:32:15.70700703Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:327d7aa9de643a7e07b8a258fce4f0103a1a997112abd9ca13ce42c326aae474",
                    "sha256:08b4849c15c3c5a7feaaf7bbe5cc7e82a83e6411b2aaf491884dc7f036b070af",
                    "sha256:a1beb1d2d31d68cb8987e38c8170a615968d7ba46c0c6b311d36e2891f849b70",
                    "sha256:b351340d34bcaf409df1cffdda8172a2a296635d16ba1ca74e1cd27cbfcf8d2b",
                    "sha256:220b15fd109c6f93fb9e7574749a220076bc26eedec43f3665f44c6d5042015d",
                    "sha256:f3229e6d051ead9831b113ebaf70e8f5ccb1a6c03bb649995301f74d2564c142",
                    "sha256:4c783a01273d9b73bdb0e6b822f178085519b78d366b5892860963ffa39399f6"
                ]
            }
        },
        "v1.19.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2f7dc8e3b174",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210521-82de8f15",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "2f7dc8e3b174facc74f8e2b44b41339d21efc91c06f677dfb5190f54e104c0fb",
            "container_config": {
                "Hostname": "2f7dc8e3b174",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210521-82de8f15",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-05-27T23:51:30.5682133Z",
            "docker_version": "20.10.5",
            "history": [
                {
                    "created": "2021-05-19T19:44:58.412698979Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:218192f8ea2feaa779660a584c540d40170f0041f106bc6a2eb183bd548a588c in / "
                },
                {
                    "created": "2021-05-19T19:44:59.669884049Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:00.598079551Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:45:01.602655934Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:01.800805472Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_VERSION=1.5.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/containerd-1.5.2.linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_AMD64_SHA256SUM=1e39c79905adfde0aca9ed7347f37be9fb8b89776f4df829337eeeda983bf422",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_ARM64_SHA256SUM=2aac475f960ee8a3a331256fd80e6ffb5f05328161e0f577d9b8691424a39584",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_PPC64LE_SHA256SUM=21f7a229c431d0f66616312e437e5b4d01ae56302b0b2aa18ec315ced0876e60",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/runc.amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_AMD64_SHA256SUM=ed9896e8c010b2f06cdfb55ec575865f9382e1a599078c06dcbddb86b97be285",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_ARM64_SHA256SUM=75de65187fa809ae92eaeb49cbf725c7d9f226fbc589f84bd637e31aae38c453",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_PPC64LE_SHA256SUM=40b42ff58de2e71164f03db931aa70cc0fee6eb35aa96915e23290341ca9fd49",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_VERSION=v1.21.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_AMD64_SHA256SUM=85c78a35584971625bf1c3bcd46e5404a90396f979d7586f18b11119cb623e24",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_ARM64_SHA256SUM=454eecd29fe636282339af5b73c60234a7d10e4b11b9e18937e33056763d72cf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_PPC64LE_SHA256SUM=0770100d30d430dbb67a58119ffed459856163ba01b6d71ac6fd4be7336253cf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_VERSION=v0.9.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "COPY files/usr/local/bin/* /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.6547833Z",
                    "created_by": "COPY files/etc/* /etc/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.7250266Z",
                    "created_by": "COPY files/etc/containerd/* /etc/containerd/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.8033335Z",
                    "created_by": "COPY files/etc/default/* /etc/default/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.8554085Z",
                    "created_by": "COPY files/etc/sysctl.d/* /etc/sysctl.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.9218921Z",
                    "created_by": "COPY files/etc/systemd/system/* /etc/systemd/system/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.9872581Z",
                    "created_by": "COPY files/etc/systemd/system/kubelet.service.d/* /etc/systemd/system/kubelet.service.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "RUN |22 TARGETARCH=amd64 CONTAINERD_VERSION=1.5.2 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2 CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/containerd-1.5.2.linux-amd64.tar.gz CONTAINERD_AMD64_SHA256SUM=1e39c79905adfde0aca9ed7347f37be9fb8b89776f4df829337eeeda983bf422 CONTAINERD_ARM64_SHA256SUM=2aac475f960ee8a3a331256fd80e6ffb5f05328161e0f577d9b8691424a39584 CONTAINERD_PPC64LE_SHA256SUM=21f7a229c431d0f66616312e437e5b4d01ae56302b0b2aa18ec315ced0876e60 RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/runc.amd64 RUNC_AMD64_SHA256SUM=ed9896e8c010b2f06cdfb55ec575865f9382e1a599078c06dcbddb86b97be285 RUNC_ARM64_SHA256SUM=75de65187fa809ae92eaeb49cbf725c7d9f226fbc589f84bd637e31aae38c453 RUNC_PPC64LE_SHA256SUM=40b42ff58de2e71164f03db931aa70cc0fee6eb35aa96915e23290341ca9fd49 CRICTL_VERSION=v1.21.0 CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz CRICTL_AMD64_SHA256SUM=85c78a35584971625bf1c3bcd46e5404a90396f979d7586f18b11119cb623e24 CRICTL_ARM64_SHA256SUM=454eecd29fe636282339af5b73c60234a7d10e4b11b9e18937e33056763d72cf CRICTL_PPC64LE_SHA256SUM=0770100d30d430dbb67a58119ffed459856163ba01b6d71ac6fd4be7336253cf CNI_PLUGINS_VERSION=v0.9.1 CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7 CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0 CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe /bin/sh -c echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && curl -sSL --retry 5 --output /tmp/containerd.${TARGETARCH}.tgz \"${CONTAINERD_URL}\"     && echo \"${CONTAINERD_AMD64_SHA256SUM}  /tmp/containerd.amd64.tgz\" | tee /tmp/containerd.sha256     && echo \"${CONTAINERD_ARM64_SHA256SUM}  /tmp/containerd.arm64.tgz\" | tee -a /tmp/containerd.sha256     && echo \"${CONTAINERD_PPC64LE_SHA256SUM}  /tmp/containerd.ppc64le.tgz\" | tee -a /tmp/containerd.sha256     && sha256sum --ignore-missing -c /tmp/containerd.sha256     && rm -f /tmp/containerd.sha256     && tar -C /usr/local -xzvf /tmp/containerd.${TARGETARCH}.tgz     && rm -rf /tmp/containerd.${TARGETARCH}.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /tmp/runc.${TARGETARCH} \"${RUNC_URL}\"     && echo \"${RUNC_AMD64_SHA256SUM}  /tmp/runc.amd64\" | tee /tmp/runc.sha256     && echo \"${RUNC_ARM64_SHA256SUM}  /tmp/runc.arm64\" | tee -a /tmp/runc.sha256     && echo \"${RUNC_PPC64LE_SHA256SUM}  /tmp/runc.ppc64le\" | tee -a /tmp/runc.sha256     && sha256sum --ignore-missing -c /tmp/runc.sha256     && mv /tmp/runc.${TARGETARCH} /usr/local/sbin/runc     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -sSL --retry 5 --output /tmp/crictl.${TARGETARCH}.tgz \"${CRICTL_URL}\"     && echo \"${CRICTL_AMD64_SHA256SUM}  /tmp/crictl.amd64.tgz\" | tee /tmp/crictl.sha256     && echo \"${CRICTL_ARM64_SHA256SUM}  /tmp/crictl.arm64.tgz\" | tee -a /tmp/crictl.sha256     && echo \"${CRICTL_PPC64LE_SHA256SUM}  /tmp/crictl.ppc64le.tgz\" | tee -a /tmp/crictl.sha256     && sha256sum --ignore-missing -c /tmp/crictl.sha256     && rm -f /tmp/crictl.sha256     && tar -C /usr/local/bin -xzvf /tmp/crictl.${TARGETARCH}.tgz     && rm -rf /tmp/crictl.${TARGETARCH}.tgz  && echo \"Installing CNI plugin binaries ...\"     && curl -sSL --retry 5 --output /tmp/cni.${TARGETARCH}.tgz \"${CNI_PLUGINS_URL}\"     && echo \"${CNI_PLUGINS_AMD64_SHA256SUM}  /tmp/cni.amd64.tgz\" | tee /tmp/cni.sha256     && echo \"${CNI_PLUGINS_ARM64_SHA256SUM}  /tmp/cni.arm64.tgz\" | tee -a /tmp/cni.sha256     && echo \"${CNI_PLUGINS_PPC64LE_SHA256SUM}  /tmp/cni.ppc64le.tgz\" | tee -a /tmp/cni.sha256     && sha256sum --ignore-missing -c /tmp/cni.sha256     && rm -f /tmp/cni.sha256     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.${TARGETARCH}.tgz     && rm -rf /tmp/cni.${TARGETARCH}.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Disabling udev\"     && systemctl disable udev.service # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T23:51:30.5682133Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1831449c580653ceca3884a1339e75b06a2f85f0856f47fdd65e24c04b1574b7",
                    "sha256:a4711bd62ffb2cc775c8d0513ea136d4842d779364575b4e5e3746aa1ef457f4",
                    "sha256:59a7b5e0e9873ea0d1bb60c3270791061371f303c31cde8aec0e1eea1e6098b5",
                    "sha256:d1123620da173b34adc3b6622223c77f326cc9296f72033f9b333a84237f046a",
                    "sha256:27e8e8548e746c270f93527122b6dc2c0f04048450fa6783c6260433451b03df",
                    "sha256:94a557da6f32c93d187785e2bd98d911d51522d8c5ebdd8235927c1135d71eba",
                    "sha256:904e4a9a0839011a48bbc1ee5f211cbb88530f987a5fedee3cb9f178d0af9869",
                    "sha256:7f6e587cd728226c879c201dba6f870af31a9b079174b9bd5bad8c55cd23b9d6",
                    "sha256:a1e46c95135f4afeeae70bac37beaf5c8d713cee4bb68bee2d8baa5c4161fc22",
                    "sha256:c3433c982ca6522a4a76e2c1ceffe60fd9d77306e7c77f97e39cf07ce0e5cf7e",
                    "sha256:99793c9223da1cd167b7dc1703cbbe86e79e3c00f9c9f59aab57d890e7199702",
                    "sha256:621c6ee110a65a262ef4bd118a24a24b50e4258b8ee2438f9bb8af60b2778e57"
                ]
            }
        },
        "v1.19.16": {
            "architecture": "amd64",
            "config": {
                "Hostname": "59148ca959cd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "59148ca959cdf3635ef1c0337565f43c730b75313678785d139d8e19ef9404d5",
            "container_config": {
                "Hostname": "59148ca959cd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-10-26T15:42:07.917446951Z",
            "docker_version": "20.10.19",
            "history": [
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T15:42:07.917446951Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:20ce6fa94f297a809c755dd996c6e031f1953f4e0851731eb4d92e3ee1109b0c",
                    "sha256:9d3b66acb0298f6c0fc8b1859ae5264fbc157b70d14b52a7ce300259ddc71ac6"
                ]
            }
        },
        "v1.19.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "38d292f6f73d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20201112-cc74d297",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "38d292f6f73d36562b9cdfa31e0c04c8c5d684ac1a0210482a00b4aedd1e23c0",
            "container_config": {
                "Hostname": "38d292f6f73d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20201112-cc74d297",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-11-13T02:50:13.492732519Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-23T17:32:46.304503826Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6099585856c27a9f8dd40d7e679184a6d1bb58133acf73d5d3c9904932def005 in / "
                },
                {
                    "created": "2020-10-23T17:32:47.115899114Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-10-23T17:32:47.855773885Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-23T17:32:48.603158893Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-10-23T17:32:48.778676495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0-106-gce4439a8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "ARG CRICTL_VERSION=v1.19.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0-106-gce4439a8 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.19.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T02:50:13.492732519Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:964b492b1d595d76b46cfe863e31f1c28c421714c486cac2737c1edca541aa39",
                    "sha256:7f9934d5c199367fd0b85cbb19844df76f7ad89982f01b689a694c7bb72697e6",
                    "sha256:5cba0bdb85baadf31af0f8e2f7a53fd9360235f3bfa5df6d2c1e4f97f119e702",
                    "sha256:47d39ad7ae0cd1fba41d6a9552d03944bca558df979239c96eb432f15515a933",
                    "sha256:eb1c7fa9d82d0a5e7bcd99b1cc66ec4da312efb833b5f9a2a881a5f3a79ccc92",
                    "sha256:ab87f4f1d51fb7f0b333d820626abf5f6320a1e7d8b3556640927c05ad4b0997"
                ]
            }
        },
        "v1.19.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9247ef525920",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20201112-cc74d297",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9247ef5259205461ada4d0f5fd7566ac7b559d88502f80022bf7f578b4725e3e",
            "container_config": {
                "Hostname": "9247ef525920",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20201112-cc74d297",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-11-18T09:05:20.210975983Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-23T17:32:46.304503826Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6099585856c27a9f8dd40d7e679184a6d1bb58133acf73d5d3c9904932def005 in / "
                },
                {
                    "created": "2020-10-23T17:32:47.115899114Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-10-23T17:32:47.855773885Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-23T17:32:48.603158893Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-10-23T17:32:48.778676495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0-106-gce4439a8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "ARG CRICTL_VERSION=v1.19.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:32:06.6545633Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0-106-gce4439a8 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.19.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-13T01:33:00.1975868Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T09:05:20.210975983Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:964b492b1d595d76b46cfe863e31f1c28c421714c486cac2737c1edca541aa39",
                    "sha256:7f9934d5c199367fd0b85cbb19844df76f7ad89982f01b689a694c7bb72697e6",
                    "sha256:5cba0bdb85baadf31af0f8e2f7a53fd9360235f3bfa5df6d2c1e4f97f119e702",
                    "sha256:47d39ad7ae0cd1fba41d6a9552d03944bca558df979239c96eb432f15515a933",
                    "sha256:eb1c7fa9d82d0a5e7bcd99b1cc66ec4da312efb833b5f9a2a881a5f3a79ccc92",
                    "sha256:4666570c76c10f113733409762fe192ca0a7bb0fcea1368891c9258b1b86abd5"
                ]
            }
        },
        "v1.19.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a6570fa92a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20210120-1da0c5e6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a6570fa92a17e82957843a31d925a935d1d6246fcd3682413801cfe283b4c37c",
            "container_config": {
                "Hostname": "a6570fa92a17",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20210120-1da0c5e6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-01-22T22:55:34.763147059Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-25T22:25:38.533127696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6248e4aba6d7654cf97495ddc060cc9d68c5498500fe6ae03a10d955f0cc09b4 in / "
                },
                {
                    "created": "2020-11-25T22:25:39.691105244Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:40.783661456Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:41.920719567Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:42.138514649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0-106-gce4439a8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "ARG CNI_VERSION=v0.9.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "ARG CRICTL_VERSION=v1.19.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:05.5346754Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0-106-gce4439a8 CNI_VERSION=v0.9.0 CRICTL_VERSION=v1.19.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Disabling udev\"     && systemctl disable udev.service # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T01:03:52.7337038Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-22T22:55:34.763147059Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6eccfcb908da970ea498aac5de0505fe7e843e6817198da0d134241fed3118a9",
                    "sha256:e542e613aea92eae46bf6b2a05bf1c293b1b2433b9ec85829eb57b168468e39e",
                    "sha256:3f82b7860fdc994c939d3d1fc14895b6e8b247bae695ab13f3a11afc3c6eb0ec",
                    "sha256:6b12084cbddbdbaeee22dbe18fb8dbe792f1bb0b7f4f48ce8bc406aebe5db17c",
                    "sha256:e03032da158c2b301673f358fc99ebd60b553b19cfaa4dfd82e88568ba35d5df",
                    "sha256:551e2196955a32f5c2dfa7d698116cc4b582b1ad76526cbab5fef7f51f23626d"
                ]
            }
        },
        "v1.20.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "23f057393600",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "23f0573936007d3fe80b3e9cdaae96153c681908ef3b1c9947669e2beccb595d",
            "container_config": {
                "Hostname": "23f057393600",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20200826-5c3ff118",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2020-12-08T22:33:14.377674489Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-08-19T21:15:22.638202373Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53ca8a3f446b0751019d522066ce844f6281ffb5b15e9605cd8940176abf4c76 in / "
                },
                {
                    "created": "2020-08-19T21:15:23.510765928Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-08-19T21:15:24.304576357Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-08-19T21:15:25.240189987Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-08-19T21:15:25.559275011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CONTAINERD_VERSION=v1.4.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CNI_VERSION=v0.8.7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "ARG CRICTL_VERSION=v1.18.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:58:38.818088749Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "RUN |3 CONTAINERD_VERSION=v1.4.0 CNI_VERSION=v0.8.7 CRICTL_VERSION=v1.18.0 /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init     && export ARCH=$(dpkg --print-architecture | sed 's/ppc64el/ppc64le/' | sed 's/armhf/arm/')  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && export CONTAINERD_BASE_URL=\"https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-${CONTAINERD_VERSION#v}\"     && curl -sSL --retry 5 --output /tmp/containerd.tgz \"${CONTAINERD_BASE_URL}/containerd-${CONTAINERD_VERSION#v}.linux-${ARCH}.tar.gz\"     && tar -C /usr/local -xzvf /tmp/containerd.tgz     && rm -rf /tmp/containerd.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /usr/local/sbin/runc \"${CONTAINERD_BASE_URL}/runc.${ARCH}\"     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && export CRICTL_URL=\"https://github.com/kubernetes-sigs/cri-tools/releases/download/${CRICTL_VERSION}/crictl-${CRICTL_VERSION}-linux-${ARCH}.tar.gz\"     && curl -sSL --retry 5 --output /tmp/crictl.tgz \"${CRICTL_URL}\"     && tar -C /usr/local/bin -xzvf /tmp/crictl.tgz     && rm -rf /tmp/crictl.tgz  && echo \"Installing CNI binaries ...\"     && export CNI_TARBALL=\"${CNI_VERSION}/cni-plugins-linux-${ARCH}-${CNI_VERSION}.tgz\"     && export CNI_URL=\"https://github.com/containernetworking/plugins/releases/download/${CNI_TARBALL}\"     && curl -sSL --retry 5 --output /tmp/cni.tgz \"${CNI_URL}\"     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.tgz     && rm -rf /tmp/cni.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#' # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-26T21:59:36.451829746Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-08T22:33:14.377674489Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:327d7aa9de643a7e07b8a258fce4f0103a1a997112abd9ca13ce42c326aae474",
                    "sha256:08b4849c15c3c5a7feaaf7bbe5cc7e82a83e6411b2aaf491884dc7f036b070af",
                    "sha256:a1beb1d2d31d68cb8987e38c8170a615968d7ba46c0c6b311d36e2891f849b70",
                    "sha256:b351340d34bcaf409df1cffdda8172a2a296635d16ba1ca74e1cd27cbfcf8d2b",
                    "sha256:220b15fd109c6f93fb9e7574749a220076bc26eedec43f3665f44c6d5042015d",
                    "sha256:f3229e6d051ead9831b113ebaf70e8f5ccb1a6c03bb649995301f74d2564c142",
                    "sha256:166dbcffc19ab061a9e8c18960d1092dbdff23bdd743a02e8d92ccf37ef9f41d"
                ]
            }
        },
        "v1.20.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "7ee85e5c5530",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "7ee85e5c5530d8102007cac7d0301b55f37aa483374e8b5ddd4b81676572cf71",
            "container_config": {
                "Hostname": "7ee85e5c5530",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-10-26T15:33:16.632983215Z",
            "docker_version": "20.10.19",
            "history": [
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T15:33:16.632983215Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:20ce6fa94f297a809c755dd996c6e031f1953f4e0851731eb4d92e3ee1109b0c",
                    "sha256:3876417724d6492f0e1feb9396ba23e2ad332fc8e34d92eb311ecdb45a5cb620"
                ]
            }
        },
        "v1.20.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "bddc0e20cfb4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "kindest/base:v20210310-fb133a07",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "bddc0e20cfb49c5aca37ae311714ccd3f62666a15b678d68dae067e35a079cad",
            "container_config": {
                "Hostname": "bddc0e20cfb4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "kindest/base:v20210310-fb133a07",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-03-11T06:25:29.878633444Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-03-04T02:24:54.391007654Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:040f5377eee4911128a2a905c24395f01f851e15b48eb119590403ccc061b848 in / "
                },
                {
                    "created": "2021-03-04T02:24:55.43624764Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-03-04T02:24:56.460411158Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-04T02:24:57.419433221Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-03-04T02:24:57.603616158Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CONTAINERD_VERSION=1.5.0-beta.3-24-g95513021e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.0-beta.3-24-g95513021e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.0-beta.3-24-g95513021e/containerd-1.5.0-beta.3-24-g95513021e.linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CONTAINERD_AMD64_SHA256SUM=7bc2f02d661ffab596bcd3df4b1cb2d7e3b027062ccdf48db3f8fe0e155c06a1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CONTAINERD_ARM64_SHA256SUM=1fe1c4e53b9e1bb6ec44b642d8673af5d469cfc7d58d45adebb0c0f44c3dd530",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CONTAINERD_PPC64LE_SHA256SUM=9b68a98a6b97feb2dac7d0f9f2ab9ad48ce2e4c4ea710b22561cd2d790ada14e",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.0-beta.3-24-g95513021e/runc.amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG RUNC_AMD64_SHA256SUM=5cd388e4889c458e535ff03f7b970e212277a81057f1817f2822c3872ef3ff07",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG RUNC_ARM64_SHA256SUM=da114b15e17c572fff52fd23595a16ffc665c594ce4380bb677a605df9cb97a1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG RUNC_PPC64LE_SHA256SUM=ed340ee7988bb2a044dda73ef2f672d246aa029fe7d903a391780c5a808986a1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CRICTL_VERSION=v1.20.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.20.0/crictl-v1.20.0-linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CRICTL_AMD64_SHA256SUM=44d5f550ef3f41f9b53155906e0229ffdbee4b19452b4df540265e29572b899c",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CRICTL_ARM64_SHA256SUM=eda6879710eb046d335162d4afe8494c6f8161142ad3188022852f64b92806a8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CRICTL_PPC64LE_SHA256SUM=da0c052983ba884f9605b14bf627664df67fcdb41c7f6908368bf4745f889b26",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CNI_PLUGINS_VERSION=v0.9.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "ARG CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:20:52.873424Z",
                    "created_by": "COPY files/ / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-11T04:21:22.1231551Z",
                    "created_by": "RUN |22 TARGETARCH=amd64 CONTAINERD_VERSION=1.5.0-beta.3-24-g95513021e CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.0-beta.3-24-g95513021e CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.0-beta.3-24-g95513021e/containerd-1.5.0-beta.3-24-g95513021e.linux-amd64.tar.gz CONTAINERD_AMD64_SHA256SUM=7bc2f02d661ffab596bcd3df4b1cb2d7e3b027062ccdf48db3f8fe0e155c06a1 CONTAINERD_ARM64_SHA256SUM=1fe1c4e53b9e1bb6ec44b642d8673af5d469cfc7d58d45adebb0c0f44c3dd530 CONTAINERD_PPC64LE_SHA256SUM=9b68a98a6b97feb2dac7d0f9f2ab9ad48ce2e4c4ea710b22561cd2d790ada14e RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.0-beta.3-24-g95513021e/runc.amd64 RUNC_AMD64_SHA256SUM=5cd388e4889c458e535ff03f7b970e212277a81057f1817f2822c3872ef3ff07 RUNC_ARM64_SHA256SUM=da114b15e17c572fff52fd23595a16ffc665c594ce4380bb677a605df9cb97a1 RUNC_PPC64LE_SHA256SUM=ed340ee7988bb2a044dda73ef2f672d246aa029fe7d903a391780c5a808986a1 CRICTL_VERSION=v1.20.0 CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.20.0/crictl-v1.20.0-linux-amd64.tar.gz CRICTL_AMD64_SHA256SUM=44d5f550ef3f41f9b53155906e0229ffdbee4b19452b4df540265e29572b899c CRICTL_ARM64_SHA256SUM=eda6879710eb046d335162d4afe8494c6f8161142ad3188022852f64b92806a8 CRICTL_PPC64LE_SHA256SUM=da0c052983ba884f9605b14bf627664df67fcdb41c7f6908368bf4745f889b26 CNI_PLUGINS_VERSION=v0.9.1 CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7 CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0 CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe /bin/sh -c echo \"Ensuring scripts are executable ...\"     && chmod +x /usr/local/bin/clean-install /usr/local/bin/entrypoint  && echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && curl -sSL --retry 5 --output /tmp/containerd.${TARGETARCH}.tgz \"${CONTAINERD_URL}\"     && echo \"${CONTAINERD_AMD64_SHA256SUM}  /tmp/containerd.amd64.tgz\" | tee /tmp/containerd.sha256     && echo \"${CONTAINERD_ARM64_SHA256SUM}  /tmp/containerd.arm64.tgz\" | tee -a /tmp/containerd.sha256     && echo \"${CONTAINERD_PPC64LE_SHA256SUM}  /tmp/containerd.ppc64le.tgz\" | tee -a /tmp/containerd.sha256     && sha256sum --ignore-missing -c /tmp/containerd.sha256     && rm -f /tmp/containerd.sha256     && tar -C /usr/local -xzvf /tmp/containerd.${TARGETARCH}.tgz     && rm -rf /tmp/containerd.${TARGETARCH}.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /tmp/runc.${TARGETARCH} \"${RUNC_URL}\"     && echo \"${RUNC_AMD64_SHA256SUM}  /tmp/runc.amd64\" | tee /tmp/runc.sha256     && echo \"${RUNC_ARM64_SHA256SUM}  /tmp/runc.arm64\" | tee -a /tmp/runc.sha256     && echo \"${RUNC_PPC64LE_SHA256SUM}  /tmp/runc.ppc64le\" | tee -a /tmp/runc.sha256     && sha256sum --ignore-missing -c /tmp/runc.sha256     && mv /tmp/runc.${TARGETARCH} /usr/local/sbin/runc     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -sSL --retry 5 --output /tmp/crictl.${TARGETARCH}.tgz \"${CRICTL_URL}\"     && echo \"${CRICTL_AMD64_SHA256SUM}  /tmp/crictl.amd64.tgz\" | tee /tmp/crictl.sha256     && echo \"${CRICTL_ARM64_SHA256SUM}  /tmp/crictl.arm64.tgz\" | tee -a /tmp/crictl.sha256     && echo \"${CRICTL_PPC64LE_SHA256SUM}  /tmp/crictl.ppc64le.tgz\" | tee -a /tmp/crictl.sha256     && sha256sum --ignore-missing -c /tmp/crictl.sha256     && rm -f /tmp/crictl.sha256     && tar -C /usr/local/bin -xzvf /tmp/crictl.${TARGETARCH}.tgz     && rm -rf /tmp/crictl.${TARGETARCH}.tgz  && echo \"Installing CNI plugin binaries ...\"     && curl -sSL --retry 5 --output /tmp/cni.${TARGETARCH}.tgz \"${CNI_PLUGINS_URL}\"     && echo \"${CNI_PLUGINS_AMD64_SHA256SUM}  /tmp/cni.amd64.tgz\" | tee /tmp/cni.sha256     && echo \"${CNI_PLUGINS_ARM64_SHA256SUM}  /tmp/cni.arm64.tgz\" | tee -a /tmp/cni.sha256     && echo \"${CNI_PLUGINS_PPC64LE_SHA256SUM}  /tmp/cni.ppc64le.tgz\" | tee -a /tmp/cni.sha256     && sha256sum --ignore-missing -c /tmp/cni.sha256     && rm -f /tmp/cni.sha256     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.${TARGETARCH}.tgz     && rm -rf /tmp/cni.${TARGETARCH}.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Disabling udev\"     && systemctl disable udev.service # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-03-11T04:21:22.1231551Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:21:22.1231551Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T04:21:22.1231551Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-11T06:25:29.878633444Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dfd839447483acf154c960f604255ff61780be3d9d5f9c95d326164ebe8beb69",
                    "sha256:7296e683f87460d366c186b86fcb007542705e10560bbc0a6a78689ee2bacca0",
                    "sha256:67b801d22d3f5eba2e24c6049c7bb7e2cfb8b4dca2788bab5b1914b89e1d64e2",
                    "sha256:2f5bffb96fd886eedcdc55ef85d3271e832e808d6d67d062f2db019f66fca94f",
                    "sha256:92270c1680feb3f55ea9dd7a2fa8ec56f6803f562b03f358e518800f451f80e5",
                    "sha256:9fc49e90d48068da1dc57673df54e3b86ec53d263a04e69a331ab79a48caeb84"
                ]
            }
        },
        "v1.20.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2ac43713c7be",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210521-82de8f15",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "2ac43713c7be63444aef0f2445dab18309cd755f6759ba714084cc92dc00b82d",
            "container_config": {
                "Hostname": "2ac43713c7be",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210521-82de8f15",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-05-27T23:32:30.6824093Z",
            "docker_version": "20.10.5",
            "history": [
                {
                    "created": "2021-05-19T19:44:58.412698979Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:218192f8ea2feaa779660a584c540d40170f0041f106bc6a2eb183bd548a588c in / "
                },
                {
                    "created": "2021-05-19T19:44:59.669884049Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:00.598079551Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:45:01.602655934Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:01.800805472Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG TARGETARCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_VERSION=1.5.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/containerd-1.5.2.linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_AMD64_SHA256SUM=1e39c79905adfde0aca9ed7347f37be9fb8b89776f4df829337eeeda983bf422",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_ARM64_SHA256SUM=2aac475f960ee8a3a331256fd80e6ffb5f05328161e0f577d9b8691424a39584",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CONTAINERD_PPC64LE_SHA256SUM=21f7a229c431d0f66616312e437e5b4d01ae56302b0b2aa18ec315ced0876e60",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/runc.amd64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_AMD64_SHA256SUM=ed9896e8c010b2f06cdfb55ec575865f9382e1a599078c06dcbddb86b97be285",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_ARM64_SHA256SUM=75de65187fa809ae92eaeb49cbf725c7d9f226fbc589f84bd637e31aae38c453",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG RUNC_PPC64LE_SHA256SUM=40b42ff58de2e71164f03db931aa70cc0fee6eb35aa96915e23290341ca9fd49",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_VERSION=v1.21.0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_AMD64_SHA256SUM=85c78a35584971625bf1c3bcd46e5404a90396f979d7586f18b11119cb623e24",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_ARM64_SHA256SUM=454eecd29fe636282339af5b73c60234a7d10e4b11b9e18937e33056763d72cf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CRICTL_PPC64LE_SHA256SUM=0770100d30d430dbb67a58119ffed459856163ba01b6d71ac6fd4be7336253cf",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_VERSION=v0.9.1",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "ARG CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:00.5666452Z",
                    "created_by": "COPY files/usr/local/bin/* /usr/local/bin/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.6547833Z",
                    "created_by": "COPY files/etc/* /etc/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.7250266Z",
                    "created_by": "COPY files/etc/containerd/* /etc/containerd/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.8033335Z",
                    "created_by": "COPY files/etc/default/* /etc/default/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.8554085Z",
                    "created_by": "COPY files/etc/sysctl.d/* /etc/sysctl.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.9218921Z",
                    "created_by": "COPY files/etc/systemd/system/* /etc/systemd/system/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:00.9872581Z",
                    "created_by": "COPY files/etc/systemd/system/kubelet.service.d/* /etc/systemd/system/kubelet.service.d/ # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "RUN |22 TARGETARCH=amd64 CONTAINERD_VERSION=1.5.2 CONTAINERD_BASE_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2 CONTAINERD_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/containerd-1.5.2.linux-amd64.tar.gz CONTAINERD_AMD64_SHA256SUM=1e39c79905adfde0aca9ed7347f37be9fb8b89776f4df829337eeeda983bf422 CONTAINERD_ARM64_SHA256SUM=2aac475f960ee8a3a331256fd80e6ffb5f05328161e0f577d9b8691424a39584 CONTAINERD_PPC64LE_SHA256SUM=21f7a229c431d0f66616312e437e5b4d01ae56302b0b2aa18ec315ced0876e60 RUNC_URL=https://github.com/kind-ci/containerd-nightlies/releases/download/containerd-1.5.2/runc.amd64 RUNC_AMD64_SHA256SUM=ed9896e8c010b2f06cdfb55ec575865f9382e1a599078c06dcbddb86b97be285 RUNC_ARM64_SHA256SUM=75de65187fa809ae92eaeb49cbf725c7d9f226fbc589f84bd637e31aae38c453 RUNC_PPC64LE_SHA256SUM=40b42ff58de2e71164f03db931aa70cc0fee6eb35aa96915e23290341ca9fd49 CRICTL_VERSION=v1.21.0 CRICTL_URL=https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.21.0/crictl-v1.21.0-linux-amd64.tar.gz CRICTL_AMD64_SHA256SUM=85c78a35584971625bf1c3bcd46e5404a90396f979d7586f18b11119cb623e24 CRICTL_ARM64_SHA256SUM=454eecd29fe636282339af5b73c60234a7d10e4b11b9e18937e33056763d72cf CRICTL_PPC64LE_SHA256SUM=0770100d30d430dbb67a58119ffed459856163ba01b6d71ac6fd4be7336253cf CNI_PLUGINS_VERSION=v0.9.1 CNI_PLUGINS_TARBALL=v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_URL=https://github.com/containernetworking/plugins/releases/download/v0.9.1/cni-plugins-linux-amd64-v0.9.1.tgz CNI_PLUGINS_AMD64_SHA256SUM=962100bbc4baeaaa5748cdbfce941f756b1531c2eadb290129401498bfac21e7 CNI_PLUGINS_ARM64_SHA256SUM=ef17764ffd6cdcb16d76401bac1db6acc050c9b088f1be5efa0e094ea3b01df0 CNI_PLUGINS_PPC64LE_SHA256SUM=5bd3c82ef248e5c6cc388f25545aa5a7d318778e5f9bc0a31475361bb27acefe /bin/sh -c echo \"Installing Packages ...\"     && DEBIAN_FRONTEND=noninteractive clean-install       systemd       conntrack iptables iproute2 ethtool socat util-linux mount ebtables udev kmod       libseccomp2 pigz       bash ca-certificates curl rsync       nfs-common     && find /lib/systemd/system/sysinit.target.wants/ -name \"systemd-tmpfiles-setup.service\" -delete     && rm -f /lib/systemd/system/multi-user.target.wants/*     && rm -f /etc/systemd/system/*.wants/*     && rm -f /lib/systemd/system/local-fs.target.wants/*     && rm -f /lib/systemd/system/sockets.target.wants/*udev*     && rm -f /lib/systemd/system/sockets.target.wants/*initctl*     && rm -f /lib/systemd/system/basic.target.wants/*     && echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf     && ln -s \"$(which systemd)\" /sbin/init  && echo \"Enabling kubelet ... \"     && systemctl enable kubelet.service  && echo \"Installing containerd ...\"     && curl -sSL --retry 5 --output /tmp/containerd.${TARGETARCH}.tgz \"${CONTAINERD_URL}\"     && echo \"${CONTAINERD_AMD64_SHA256SUM}  /tmp/containerd.amd64.tgz\" | tee /tmp/containerd.sha256     && echo \"${CONTAINERD_ARM64_SHA256SUM}  /tmp/containerd.arm64.tgz\" | tee -a /tmp/containerd.sha256     && echo \"${CONTAINERD_PPC64LE_SHA256SUM}  /tmp/containerd.ppc64le.tgz\" | tee -a /tmp/containerd.sha256     && sha256sum --ignore-missing -c /tmp/containerd.sha256     && rm -f /tmp/containerd.sha256     && tar -C /usr/local -xzvf /tmp/containerd.${TARGETARCH}.tgz     && rm -rf /tmp/containerd.${TARGETARCH}.tgz     && rm -f /usr/local/bin/containerd-stress /usr/local/bin/containerd-shim-runc-v1     && curl -sSL --retry 5 --output /tmp/runc.${TARGETARCH} \"${RUNC_URL}\"     && echo \"${RUNC_AMD64_SHA256SUM}  /tmp/runc.amd64\" | tee /tmp/runc.sha256     && echo \"${RUNC_ARM64_SHA256SUM}  /tmp/runc.arm64\" | tee -a /tmp/runc.sha256     && echo \"${RUNC_PPC64LE_SHA256SUM}  /tmp/runc.ppc64le\" | tee -a /tmp/runc.sha256     && sha256sum --ignore-missing -c /tmp/runc.sha256     && mv /tmp/runc.${TARGETARCH} /usr/local/sbin/runc     && chmod 755 /usr/local/sbin/runc     && containerd --version     && runc --version     && systemctl enable containerd  && echo \"Installing crictl ...\"     && curl -sSL --retry 5 --output /tmp/crictl.${TARGETARCH}.tgz \"${CRICTL_URL}\"     && echo \"${CRICTL_AMD64_SHA256SUM}  /tmp/crictl.amd64.tgz\" | tee /tmp/crictl.sha256     && echo \"${CRICTL_ARM64_SHA256SUM}  /tmp/crictl.arm64.tgz\" | tee -a /tmp/crictl.sha256     && echo \"${CRICTL_PPC64LE_SHA256SUM}  /tmp/crictl.ppc64le.tgz\" | tee -a /tmp/crictl.sha256     && sha256sum --ignore-missing -c /tmp/crictl.sha256     && rm -f /tmp/crictl.sha256     && tar -C /usr/local/bin -xzvf /tmp/crictl.${TARGETARCH}.tgz     && rm -rf /tmp/crictl.${TARGETARCH}.tgz  && echo \"Installing CNI plugin binaries ...\"     && curl -sSL --retry 5 --output /tmp/cni.${TARGETARCH}.tgz \"${CNI_PLUGINS_URL}\"     && echo \"${CNI_PLUGINS_AMD64_SHA256SUM}  /tmp/cni.amd64.tgz\" | tee /tmp/cni.sha256     && echo \"${CNI_PLUGINS_ARM64_SHA256SUM}  /tmp/cni.arm64.tgz\" | tee -a /tmp/cni.sha256     && echo \"${CNI_PLUGINS_PPC64LE_SHA256SUM}  /tmp/cni.ppc64le.tgz\" | tee -a /tmp/cni.sha256     && sha256sum --ignore-missing -c /tmp/cni.sha256     && rm -f /tmp/cni.sha256     && mkdir -p /opt/cni/bin     && tar -C /opt/cni/bin -xzvf /tmp/cni.${TARGETARCH}.tgz     && rm -rf /tmp/cni.${TARGETARCH}.tgz     && find /opt/cni/bin -type f -not \\(          -iname host-local          -o -iname ptp          -o -iname portmap          -o -iname loopback       \\)       -delete  && echo \"Ensuring /etc/kubernetes/manifests\"     && mkdir -p /etc/kubernetes/manifests  && echo \"Adjusting systemd-tmpfiles timer\"     && sed -i /usr/lib/systemd/system/systemd-tmpfiles-clean.timer -e 's#OnBootSec=.*#OnBootSec=1min#'  && echo \"Disabling udev\"     && systemctl disable udev.service # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-21T22:06:27.7660903Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-27T23:32:30.6824093Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1831449c580653ceca3884a1339e75b06a2f85f0856f47fdd65e24c04b1574b7",
                    "sha256:a4711bd62ffb2cc775c8d0513ea136d4842d779364575b4e5e3746aa1ef457f4",
                    "sha256:59a7b5e0e9873ea0d1bb60c3270791061371f303c31cde8aec0e1eea1e6098b5",
                    "sha256:d1123620da173b34adc3b6622223c77f326cc9296f72033f9b333a84237f046a",
                    "sha256:27e8e8548e746c270f93527122b6dc2c0f04048450fa6783c6260433451b03df",
                    "sha256:94a557da6f32c93d187785e2bd98d911d51522d8c5ebdd8235927c1135d71eba",
                    "sha256:904e4a9a0839011a48bbc1ee5f211cbb88530f987a5fedee3cb9f178d0af9869",
                    "sha256:7f6e587cd728226c879c201dba6f870af31a9b079174b9bd5bad8c55cd23b9d6",
                    "sha256:a1e46c95135f4afeeae70bac37beaf5c8d713cee4bb68bee2d8baa5c4161fc22",
                    "sha256:c3433c982ca6522a4a76e2c1ceffe60fd9d77306e7c77f97e39cf07ce0e5cf7e",
                    "sha256:99793c9223da1cd167b7dc1703cbbe86e79e3c00f9c9f59aab57d890e7199702",
                    "sha256:164005ab4472ab18c59a62dee99e190ab0c953b5df8da3af2ef5aad9cf09d298"
                ]
            }
        },
        "v1.21.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3bf8a5772cdd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210621-eac362b7",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "container": "3bf8a5772cddcade5be3eb671f3410fc204c567a72a09c2387864ef86cd44fe7",
            "container_config": {
                "Hostname": "3bf8a5772cdd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210621-eac362b7",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-22T04:49:06.720494134Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-06-22T04:36:04.7958723Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-22T04:49:06.720494134Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a10fb23247c01362fdebf41fc20111c1f7f5f9af6683674bad74152c51e7b94f",
                    "sha256:ed4e937694d2020e11ad661c21bea9bb6161919516fff51e6b49f2bf3a2e1c26"
                ]
            }
        },
        "v1.21.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "aa50f9f14244",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "aa50f9f14244259ad2ab7ddfb29480a074fc14fdd456e6e78d9a8755e729d809",
            "container_config": {
                "Hostname": "aa50f9f14244",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-07T09:08:07.976951201Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-07T09:08:07.976951201Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:260779edcb338d0901a8948982cd736cbc00128854ceacff4d9743d7f6b66d9a"
                ]
            }
        },
        "v1.21.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "ae0d47ff108b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220518-0ffcf8d6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "ae0d47ff108b4e7de339ebba73757c005f59b4c4dfea7824e2e6015fec53c176",
            "container_config": {
                "Hostname": "ae0d47ff108b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220518-0ffcf8d6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-05-19T20:04:14.388656455Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T20:04:14.388656455Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4087eb904dc70c8c83de88cbc941e363875e2c3c2094ebdc7afea0ccf5dfd82a",
                    "sha256:dda43a88047dc521cf9aa33c9f334baab6cc8dc0c574ff6f1c8febf1a0127862"
                ]
            }
        },
        "v1.21.14": {
            "architecture": "amd64",
            "config": {
                "Hostname": "0803d3b4d4ea",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "0803d3b4d4eaa52dd85b3d1bbaa672a92fc1ed42bb49ff54be675802ad742491",
            "container_config": {
                "Hostname": "0803d3b4d4ea",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-06-15T02:43:43.071446362Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-15T02:43:43.071446362Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:e4234fdb2f09fffddbf781a2912dc897878176c768533d2e06e21ca3784dbeff"
                ]
            }
        },
        "v1.21.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9f18a53cd1b2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210712-e05318fb",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9f18a53cd1b2b83b953eaf42947c3400f7d7c8d3d5603ef4ce63b63f83b41673",
            "container_config": {
                "Hostname": "9f18a53cd1b2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210712-e05318fb",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-07-12T20:42:17.125815426Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-06-29T23:23:33.4373425Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-06-29T23:23:33.4373425Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T23:23:33.4373425Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-29T23:23:33.4373425Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-12T20:42:17.125815426Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9c3327b2e92f0233acbd19f84188bca061ed02f180f486b4301df940eacaf901",
                    "sha256:a9a650709b4cb7e626fbb82e302ea3987348cb58f45458e1240394c3c84b5c27"
                ]
            }
        },
        "v1.22.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "0a4a7abc7a7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210729-302b42d2",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "0a4a7abc7a7b374412775ff7bdd85f0aba504e3d7c2a07e46dba76f928660ea7",
            "container_config": {
                "Hostname": "0a4a7abc7a7b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210729-302b42d2",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-08-04T20:03:32.559181142Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-07-29T22:02:56.0607468Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-07-29T22:02:56.0607468Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T22:02:56.0607468Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-29T22:02:56.0607468Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T20:03:32.559181142Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f2ccafb8ac6b5839049c99654ace17abf0194865773df9e9a30e92051663f7a",
                    "sha256:d56d8ac7ff162a841c1667d6f0c1544de7ea5647bc061ebf261feda86589834f"
                ]
            }
        },
        "v1.22.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "1608e41a1c36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20210825-547e6628",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "1608e41a1c36cf70f2540f6b7de11c5837af4fdc963e5293b8e16a1ccf96b1a9",
            "container_config": {
                "Hostname": "1608e41a1c36",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20210825-547e6628",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-08-25T19:56:28.424268864Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-08-25T18:19:16.6020473Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-08-25T18:19:16.6020473Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-25T18:19:16.6020473Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-25T18:19:16.6020473Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-25T19:56:28.424268864Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:caf552dd947fd62ce8ed83861f9d546346f5e1fcd1c3966286319e5ee5a6cf94",
                    "sha256:fca3a20a262d345deb455d96d616c6b8ed3c255810a4aa297dcbc5be8ab36885"
                ]
            }
        },
        "v1.22.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "0bf50081b6e8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "0bf50081b6e824baedf3dd5f96f81270bac7c0e8ab16cc819d6ff989d5415c29",
            "container_config": {
                "Hostname": "0bf50081b6e8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-02T00:15:30.710873748Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-02T00:15:30.710873748Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:214126d9fb85bceae4ca3f4367c5a2f4b522519b54b0a33522f60049c2166516"
                ]
            }
        },
        "v1.22.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "7cf26da157ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "7cf26da157eed404b87135bb47db044a80222f6d98e0b68efffa739995ee2417",
            "container_config": {
                "Hostname": "7cf26da157ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-10-26T15:21:46.598608929Z",
            "docker_version": "20.10.19",
            "history": [
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T15:21:46.598608929Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:20ce6fa94f297a809c755dd996c6e031f1953f4e0851731eb4d92e3ee1109b0c",
                    "sha256:7eb9ddd3995df82ca1225bd07a526f17eef8ca0334589b6e419f92d074c9fb9f"
                ]
            }
        },
        "v1.22.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "557e88d52186",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "557e88d521868022cefbf39ef7755e36ab0e08b5b8bf199e74842891a787a94a",
            "container_config": {
                "Hostname": "557e88d52186",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-06-15T02:31:35.985542713Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-15T02:31:35.985542713Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:cf3baeb590d2cf895f7f4d54f2c1a2bbc1598b2799223e83fbcf1972168d3ac0"
                ]
            }
        },
        "v1.22.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "baff7bd78012",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20211104-3ce0e0af",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "baff7bd780128108b1e6935d918fe8b3ff3c144181e8b965eb45684bb8b763f8",
            "container_config": {
                "Hostname": "baff7bd78012",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20211104-3ce0e0af",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-11-04T09:43:01.299476706Z",
            "docker_version": "20.10.8",
            "history": [
                {
                    "created": "2021-11-04T09:05:48.127975817Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-04T09:05:48.127975817Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-04T09:05:48.127975817Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-04T09:05:48.127975817Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-04T09:43:01.299476706Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9bcd9b4dac5e50c3c20e8407be3e9b9739dca474e76ffe198f2b43605699fbe7",
                    "sha256:a13ae81b8a16eec5a5019268954e292e2c2f7ce783189eb2b7b7497c8fda6177"
                ]
            }
        },
        "v1.22.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "24e54e57e47d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20211122-a2c10462",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "24e54e57e47ddbcfb46da333a748e7fab357ee91db12c6de2ff2d8c53d44b087",
            "container_config": {
                "Hostname": "24e54e57e47d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20211122-a2c10462",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-11-23T01:41:15.600602742Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-11-23T00:40:14.473841867Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-11-23T00:40:14.473841867Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-23T00:40:14.473841867Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-23T00:40:14.473841867Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-23T01:41:15.600602742Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61ca4d999f0a8be548b1da397268e66b9784ee8389095e11718713be8142c246",
                    "sha256:6b44c73d7d589736bffb8c54e860ad2bbb6b150e52b6de8d7fe640ff4bb4e0d7"
                ]
            }
        },
        "v1.22.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "b0658bf07b56",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220106-a11d619c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "b0658bf07b565e472cfa2cc7ff8c04c7128b3f3c5e35bb93dfd68bd9fd1399e7",
            "container_config": {
                "Hostname": "b0658bf07b56",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220106-a11d619c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-02-07T15:58:13.901901167Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-07T15:58:13.901901167Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c01f2fa852c2526531ae5444d0bdb6a837962384badf987325609bdc0b6cf829",
                    "sha256:2842bfc406efb7380a7e92e6a317b4960c688c3615f70de42f1efe723a55362e"
                ]
            }
        },
        "v1.22.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "bc00554568c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "bc00554568c2703dc2b413d6112546c2f3ee78383574d38aaa7059b3dfe22138",
            "container_config": {
                "Hostname": "bc00554568c2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-06T21:11:44.350855672Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-06T21:11:44.350855672Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:35c358369fb4710d6e7597efc33d2e26b27ef249ee622365744958df59a18b82"
                ]
            }
        },
        "v1.22.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "f2d8063317b5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220518-0ffcf8d6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "f2d8063317b5294ebeef473191878221c189cc6319a26acb2d6c759f98e97770",
            "container_config": {
                "Hostname": "f2d8063317b5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220518-0ffcf8d6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-05-19T19:54:55.976940599Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T19:54:55.976940599Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4087eb904dc70c8c83de88cbc941e363875e2c3c2094ebdc7afea0ccf5dfd82a",
                    "sha256:0f1fce3fa1a0afd87b6e3a219e43f7843e2a410918ad5c8fc4df3939cedeef81"
                ]
            }
        },
        "v1.23.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "18b89f37cbd6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20211207-cbd9dda6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "18b89f37cbd605aaa360e06101d4346ee5b6a74e37ac5bcab473a1690524f21f",
            "container_config": {
                "Hostname": "18b89f37cbd6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20211207-cbd9dda6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2021-12-08T00:31:30.727688605Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2021-12-08T00:17:50.126867988Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2021-12-08T00:17:50.126867988Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-08T00:17:50.126867988Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-08T00:17:50.126867988Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-08T00:31:30.727688605Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:42e9a560e2c97e4a387a2555a6657b1c506a95ce62049f2dbba1f08e7aa4222c",
                    "sha256:e2149014720873b202ac2333a76c84eb2aa8a2dd568da008cec5fef5424b9eb5"
                ]
            }
        },
        "v1.23.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "6f5721457db4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220106-a11d619c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "6f5721457db48e9c872024b82eedb1ecfab4a24a64ec5ef1cf8fbd7cb7efd344",
            "container_config": {
                "Hostname": "6f5721457db4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220106-a11d619c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-01-06T22:16:06.822093986Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:16:06.822093986Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c01f2fa852c2526531ae5444d0bdb6a837962384badf987325609bdc0b6cf829",
                    "sha256:d027177f16745e506b6cd206acace2f2516ed1d31824ad79781ea67a0acc7387"
                ]
            }
        },
        "v1.23.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "b52ebf54ac7d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "b52ebf54ac7d97f328fa58a9238b6371a0d0064b5439e1a2d31557e67ae2f670",
            "container_config": {
                "Hostname": "b52ebf54ac7d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-02T00:02:59.921333352Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-02T00:02:59.921333352Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:970514d4ca1803f62fc2d6d25b4f7defa46c5e7b57ecb8ba2359be0b913bd7df"
                ]
            }
        },
        "v1.23.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "dacb49d1944d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220922-155e503a",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "dacb49d1944d108437208bb1808208e1eff28ba59ca596f6c1eed0ea9e053829",
            "container_config": {
                "Hostname": "dacb49d1944d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220922-155e503a",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-22T06:05:35.720216339Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T06:05:35.720216339Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ff9e3c0683fb31e50917bb274682de001791cecdba784066a94234a75690fd31",
                    "sha256:3fd7863aea8f7b596e669bb75e39649ced0b3e8f0745a2c848cd3e68f846a555"
                ]
            }
        },
        "v1.23.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "82e219ab76c1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "82e219ab76c1429da0c1f501f48b4359d9957cb48d6aef025dc098231cfdd580",
            "container_config": {
                "Hostname": "82e219ab76c1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-10-26T15:21:37.598404962Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T15:21:37.598404962Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:20ce6fa94f297a809c755dd996c6e031f1953f4e0851731eb4d92e3ee1109b0c",
                    "sha256:fdbe6e97b2b6a436766f2caf128f0b610d504cf18b40c582689ffe5c3711148d"
                ]
            }
        },
        "v1.23.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "8efb619a230a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "8efb619a230abded42b4a2a63159a3b34429898f20ffe686b6068f34b54c1069",
            "container_config": {
                "Hostname": "8efb619a230a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T00:58:34.803728029Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T00:58:34.803728029Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:27631f7c3bd272ba46900858cdd66808bca22e3500a32ade9e31f57572892c40"
                ]
            }
        },
        "v1.23.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "d75127a29811",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220106-a11d619c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "d75127a29811c39d29026fffb77b5061b2b02774440beed7c4cefc27105e78ff",
            "container_config": {
                "Hostname": "d75127a29811",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220106-a11d619c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-01-26T08:07:11.322274841Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-06T22:03:01.328399414Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-26T08:07:11.322274841Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c01f2fa852c2526531ae5444d0bdb6a837962384badf987325609bdc0b6cf829",
                    "sha256:412af0c9748280aee3a49b1b2f2245581fa68aae2d7faee573bbdb4601ec49de"
                ]
            }
        },
        "v1.23.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "124e4cea17a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "124e4cea17a2b1ea1b9876fc7a4ba1adef726501683b660399df3fe881568828",
            "container_config": {
                "Hostname": "124e4cea17a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220305-b67a383f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-06T21:37:35.65429374Z",
            "docker_version": "20.10.11",
            "history": [
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-05T20:40:40.9644825Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-06T21:37:35.65429374Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d4a5fb3d177f5aade5a4cf983d7f86be8f8ffdcc31b542a3f984e4dcc200b6e6",
                    "sha256:56a6f3bcff192073e45e6093710cdbe0f7de07820526440d0685ae2854c8a08c"
                ]
            }
        },
        "v1.23.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "ad30a7e9da32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220324-837a3da8",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "ad30a7e9da32b44623e4386a69a81669fbfa3113baa5390682d2f07ef0329b20",
            "container_config": {
                "Hostname": "ad30a7e9da32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220324-837a3da8",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-03-24T22:09:01.165062737Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-03-24T21:32:46.368693386Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-03-24T21:32:46.368693386Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-24T21:32:46.368693386Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-24T21:32:46.368693386Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-24T22:09:01.165062737Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6a1402aa2c8de1e6c782a0458ffd2c8b44dfe8f89031edcc50843ad5980af9b0",
                    "sha256:a22e8f8c1a415d1ad8dd44f3a3bc526b56dbf5ffb770b4eda5bb6959d9e622bb"
                ]
            }
        },
        "v1.23.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2b9fa090afb9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220518-0ffcf8d6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "2b9fa090afb93cb3c8a53520bd6f821352c483250a5e74f0c508b9ec45b30cd0",
            "container_config": {
                "Hostname": "2b9fa090afb9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220518-0ffcf8d6",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-05-19T19:41:25.991194932Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T04:25:56.825124163Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-19T19:41:25.991194932Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4087eb904dc70c8c83de88cbc941e363875e2c3c2094ebdc7afea0ccf5dfd82a",
                    "sha256:511029daf6d4efc6936158954c5c2a4f038f771f1fbeacddec931515ceb02a02"
                ]
            }
        },
        "v1.24.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3c15f57c8d4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220525-316e1160",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "3c15f57c8d4d5e94c386e26b580dae0a09fdaf278627d617dd25cad72da66ac9",
            "container_config": {
                "Hostname": "3c15f57c8d4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220525-316e1160",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-05-25T22:57:42.604636351Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T22:57:42.604636351Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b5c88dc6be713c9071cc939cab6bfe991221c07e5c6360d94d72c021a7f434df",
                    "sha256:bf90945a3109300f7bb2f4b9314e935b6ef1e0f264d0f59e86b4bcc050c4d792"
                ]
            }
        },
        "v1.24.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9675976230a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220525-316e1160",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9675976230a61ee8b81213473918985b5a46eaadaf8bef77cd93b0a1d314aebd",
            "container_config": {
                "Hostname": "9675976230a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220525-316e1160",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-05-27T21:03:34.528314445Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-25T22:37:52.320962328Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-27T21:03:34.528314445Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b5c88dc6be713c9071cc939cab6bfe991221c07e5c6360d94d72c021a7f434df",
                    "sha256:423d972b4a1db466db762bcfa61795222435ee043fd7394dd2e7121979acf775"
                ]
            }
        },
        "v1.24.12": {
            "architecture": "amd64",
            "config": {
                "Hostname": "634eea78b6d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "634eea78b6d11a7a3f66610a5746a3d605a1a5dc5dba7107408026845cb690c4",
            "container_config": {
                "Hostname": "634eea78b6d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-03-30T17:57:29.306310283Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T17:57:29.306310283Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:76b4d80068965c2d9a0252ff98318aed5c27fe1478fa7848969e4773655fe9d0",
                    "sha256:dcb9a37fc634c385d271938c5f45adf40e466c4b485f75800a5f0ef52ec5422c"
                ]
            }
        },
        "v1.24.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "f9bc4eeff3ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "f9bc4eeff3ac334d4550103275291d7909562dc0404723a44d579aae65ff173e",
            "container_config": {
                "Hostname": "f9bc4eeff3ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-05-16T23:43:54.548223075Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-16T23:43:54.548223075Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09c6e2e65adff321a25b12890bce92f232e3f21da151ed6431c0de71a769c076",
                    "sha256:59f1ff6f8c14dc4aeae85a537bf729ac1d334350ae64fd8557dc2b03419ba5a1"
                ]
            }
        },
        "v1.24.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "8fb5b67984f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "8fb5b67984f46bd0af368d56fc2e59eba4932fa0a48e8f220ccb5c34749ccf85",
            "container_config": {
                "Hostname": "8fb5b67984f4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-06-15T01:10:24.798332866Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-15T01:10:24.798332866Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:00417b459a18e75701294c79c24901f85a42ae1cf8600f592afa3197a841ddf6"
                ]
            }
        },
        "v1.24.17": {
            "architecture": "amd64",
            "config": {
                "Hostname": "c02d252d17ed",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "c02d252d17eda219ff9b54baa8d7b32e73d8340c28f650fcf5f91b4d344ec39b",
            "container_config": {
                "Hostname": "c02d252d17ed",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T00:49:20.492056761Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T00:49:20.492056761Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:1ec477be9be9ce5c4413ae4ba6691aaf965f59039e7c23c0931e0c1c9d3863e9"
                ]
            }
        },
        "v1.24.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5047abd1de32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220623-3a47e971",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "5047abd1de329211aa85794bbc6ddd9a4075e662565ecf39aba9add1358c7bf0",
            "container_config": {
                "Hostname": "5047abd1de32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220623-3a47e971",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-06-23T22:21:49.051171952Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-06-23T22:08:58.154448177Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-06-23T22:08:58.154448177Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T22:08:58.154448177Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T22:08:58.154448177Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-23T22:21:49.051171952Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2dfb3d139af5b66a63893097a2892fadf479210f900d23c89e20eacff7f5597",
                    "sha256:63158d144e5705fe40bc95907158756a21b5d963a1a417f3e170ed16f964efc9"
                ]
            }
        },
        "v1.24.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "2d8d10e08f68",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "2d8d10e08f68dbcf41c2f3e58ce35f4bb790a900117a6fc568baeccf7c1cdfa4",
            "container_config": {
                "Hostname": "2d8d10e08f68",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-08-11T22:47:26.311339535Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:47:26.311339535Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:204dc9c5b133abf5e41ff1b62ad64a5d199eca724b81e8bef3e2520219110232"
                ]
            }
        },
        "v1.24.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "e183aa314ada",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "e183aa314ada194db4f77e985149ee6afba6f2b0d28bcb7d64e5133a610b1b89",
            "container_config": {
                "Hostname": "e183aa314ada",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-01T23:48:54.621791353Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-01T23:48:54.621791353Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:8013037ba04c6491ab1b6e0d728033b9dda2fe8b6db6024e5d2900156c9b436f"
                ]
            }
        },
        "v1.24.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "70e6e5f154ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220922-155e503a",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "70e6e5f154acb1f63010f6fb5929de11ef35229f7c0dacb5718d7cab2b733aee",
            "container_config": {
                "Hostname": "70e6e5f154ac",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220922-155e503a",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-22T05:52:25.557959698Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T05:52:25.557959698Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ff9e3c0683fb31e50917bb274682de001791cecdba784066a94234a75690fd31",
                    "sha256:406cea7e8e3274db5daedfd58013385d25d728b1739debc1aa90228b80d0c0d3"
                ]
            }
        },
        "v1.24.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9e8aa132c1f1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9e8aa132c1f19a9fd6a2600ade158829edc127516b10f417731d31950ba677e8",
            "container_config": {
                "Hostname": "9e8aa132c1f1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221025-014d1502",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-10-26T15:08:18.441889305Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-25T18:52:21.408392579Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-26T15:08:18.441889305Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:20ce6fa94f297a809c755dd996c6e031f1953f4e0851731eb4d92e3ee1109b0c",
                    "sha256:3703f95dab14484d1248e0745ffa226f21a31588e3291409ce4f0605b5bba21f"
                ]
            }
        },
        "v1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "76c03826162c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "76c03826162c9ef10c18c8da14433d2363779e63c6af05fe72ceee4ced1f332b",
            "container_config": {
                "Hostname": "76c03826162c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-01T23:32:49.821835424Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-01T23:32:49.821835424Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:1101a6148d1b6ce7ca7edb18e3a7bb1798055a75437312ed691ff9d82a01b234"
                ]
            }
        },
        "v1.25.0-beta.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "855968a8ba04",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220808-a2dcbb47",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "855968a8ba0447d2cd3353756df4873a77496508cb6e29def64d84a6c40feaea",
            "container_config": {
                "Hostname": "855968a8ba04",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220808-a2dcbb47",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-08-08T21:03:41.715261342Z",
            "docker_version": "20.10.2",
            "history": [
                {
                    "created": "2022-08-08T20:48:56.058585242Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-08T20:48:56.058585242Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-08T20:48:56.058585242Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-08T20:48:56.058585242Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-08T21:03:41.715261342Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22aedc196bdda013b76e047b13299f96e9582b391fd1005ddee89fd27d44c277",
                    "sha256:630f43e9e9932aa6d9063a019ec2767fb66eb7da02ecde7e4b032db1547dbad8"
                ]
            }
        },
        "v1.25.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9413a30e3fc6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9413a30e3fc6d3c9f3d6bda53b8ac5768a014957f9026497dc03d84cda74fd29",
            "container_config": {
                "Hostname": "9413a30e3fc6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220811-20da9c7c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-20T21:51:39.80416479Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-11T22:38:29.616978542Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-20T21:51:39.80416479Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:acc1d4c4a568680067526f4be7e183db8755b1eb18093a963fec8ccf65f5fbbe",
                    "sha256:c628da49310479907b040d98e9b9cc6b87fc44e6feed6c7503d106d5b4542351"
                ]
            }
        },
        "v1.25.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "7d280793219b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "7d280793219b91e9be6d4692527caf4c30beb6a8dc532dbc3be3bc71946e1c85",
            "container_config": {
                "Hostname": "7d280793219b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-06-15T00:57:08.956678795Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-15T00:57:08.956678795Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:7cc7cc94ac751b2903f7ec3bc81b2f2779280cb8701fc2c660661d10826a07fe"
                ]
            }
        },
        "v1.25.16": {
            "architecture": "amd64",
            "config": {
                "Hostname": "dba145ce3fb2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "dba145ce3fb242a4a602cdbfe34b966c867aaded36cf6d847c961ce1a4ec96fa",
            "container_config": {
                "Hostname": "dba145ce3fb2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-05-14T01:52:40.888569259Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T01:52:40.888569259Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d1c43f52ec3e483f3d44bb8ce5bdf39934cbf08ccafa874a48623f49bb848f96",
                    "sha256:25349f57bee26bac52dd96146aeb8438ab5783dc987a3a70aae19baf030df3b9"
                ]
            }
        },
        "v1.25.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "87fb354d209e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20220922-155e503a",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "87fb354d209e9574f18691282601a9ce67d3c6c808938add64bd8504befef25c",
            "container_config": {
                "Hostname": "87fb354d209e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20220922-155e503a",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-09-22T05:27:01.739750952Z",
            "docker_version": "20.10.17",
            "history": [
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T03:58:33.138415104Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-09-22T05:27:01.739750952Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ff9e3c0683fb31e50917bb274682de001791cecdba784066a94234a75690fd31",
                    "sha256:9ca713d4c0a663984f32f86ab0a38b564a77c85d23494d3b273f55fc04e55dd1"
                ]
            }
        },
        "v1.25.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9d465b0ed75f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221102-76f15095",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9d465b0ed75f4a29f58913c0988104f728e36da6ced39e467ed1ce9a7b2f5c3c",
            "container_config": {
                "Hostname": "9d465b0ed75f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221102-76f15095",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-11-02T03:23:49.55089881Z",
            "docker_version": "20.10.19",
            "history": [
                {
                    "created": "2022-11-02T03:16:44.920942357Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-11-02T03:16:44.920942357Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T03:16:44.920942357Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T03:16:44.920942357Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-02T03:23:49.55089881Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1b2cf029cc9907c94860df86a78aad374659b21ca9bb53b89afe516e96180c34",
                    "sha256:6c2ec615b9bed71a8eb2c18cc893166a50c0421b80116e8bc08180d8d0da4e8d"
                ]
            }
        },
        "v1.25.8": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5245c5f029a1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "5245c5f029a1d07a35c755eefa290374bda96996c1b7d6ee993cf834515b0544",
            "container_config": {
                "Hostname": "5245c5f029a1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-03-30T17:22:02.279325286Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T17:22:02.279325286Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:76b4d80068965c2d9a0252ff98318aed5c27fe1478fa7848969e4773655fe9d0",
                    "sha256:ef14da520c91848b896670c7c3257fa5f1306bf94fd053a30a7d1ee5ca26b8ac"
                ]
            }
        },
        "v1.25.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "3b67654abe6d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "3b67654abe6d006a130a34d415b6c8ff235b58bdbdcbf881dc4dd4ee85db82d8",
            "container_config": {
                "Hostname": "3b67654abe6d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-05-16T23:54:04.671393164Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-16T23:54:04.671393164Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09c6e2e65adff321a25b12890bce92f232e3f21da151ed6431c0de71a769c076",
                    "sha256:e7f223a268ac63444c169b24055da0e983228f0ff17c2a5f2833ea32605b4257"
                ]
            }
        },
        "v1.26.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a5bb82701f3a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20221214-df207207",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a5bb82701f3a1762b1c86540327bd4106e41e6772be0910abdea4b4125afc519",
            "container_config": {
                "Hostname": "a5bb82701f3a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20221214-df207207",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2022-12-20T03:36:35.176496673Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2022-12-14T22:29:25.547887218Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-12-14T22:29:25.547887218Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:29:25.547887218Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-14T22:29:25.547887218Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-20T03:36:35.176496673Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ca9f058da292d3509f171c5b74254099c0a16acf0f61937dd878c3316ffb21bb",
                    "sha256:250b0034f84363d4d125cbef60ab56b331afcbe818e5de7358251aac4c788f2a"
                ]
            }
        },
        "v1.26.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "dbc9fd4922af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "dbc9fd4922af8c6ab77b80163cb32aae361c97fb5384bd9f5c824fddadfa5ee6",
            "container_config": {
                "Hostname": "dbc9fd4922af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T00:33:54.799489582Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T00:33:54.799489582Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:20566857295ad235500866874e267362323d3916f80daa5442a9952ed675a634"
                ]
            }
        },
        "v1.26.14": {
            "architecture": "amd64",
            "config": {
                "Hostname": "63fd4087645d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "63fd4087645d8c9df9ceaf09dbd041d2b55a23606d964ac2c109f83c7df5b9d0",
            "container_config": {
                "Hostname": "63fd4087645d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T23:10:59.404512373Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T23:10:59.404512373Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:3e05f830858e649a660668af0d23ebbe1078abe36292c0a2b454c4565536a896"
                ]
            }
        },
        "v1.26.15": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5f4679a34c32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "5f4679a34c323f3561302e2656dcd5364a95d3663db3f2a8d08595154ca6a207",
            "container_config": {
                "Hostname": "5f4679a34c32",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-05-14T01:44:16.117495202Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T01:44:16.117495202Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d1c43f52ec3e483f3d44bb8ce5bdf39934cbf08ccafa874a48623f49bb848f96",
                    "sha256:aba0e8cb12a97e4065e1581182f2c00f16b470e83f5fb2ce65db429a20709ae0"
                ]
            }
        },
        "v1.26.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "839817726f7f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230310-474355fc",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "839817726f7ff41c064a3bd52ba593ebf26fdc9745b28bf456894cb6c8b1e72c",
            "container_config": {
                "Hostname": "839817726f7f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230310-474355fc",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-03-10T21:13:58.725003746Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-03-10T21:04:08.048679877Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-10T21:04:08.048679877Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-10T21:04:08.048679877Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-10T21:04:08.048679877Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-10T21:13:58.725003746Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8073a6d3f1d7942a28a9da453b947dd4143891d81b3dc34060ec5c5277712615",
                    "sha256:20f0f2de52bf7c9f71b8371d6972a43306eadcd115688a675a8271c24132522b"
                ]
            }
        },
        "v1.26.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "cc9abd3f97cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "cc9abd3f97cc9b326943ab4acaf8093fb911cd87d24e8b35ea789427c795646b",
            "container_config": {
                "Hostname": "cc9abd3f97cc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-03-30T06:36:16.701134898Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T06:36:16.701134898Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:76b4d80068965c2d9a0252ff98318aed5c27fe1478fa7848969e4773655fe9d0",
                    "sha256:69c32408837cda8a12ed7ae46e3aa515a7327b05f190e6b01ab48e8c415dc63a"
                ]
            }
        },
        "v1.26.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "279f31822b04",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "279f31822b045d5ee15b44e175603424920135c7d7963c113bb9596778c90516",
            "container_config": {
                "Hostname": "279f31822b04",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-05-17T00:02:51.172860766Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-17T00:02:51.172860766Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09c6e2e65adff321a25b12890bce92f232e3f21da151ed6431c0de71a769c076",
                    "sha256:0fbae6fd121762ca78c296fc1dda0e7a0f96cc8a9996ac1f42e0f227bc72a765"
                ]
            }
        },
        "v1.26.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "9368ff0cad4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "9368ff0cad4d72d3ea212de2f9cfeb2e700e323d0b08ef11fc2838632c5e328a",
            "container_config": {
                "Hostname": "9368ff0cad4d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-06-15T00:47:03.534441965Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-15T00:47:03.534441965Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:b697d9057331b7262e9f1c87d16506fe94302616b6da078637d10e151d77ba44"
                ]
            }
        },
        "v1.27.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "000b17bb0bb6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "000b17bb0bb69da9075167a162843cbb1b9151b08be32f5047f1852122bfba70",
            "container_config": {
                "Hostname": "000b17bb0bb6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230330-89a4b81b",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-04-11T20:52:26.410671634Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-03-30T01:42:51.558066896Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-11T20:52:26.410671634Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:76b4d80068965c2d9a0252ff98318aed5c27fe1478fa7848969e4773655fe9d0",
                    "sha256:6312f071bc60d9e0b247a6b9d313e4dcc1e6589c3048bc187e15868efb8f13da"
                ]
            }
        },
        "v1.27.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "7e5b9097c6a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "7e5b9097c6a648fca7783dd0da64dfb3deea0d6f39d53e8dbaf99058ddb8c7c7",
            "container_config": {
                "Hostname": "7e5b9097c6a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230512-4855a7f1",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-05-12T19:05:07.988506822Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T00:53:26.971955147Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T19:05:07.988506822Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09c6e2e65adff321a25b12890bce92f232e3f21da151ed6431c0de71a769c076",
                    "sha256:8431dc7bef8488751a56dc904a11d8e8b48258ed3896976984a574af6929f7ba"
                ]
            }
        },
        "v1.27.10": {
            "architecture": "amd64",
            "config": {
                "Hostname": "600845d9b6c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "600845d9b6c83f60eb7bbf5bb20f2b0d7fa8c399e475b614011e39c49cca83ee",
            "container_config": {
                "Hostname": "600845d9b6c8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T00:27:31.105018421Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T00:27:31.105018421Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:bbf48566e297173894ad5418e1b9f0b22db3ac11445c6e670b4ff832c8118441"
                ]
            }
        },
        "v1.27.11": {
            "architecture": "amd64",
            "config": {
                "Hostname": "04a0625e80fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "04a0625e80fa1a02646e12057c18415715c85277489a2b4e1a8b0c92bd656a9c",
            "container_config": {
                "Hostname": "04a0625e80fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T22:46:51.815135637Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T22:46:51.815135637Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:cb5ad97dc9b4c4a6af45cd5f66b8aece522bca8c986d63f186735945b8ef35e5"
                ]
            }
        },
        "v1.27.13": {
            "architecture": "amd64",
            "config": {
                "Hostname": "aea80e253187",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "aea80e253187a24b37d3b11cb8a8c8c5f2fb758b79c3d4389b6179339ab254d8",
            "container_config": {
                "Hostname": "aea80e253187",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-05-14T01:35:20.521813843Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T01:35:20.521813843Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d1c43f52ec3e483f3d44bb8ce5bdf39934cbf08ccafa874a48623f49bb848f96",
                    "sha256:2c3a493ce68954b45adfd4324a8a4894be74f0032dd9a097a9aff5f93724d21a"
                ]
            }
        },
        "v1.27.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "c7c262fdf1fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "c7c262fdf1fdf748fbc27af22e77594dbdf3861c41c34a3f5cfe8c9c4f65d14d",
            "container_config": {
                "Hostname": "c7c262fdf1fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-05-25T23:30:48.165631337Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:30:48.165631337Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:50e757c0652d9b8fa61ce100f79d4be64353913f98945f6ceec8a1af3f9e2f49"
                ]
            }
        },
        "v1.27.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "72211597e55b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "72211597e55bc8e30d9a036ec9f9cd51b1be72af3d38ea3fb446f631ddb36e8d",
            "container_config": {
                "Hostname": "72211597e55b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-06-15T00:37:59.422238833Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-15T00:37:59.422238833Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:bf735ea575cfa992cd4cf05ac9f3e921fb7da7985c8862360540e49414b6c22d"
                ]
            }
        },
        "v1.28.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "5bb6d2c8225d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "5bb6d2c8225dce53b8cb3fbec28aaf1539eb2cb98edf73a9cec27a5a90c63a7b",
            "container_config": {
                "Hostname": "5bb6d2c8225d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-08-15T21:26:23.805326839Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-15T21:26:23.805326839Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:0cd0c60b819e1d42da3f60f1fb3f9913481c9aad0e3b54ae9fde96d93cacec9b"
                ]
            }
        },
        "v1.28.6": {
            "architecture": "amd64",
            "config": {
                "Hostname": "34dd7c2110f5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "34dd7c2110f5a4a6c4b82f29f5442bcc9b8f3d544c1a48754608e2c9e388ffc3",
            "container_config": {
                "Hostname": "34dd7c2110f5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T00:21:11.448718057Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T00:21:11.448718057Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:fedd0699af1412293fa87dc8c32ea12349c8e408585ce907115a819d03aea2c2"
                ]
            }
        },
        "v1.28.7": {
            "architecture": "amd64",
            "config": {
                "Hostname": "c0583a182848",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "c0583a182848bff383532fd9aa3e71ceaa38abbe0dd5e5c6178b4f55fb5a5781",
            "container_config": {
                "Hostname": "c0583a182848",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T22:40:00.504760007Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T22:40:00.504760007Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:f1852cecaf35a2df91b33a2cb815a739b4922cd883aa13b0d34dc25263157dd6"
                ]
            }
        },
        "v1.28.9": {
            "architecture": "amd64",
            "config": {
                "Hostname": "1858613f8a94",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "1858613f8a94f8de96fb2181d4715e915f8d4fd3e073defc7c503fae7aa77e86",
            "container_config": {
                "Hostname": "1858613f8a94",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-05-14T00:20:20.484422838Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T00:20:20.484422838Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d1c43f52ec3e483f3d44bb8ce5bdf39934cbf08ccafa874a48623f49bb848f96",
                    "sha256:957f3f14ae455caf6e7dfc8bad54206bc4fbebd0db85aed9f408f7bf189d9282"
                ]
            }
        },
        "v1.29.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "87c21ad4c767",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "87c21ad4c767c7a3e0eb7a21bab000a3104947fd82a95d9629c43ed23cf7051c",
            "container_config": {
                "Hostname": "87c21ad4c767",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20230525-4c49613f",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2023-12-14T19:19:56.903029117Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-25T23:23:01.447857123Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-14T19:19:56.903029117Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:864b5c27b96614e2f915c35ed53039750faacad94532c5c76ccf04358fbe8fc3",
                    "sha256:4873995343d3b09841aaba23948a25c7ca0f06c18864924def575deceb2cdc6f"
                ]
            }
        },
        "v1.29.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "893159fc05ca",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "893159fc05ca82515ae89dd0e3c99fb0fdbb11da549fbda2c8024d9daae5c85c",
            "container_config": {
                "Hostname": "893159fc05ca",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-13T23:37:32.078951572Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-13T23:37:32.078951572Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:ec5fab2e2148396f03e1352b4b7d373d956d3c6e2fb68140ee0999087908684b"
                ]
            }
        },
        "v1.29.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "fd54202f9465",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "fd54202f9465df410cffdd6d14c3c50a2c661d87d0afd7eaa524ffccc80a9534",
            "container_config": {
                "Hostname": "fd54202f9465",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240212-c4cadcab",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-02-14T22:25:27.342885161Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T22:49:35.529073347Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-14T22:25:27.342885161Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2fd8cc81bde414b93a9a5a5860bbf55accf4119fea7494a477c784d2dfe7be",
                    "sha256:a8035513917f67055ba6dfdb5056321a2b3cd43a83aa15e2c2f7f42c89f74ee7"
                ]
            }
        },
        "v1.29.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "17f1ac010676",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "17f1ac0106761d490584b58d6c16043d5ab419ba27836dd8e0ac4b0c366a7db8",
            "container_config": {
                "Hostname": "17f1ac010676",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240513-b9bba138",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-05-14T00:12:36.106123632Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T21:44:29.948459761Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-14T00:12:36.106123632Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d1c43f52ec3e483f3d44bb8ce5bdf39934cbf08ccafa874a48623f49bb848f96",
                    "sha256:b7b3992b765947183298f96fdcae859cea6b51d09ffcdcd5979e15fc5b9196ed"
                ]
            }
        },
        "v1.30.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "a91495e6da49",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker",
                    "HTTP_PROXY=",
                    "HTTPS_PROXY=",
                    "NO_PROXY="
                ],
                "Cmd": null,
                "Image": "docker.io/kindest/base:v20240406-f47a5c6c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "/usr/local/bin/entrypoint",
                    "/sbin/init"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "container": "a91495e6da4904fe4a62ae71e315c4269f6c8d4614823e9c5633e357b37a033a",
            "container_config": {
                "Hostname": "a91495e6da49",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "container=docker"
                ],
                "Cmd": [
                    "infinity"
                ],
                "Image": "docker.io/kindest/base:v20240406-f47a5c6c",
                "Volumes": null,
                "WorkingDir": "/",
                "Entrypoint": [
                    "sleep"
                ],
                "OnBuild": null,
                "Labels": {},
                "StopSignal": "SIGRTMIN+3"
            },
            "created": "2024-05-13T22:02:10.511716733Z",
            "docker_version": "20.10.21",
            "history": [
                {
                    "created": "2024-04-06T00:28:31.312880323Z",
                    "created_by": "COPY / / # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T00:28:31.312880323Z",
                    "created_by": "ENV container=docker",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T00:28:31.312880323Z",
                    "created_by": "STOPSIGNAL SIGRTMIN+3",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T00:28:31.312880323Z",
                    "created_by": "ENTRYPOINT [\"/usr/local/bin/entrypoint\" \"/sbin/init\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-13T22:02:10.511716733Z",
                    "created_by": "infinity"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9ebea5aa64b29e11213cbde5050502f61c2384ead1a33519cfabc8a6f4063d20",
                    "sha256:e9cd458c338a7e811d395d95276851a13fe5e38c7ffbd4582f2619f7cd9b6f16"
                ]
            }
        }
    }
}