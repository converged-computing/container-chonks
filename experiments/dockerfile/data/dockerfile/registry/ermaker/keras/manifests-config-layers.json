{
    "manifests": {
        "cpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4656,
                "digest": "sha256:8a71058cf9f1e5504002a79e67b57b3d798f56eae913de60d6741c318110b463"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82060534,
                    "digest": "sha256:7252027c079c08d328280366ec499da2603d2ddba5d7fbf904f63ace50b45300"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154540159,
                    "digest": "sha256:efca7111409b6e5246d3ec1b45cdb04fda5aee98a15f3acf0819150557d71612"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 546707153,
                    "digest": "sha256:ed5c0cdddfefadd4e27ac1fa01e2241fb555449409b6f24bd2cc72cc701e3e6d"
                }
            ]
        },
        "cpu_test": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4657,
                "digest": "sha256:e3bbf5cdf3727ece60f375ec04cbf08abb4f7e63d9ca394bdb3e9d83b84d3c6f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 82059955,
                    "digest": "sha256:5364850d2eb82db1081d20034f9a53a9d219313478ec187d1eee592d354757a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154540009,
                    "digest": "sha256:2f86e08f82d066b988aaced05538d59f8eb9b16f5015a2699f3386571adaa051"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 546459912,
                    "digest": "sha256:1d22aeb969f2ecafd5d536ce267f02dd7b7ea278d9be522c94ad9f4da93c3324"
                }
            ]
        },
        "gpu": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10105,
                "digest": "sha256:507b200d5a717192878097c03f13e44acbd4186a5120370aea7f644750693924"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32034160,
                    "digest": "sha256:473ede7ed136b710ab2dd51579af038b7d00fbbf6a1790c6294c93666203c0a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:c46b5fa4d940569e49988515c1ea0295f56d0a16228d8f854e27613f467ec892"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:93ae3df89c92cb1d20e9c09f499e693d3a8a8cef161f7158f7a9a3b5d06e4ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6b1eed27cadec5de8051d56697b0b67527e4076deedceefb41b7b2ea9b900459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6965673,
                    "digest": "sha256:cb5511f09cc0ee91a679bbc344599df90fe76c6ab4a4753601583cc6b9cd7964"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10121729,
                    "digest": "sha256:4173c1e5c714a710c8629c0ffe422a1b514bbfed094b6c6747d28c80ad8b35a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 472429709,
                    "digest": "sha256:221b05733c9e1fe3639098e93776d43a9ad13f860a55b78adda319357bcb8e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 673120472,
                    "digest": "sha256:564d11654322eb94a1912a82a64a4684060a481935b2e57784abfc5c89386494"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 430696001,
                    "digest": "sha256:e547a4db8f14855faf79e0a4b67c9a5261d1a8c817ade1680d294da60610e1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16387859,
                    "digest": "sha256:6743db9db5bf4eeb68a52ea00a65af944cec6119cb708a95f84d0dbf7eeb1b50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154540652,
                    "digest": "sha256:44a52ae1cc6a88608108e032a75481283b4d90f8f4a9d0a1c01512f52c16a678"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473674260,
                    "digest": "sha256:2a890d5aab632594da964babe3e3faf640ab5854cd286dcf2fc5fd5af1264ced"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5233,
                "digest": "sha256:d0ba6b23faea37b9d8b60abb0553a5172a1008d4aba86e96a573cf887f4b1d42"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43022946,
                    "digest": "sha256:d3938036b19cfa369e1081a6776b07b54be9612bc4c8fed7f139370c8142b79f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:a9b30c108bda615dc10e402f62d712f413214ea92c7ec4354cd1cc0f3450bc58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:67de21feec183fcd009a5eddc4de8c346ee0f4369a20047f1a302a90716fc741"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 854,
                    "digest": "sha256:817da545be2ba4bac8f6b4da584bca0fb4844938ecc462b9feab1001b5df7405"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:d967c497ce230b63996a7b1fc6ec95b741aea9348118d3328c676f13be789fa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78273036,
                    "digest": "sha256:518873e910f155076c0a43a3cfe38d3b3c96ff220c2b5ef926d9e957fd83f2e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32659612,
                    "digest": "sha256:fa9cd992bb35e941d348ff3efae5c1743f3b2569bfedaeb60317db905db4753e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 453274723,
                    "digest": "sha256:454a02c73987a9a873d836c5edf1daece7f09412066c8379ce4da5a78e88a44d"
                }
            ]
        },
        "legacy": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5233,
                "digest": "sha256:d0ba6b23faea37b9d8b60abb0553a5172a1008d4aba86e96a573cf887f4b1d42"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43022946,
                    "digest": "sha256:d3938036b19cfa369e1081a6776b07b54be9612bc4c8fed7f139370c8142b79f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:a9b30c108bda615dc10e402f62d712f413214ea92c7ec4354cd1cc0f3450bc58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:67de21feec183fcd009a5eddc4de8c346ee0f4369a20047f1a302a90716fc741"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 854,
                    "digest": "sha256:817da545be2ba4bac8f6b4da584bca0fb4844938ecc462b9feab1001b5df7405"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:d967c497ce230b63996a7b1fc6ec95b741aea9348118d3328c676f13be789fa7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78273036,
                    "digest": "sha256:518873e910f155076c0a43a3cfe38d3b3c96ff220c2b5ef926d9e957fd83f2e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32659612,
                    "digest": "sha256:fa9cd992bb35e941d348ff3efae5c1743f3b2569bfedaeb60317db905db4753e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 453274723,
                    "digest": "sha256:454a02c73987a9a873d836c5edf1daece7f09412066c8379ce4da5a78e88a44d"
                }
            ]
        },
        "py3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10873,
                "digest": "sha256:3614ea5b490bf49e377ffdcbaa92a3ea64c98650912bc2d320de46467dd67af1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26686680,
                    "digest": "sha256:7413c47ba209e555018c4be91101d017737f24b0c9d1f65339b97a4da98acb2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35372,
                    "digest": "sha256:0fe7e7cbb2e88617d969efeeb3bd3125f7d309335c736a0525233ec2dc06aee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:1d425c98234572d4221a1ac173162c4279f9fdde4726ec22ad3c399f59bb7503"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:344da5c95cecd0f55238ce59b8469ee301056001ece2b769e9691b80f94f9f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7217601,
                    "digest": "sha256:43bcc41986db72d47aa0e0ad913bf4474b7e2484ee004eba63084294747f8a21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9982117,
                    "digest": "sha256:b520fb8136d7d7e79354aa33b087d431da4820d92a0a6f97fdcdcbc7fdf45228"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 184,
                    "digest": "sha256:426adf5fc5a19a7d3a4dcc73cd146147271de28d1c6eb5d0bf3a80882cc0f0b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 504391691,
                    "digest": "sha256:02f4b80dfee4e90c6399fdab71d17323d5a85a375dc284041b9247d684e1bc82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 704822931,
                    "digest": "sha256:bec90467384ae30778f07c88d641a8599aa75e40ccb03b2a20a49dafdf9cecaa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 493144559,
                    "digest": "sha256:47dcb928c4c8636ad2d1f14af19dae82604f930c5cf3429af81a02f56cfb8fc9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16389508,
                    "digest": "sha256:1e1e026e429cc53b83ace042be2108afa8079248e8d65aeda9b0305a2b53e891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 179496094,
                    "digest": "sha256:accf2834db3b1411a047ad602eb03379b64aff33dea113b9c4c67b80da774dd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1612561649,
                    "digest": "sha256:9a0a27bbdbebe48455f2a175b62f520e805cbc2b72e7988bc84c5e57e275526a"
                }
            ]
        },
        "python3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10105,
                "digest": "sha256:4274e62902dfaf64a9c798e7b4f86a0112264478996c59ca02f96e9c38f78711"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32034160,
                    "digest": "sha256:473ede7ed136b710ab2dd51579af038b7d00fbbf6a1790c6294c93666203c0a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:c46b5fa4d940569e49988515c1ea0295f56d0a16228d8f854e27613f467ec892"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 554,
                    "digest": "sha256:93ae3df89c92cb1d20e9c09f499e693d3a8a8cef161f7158f7a9a3b5d06e4ef2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6b1eed27cadec5de8051d56697b0b67527e4076deedceefb41b7b2ea9b900459"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 6965673,
                    "digest": "sha256:cb5511f09cc0ee91a679bbc344599df90fe76c6ab4a4753601583cc6b9cd7964"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10121729,
                    "digest": "sha256:4173c1e5c714a710c8629c0ffe422a1b514bbfed094b6c6747d28c80ad8b35a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 472429709,
                    "digest": "sha256:221b05733c9e1fe3639098e93776d43a9ad13f860a55b78adda319357bcb8e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 673120472,
                    "digest": "sha256:564d11654322eb94a1912a82a64a4684060a481935b2e57784abfc5c89386494"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 430696001,
                    "digest": "sha256:e547a4db8f14855faf79e0a4b67c9a5261d1a8c817ade1680d294da60610e1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 16387946,
                    "digest": "sha256:6dece4fa26ce80fbfe922e127787e72b043a83474313a84bc183b5e832eb4a3a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154540479,
                    "digest": "sha256:165b45d8213ba3dc2d824e65c19c5ab291e15d525227657b5cc4546d9d0eda73"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1473649575,
                    "digest": "sha256:f396f0b8497893c834fa528b84b2411779c6c2db06a844035ed53bbe60afe792"
                }
            ]
        }
    },
    "tags": [
        "cpu",
        "cpu_test",
        "gpu",
        "latest",
        "legacy",
        "py3",
        "python3"
    ],
    "configs": {
        "cpu": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c20cf3d7ffbb9c51e8ef8283fa675cb9cee18396015e8771df761df0b971f6f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e03f782c992e9fd48f2bccf2fefabe752a868f6034ff4a4fc746b1741be5729b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     keras     tensorflow   && conda clean --yes --tarballs --packages --source-cache"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c20cf3d7ffbb9c51e8ef8283fa675cb9cee18396015e8771df761df0b971f6f",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2018-12-26T07:26:56.774364638Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-26T07:15:38.316886836Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-26T07:17:01.917849654Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname -p`.sh   && bash Miniconda3-latest-Linux-`uname -p`.sh -b   && rm Miniconda3-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2018-12-26T07:17:03.38902665Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-26T07:26:56.774364638Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     keras     tensorflow   && conda clean --yes --tarballs --packages --source-cache"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:5ea7da4a548cef8f9f80c7c6c9943d4dee2ae21a24f6a2e3ebec11cfe303aadd",
                    "sha256:8d415a9877cc8a8d2a36bd2756278cd54c4a651c60abe6eb34516aaf1fcfcb61",
                    "sha256:bcbc6a4043f8b8248718cd49e5b24851a87ed37094708ad887b6495349a96412"
                ]
            }
        },
        "cpu_test": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:34542fb70d930ce67e1a9a794e7c487e87d7f18ea9bf0f67090406cc0f74fcac",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1eea80226f721cb6a6767162560f0340bff2e08514490918ef4bd11c82a2f8c8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     keras     tensorflow   && conda clean --yes --tarballs --packages --source-cache"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:34542fb70d930ce67e1a9a794e7c487e87d7f18ea9bf0f67090406cc0f74fcac",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2018-12-21T10:24:51.219626101Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:13:04.869960306Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-21T10:14:31.602521322Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname -p`.sh   && bash Miniconda3-latest-Linux-`uname -p`.sh -b   && rm Miniconda3-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2018-12-21T10:14:33.206617169Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T10:24:51.219626101Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     keras     tensorflow   && conda clean --yes --tarballs --packages --source-cache"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:b6423c8b8578791c6122e19dd85e596f4d388bc210c50cb20f04baeb0f2da42e",
                    "sha256:d5f23ec9a4a8cea83534dcc0ba7c9a8ead94ed2548d2c032230f8392aacadda1",
                    "sha256:2cdc47cf56b970f38ce9e3ca23c814b2a6fd294c0a87d6a4062c6c738fa6bf9b"
                ]
            }
        },
        "gpu": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=10.0.130",
                    "CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385",
                    "NCCL_VERSION=2.3.7",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "CUDNN_VERSION=7.4.1.5"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b1f648a7776da5bbcda4663891976b6b52477d66a234f449dc37bd6e285faccf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.cudnn.version": "7.4.1.5",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "container": "ddda13f5101e9ca50a0063321385a9192ab228748c67f1e1fe7b268194b2a94b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=10.0.130",
                    "CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385",
                    "NCCL_VERSION=2.3.7",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "CUDNN_VERSION=7.4.1.5"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     keras     tensorflow-gpu   && conda clean --yes --tarballs --packages --source-cache"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b1f648a7776da5bbcda4663891976b6b52477d66a234f449dc37bd6e285faccf",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.cudnn.version": "7.4.1.5",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "created": "2018-12-20T09:38:52.434866489Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-10-19T00:47:54.68590759Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcd068f67af2788dbd57729c0c8193f022ec5c37fefb8704390c59081152e6fc in / "
                },
                {
                    "created": "2018-10-19T00:47:55.423310694Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-10-19T00:47:56.094954537Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-19T00:47:56.775696561Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-10-19T00:47:56.963343052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:16.137843141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:39.925808803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends gnupg2 curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&     echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove -y curl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:09:40.19926557Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=10.0.130",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:40.403833652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.167677792Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-compat-10-0=410.48-1 &&     ln -s cuda-10.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:09:50.343250762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.52110784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_VISIBLE_DEVICES=all",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.718241156Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.896306468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:10:09.726976154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:10:09.949768807Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NCCL_VERSION=2.3.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:11:34.492858464Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda10.0 &&     apt-mark hold libnccl2 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:12:06.533417389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:14:30.787160006Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         libnccl-dev=$NCCL_VERSION-1+cuda10.0 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:14:31.409404412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:20:40.620555585Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:20:41.179283625Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=7.4.1.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:20:41.630720327Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=7.4.1.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:22:49.168731151Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends             libcudnn7=$CUDNN_VERSION-1+cuda10.0             libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0 &&     apt-mark hold libcudnn7 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-20T09:25:55.261285323Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-20T09:26:38.910382765Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname -p`.sh   && bash Miniconda3-latest-Linux-`uname -p`.sh -b   && rm Miniconda3-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2018-12-20T09:26:39.754224227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda3/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-20T09:38:52.434866489Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     keras     tensorflow-gpu   && conda clean --yes --tarballs --packages --source-cache"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:102645f1cf722254bbfb7135b524db45fbbac400e79e4d54266c000a5f5bc400",
                    "sha256:ae1f631f14b7667ca37dca207c631d64947c60d923995cf0d73ceb1b08c406bb",
                    "sha256:2146d867acf390370d4d0c7b51951551e0e91fb600b69dbc8922d531b05b12bc",
                    "sha256:76c033092e100f56899d7402823c5cb6ce345442b3382d7b240350ef4252187e",
                    "sha256:e8bc4f5234b5482b324a7f92b9b2afbdf0f8172ebf7b9c2644a6e341acfde60a",
                    "sha256:e14a5f3aeedfa052c54ce041fae25292eb7011e0996c0964095b0a031c841182",
                    "sha256:1281d704aa28d83c2b438545298c5a590949bfb0c5cbb9a34e4671cbbffedeaf",
                    "sha256:da134b6c0e9acd024d649cd8b4070a870224e5449cf1a90a2b11c4765ae38287",
                    "sha256:01ea4524ee0c4d124d134050bbbcec038e69462606639c1aaea6a4a43239fb30",
                    "sha256:1f4cc07b386515c299b8d0d96784b26411df19da6c5ed0533c706eef3fcf4cd6",
                    "sha256:a904b0e0171ba4703704e8032424a3c8ef86da3d55f3fe44ae9b1df18eb6a31b",
                    "sha256:362dae6b1301afb37b9e51af859f1b162d476f19fb0e3c668321d2364066b097"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6eed6aa09471ca21a05310db28fbd7380bd39a02e1e32789962da0a381d9ddca",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d02ecda7d437d67e98646445d533b827f87b8c305dcbec1993e9e8f482ba7b27",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     theano   && conda clean --yes --tarballs --packages --source-cache   && pip install --upgrade -I setuptools   && pip install --upgrade     keras     https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.9.0rc0-cp27-none-linux_x86_64.whl"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6eed6aa09471ca21a05310db28fbd7380bd39a02e1e32789962da0a381d9ddca",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-04-13T23:48:03.233852546Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2018-04-12T18:58:24.070366865Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c266e490f4101f9726598288c14131a75242836f3eda375923ef1677ea8ab8e in / "
                },
                {
                    "created": "2018-04-12T18:58:25.040323714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-04-12T18:58:25.853293901Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-12T18:58:26.672694376Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-04-12T18:58:27.496447773Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-04-12T18:58:27.763769925Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-13T23:40:37.415770189Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-13T23:41:21.103179207Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda-latest-Linux-`uname -p`.sh   && bash Miniconda-latest-Linux-`uname -p`.sh -b   && rm Miniconda-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2018-04-13T23:41:21.411967311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-13T23:48:03.233852546Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     theano   && conda clean --yes --tarballs --packages --source-cache   && pip install --upgrade -I setuptools   && pip install --upgrade     keras     https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.9.0rc0-cp27-none-linux_x86_64.whl"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fccbfa2912f0cd6b9d13f91f288f112a2b825f3f758a4443aacb45bfc108cc74",
                    "sha256:e1a9a6284d0d24d8194ac84b372619e75cd35a46866b74925b7274c7056561e4",
                    "sha256:ac7299292f8b2f710d3b911c6a4e02ae8f06792e39822e097f9c4e9c2672b32d",
                    "sha256:a5e66470b2812e91798db36eb103c1f1e135bbe167e4b2ad5ba425b8db98ee8d",
                    "sha256:a8de0e025d94b33db3542e1e8ce58829144b30c6cd1fff057eec55b1491933c3",
                    "sha256:1ab0737ead0f7f0baa404478e4a8a2a412212aca04688934bd11fa8ed451173d",
                    "sha256:6768da8f77bc3974f1a17d26c54d4b47de340fdfd2f3fe416c1c603a0966e304",
                    "sha256:382012fcbdc2dc4659fe67dff5c9a1f08b2f815d371a44d27310757cc5d1982a"
                ]
            }
        },
        "legacy": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6eed6aa09471ca21a05310db28fbd7380bd39a02e1e32789962da0a381d9ddca",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d02ecda7d437d67e98646445d533b827f87b8c305dcbec1993e9e8f482ba7b27",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     theano   && conda clean --yes --tarballs --packages --source-cache   && pip install --upgrade -I setuptools   && pip install --upgrade     keras     https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.9.0rc0-cp27-none-linux_x86_64.whl"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6eed6aa09471ca21a05310db28fbd7380bd39a02e1e32789962da0a381d9ddca",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "created": "2018-04-13T23:48:03.233852546Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2018-04-12T18:58:24.070366865Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c266e490f4101f9726598288c14131a75242836f3eda375923ef1677ea8ab8e in / "
                },
                {
                    "created": "2018-04-12T18:58:25.040323714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-04-12T18:58:25.853293901Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-12T18:58:26.672694376Z",
                    "created_by": "/bin/sh -c sed -i 's/^#\\s*\\(deb.*universe\\)$/\\1/g' /etc/apt/sources.list"
                },
                {
                    "created": "2018-04-12T18:58:27.496447773Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-04-12T18:58:27.763769925Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-13T23:40:37.415770189Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-13T23:41:21.103179207Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda-latest-Linux-`uname -p`.sh   && bash Miniconda-latest-Linux-`uname -p`.sh -b   && rm Miniconda-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2018-04-13T23:41:21.411967311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-13T23:48:03.233852546Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     theano   && conda clean --yes --tarballs --packages --source-cache   && pip install --upgrade -I setuptools   && pip install --upgrade     keras     https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.9.0rc0-cp27-none-linux_x86_64.whl"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fccbfa2912f0cd6b9d13f91f288f112a2b825f3f758a4443aacb45bfc108cc74",
                    "sha256:e1a9a6284d0d24d8194ac84b372619e75cd35a46866b74925b7274c7056561e4",
                    "sha256:ac7299292f8b2f710d3b911c6a4e02ae8f06792e39822e097f9c4e9c2672b32d",
                    "sha256:a5e66470b2812e91798db36eb103c1f1e135bbe167e4b2ad5ba425b8db98ee8d",
                    "sha256:a8de0e025d94b33db3542e1e8ce58829144b30c6cd1fff057eec55b1491933c3",
                    "sha256:1ab0737ead0f7f0baa404478e4a8a2a412212aca04688934bd11fa8ed451173d",
                    "sha256:6768da8f77bc3974f1a17d26c54d4b47de340fdfd2f3fe416c1c603a0966e304",
                    "sha256:382012fcbdc2dc4659fe67dff5c9a1f08b2f815d371a44d27310757cc5d1982a"
                ]
            }
        },
        "py3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=10.0.130",
                    "CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411",
                    "NCCL_VERSION=2.4.7",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "CUDNN_VERSION=7.6.2.24"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1cd7330ae387e116e69dcd210a67b640c086086b39ed1db51ae6cdae7e39dec",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.cudnn.version": "7.6.2.24",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "container": "88a08b2b3a57c95690dd444136f9e99845f7659b7c8ab905cebb8670b631d29f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=10.0.130",
                    "CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411",
                    "NCCL_VERSION=2.4.7",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "CUDNN_VERSION=7.6.2.24"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     keras     tensorflow-gpu   && conda clean --yes --tarballs --packages --source-cache"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1cd7330ae387e116e69dcd210a67b640c086086b39ed1db51ae6cdae7e39dec",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.cudnn.version": "7.6.2.24",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "created": "2019-07-31T06:31:55.432084918Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2019-07-23T15:21:10.573282806Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ddd02d976792b6c6deed85bd3643cba43a7bce743c2a84d91336fc951e9a9ec in / "
                },
                {
                    "created": "2019-07-23T15:21:11.358433137Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:12.075358061Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:12.799067692Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:13.01464074Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T20:38:24.656315381Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T20:38:46.006030977Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends gnupg2 curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&     echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove -y curl && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-29T23:19:52.479358455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=10.0.130",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:19:53.576615686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:06.177172486Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION cuda-compat-10-0 && ln -s cuda-10.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-29T23:20:08.352174019Z",
                    "created_by": "/bin/sh -c echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf &&     echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf"
                },
                {
                    "created": "2019-07-29T23:20:09.770400566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:10.460252483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:11.424461101Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_VISIBLE_DEVICES=all",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:12.758848472Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:14.278480025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:14.992276653Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:20:15.605428398Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NCCL_VERSION=2.4.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:21:05.930598478Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends     cuda-libraries-$CUDA_PKG_VERSION cuda-nvtx-$CUDA_PKG_VERSION libnccl2=$NCCL_VERSION-1+cuda10.0 &&     apt-mark hold libnccl2 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-29T23:21:13.394946652Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:22:38.810771119Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         libnccl-dev=$NCCL_VERSION-1+cuda10.0 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-29T23:22:53.735013793Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:25:05.196593037Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:25:06.540588146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=7.6.2.24",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:25:08.046380729Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=7.6.2.24",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-29T23:26:13.646293507Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends     libcudnn7=$CUDNN_VERSION-1+cuda10.0 libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0 &&     apt-mark hold libcudnn7 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-31T06:20:00.351207064Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-31T06:21:18.60338902Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname -p`.sh   && bash Miniconda3-latest-Linux-`uname -p`.sh -b   && rm Miniconda3-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2019-07-31T06:21:20.199505488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda3/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-31T06:31:55.432084918Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     keras     tensorflow-gpu   && conda clean --yes --tarballs --packages --source-cache"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:543791078bdb84740cb5457abbea10d96dac3dea8c07d6dc173f734c20c144fe",
                    "sha256:c56e09e1bd18e5e41afb1fd16f5a211f533277bdae6d5d8ae96a248214d66baf",
                    "sha256:a31dbd3063d77def5b2562dc8e14ed3f578f1f90a89670ae620fd62ae7cd6ee7",
                    "sha256:b079b3fa8d1b4b30a71a6e81763ed3da1327abaf0680ed3ed9f00ad1d5de5e7c",
                    "sha256:e804f86593d8c76e6f48b2f1661f632f28b0011e1a9f1b99e2e44a80a9c985bf",
                    "sha256:5840a38239d1ef3c01ec381a863bd4218182ba753c054e0d8e2710e8d64ce6dc",
                    "sha256:bd50dcfc2cdc707689c8df48be09bd7d55781871369cfe8dbaaedb626fba45ce",
                    "sha256:0f3b12fd3cdefc9b554a042c853e4a9fa22be18a36aa246f88656784383bd210",
                    "sha256:5d780eb345bf815e6839242998cc3face08780b91c987068d77283c656f71a93",
                    "sha256:a3d40aea439374f04448076b771b8870e150012c83435ab90dbe3ace4dc47d44",
                    "sha256:bb2c08384a6e317e0b415d5a0082d7c3b2391ee962f28078fca3f7ea85ce7a9d",
                    "sha256:a0934c95f7d823f426de7c2a333a888ed2bee8d9081591bb1cacdb82182fb9c4",
                    "sha256:551a30f2f3987fe2f805a8bbe92cfe65c8028117738f72b485ee04e757042f53"
                ]
            }
        },
        "python3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=10.0.130",
                    "CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385",
                    "NCCL_VERSION=2.3.7",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "CUDNN_VERSION=7.4.1.5"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:386642e5fdf57ee313ab460cf4e5b387209713ab23d420a4364300da9d9e28c6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.cudnn.version": "7.4.1.5",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "container": "fa64a6c1880765486f6bef278e75a4174029528c73e145fe66495aab07062d23",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/root/miniconda3/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CUDA_VERSION=10.0.130",
                    "CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "NVIDIA_VISIBLE_DEVICES=all",
                    "NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385",
                    "NCCL_VERSION=2.3.7",
                    "LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "CUDNN_VERSION=7.4.1.5"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "conda install -y     h5py     pandas     keras     tensorflow-gpu   && conda clean --yes --tarballs --packages --source-cache"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:386642e5fdf57ee313ab460cf4e5b387209713ab23d420a4364300da9d9e28c6",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "com.nvidia.cudnn.version": "7.4.1.5",
                    "maintainer": "NVIDIA CORPORATION <cudatools@nvidia.com>"
                }
            },
            "created": "2018-12-18T09:44:52.543003757Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-10-19T00:47:54.68590759Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bcd068f67af2788dbd57729c0c8193f022ec5c37fefb8704390c59081152e6fc in / "
                },
                {
                    "created": "2018-10-19T00:47:55.423310694Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-10-19T00:47:56.094954537Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-19T00:47:56.775696561Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-10-19T00:47:56.963343052Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:16.137843141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:39.925808803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends gnupg2 curl ca-certificates &&     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - &&     echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list &&     echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list &&     apt-get purge --autoremove -y curl &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:09:40.19926557Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_VERSION=10.0.130",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:40.403833652Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDA_PKG_VERSION=10-0=10.0.130-1",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.167677792Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-cudart-$CUDA_PKG_VERSION         cuda-compat-10-0=410.48-1 &&     ln -s cuda-10.0 /usr/local/cuda &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:09:50.343250762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.52110784Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_VISIBLE_DEVICES=all",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.718241156Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:09:50.896306468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NVIDIA_REQUIRE_CUDA=cuda>=10.0 brand=tesla,driver>=384,driver<385",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:10:09.726976154Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:10:09.949768807Z",
                    "created_by": "/bin/sh -c #(nop)  ENV NCCL_VERSION=2.3.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:11:34.492858464Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-libraries-$CUDA_PKG_VERSION         cuda-nvtx-$CUDA_PKG_VERSION         libnccl2=$NCCL_VERSION-1+cuda10.0 &&     apt-mark hold libnccl2 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:12:06.533417389Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:14:30.787160006Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends         cuda-libraries-dev-$CUDA_PKG_VERSION         cuda-nvml-dev-$CUDA_PKG_VERSION         cuda-minimal-build-$CUDA_PKG_VERSION         cuda-command-line-tools-$CUDA_PKG_VERSION         libnccl-dev=$NCCL_VERSION-1+cuda10.0 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-13T00:14:31.409404412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV LIBRARY_PATH=/usr/local/cuda/lib64/stubs",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:20:40.620555585Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=NVIDIA CORPORATION <cudatools@nvidia.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:20:41.179283625Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CUDNN_VERSION=7.4.1.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:20:41.630720327Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL com.nvidia.cudnn.version=7.4.1.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-13T00:22:49.168731151Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends             libcudnn7=$CUDNN_VERSION-1+cuda10.0             libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0 &&     apt-mark hold libcudnn7 &&     rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-18T09:30:26.571868285Z",
                    "created_by": "/bin/sh -c apt-get update   && apt-get install -y --no-install-recommends     build-essential     curl     git   && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-18T09:31:40.102299118Z",
                    "created_by": "/bin/sh -c curl -qsSLkO     https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-`uname -p`.sh   && bash Miniconda3-latest-Linux-`uname -p`.sh -b   && rm Miniconda3-latest-Linux-`uname -p`.sh"
                },
                {
                    "created": "2018-12-18T09:31:41.680412519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/root/miniconda3/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-18T09:44:52.543003757Z",
                    "created_by": "/bin/sh -c conda install -y     h5py     pandas     keras     tensorflow-gpu   && conda clean --yes --tarballs --packages --source-cache"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:102645f1cf722254bbfb7135b524db45fbbac400e79e4d54266c000a5f5bc400",
                    "sha256:ae1f631f14b7667ca37dca207c631d64947c60d923995cf0d73ceb1b08c406bb",
                    "sha256:2146d867acf390370d4d0c7b51951551e0e91fb600b69dbc8922d531b05b12bc",
                    "sha256:76c033092e100f56899d7402823c5cb6ce345442b3382d7b240350ef4252187e",
                    "sha256:e8bc4f5234b5482b324a7f92b9b2afbdf0f8172ebf7b9c2644a6e341acfde60a",
                    "sha256:e14a5f3aeedfa052c54ce041fae25292eb7011e0996c0964095b0a031c841182",
                    "sha256:1281d704aa28d83c2b438545298c5a590949bfb0c5cbb9a34e4671cbbffedeaf",
                    "sha256:da134b6c0e9acd024d649cd8b4070a870224e5449cf1a90a2b11c4765ae38287",
                    "sha256:01ea4524ee0c4d124d134050bbbcec038e69462606639c1aaea6a4a43239fb30",
                    "sha256:8ce836c933f006f5fba74f04e40e86ee0e797deef0f034107aad678f6063b59f",
                    "sha256:3495bcca76d78c8312081ef842309b2da570e1e9213e2779a8b6f9a2190f0354",
                    "sha256:6d44d4fe90f65d841dd78307d2ba48db78ad676192eb9d8ceb2def67feafdc3e"
                ]
            }
        }
    }
}