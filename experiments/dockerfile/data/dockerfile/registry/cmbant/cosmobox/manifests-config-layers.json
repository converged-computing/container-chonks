{
    "manifests": {
        "devel": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7154,
                "digest": "sha256:a2fc6f2a4c96b3b99dde277f74e95f4ce971de6cfdcf8f69c94b76b0b4117eef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29149882,
                    "digest": "sha256:d812d0c7c96b7031537ddbf0850bf286a5adf68b055c9bf19b2955cb88df77ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 11128,
                    "digest": "sha256:d9760ec7ae8b41b47c392dcce106ab5cc5fb0298f778ea4f20a6aaa3ea29d20a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 345184283,
                    "digest": "sha256:725ad0e42e1f26e9e20ea3ff09b4910c710da242cb95991e8457d7b5d1074683"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231380547,
                    "digest": "sha256:ed72d42eca010adf6816cdcd796d50edc1298d1339073067955058f8cb4f5531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1061421414,
                    "digest": "sha256:ab3c9931b3dc3ca93fdd334455dd816bac5d4209f46fffaf659aea62496c9d3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2590415,
                    "digest": "sha256:1ad11d3442c18db231a325e61e8afca59937e87793f2fb61ff1fd89bccc4ba7d"
                }
            ]
        },
        "gcc10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7156,
                "digest": "sha256:a79b154d52b4716d41ccc89c24c3092dfafebb527a2c8752b25ec44a921cbce8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31357657,
                    "digest": "sha256:686b8aaade4daa5e154a767fb08933029632c5f8d14e62a333d167a86b667950"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9439,
                    "digest": "sha256:f98ab7c97797121bc955c2efcbc1d34b4410c013b22dcf4255b00f51b1a09e68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 278223430,
                    "digest": "sha256:1bd82e64c473ff520849ac10d6589ca5e0ed5951c3875d8006f6646eb70caf2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152340233,
                    "digest": "sha256:45c56b27f07f435c7b73933c86c911ed7075d16e80b12cd885157a4a1cab3759"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 468648946,
                    "digest": "sha256:6cf6a1856f43b46e69df6e9882ee59e516066e33981f904bd5a7102a0aa1cefd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2553140,
                    "digest": "sha256:c17e5c9e76cf226b2e874c32266d00fbd63eb055ad7aaebc0464b4036dbc3983"
                }
            ]
        },
        "gcc11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7172,
                "digest": "sha256:d1b8ec98ce9f908fce6f863b8f9cfe4beacb91c3394b74d64dfd03502b224c54"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31357657,
                    "digest": "sha256:686b8aaade4daa5e154a767fb08933029632c5f8d14e62a333d167a86b667950"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9918,
                    "digest": "sha256:f70024dc37d15040f9c6bd0f2b290a4cee587abdcc1f36da07293d0ed59b510c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282836396,
                    "digest": "sha256:5efd5533a8311c481ed103e5ce29010969abb0ccc09fc6e180cca58d3ea95ac8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152337427,
                    "digest": "sha256:ab0e185fe9d1dfc27ec7b5c8b6c35c9afb6bbf59da9ca926fd138e641523bf5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 476650600,
                    "digest": "sha256:9dfdd3651c0fa8c912f6c9659579e90a77d8531ec4f7d8bb0fd6ba9cfd20a339"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2569588,
                    "digest": "sha256:08c9b81a6897008202bb80aa6f849569e33564f20b964699524d55dcfcc59121"
                }
            ]
        },
        "gcc6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7641,
                "digest": "sha256:bb2ee0db318d897cbaf2514221d943def0c951696cf327f7263795cf383481a8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32291019,
                    "digest": "sha256:38e2e6cd5626f31cea1a0a5751a9a7e6564c589a3388dcf84f00d4bb98146844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:705054bc3f5bd722eb8f026532447fac897c521d8906eb36e79a60d0fb0606fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 517,
                    "digest": "sha256:c7051e0695642c5bf01467a4a64106cabfa20e57fee91b31ee73f7308bccf5bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:7308e914506c09fa6d2242368545f55462e024f785e21b21b3e90403081a9336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 158510210,
                    "digest": "sha256:79491fc7890853d60ec2da4f6023cc8fd87e975fc5f5a791e2457c8205d02f05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8686,
                    "digest": "sha256:78eee817e2224211f9c766ae476314ba5e86bc567dbafd6f4c458918c3282d8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302172606,
                    "digest": "sha256:3270fd7b8c8dcc254ed5ae17a2ec9e5a5cb2fe19e54e758c0d4b146430ff335c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105806242,
                    "digest": "sha256:7db8f11232528cb88e72bd9a494e45753ea8d3e2fca3fe72c99241c14f6ea665"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 597983235,
                    "digest": "sha256:b448ee6f3daa4895ce55445e3f5be5997fe6711f2ebda75c01c8daf5d073e1eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2331711,
                    "digest": "sha256:7d255bc7c5cfe46e0d84dbc72d9dd900c633f12c13c40f399ee806677452737f"
                }
            ]
        },
        "gcc7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7584,
                "digest": "sha256:df478834ab76da51d329f503c3f237bade111b77a474f0644f5e9762133d325d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32291019,
                    "digest": "sha256:38e2e6cd5626f31cea1a0a5751a9a7e6564c589a3388dcf84f00d4bb98146844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:705054bc3f5bd722eb8f026532447fac897c521d8906eb36e79a60d0fb0606fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 517,
                    "digest": "sha256:c7051e0695642c5bf01467a4a64106cabfa20e57fee91b31ee73f7308bccf5bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:7308e914506c09fa6d2242368545f55462e024f785e21b21b3e90403081a9336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 158510101,
                    "digest": "sha256:8232cfe350bfd77ac4fc0a79c541f070306943611bf1feb9828719cfc9187560"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9047,
                    "digest": "sha256:9ac8d348dc7bee36953883e89eb84734e298a174e636c68d1d65e98c8a87144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 327612157,
                    "digest": "sha256:00f5ec5e198d9d2197b49e34fbb01a65d937b901304fc0307d41d68d5da94d97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107102494,
                    "digest": "sha256:a19baf753f79e891b33c6e2c4a12bfc589614588ebe503fc9aeaf24bcb5f60fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 316129146,
                    "digest": "sha256:cceedc16124d3b434968deb6da0afc508510822f35185a9e76cb41278b1505ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2424008,
                    "digest": "sha256:4acb230f41ac26e6b38f4e2fb6adcb44f7865020d58751ff3e662f22a8529e26"
                }
            ]
        },
        "gcc8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8374,
                "digest": "sha256:87d0578473ba0ac552b450d67637b1061399f6ed22e7bfe5eb57a994c8ae2f5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27145914,
                    "digest": "sha256:b2cb8f38c0443b927f86e03a413e2809a39996f014d0ac46343aee396b9d78cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10832,
                    "digest": "sha256:93c133bd8caaf62df4879abd5bf6e03d8371d156b9702a48fe8a497fb777e69d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216363361,
                    "digest": "sha256:6d8cc175c9a9c20409ce664f5e81f8299756dec18d605bba9d214e3e745155b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 129354047,
                    "digest": "sha256:c9f3d54411de935ad752f47c554a9e3786dbc8659accfbdfd34348482f5c1b5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 701998935,
                    "digest": "sha256:c5c81e4856083b9cec749d38a10248e3161f0cf974ce747f4a20e020ec11877a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2493469,
                    "digest": "sha256:550820a1b7e9dd6f22ae0bda64a75ad2f5399c976cb551499ba5f80cc5dec5ca"
                }
            ]
        },
        "gcc9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7071,
                "digest": "sha256:c73094f344e608d22afbf1f155bfab5f2587d7f6b080ab34689efe329bb3f769"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 31357657,
                    "digest": "sha256:686b8aaade4daa5e154a767fb08933029632c5f8d14e62a333d167a86b667950"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 8940,
                    "digest": "sha256:2c0a75296ad9d327739d1ba7823d0e3fb3a86d79d41dec1aa8bbcdd33e8a0bcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 264775220,
                    "digest": "sha256:b8bdf67d19ed94b0bb7778cb6caf6fb4f653409ad93f3926802a1bd310f7e73a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152326445,
                    "digest": "sha256:7f010b55ed3380c5738bf7991ae9a0d176bf3311bd0c515ad0bc7e12b124236c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 472304765,
                    "digest": "sha256:c968d35de34b0d7aca108307449dae7e48b35e6b9135c15aa162803aebc188c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2519338,
                    "digest": "sha256:eb0ddf8a24475eed2c3da2fb685958407af1d2f913e0f370cc1cbc9f2df6f2c9"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10042,
                "digest": "sha256:2ebc1182611db0ce9e8694cec6dd994e5d7aa67b2594b4553a1c58e15345f578"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49582224,
                    "digest": "sha256:0a9573503463fd3166b5b1f34a7720dac28609e98d731e50e7068f92e79b8545"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 24051259,
                    "digest": "sha256:1ccc26d841b4acc2562483bf393ce1cf8bc358ced09ccd825425226827c79c92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 64130287,
                    "digest": "sha256:800d84653581fc119cd75cd572fa190d3b813d49221b9e5ee463e3560e2cb342"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211064058,
                    "digest": "sha256:7c632e57ea62ea950c367f484f52cdcfd2adb12060a31f5c413f40db9822e96e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 17153,
                    "digest": "sha256:5034ee5572c2c9a9227c0b6b628569f92125a5f25cbb772b00d571f7d91a2d3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 145270594,
                    "digest": "sha256:85615ba4578de502dfe8ff0dd0935e59e68ab79bcb476c3f7e78277a1e574c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9536,
                    "digest": "sha256:68b40084ced000f0b16858631c34596607be63fec8313fa92e8ab243f959c39a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1785,
                    "digest": "sha256:4e67995bc666ce98747c3f453ed896931b7677fff21378d5eb16e76206b84fb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234520495,
                    "digest": "sha256:ed72ea2d212ef1fa05fca9d6c2d7421de8f80abe1edfd2a60d7b5eb22b5fb0aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1061432397,
                    "digest": "sha256:794b602f4639d66373e712f0a85d2cec697d047502175ab26085f0f1cf7f1fad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2583495,
                    "digest": "sha256:be0c91d4d269f9b182dd601fc38933a32ab60a1a30259b5b3bd0825b1b972d5e"
                }
            ]
        },
        "python3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7626,
                "digest": "sha256:670505fe149dc23602dfc004e28856005dea70d0d80e96ebbc7317a5aed1365e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29507462,
                    "digest": "sha256:5d5ba9e5cbafa75fd695c6259512b971d7cf0bf372f6f83ea8a66e39b7232e44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 805,
                    "digest": "sha256:ef3995f02a9bb9318376226e982a42fe61e0839fb3035f3efc79edb66b763ee9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 207,
                    "digest": "sha256:7bd753179fe083c4423e399f1f1fcbe0aaf0a69bf321c87851b85e9bfc162602"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:e7e36bc580a03c8f3c134ddcfe223657d716b63410ca3d50b7af6ae0102b6992"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 173822806,
                    "digest": "sha256:82f8ee37aeee6234ef3ec7aa7a68aaa24ed3d9889751bad3bc055b22f22a0adc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9087,
                    "digest": "sha256:44bd0e4cfc190d108b91c4f26e0ca242fc3733c2c360acd1956d6f055f001257"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 451952001,
                    "digest": "sha256:7481ff955d1892e7bbf78ecc6dc919f33c742835d7f4388601af6f3516ead52a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217391099,
                    "digest": "sha256:9d347d48ac684a2b2a9009031413ef6b64295de88b8698c10b2e11b124df0d65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 688843834,
                    "digest": "sha256:af24d1018ef83a9950b9fd77646213f9e9ac2bde1ccf3208d98eb1433316bb49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2610009,
                    "digest": "sha256:97a4f6a8dcb1ae1546a529bc1e1661391a0206edc2c17973923f7dfc2c187d1d"
                }
            ]
        }
    },
    "tags": [
        "devel",
        "gcc10",
        "gcc11",
        "gcc6",
        "gcc7",
        "gcc8",
        "gcc9",
        "latest",
        "python3"
    ],
    "configs": {
        "devel": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.label-schema.build-date": "",
                    "org.label-schema.description": "GCC and gfortran source master build ()",
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.license": "GPL-3.0",
                    "org.label-schema.name": "cosmobox",
                    "org.label-schema.schema-version": "1.0",
                    "org.label-schema.url": "https://github.com/cmbant/docker-cosmobox/tree/",
                    "org.label-schema.vendor": "cmbant",
                    "org.label-schema.version": ""
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-10-16T13:37:55.007445195Z",
            "history": [
                {
                    "created": "2023-10-11T18:36:59.481424953Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:034da31531514c2c700438f305dea446016d6b50541d7be90a147346e92341dc in / "
                },
                {
                    "created": "2023-10-11T18:36:59.862349531Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "ARG BUILD_DATE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "ARG IMAGE_NAME",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "ARG SOURCE_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "ARG SOURCE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "ARG GCC_BRANCH=master",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "ADD https://gcc.gnu.org/git/?p=gcc.git;a=shortlog;h=refs/heads/master gcc_shortlog # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T12:51:24.99291391Z",
                    "created_by": "LABEL org.label-schema.schema-version=1.0 org.label-schema.build-date= org.label-schema.name=docker-gcc-build org.label-schema.description=GCC and gfortran source master build () org.label-schema.url=https://github.com/cmbant/docker-gcc-build/tree/ org.label-schema.version= org.label-schema.vendor=cmbant org.label-schema.license=GPL-3.0 org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:13:29.366855418Z",
                    "created_by": "RUN |5 BUILD_DATE= IMAGE_NAME= SOURCE_BRANCH= SOURCE_COMMIT= GCC_BRANCH=master /bin/sh -c DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"dpkg-dev apt-utils bison flex libmpc-dev\"     && set -v     && echo \"$DEBIAN_FRONTEND\" \"$transientBuildDeps\"     && apt-get update     && apt-get install -y $transientBuildDeps        build-essential git wget sudo cmake libtool ca-certificates openssh-client gcc g++        libisl-dev liblapack-dev libopenblas-dev openmpi-bin libopenmpi-dev        --no-install-recommends --no-install-suggests     && git clone --depth=1 --single-branch --branch $GCC_BRANCH git://gcc.gnu.org/git/gcc.git gcc     && cd gcc     && mkdir objdir     && cd objdir     && ../configure --enable-languages=c,c++,fortran --disable-multilib        --disable-bootstrap --build=x86_64-linux-gnu     && make -j\"$(nproc)\"     && make install-strip     && make distclean || true     && cd ../..     && rm -rf ./gcc     && echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf     && ldconfig -v    && dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc     && dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++     && update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999     && apt-get purge -y --auto-remove $transientBuildDeps     && apt-get install -y build-essential     && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:13:29.366855418Z",
                    "created_by": "ENTRYPOINT []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:13:29.366855418Z",
                    "created_by": "CMD []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:34:02.970218421Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:34:02.970218421Z",
                    "created_by": "LABEL org.label-schema.name=cosmobox org.label-schema.url=https://github.com/cmbant/docker-cosmobox/tree/ org.label-schema.version= org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:34:02.970218421Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y --no-install-recommends apt-utils  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  && apt-get clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:34:02.970218421Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:37:05.942253714Z",
                    "created_by": "RUN /bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install -c conda-forge --yes conda-build numpy scipy matplotlib pandas sympy cython ipython PyYAML numba packaging swig fftw gsl cmake  && conda clean --yes -i -t -p # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:37:55.007445195Z",
                    "created_by": "RUN /bin/sh -c oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:37:55.007445195Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:946656d9d3df49ae82cc72157a321efcf0631f4ecef849638c00113da008657a",
                    "sha256:fb2d98f46037a664236668da814f4e786a5307568aa3e41ab3cfe952bc11f0f3",
                    "sha256:55c5dbe26a94c2782429e64140e803ac9c07f4dd6d1264e9bba9e6ab682f5ee5",
                    "sha256:e8cdf31ffcbdf46e3e9972992ab110c9cb7850a3fd823813af4fea2b36308800",
                    "sha256:20802d863f85309f0f059b71130b935ef826c273e95406347700d12beb141c32",
                    "sha256:de18559c60b80f1bfb058b57196a322f5764f0ea18e87e31cf8deaf01c108bcd"
                ]
            }
        },
        "gcc10": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.label-schema.build-date": "",
                    "org.label-schema.description": "GCC and gfortran source releases/gcc-10 build ()",
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.license": "GPL-3.0",
                    "org.label-schema.name": "cosmobox",
                    "org.label-schema.schema-version": "1.0",
                    "org.label-schema.url": "https://github.com/cmbant/docker-cosmobox/tree/",
                    "org.label-schema.vendor": "cmbant",
                    "org.label-schema.version": ""
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-01-13T12:07:48.4158568Z",
            "history": [
                {
                    "created": "2021-12-21T01:24:22.307964009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7758f3d668815c6e20a2e7dacae2ada21bcb7e32bca9d5de495171a6a041fe47 in / "
                },
                {
                    "created": "2021-12-21T01:24:22.761579011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "ARG BUILD_DATE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "ARG IMAGE_NAME",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "ARG SOURCE_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "ARG SOURCE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "ARG GCC_BRANCH=releases/gcc-10",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "ADD https://gcc.gnu.org/git/?p=gcc.git;a=shortlog;h=refs/heads/releases/gcc-10 gcc_shortlog # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-13T11:47:59.9776898Z",
                    "created_by": "LABEL org.label-schema.schema-version=1.0 org.label-schema.build-date= org.label-schema.name=docker-gcc-build org.label-schema.description=GCC and gfortran source releases/gcc-10 build () org.label-schema.url=https://github.com/cmbant/docker-gcc-build/tree/ org.label-schema.version= org.label-schema.vendor=cmbant org.label-schema.license=GPL-3.0 org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:57:44.3595977Z",
                    "created_by": "RUN |5 BUILD_DATE= IMAGE_NAME= SOURCE_BRANCH= SOURCE_COMMIT= GCC_BRANCH=releases/gcc-10 /bin/sh -c DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"dpkg-dev apt-utils bison flex libmpc-dev\"     && set -v     && echo \"$DEBIAN_FRONTEND\" \"$transientBuildDeps\"     && apt-get update     && apt-get install -y $transientBuildDeps        build-essential git wget sudo cmake libtool ca-certificates openssh-client gcc g++        libisl-dev liblapack-dev libopenblas-dev openmpi-bin libopenmpi-dev        --no-install-recommends --no-install-suggests     && git clone --depth=1 --single-branch --branch $GCC_BRANCH git://gcc.gnu.org/git/gcc.git gcc     && cd gcc     && mkdir objdir     && cd objdir     && ../configure --enable-languages=c,c++,fortran --disable-multilib        --disable-bootstrap --build=x86_64-linux-gnu     && make -j\"$(nproc)\"     && make install-strip     && make distclean     && cd ../..     && rm -rf ./gcc     && echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf     && ldconfig -v    && dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc     && dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++     && update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999     && apt-get purge -y --auto-remove $transientBuildDeps     && apt-get install -y build-essential     && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-13T11:57:44.3595977Z",
                    "created_by": "ENTRYPOINT []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T11:57:44.3595977Z",
                    "created_by": "CMD []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T12:05:01.36045Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T12:05:01.36045Z",
                    "created_by": "LABEL org.label-schema.name=cosmobox org.label-schema.url=https://github.com/cmbant/docker-cosmobox/tree/ org.label-schema.version= org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T12:05:01.36045Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y --no-install-recommends apt-utils  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  && apt-get clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-13T12:05:01.36045Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-13T12:07:23.9370652Z",
                    "created_by": "RUN /bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install -c conda-forge --yes conda-build numpy scipy matplotlib pandas sympy cython ipython PyYAML numba packaging swig fftw gsl cmake  && conda clean --yes -i -t -s -p # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-13T12:07:48.4158568Z",
                    "created_by": "RUN /bin/sh -c oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-13T12:07:48.4158568Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a1c2b9b8312a20cecfa41f171ab1a8626ff93b8279d27c87436151ca16c0465",
                    "sha256:d37c0883d0c716ced33d0fb33e7d1c7db096156e5685b5287c4f1df71800d914",
                    "sha256:e0148c70ca19c9f50f84a7dd6112dc0122e535f2e3b127e93f18ce16c30368a7",
                    "sha256:4aa068b351830b0431475e8939b98e6e2c88f80b61f5fc58ab69bf672c7cce89",
                    "sha256:ce18faf11d6e28ac7f59636d49b548300130d64025a553bc8bed2a86050ebef5",
                    "sha256:973d88e3afa1f7652234b8de3eb7f75e30b9e4e60cce4c57a4a9e48047b098e0"
                ]
            }
        },
        "gcc11": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.label-schema.build-date": "",
                    "org.label-schema.description": "GCC and gfortran source releases/gcc-11 build ()",
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.license": "GPL-3.0",
                    "org.label-schema.name": "cosmobox",
                    "org.label-schema.schema-version": "1.0",
                    "org.label-schema.url": "https://github.com/cmbant/docker-cosmobox/tree/",
                    "org.label-schema.vendor": "cmbant",
                    "org.label-schema.version": ""
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-01-14T17:57:53.4126705Z",
            "history": [
                {
                    "created": "2021-12-21T01:24:22.307964009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7758f3d668815c6e20a2e7dacae2ada21bcb7e32bca9d5de495171a6a041fe47 in / "
                },
                {
                    "created": "2021-12-21T01:24:22.761579011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "ARG BUILD_DATE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "ARG IMAGE_NAME",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "ARG SOURCE_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "ARG SOURCE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "ARG GCC_BRANCH=releases/gcc-11",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "ADD https://gcc.gnu.org/git/?p=gcc.git;a=shortlog;h=refs/heads/releases/gcc-11 gcc_shortlog # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-14T17:35:35.2166641Z",
                    "created_by": "LABEL org.label-schema.schema-version=1.0 org.label-schema.build-date= org.label-schema.name=docker-gcc-build org.label-schema.description=GCC and gfortran source releases/gcc-11 build () org.label-schema.url=https://github.com/cmbant/docker-gcc-build/tree/ org.label-schema.version= org.label-schema.vendor=cmbant org.label-schema.license=GPL-3.0 org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:44:44.3897035Z",
                    "created_by": "RUN |5 BUILD_DATE= IMAGE_NAME= SOURCE_BRANCH= SOURCE_COMMIT= GCC_BRANCH=releases/gcc-11 /bin/sh -c DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"dpkg-dev apt-utils bison flex libmpc-dev\"     && set -v     && echo \"$DEBIAN_FRONTEND\" \"$transientBuildDeps\"     && apt-get update     && apt-get install -y $transientBuildDeps        build-essential git wget sudo cmake libtool ca-certificates openssh-client gcc g++        libisl-dev liblapack-dev libopenblas-dev openmpi-bin libopenmpi-dev        --no-install-recommends --no-install-suggests     && git clone --depth=1 --single-branch --branch $GCC_BRANCH git://gcc.gnu.org/git/gcc.git gcc     && cd gcc     && mkdir objdir     && cd objdir     && ../configure --enable-languages=c,c++,fortran --disable-multilib        --disable-bootstrap --build=x86_64-linux-gnu     && make -j\"$(nproc)\"     && make install-strip     && make distclean || true     && cd ../..     && rm -rf ./gcc     && echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf     && ldconfig -v    && dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc     && dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++     && update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999     && apt-get purge -y --auto-remove $transientBuildDeps     && apt-get install -y build-essential     && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-14T17:44:44.3897035Z",
                    "created_by": "ENTRYPOINT []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:44:44.3897035Z",
                    "created_by": "CMD []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:55:23.0440682Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:55:23.0440682Z",
                    "created_by": "LABEL org.label-schema.name=cosmobox org.label-schema.url=https://github.com/cmbant/docker-cosmobox/tree/ org.label-schema.version= org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:55:23.0440682Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y --no-install-recommends apt-utils  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  && apt-get clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-14T17:55:23.0440682Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-14T17:57:29.6979846Z",
                    "created_by": "RUN /bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install -c conda-forge --yes conda-build numpy scipy matplotlib pandas sympy cython ipython PyYAML numba packaging swig fftw gsl cmake  && conda clean --yes -i -t -s -p # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-14T17:57:53.4126705Z",
                    "created_by": "RUN /bin/sh -c oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-14T17:57:53.4126705Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a1c2b9b8312a20cecfa41f171ab1a8626ff93b8279d27c87436151ca16c0465",
                    "sha256:37a2b34cebe63ef073e4ad40053da31dce8f854aca75895d46d601f86ca7e43e",
                    "sha256:72fd64de04f7a86669a0c5239bb85db6c38a361a7d67b84ec27bd1476ea97bc9",
                    "sha256:74756fab78f2b8a8c254b7280163dd78199f31d08f32f7edb3ba43c62fb4961e",
                    "sha256:8f2f3c8af81deddff14625febada607185215d0da1b89d1df330c23a5ced7342",
                    "sha256:a4dc987a9ca31971468749849792b6bc721c10c8c7ca7b7d30e78ec3e469de3c"
                ]
            }
        },
        "gcc6": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cb412b4806c3899d9738d35f3d4c7618b94ff7caec8a7933b43c089298afce14",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cdb758f42e292a793f70aafc7afed650790ab8729067a1c3f84dc78714f6db4a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "oldpath=`pwd` && cd /tmp && wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz && tar zxvf cfitsio_latest.tar.gz && cd cfitsio && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cb412b4806c3899d9738d35f3d4c7618b94ff7caec8a7933b43c089298afce14",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-04-15T11:01:53.776336636Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2019-01-22T22:41:24.761169701Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38a199e521f5e9007f2a0f987ede0d49489b3aa82729a1e28af42f9c5981220c in / "
                },
                {
                    "created": "2019-01-22T22:41:25.920355033Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:41:26.891988875Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:41:27.979830805Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:41:28.350121367Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T12:04:29.03340525Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T12:06:51.764644562Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y      build-essential      git      liblapack-dev      libopenblas-dev      openmpi-bin      libopenmpi-dev  && apt-get clean"
                },
                {
                    "created": "2019-01-23T12:06:53.513796718Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop) ADD 263857bcab608b2b5e6b13d667eb3dbf6385745593c3af0129c6ab20e88be1d6 in gcc_shortlog "
                },
                {
                    "created": "2019-01-23T13:21:40.512104845Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c buildDeps='wget unzip bison flex libmpc-dev g++ '  && apt-get update && apt-get install -y $buildDeps --no-install-recommends  && wget https://codeload.github.com/gcc-mirror/gcc/zip/gcc-6-branch  && unzip gcc-6-branch  && rm -f gcc-6-branch  && cd gcc-gcc-6-branch  && mkdir objdir  && cd objdir  && ../configure --enable-languages=c,c++,fortran --disable-multilib     --disable-bootstrap --build=x86_64-linux-gnu  && make -j\"$(nproc)\"  && make install  && make distclean  && cd ../..  && rm -rf ./gcc-gcc-6-branch  && sed -i '1s/^/\\/usr\\/local\\/lib64\\n/' /etc/ld.so.conf  && ldconfig  && apt-get purge -y --auto-remove $buildDeps  && apt-get update  && apt-get install -y build-essential  && apt-get clean"
                },
                {
                    "created": "2019-04-15T10:43:46.164588325Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T10:46:20.148417419Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  wget  build-essential  && apt-get clean"
                },
                {
                    "created": "2019-04-15T10:46:22.369736396Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T10:46:22.676112536Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T11:00:16.496945835Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install --yes conda-build atlas numpy scipy matplotlib pandas sympy cython ipython yaml  && conda clean --yes -i -t -l -s -p  && ln -s /usr/local/bin/gfortran /usr/local/bin/f95"
                },
                {
                    "created": "2019-04-15T11:01:53.776336636Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c oldpath=`pwd` && cd /tmp && wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz && tar zxvf cfitsio_latest.tar.gz && cd cfitsio && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adcb570ae9ac70d0f46badf9ee0ecd49fbec2ae0bc26254653f99afa60046a4e",
                    "sha256:7604c8714555c5c681ce97ab9114c24d5b128e248724bd3e8389f3ccbe1f09a4",
                    "sha256:9e9d3c3a74581b0bb947e9621526ccec317d3cae000bc3c5d7b7f892bc1b4baa",
                    "sha256:27a216ffe82565764e05e8e0166a2505242bbf4c359a2eaf737e0a4b9d3c3000",
                    "sha256:844c541bf65b8359c235984df03954ca400ab615281c01d6c5c71cb20cdb3e36",
                    "sha256:9683dc895be56ff9acd623867c8f32e2dfb864ba7510f8d79ea02e9437589c67",
                    "sha256:7fae5ce2f88d84173db68c61623e48f99395b4853b430a31663f1098ab851b86",
                    "sha256:d7e2086b956e2e807ad5c09b1ed78eeff9d31994a5dfb504631477049b69fb65",
                    "sha256:2dd923f80d2e42f3d325ab402b6e474b1b8d47b71d8504f5d8df2576d2b0503d",
                    "sha256:31ba295138630c8f217a00db48ed752f4c4253127564dd725d21f871d30c179c"
                ]
            }
        },
        "gcc7": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4b1861d818d69139171b587cd347847025c62c22f1789c01daf010537862e6d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ded12ed9866d6abcfae683dba0af16e6e267e19495598ebcc575cfe598dfa549",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "oldpath=`pwd` && cd /tmp && wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4b1861d818d69139171b587cd347847025c62c22f1789c01daf010537862e6d",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-06-19T17:12:57.784257676Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2019-01-22T22:41:24.761169701Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38a199e521f5e9007f2a0f987ede0d49489b3aa82729a1e28af42f9c5981220c in / "
                },
                {
                    "created": "2019-01-22T22:41:25.920355033Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:41:26.891988875Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:41:27.979830805Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:41:28.350121367Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T10:12:40.48687483Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T10:14:59.885602077Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y      build-essential      git      liblapack-dev      libopenblas-dev      openmpi-bin      libopenmpi-dev  && apt-get clean"
                },
                {
                    "created": "2019-01-23T10:15:01.978009148Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop) ADD c1e365e4d3a7154e111215e9f9f0b959a8a7d936bc5a161f4ddf31bc27577597 in gcc_shortlog "
                },
                {
                    "created": "2019-01-23T11:34:29.359069765Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c buildDeps='wget unzip bison flex libmpc-dev g++ '  && apt-get update && apt-get install -y $buildDeps --no-install-recommends  && wget https://codeload.github.com/gcc-mirror/gcc/zip/gcc-7-branch  && unzip  gcc-7-branch  && rm -f gcc-7-branch   && cd gcc-gcc-7-branch   && mkdir objdir  && cd objdir  && ../configure --enable-languages=c,c++,fortran --disable-multilib     --disable-bootstrap --build=x86_64-linux-gnu  && make -j\"$(nproc)\"  && make install  && make distclean  && cd ../..  && rm -rf ./gcc-gcc-7-branch   && sed -i '1s/^/\\/usr\\/local\\/lib64\\n/' /etc/ld.so.conf  && ldconfig  && apt-get purge -y --auto-remove $buildDeps  && apt-get update  && apt-get install -y build-essential  && apt-get clean"
                },
                {
                    "created": "2019-06-19T16:54:52.36055676Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T16:57:29.638117611Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  wget  build-essential  && apt-get clean"
                },
                {
                    "created": "2019-06-19T16:57:31.610401113Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T16:57:31.900835493Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-19T17:11:19.419813705Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install --yes -c conda-forge conda-build atlas numpy scipy matplotlib pandas sympy cython ipython yaml  && conda clean --yes -i -t -l -s -p"
                },
                {
                    "created": "2019-06-19T17:12:57.784257676Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c oldpath=`pwd` && cd /tmp && wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adcb570ae9ac70d0f46badf9ee0ecd49fbec2ae0bc26254653f99afa60046a4e",
                    "sha256:7604c8714555c5c681ce97ab9114c24d5b128e248724bd3e8389f3ccbe1f09a4",
                    "sha256:9e9d3c3a74581b0bb947e9621526ccec317d3cae000bc3c5d7b7f892bc1b4baa",
                    "sha256:27a216ffe82565764e05e8e0166a2505242bbf4c359a2eaf737e0a4b9d3c3000",
                    "sha256:469d5fcdcb62d3a8e2d33f7fea182a1fa563c0c6779a6a0524d7b45905b405e0",
                    "sha256:5024163bc131934e2e5e1c41df6a30ff28c32e01c6e20090c327cb360bd83156",
                    "sha256:a63215bacd1963f308ab175d8bae0b0608af312cc991833ab95c0f7db4004e67",
                    "sha256:82aeaab7a5b796ba333fc696c80c3a79d5f7521f3bf807ed917600bd22535328",
                    "sha256:e4a26a5bf8a74f9056f2bc3aa3c496f3353e3b2bdb12ff9333c1d9b1c60383fa",
                    "sha256:4d6687c2e5e01c22f46425a1c2709b7185a89c11cf511462a739a8773fc1c984"
                ]
            }
        },
        "gcc8": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:0b95e2f5e6e28a85da8fbf4aab43fbb370aa3672a1d46e4d77222aae1e4d7263",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.label-schema.build-date": "",
                    "org.label-schema.description": "GCC and gfortran source releases/gcc-8 build ()",
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.license": "GPL-3.0",
                    "org.label-schema.name": "docker-gcc-build",
                    "org.label-schema.schema-version": "1.0",
                    "org.label-schema.url": "https://github.com/cmbant/docker-gcc-build/tree/",
                    "org.label-schema.vendor": "cmbant",
                    "org.label-schema.version": ""
                }
            },
            "container": "135e2197f40e84eb57c8613d27439bc689e5334dc8b1372c892926c326aa36ca",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && rm -f cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                ],
                "Image": "sha256:0b95e2f5e6e28a85da8fbf4aab43fbb370aa3672a1d46e4d77222aae1e4d7263",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "org.label-schema.build-date": "",
                    "org.label-schema.description": "GCC and gfortran source releases/gcc-8 build ()",
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.license": "GPL-3.0",
                    "org.label-schema.name": "docker-gcc-build",
                    "org.label-schema.schema-version": "1.0",
                    "org.label-schema.url": "https://github.com/cmbant/docker-gcc-build/tree/",
                    "org.label-schema.vendor": "cmbant",
                    "org.label-schema.version": ""
                }
            },
            "created": "2021-06-18T15:06:32.540425074Z",
            "docker_version": "19.03.8",
            "history": [
                {
                    "created": "2021-05-12T01:22:51.59108284Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:639a904472920746fa3bd40ff823b7c2f30f80dd518f4328ca2a7c2ab040ccc1 in / "
                },
                {
                    "created": "2021-05-12T01:22:51.965354131Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:22.282478409Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:22.555302028Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ARG BUILD_DATE",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:22.787723547Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ARG IMAGE_NAME",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:23.083045219Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ARG SOURCE_BRANCH",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:23.393866911Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ARG SOURCE_COMMIT",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:23.64591152Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ARG GCC_BRANCH=releases/gcc-8",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:26:24.214834631Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop) ADD 0c3558ebb178d4a2081acd2ffae1952a05937a2215e40838f09f2dcab0bad654 in gcc_shortlog "
                },
                {
                    "created": "2021-06-18T14:26:24.479074434Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.label-schema.schema-version=1.0 org.label-schema.build-date= org.label-schema.name=docker-gcc-build org.label-schema.description=GCC and gfortran source releases/gcc-8 build () org.label-schema.url=https://github.com/cmbant/docker-gcc-build/tree/ org.label-schema.version= org.label-schema.vendor=cmbant org.label-schema.license=GPL-3.0 org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:57:47.013947105Z",
                    "author": "Antony Lewis",
                    "created_by": "|1 GCC_BRANCH=releases/gcc-8 /bin/sh -c DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"dpkg-dev apt-utils bison flex libmpc-dev\"     && set -v     && echo \"$DEBIAN_FRONTEND\" \"$transientBuildDeps\"     && apt-get update     && apt-get install -y $transientBuildDeps        build-essential git wget sudo cmake libtool ca-certificates openssh-client gcc g++        libisl-dev liblapack-dev libopenblas-dev openmpi-bin libopenmpi-dev        --no-install-recommends --no-install-suggests     && git clone --depth=1 --single-branch --branch $GCC_BRANCH git://gcc.gnu.org/git/gcc.git gcc     && cd gcc     && mkdir objdir     && cd objdir     && ../configure --enable-languages=c,c++,fortran --disable-multilib        --disable-bootstrap --build=x86_64-linux-gnu     && make -j\"$(nproc)\"     && make install-strip     && make distclean || true     && cd ../..     && rm -rf ./gcc     && echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf     && ldconfig -v    && dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc     && dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++     && update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999     && apt-get purge -y --auto-remove $transientBuildDeps     && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/*"
                },
                {
                    "created": "2021-06-18T14:57:47.498367865Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ENTRYPOINT []",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T14:57:47.641507247Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  CMD []",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T15:01:19.934494043Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T15:02:21.694222834Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  wget  build-essential  && apt-get clean"
                },
                {
                    "created": "2021-06-18T15:02:22.932054389Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T15:02:23.166100039Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-18T15:05:15.947516787Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install --yes scipy matplotlib pandas sympy cython ipython jupyter PyYAML packaging  && conda clean --yes -i -t -s -p"
                },
                {
                    "created": "2021-06-18T15:06:32.540425074Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && rm -f cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:32b8a232cdb35c40786f41a29e7cdc5243f76e061172979f0c4b6d6db7d3b78f",
                    "sha256:d150b2148e0cbb11e19598e41cb6340cd3aabc3ce51c0ed76867aa7d0d6faad0",
                    "sha256:1b6d5c7018e454cab3656278ab701b011ad55a22af8d1425977ee92a1f5d2dea",
                    "sha256:3114da247292575b8663760ddc983d2cad7654593f67c7e6fc4b763bc00c4c03",
                    "sha256:0ce77842f56f28e5c059ab9006e0627b31597a8dc83853bcb8eaf7020a876e37",
                    "sha256:fab79ffebb26acd7498b3a2475a7a2206ea9e80c8cf60ec156ef49e6c69582aa"
                ]
            }
        },
        "gcc9": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.label-schema.build-date": "",
                    "org.label-schema.description": "GCC and gfortran source releases/gcc-9 build ()",
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.license": "GPL-3.0",
                    "org.label-schema.name": "cosmobox",
                    "org.label-schema.schema-version": "1.0",
                    "org.label-schema.url": "https://github.com/cmbant/docker-cosmobox/tree/",
                    "org.label-schema.vendor": "cmbant",
                    "org.label-schema.version": ""
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2022-01-07T16:13:09.2381675Z",
            "history": [
                {
                    "created": "2021-12-21T01:24:22.307964009Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7758f3d668815c6e20a2e7dacae2ada21bcb7e32bca9d5de495171a6a041fe47 in / "
                },
                {
                    "created": "2021-12-21T01:24:22.761579011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "ARG BUILD_DATE",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "ARG IMAGE_NAME",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "ARG SOURCE_BRANCH",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "ARG SOURCE_COMMIT",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "ARG GCC_BRANCH=releases/gcc-9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "ADD https://gcc.gnu.org/git/?p=gcc.git;a=shortlog;h=refs/heads/releases/gcc-9 gcc_shortlog # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T15:52:01.354757Z",
                    "created_by": "LABEL org.label-schema.schema-version=1.0 org.label-schema.build-date= org.label-schema.name=docker-gcc-build org.label-schema.description=GCC and gfortran source releases/gcc-9 build () org.label-schema.url=https://github.com/cmbant/docker-gcc-build/tree/ org.label-schema.version= org.label-schema.vendor=cmbant org.label-schema.license=GPL-3.0 org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T16:00:37.2158137Z",
                    "created_by": "RUN |5 BUILD_DATE= IMAGE_NAME= SOURCE_BRANCH= SOURCE_COMMIT= GCC_BRANCH=releases/gcc-9 /bin/sh -c DEBIAN_FRONTEND=noninteractive transientBuildDeps=\"dpkg-dev apt-utils bison flex libmpc-dev\"     && set -v     && echo \"$DEBIAN_FRONTEND\" \"$transientBuildDeps\"     && apt-get update     && apt-get install -y $transientBuildDeps        build-essential git wget sudo cmake libtool ca-certificates openssh-client gcc g++        libisl-dev liblapack-dev libopenblas-dev openmpi-bin libopenmpi-dev        --no-install-recommends --no-install-suggests     && git clone --depth=1 --single-branch --branch $GCC_BRANCH git://gcc.gnu.org/git/gcc.git gcc     && cd gcc     && mkdir objdir     && cd objdir     && ../configure --enable-languages=c,c++,fortran --disable-multilib        --disable-bootstrap --build=x86_64-linux-gnu     && make -j\"$(nproc)\"     && make install-strip     && make distclean     && cd ../..     && rm -rf ./gcc     && echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf     && ldconfig -v    && dpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc     && dpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++     && update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999     && apt-get purge -y --auto-remove $transientBuildDeps     && apt-get install -y build-essential     && rm -rf /var/lib/apt/lists/* /var/log/* /tmp/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T16:00:37.2158137Z",
                    "created_by": "ENTRYPOINT []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T16:00:37.2158137Z",
                    "created_by": "CMD []",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T16:10:54.7586622Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T16:10:54.7586622Z",
                    "created_by": "LABEL org.label-schema.name=cosmobox org.label-schema.url=https://github.com/cmbant/docker-cosmobox/tree/ org.label-schema.version=",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T16:10:54.7586622Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y --no-install-recommends apt-utils  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  && apt-get clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T16:10:54.7586622Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-07T16:12:47.3367344Z",
                    "created_by": "RUN /bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install -c conda-forge --yes conda-build numpy scipy matplotlib pandas sympy cython ipython PyYAML numba packaging swig fftw gsl cmake  && conda clean --yes -i -t -s -p # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T16:13:09.2381675Z",
                    "created_by": "RUN /bin/sh -c oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2022-01-07T16:13:09.2381675Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a1c2b9b8312a20cecfa41f171ab1a8626ff93b8279d27c87436151ca16c0465",
                    "sha256:b0402f0484bdb65245fa39981563dbdbd503fcf79d35949cea5fb98d8c0bb027",
                    "sha256:3ecd88eb257ce8141eafb9d04f6c2bd505b78b336e0f04050e78545739dac60c",
                    "sha256:326e31046ccd36a00dc6831c8b2b3588732e0c8c6b389a29a7142740e04caee1",
                    "sha256:0cec7fec2bb39cbb8ed1c66abee11ec0c6afbe6f235edd6b4f3b1e9b2b4fa7e2",
                    "sha256:53084f34f987bb76c42631b8731c7b81a7c4c78da869901b6141555b4a5b6975"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GPG_KEYS=B215C1633BCA0477615F1B35A5B3A004745C015A \tB3C42148A44E6983B3E4CC0793FA9B1AB75C61B8 \t90AA470469D3965A87A5DCB494D03953902C9419 \t80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C \t7F74F97C103468EE5D750B583AB00996FC26A641 \t33C235A34C46AA3FFB293709A328C3A2C3C45C06 \tD3A93CAD751C2AF4F8C7AD516C35B99309B5FA62",
                    "GCC_MIRRORS=https://ftpmirror.gnu.org/gcc \t\thttps://mirrors.kernel.org/gnu/gcc \t\thttps://bigsearcher.com/mirrors/gcc/releases \t\thttp://www.netgull.com/gcc/releases \t\thttps://ftpmirror.gnu.org/gcc \t\tftp://ftp.gnu.org/gnu/gcc",
                    "GCC_VERSION=13.2.0"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Labels": {
                    "org.label-schema.docker.cmd": "docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "org.label-schema.name": "cosmobox",
                    "org.label-schema.url": "https://github.com/cmbant/docker-cosmobox/tree/",
                    "org.label-schema.version": ""
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-10-16T13:25:19.577764889Z",
            "history": [
                {
                    "created": "2023-10-11T18:34:37.47382094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1e4dd5dab602337b5d5ef8d84b8dbe8b1ac62225f077b29b27d045842486d8e2 in / "
                },
                {
                    "created": "2023-10-11T18:34:37.999717002Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T03:19:00.998098468Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tgnupg \t\tnetbase \t\tsq \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-10-12T03:19:21.35143921Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-10-12T03:20:33.481610614Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tautoconf \t\tautomake \t\tbzip2 \t\tdpkg-dev \t\tfile \t\tg++ \t\tgcc \t\timagemagick \t\tlibbz2-dev \t\tlibc6-dev \t\tlibcurl4-openssl-dev \t\tlibdb-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibgdbm-dev \t\tlibglib2.0-dev \t\tlibgmp-dev \t\tlibjpeg-dev \t\tlibkrb5-dev \t\tliblzma-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibmaxminddb-dev \t\tlibncurses5-dev \t\tlibncursesw5-dev \t\tlibpng-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibtool \t\tlibwebp-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tmake \t\tpatch \t\tunzip \t\txz-utils \t\tzlib1g-dev \t\t\t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-10-12T14:01:42.855813091Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GPG_KEYS=B215C1633BCA0477615F1B35A5B3A004745C015A \tB3C42148A44E6983B3E4CC0793FA9B1AB75C61B8 \t90AA470469D3965A87A5DCB494D03953902C9419 \t80F98B2E0DAB6C8281BDF541A7C8C3B2F71EDF1C \t7F74F97C103468EE5D750B583AB00996FC26A641 \t33C235A34C46AA3FFB293709A328C3A2C3C45C06 \tD3A93CAD751C2AF4F8C7AD516C35B99309B5FA62",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T14:01:50.120530618Z",
                    "created_by": "/bin/sh -c set -ex; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tgnupg \t; \trm -rf /var/lib/apt/lists/*; \tfor key in $GPG_KEYS; do \t\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\"; \tdone"
                },
                {
                    "created": "2023-10-12T14:01:50.209442274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_MIRRORS=https://ftpmirror.gnu.org/gcc \t\thttps://mirrors.kernel.org/gnu/gcc \t\thttps://bigsearcher.com/mirrors/gcc/releases \t\thttp://www.netgull.com/gcc/releases \t\thttps://ftpmirror.gnu.org/gcc \t\tftp://ftp.gnu.org/gnu/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T14:01:50.295647391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=13.2.0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-12T15:03:27.118737515Z",
                    "created_by": "/bin/sh -c set -ex; \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tdpkg-dev \t\tflex \t; \trm -r /var/lib/apt/lists/*; \t\t_fetch() { \t\tlocal fetch=\"$1\"; shift; \t\tlocal file=\"$1\"; shift; \t\tfor mirror in $GCC_MIRRORS; do \t\t\tif curl -fL \"$mirror/$fetch\" -o \"$file\"; then \t\t\t\treturn 0; \t\t\tfi; \t\tdone; \t\techo >&2 \"error: failed to download '$fetch' from several mirrors\"; \t\treturn 1; \t}; \t\t_fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz.sig\" 'gcc.tar.xz.sig'; \t_fetch \"gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz\" 'gcc.tar.xz'; \tgpg --batch --verify gcc.tar.xz.sig gcc.tar.xz; \tmkdir -p /usr/src/gcc; \ttar -xf gcc.tar.xz -C /usr/src/gcc --strip-components=1; \trm gcc.tar.xz*; \t\tcd /usr/src/gcc; \t\t./contrib/download_prerequisites; \t{ rm *.tar.* || true; }; \t\tfor f in config.guess config.sub; do \t\twget -O \"$f\" \"https://git.savannah.gnu.org/cgit/config.git/plain/$f?id=7d3d27baf8107b630586c962c057e22149653deb\"; \t\tfind -mindepth 2 -name \"$f\" -exec cp -v \"$f\" '{}' ';'; \tdone; \t\tdir=\"$(mktemp -d)\"; \tcd \"$dir\"; \t\textraConfigureArgs=''; \tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"$dpkgArch\" in \t\tarmel) \t\t\textraConfigureArgs=\"$extraConfigureArgs --with-arch=armv5te --with-float=soft\" \t\t\t;; \t\tarmhf) \t\t\textraConfigureArgs=\"$extraConfigureArgs --with-arch=armv7-a+fp --with-float=hard --with-mode=thumb\" \t\t\t;; \t\t\t\ti386) \t\t\textraConfigureArgs=\"$extraConfigureArgs --with-arch-32=i686\"; \t\t\t;; \tesac; \t\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t/usr/src/gcc/configure \t\t--build=\"$gnuArch\" \t\t--disable-multilib \t\t--enable-languages=c,c++,fortran,go \t\t$extraConfigureArgs \t; \tmake -j \"$(nproc)\"; \tmake install-strip; \t\tcd ..; \t\trm -rf \"$dir\" /usr/src/gcc; \t\tapt-mark auto '.*' > /dev/null; \t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false"
                },
                {
                    "created": "2023-10-12T15:03:28.572799084Z",
                    "created_by": "/bin/sh -c set -ex; \t{ echo '/usr/local/lib64'; echo '/usr/local/lib'; } > /etc/ld.so.conf.d/000-local-lib.conf; \tldconfig -v; \tbash -Eeuo pipefail -xc ' \t\tdeb=\"$(strings /usr/lib/*/libstdc++.so* | grep \"^GLIBC\" | sort -u)\"; \t\tgcc=\"$(strings /usr/local/lib*/libstdc++.so | grep \"^GLIBC\" | sort -u)\"; \t\tdiff=\"$(comm -23 <(cat <<<\"$deb\") <(cat <<<\"$gcc\"))\"; \t\ttest -z \"$diff\"; \t'"
                },
                {
                    "created": "2023-10-12T15:03:29.134392582Z",
                    "created_by": "/bin/sh -c set -ex; \tdpkg-divert --divert /usr/bin/gcc.orig --rename /usr/bin/gcc; \tdpkg-divert --divert /usr/bin/g++.orig --rename /usr/bin/g++; \tdpkg-divert --divert /usr/bin/gfortran.orig --rename /usr/bin/gfortran; \tupdate-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999"
                },
                {
                    "created": "2023-10-16T13:17:36.807570657Z",
                    "created_by": "MAINTAINER Antony Lewis",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:17:36.807570657Z",
                    "created_by": "LABEL org.label-schema.name=cosmobox org.label-schema.url=https://github.com/cmbant/docker-cosmobox/tree/ org.label-schema.version= org.label-schema.docker.cmd=docker run -v $(pwd):/virtual/path -i -t  /bin/bash",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:17:36.807570657Z",
                    "created_by": "RUN /bin/sh -c apt-get update  && apt-get install -y --no-install-recommends apt-utils  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-fonts-recommended  && apt-get clean # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:17:36.807570657Z",
                    "created_by": "ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-16T13:24:53.904476618Z",
                    "created_by": "RUN /bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install -c conda-forge --yes conda-build numpy scipy matplotlib pandas sympy cython ipython PyYAML numba packaging swig fftw gsl cmake  && conda clean --yes -i -t -p # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:25:19.577764889Z",
                    "created_by": "RUN /bin/sh -c oldpath=`pwd` && cd /tmp && wget https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio3280.tar.gz && tar zxvf cfitsio3280.tar.gz && cd cfitsio* && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-16T13:25:19.577764889Z",
                    "created_by": "CMD [\"/bin/bash\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2fa37f2ee66efbd308b9b91bce81c262f5e6ab6c3bf8056632afc60cc602785c",
                    "sha256:5cc3a4df1251c008ebfaaf8c48fe7bd61f0b0fdd7273966bd4bbe58877337e06",
                    "sha256:2ef3351afa6d94a8874a6af5aa1bafcd85106616ced8ac63112022fb04232d03",
                    "sha256:0c2d6fc19d6af33b608be1cccf7c50a78abcde56fdadc402edee9c2bf89b39bb",
                    "sha256:2159a0b61319d91bfbf5f06d51ff17ddddeb7e839f92320c4659e24634bbe5e3",
                    "sha256:602459a8f7ded6dd106d0226e5bff7db3b7a7277ad03b763bed3508e410a9205",
                    "sha256:27fb1c135eaa94a4dcb1f4bfba0a4b225fbda769a56ecc9c28421b69779d63b9",
                    "sha256:a329dc1c6ce50faa6ee9e214fccc6b05e4c21ff07ea753c95c62f70ed6ebbe4f",
                    "sha256:b9b07f9997a07f8fb922dd9a472f8e72f51e0f2d9b91cb1fcdfc334ff80f98b4",
                    "sha256:d9a0b383deee81e68a664a225bd1bcc5ddaffce5d962a97d09e275baed3b70d6",
                    "sha256:f2c52ab273ca2f3f3cf3d524225059895d85e4e024e38f3ec074f663a55073b4"
                ]
            }
        },
        "python3": {
            "architecture": "amd64",
            "author": "Antony Lewis",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5616ddd218086e39f87e0bec26584bf88fd56ce2403b90e69f93f89e402f3b95",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bf15db7f9f7725eba175d5995911158f989ae0882df07399bfc5e3b63b73dcbd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "oldpath=`pwd` && cd /tmp && wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz && tar zxvf cfitsio_latest.tar.gz && cd cfitsio && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5616ddd218086e39f87e0bec26584bf88fd56ce2403b90e69f93f89e402f3b95",
                "Volumes": null,
                "WorkingDir": "",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "created": "2019-04-15T16:58:52.422397633Z",
            "docker_version": "18.03.1-ee-3",
            "history": [
                {
                    "created": "2018-12-28T23:24:14.838906533Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3a109f3caf85a7b3477f6785dfac95d586150b920d7762bd777723e53f26df1d in / "
                },
                {
                    "created": "2018-12-28T23:24:15.555221567Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-12-28T23:24:16.251525505Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-28T23:24:16.943123294Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-12-28T23:24:17.13608811Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-22T17:53:21.522100694Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-22T17:56:07.028135814Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y      build-essential      git      liblapack-dev      libopenblas-dev      openmpi-bin      libopenmpi-dev  && apt-get clean"
                },
                {
                    "created": "2019-01-22T17:56:09.221921033Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop) ADD f531cf4bf9f1340728d0822cdf45c948cf8d101bcdc4fc7b22e87a9db05cd702 in gcc_shortlog "
                },
                {
                    "created": "2019-01-22T19:44:04.086780421Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c buildDeps='wget unzip bison flex libmpc-dev g++ '  && apt-get update && apt-get install -y $buildDeps --no-install-recommends  && wget https://codeload.github.com/gcc-mirror/gcc/zip/gcc-8-branch  && unzip  gcc-8-branch  && rm -f gcc-8-branch   && cd gcc-gcc-8-branch   && mkdir objdir  && cd objdir  && ../configure --enable-languages=c,c++,fortran --disable-multilib     --disable-bootstrap --build=x86_64-linux-gnu  && make -j\"$(nproc)\"  && make install  && make distclean  && cd ../..  && rm -rf ./gcc-gcc-8-branch   && sed -i '1s/^/\\/usr\\/local\\/lib64\\n/' /etc/ld.so.conf  && ldconfig  && apt-get purge -y --auto-remove $buildDeps  && apt-get update  && apt-get install -y build-essential  && apt-get clean"
                },
                {
                    "created": "2019-04-15T16:38:55.642461719Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  MAINTAINER Antony Lewis",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T16:43:04.532367444Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c apt-get update  && apt-get install -y --no-install-recommends  texlive dvipng texlive-latex-extra texlive-xetex texlive-fonts-recommended  wget  build-essential  && apt-get clean"
                },
                {
                    "created": "2019-04-15T16:43:07.018592538Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/opt/conda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T16:43:07.32163092Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-15T16:56:48.792115064Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh  && bash miniconda.sh -b -p /opt/conda  && rm -f miniconda.sh  && /opt/conda/bin/conda install --yes conda  && conda info -a  && conda install --yes conda-build scipy matplotlib pandas sympy cython ipython jupyter PyYAML  && pip install mpi4py  && conda clean --yes -i -t -l -s -p"
                },
                {
                    "created": "2019-04-15T16:58:52.422397633Z",
                    "author": "Antony Lewis",
                    "created_by": "/bin/sh -c oldpath=`pwd` && cd /tmp && wget ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio_latest.tar.gz && tar zxvf cfitsio_latest.tar.gz && cd cfitsio && ./configure --prefix=/usr && make -j 2 && make install && make clean && cd $oldpath && rm -Rf /tmp/cfitsio*"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95671cedb9795dc9764b3a1eea41678d35138784ea1cc326b5ba28b3e3947088",
                    "sha256:1700ed735fe1798cbad8635ce5d95b7a656b7ffc8d4d247c28ecd7f1efdd6d26",
                    "sha256:2ef1640e829d5c8eceea2f2629657d66fef6271d10e08b86a55f9523d7e7e0a8",
                    "sha256:1e9367d4be0e759b43b2a5c2d8ae6a3770ae45290d210aa7cf48271769ae65b0",
                    "sha256:3daec967be5027885ae693d2e9983899c6f4555f233310221cca50033672b9b5",
                    "sha256:c9c91bb5963e49cebb7726ec364e71f9a530e3ad864d39101f7e5f1898605ab2",
                    "sha256:c9c798b2f4b7b23d053da5d4e485d793c9000580889699a48942d9c2ceecfc38",
                    "sha256:2165404f9d5d2aadf51223fd73ff02f105453b31d12ffbc215ef04ca5ae1b4b0",
                    "sha256:4e4899e87e5047c22a300b2fde97ecf79f7361ad979aed662393ef01e57685f2",
                    "sha256:c1b34b4c308a51404524f9d4a82bb75899291f361f21e5fbe7758b2be0fadd9d"
                ]
            }
        }
    }
}