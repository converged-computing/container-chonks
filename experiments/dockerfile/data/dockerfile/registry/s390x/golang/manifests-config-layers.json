{
    "manifests": {
        "1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                    "size": 2322,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:59256abb2252e0cda7425a81f7eb7e0b7f4d75fbf878b6bfda2e53dd42bcf37c",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T02:42:49Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5f7307815a43a2cebbb9989b4b60deea77bc4c596246ed5787b1ce21548693b4",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                    "size": 1921,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:29e5ba63e79337818e6c63cfcc68e2ab4e9ca483853b2de303bfbfba9372426c",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T03:13:19Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:761a1ed8b6aff9e8d483d929102ec73068841012ed61fe2628c934c84759ac97",
                    "size": 567,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:f1a72c33c5b0371593b169ae4654bd8630925fefc47e12b7db17d28566f93319"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126842772,
                    "digest": "sha256:d164e214543e394887df10370c6d928637a11c469be38e4423c6cab5ee11224f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dc1772a571e2e8ee350576e9d36b7ff486724383b558b340601073973a2de267"
                }
            ]
        },
        "1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:c1df1846af3d901269393c4052b762dfb561ca2770d3036e681b2d895c545dfc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131863119,
                    "digest": "sha256:cfcc717ad835ef3852f8f65a2452954541fa32595700d9e50aecba6687622b91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:fa97dcfc5cfcfbbf0e3171bed74df71291109501212ee43d9d28bf61e951402c"
                }
            ]
        },
        "1-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5164,
                "digest": "sha256:b6b22bead1904ef569c6e0d46261ff8b0d587da441c9066ab81c95ee15e9b3a4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2568428,
                    "digest": "sha256:27efec644c4207cbc4d1400f84f3402937aab5ce72489976148896e42a219820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281343,
                    "digest": "sha256:3c29c45d0e43ef7a36e47dfc16916a076f7ba26b656842380c26207ad30f5c8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:26f1645d6cbfccd2924337f37dc819e7edc27989ead8bc679441954a0e483c24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 104869102,
                    "digest": "sha256:dd919100d02a343aeaa9b54a6492244371e50009f8e905c5451e2c32e04340dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:ea05f8b44aea1cf76d25320c4ebdd17f303e1ea39227e3e846a6718a9c832c63"
                }
            ]
        },
        "1-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5364,
                "digest": "sha256:8b741c029258233931218b1438b1b599756cca8d25cbef3c2a32bb85e48cb8b4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2611155,
                    "digest": "sha256:b872f056719bde6e6722091afb2a3376d720c69c142b91ac352050080dd79615"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 282212,
                    "digest": "sha256:aef86a6f3fe56fd9e87b95d046bfbb7d5ef74d362a1d173afb65e395fc3025ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:0da819e6cc0682835e3ee3a0ecd893496d50d9805b0e3aa2e772669586e1caee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107583832,
                    "digest": "sha256:9b723594da04f6fa5ea7733c8fbeb57da4ce8265d5a992be2fdc75f9c943c16f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:521e097aebcdfeb4541ac76281d8ac868f27159eafcb5751a5b31ef10dfae1f2"
                }
            ]
        },
        "1-alpine3.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5241,
                "digest": "sha256:c8fc15619d3dafa8afa11bd796e5c6a76f26c679472ce031731c9d242137762b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2604075,
                    "digest": "sha256:6f6a6c77b1bd5dfb3e759efaa292f964f197ae4b96be74d80ef059f87317997a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 272232,
                    "digest": "sha256:77d6621fa895d0cec3d8f3e0ba5108daa1e6d2cfbcdbad6c9e5bfb6e19e84b43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:84e0e01a454d3a26e5996b25ac495083be418cc1b479775f4c7a0f33a968f071"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113094155,
                    "digest": "sha256:91c0eaa4be237ebc135414bb4f2a5eb00340d7428b531040e4745503f16159e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:18bbef8a980370cec3aeac0470f937ad72b99a9fddcf1dca8ced62805fcf8b6d"
                }
            ]
        },
        "1-alpine3.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5418,
                "digest": "sha256:39543c6c5d7bde9d4ac8291018f984c1861a8d1a9e921df5c0f3450db804628d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2606087,
                    "digest": "sha256:cdf710f5b7ee39c5124c50c753228dc9b8b1c1c0a1a38f1413487548565445c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285020,
                    "digest": "sha256:48a413720f8f59df0d8698a791acdcae85f36383dd241ff71acbf9f9cbbe5be4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:25314a34a2d9424899222aea88796d6fbcdc057917e15bbdf06432a978f8ae94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 120731835,
                    "digest": "sha256:ce8a9d72ce7ab445e0b390ca42c66e38cf876ef02bb6d3f69364ddf376a905d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:d5ca10c87afbc7f5b9c53c583d88408dd71c529b6eeb91f92afdbfb3ef6891ca"
                }
            ]
        },
        "1-alpine3.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5112,
                "digest": "sha256:14607a663a1156fc66d1398803823c1b11d5b323a004c8475d5f5c51f4b38665"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2593389,
                    "digest": "sha256:95cbbfdf0c760cbcde91603c8eee15ec60d4aa5f874b4a538babcd2df1709174"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 284990,
                    "digest": "sha256:3e2ee69f1a620c782d6c6b1b92f8c8ffe2c34b864a90741f130e03078dc60f41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100792480,
                    "digest": "sha256:b657ac6f5235e0ce543d3da9bb4e454a9e1468f04cfd0b31b31d405e96e11445"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7fcf427f5578c912ea18570830f89ca168133cafb041116db4077b39afe55d6c"
                }
            ]
        },
        "1-alpine3.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6323,
                "digest": "sha256:643cb59b05f73052295e062b63e6fd03d0d8e764289147ff9e070ecaec8e34e8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 3176332,
                    "digest": "sha256:7e9e7e53b618240d2e82e8cab6b677eab6786c4210dcc2b1a35bfd4cb492757e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 285148,
                    "digest": "sha256:8f64ef165c258a1b8a26e72ea9addc0540c7b9de40051ed2d6be9d471a1d46ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 66218500,
                    "digest": "sha256:8179279dbd83afb155ce42db9c73de4e0284529842d2b8051fef917adf8e201e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3c7693317ae2b32eef6bb089f0a180293c2dbc0a0c485ba8b806ad99c54329c9"
                }
            ]
        },
        "1-alpine3.18": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:1dd89ed4c61daf6100f5f50a20d28a1f2ff73949ef877c4a9cd3be3e94b4dc56",
                    "size": 1921,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:0ddaff3bd4a06f7c2ad59838207124315b9bb8f0fa5b8502702a2cd1bb736223",
                        "org.opencontainers.image.base.name": "alpine:3.18",
                        "org.opencontainers.image.created": "2024-05-15T02:47:16Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.18",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.18"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d9444f94431309bb7ba725101b7fb7e627fa8f79e27477f677479a52365a7bc0",
                    "size": 840,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:1dd89ed4c61daf6100f5f50a20d28a1f2ff73949ef877c4a9cd3be3e94b4dc56",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.19": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:0e5bf747efb8a48b77e96bece4ba3a02ecf5d28c2b3daf2144bddcfc5a848a2b",
                    "size": 1921,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:5d0da60400afb021f2d8dbfec8b7d26457e77eb8825cba90eba84319133f0efe",
                        "org.opencontainers.image.base.name": "alpine:3.19",
                        "org.opencontainers.image.created": "2024-05-15T02:46:09Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/alpine3.19",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.19"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:6bb3dfd9218309f0a526787a94534b73fc6f45f0f60c19d5377551d81d70a073",
                    "size": 840,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:0e5bf747efb8a48b77e96bece4ba3a02ecf5d28c2b3daf2144bddcfc5a848a2b",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.20": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                    "size": 1921,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:29e5ba63e79337818e6c63cfcc68e2ab4e9ca483853b2de303bfbfba9372426c",
                        "org.opencontainers.image.base.name": "alpine:3.20",
                        "org.opencontainers.image.created": "2024-05-23T03:13:19Z",
                        "org.opencontainers.image.revision": "cf7a37dedf1fd5a25ca72075645368d1e3c30c4a",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#cf7a37dedf1fd5a25ca72075645368d1e3c30c4a:1.22/alpine3.20",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-alpine3.20"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:761a1ed8b6aff9e8d483d929102ec73068841012ed61fe2628c934c84759ac97",
                    "size": 567,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:b121b1ec284faa85ddcb896865995c0a77e996172abda14b84bf44dfd16419ab",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-alpine3.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4450,
                "digest": "sha256:44c8f2e674ffd8b483b28920f36b3926e3b80163804bb588ad1041b938352bdf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2065460,
                    "digest": "sha256:d45fd9d3c4f188ab1f3a4bf6a9f5202b3f1577dbb998f5f28e82d192e0c1f0e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:0e5978b6b34b3e943e0fd25dfb50991c0bad82a986cfdaa91c4de756431ba679"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352516,
                    "digest": "sha256:1f1017b3e1def54de794c0570a5e15d42d1ad5ff41ceb5878918137823395886"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1116,
                    "digest": "sha256:cb569169d3cffd2b0bafb3acfc5268f3f58d7cd8b43f286c8ed8b8a475731d4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79897569,
                    "digest": "sha256:d34e59673fd2fc769bfdbbdf58519f3f230ba331c295570ff8a094d22e43d735"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0ba7e6770b184746914a977c99a519d0a85c6726603d274c591f8047b5576069"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1356,
                    "digest": "sha256:f65cdc9443db8e490131f3d61f4f51a7c723403587309f5d5011d74a48a19ab7"
                }
            ]
        },
        "1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:a4b8424a78e3e488a0e91d576823e0a6d53f4caab75e1b3382ffbc156fce3e25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110218009,
                    "digest": "sha256:309e5c19804e9d4e82d54165f91fb1539ebd99612675a16d32b3de1b900e37f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2935799320b3da0bf8c4901e2ea5c01600523ee4e46fde394f3ea4b5ee7958aa"
                }
            ]
        },
        "1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:3f62093fd3122f48884b925976d4eca1c05c94277dada9266c598b6c1230b214"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110414920,
                    "digest": "sha256:ee6e9dce465a1a2d88f1494f6dcb138778524f9a8b09498610d89bd8f90c9cae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b6d17ae80ee15290023e27125e21eaefa4ad4370366389da600c4a6d8023153d"
                }
            ]
        },
        "1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:9e5e36584aad2fdd067c39a700be56e8a81469482231f971f306a0c1b0f1b922"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126244460,
                    "digest": "sha256:091e4bcbf25ac26e422c56faba854fc670dd6cf0bf083272920a9c36f128c8b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:30dc679c48df87f6451f20eecfd6222052c857f372e59c9e350421b77633a6e4"
                }
            ]
        },
        "1-bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                    "size": 2322,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:59256abb2252e0cda7425a81f7eb7e0b7f4d75fbf878b6bfda2e53dd42bcf37c",
                        "org.opencontainers.image.base.name": "buildpack-deps:bookworm-scm",
                        "org.opencontainers.image.created": "2024-05-15T02:42:49Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bookworm",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bookworm"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:5f7307815a43a2cebbb9989b4b60deea77bc4c596246ed5787b1ce21548693b4",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:4a2cdadb093177bbfb267b6531c755d00c7c0eb20d7fc1e37260752b74026e1e",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.oci.image.index.v1+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:b50a3ceb0251440a5942b50d8d8d8eb6f45d54fefabaf10c3eb991525ad55c6f",
                    "size": 2322,
                    "platform": {
                        "os": "linux",
                        "architecture": "s390x"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "org.opencontainers.image.base.digest": "sha256:7c87b179715aebeac49997fc2fc35590b0915357ea1f70d2fc616aa7a4d80f0c",
                        "org.opencontainers.image.base.name": "buildpack-deps:bullseye-scm",
                        "org.opencontainers.image.created": "2024-05-15T02:44:26Z",
                        "org.opencontainers.image.revision": "eb57429622f401af7c5afffeb3cd88022c9b9782",
                        "org.opencontainers.image.source": "https://github.com/docker-library/golang.git#eb57429622f401af7c5afffeb3cd88022c9b9782:1.22/bullseye",
                        "org.opencontainers.image.url": "https://hub.docker.com/_/golang",
                        "org.opencontainers.image.version": "1.22.3-bullseye"
                    }
                },
                {
                    "mediaType": "application/vnd.oci.image.manifest.v1+json",
                    "digest": "sha256:d7b30b9ff1305692c865460baf76ceefe6bbe335edc25d682cc4ef13974ed482",
                    "size": 842,
                    "platform": {
                        "os": "unknown",
                        "architecture": "unknown"
                    },
                    "annotations": {
                        "com.docker.official-images.bashbrew.arch": "s390x",
                        "vnd.docker.reference.digest": "sha256:b50a3ceb0251440a5942b50d8d8d8eb6f45d54fefabaf10c3eb991525ad55c6f",
                        "vnd.docker.reference.type": "attestation-manifest"
                    }
                }
            ]
        },
        "1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7084,
                "digest": "sha256:3e5c0139a3773026f33c41287b200be43d8c3b681e0d5680bf985463b5f383b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 49007278,
                    "digest": "sha256:8031e15331a0dfcc3509ff9e409d7bbbf567a40367f9eff78effb21b904d39ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7423882,
                    "digest": "sha256:a1f3cfff1171566bc4507fbae110f76801339a99608218a65aa7c6eb9e99233a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9884760,
                    "digest": "sha256:98c4fc1114e3b423bba8330a810105ed3b4c8cb807e853ca0fccdfac0b580ffd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51383225,
                    "digest": "sha256:fbc3c137faa880b9f1ba62f3a53f147bccc22fd4106874528df4d25714e6a767"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56895501,
                    "digest": "sha256:ec4460d569be2430f3c91e38be78c74806191760c7dea23b68efd06e22e1c2fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 118976397,
                    "digest": "sha256:7065437faceafd626b5ffa79b609c3a36049ee43c69c557ff69709238cda3ae1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fb703c871b27a542fa2373f65fee5a3da0e3bec41ed8c4c22957de0ed0f66ca5"
                }
            ]
        },
        "1-jessie": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5603,
                "digest": "sha256:b7f01803209b35d44ed19af42fb88f53bee62ca7a280c68750ba9bc190e9acff"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52797909,
                    "digest": "sha256:f453b5c212cc2582eb2d4d77faa4149aa0d89e1179755bde7f814ff43a860551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19470406,
                    "digest": "sha256:ae377ac87414d7fda69a640bd1c3eebd40a89fbcbf951e0ac57c0d495240440d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43361247,
                    "digest": "sha256:9e1483cec55bfd85bda960eb7a542fb69e7c32779998c525ef5565aad7186c04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42035165,
                    "digest": "sha256:4a7af4e3a34bded3923362fcf2dbf187a7195433da44a8a329408876edc4ca62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75344456,
                    "digest": "sha256:f58a8986c39c607b3fd6e06d6d9ace3d0faf04ebec5223371378feee91563079"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e91d8ccad63d312d417ec402e3074dc2cbe4ea7ca024ff0678f699c05b7593f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1372,
                    "digest": "sha256:251f6b5f265d76e7e69c506c495cdb915d3348cb29e48d7383e2ec5bced725d4"
                }
            ]
        },
        "1-onbuild": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6504,
                "digest": "sha256:ca7c96dc63f28421db3053a190aee260394c7a062ec5039f0594b3d77b7cf8b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52797909,
                    "digest": "sha256:f453b5c212cc2582eb2d4d77faa4149aa0d89e1179755bde7f814ff43a860551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 19470406,
                    "digest": "sha256:ae377ac87414d7fda69a640bd1c3eebd40a89fbcbf951e0ac57c0d495240440d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43361247,
                    "digest": "sha256:9e1483cec55bfd85bda960eb7a542fb69e7c32779998c525ef5565aad7186c04"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 42035165,
                    "digest": "sha256:4a7af4e3a34bded3923362fcf2dbf187a7195433da44a8a329408876edc4ca62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75344456,
                    "digest": "sha256:f58a8986c39c607b3fd6e06d6d9ace3d0faf04ebec5223371378feee91563079"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e91d8ccad63d312d417ec402e3074dc2cbe4ea7ca024ff0678f699c05b7593f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1372,
                    "digest": "sha256:251f6b5f265d76e7e69c506c495cdb915d3348cb29e48d7383e2ec5bced725d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 134,
                    "digest": "sha256:2d7e8f071452b6e5b31a42a9e834d808dee6935f2d147ffaa32a2209add9336d"
                }
            ]
        },
        "1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6196,
                "digest": "sha256:fe50e97e2fa935dd81c71d1893a7eb2db8dc655add74d2f7894e928446bd0bb4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232505,
                    "digest": "sha256:cc8faf537ff83acc994f80bcea99d8e073aa05b5eb0dab5ce495510af0b6d1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10280522,
                    "digest": "sha256:9816eeae17f469b3b58481bdbae04cc1b7b69f8d8a6ef15f6972d91ba2f29ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372414,
                    "digest": "sha256:13a7344ca59dab92a8238f2df0ea3779840ec21afc295e24f39259558c3bfc05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50510977,
                    "digest": "sha256:e6a9332093631759dcfd58267f270de204b0c9388802581c972141e78700c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015355,
                    "digest": "sha256:61b6579864ff22fdeca13e4d49885f0f743c58aeee072fe66e53629745524eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105381138,
                    "digest": "sha256:bb1218787d7d05caeaf41c361ef30ab03b2f629644369e89624f9b54af2b97c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b9b6c041eee931f3f5d0030d85357a98ac0f602211a03120db98c70219a8d620"
                }
            ]
        },
        "1.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1aa2a3447762457c32ccd2a75cabeaa0fba7f7c2363e4be19566a726904172a9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:308750e357dc8c2541834900e61b4c81ed82378d7d2716566c42177ddc5cb5b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78422934,
                    "digest": "sha256:faf1a6b2d0b32b7502e9169accdef7108c196ec7b4e31278e66067c70a13624d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6637b376e87c0d5f7736d98e6d3d58cd80a23fd532c014fa02c9fca22eb3a6c3"
                }
            ]
        },
        "1.10-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:168b26f8cea5d5421ce75e931ed9e2a024152d82cfd1ca8b4e14d3f706d9c80e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78292379,
                    "digest": "sha256:574df1d6af70cc09b601b26a262787a67d4d914f60fa22ae2cf53365066e7fd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fffb6ed3a91542db4449854bf2b4361e38cfa76adea607ab0d787d891571b478"
                }
            ]
        },
        "1.10-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:92133c2f8a30c1af8a76fc6e99e5b583726ea8c28b7411b2fa1f14086f907be4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78510230,
                    "digest": "sha256:731c9a6b1f3c6096e5ec51dbd04d77876040634cd991c9d14fc52b3c3f92ccec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e0e5ab9f7ed4c0255d4f8e92cfdbb7c92cde28456b4c9469da04219fe77dc6ae"
                }
            ]
        },
        "1.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:308750e357dc8c2541834900e61b4c81ed82378d7d2716566c42177ddc5cb5b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78422934,
                    "digest": "sha256:faf1a6b2d0b32b7502e9169accdef7108c196ec7b4e31278e66067c70a13624d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6637b376e87c0d5f7736d98e6d3d58cd80a23fd532c014fa02c9fca22eb3a6c3"
                }
            ]
        },
        "1.10-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5b47cad7f6995a130f9a05cc8f693ad11881fe4256755664c65aa6d68ef8d841",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4122,
                "digest": "sha256:cbc7154b68e63622bb7f9946db86bf3181389f057f66fa3da25c780a394c7be3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491,
                    "digest": "sha256:e6b85616907975b3f888cce96b9503236a5aa31043d86552de4dfeead4f449ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113082121,
                    "digest": "sha256:7b766786468ac752cffad1edd4ff90cc04dd183fcf33460cecd634da11cc05c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0cf24158e5e59a7942c5ae6c0fcc3a7dccda533036f8a95df6103f4173175210"
                }
            ]
        },
        "1.10-rc-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4122,
                "digest": "sha256:cbc7154b68e63622bb7f9946db86bf3181389f057f66fa3da25c780a394c7be3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491,
                    "digest": "sha256:e6b85616907975b3f888cce96b9503236a5aa31043d86552de4dfeead4f449ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113082121,
                    "digest": "sha256:7b766786468ac752cffad1edd4ff90cc04dd183fcf33460cecd634da11cc05c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0cf24158e5e59a7942c5ae6c0fcc3a7dccda533036f8a95df6103f4173175210"
                }
            ]
        },
        "1.10-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5453,
                "digest": "sha256:dc53516418f947d2bb3a1fa75055f56dbc5fddeb29650ece94522359acea2558"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44971889,
                    "digest": "sha256:964d84d1f29ab606f833ed91af2d80183a542335d5c85f61d55a80b6c2dbdd32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10668568,
                    "digest": "sha256:eb8de23eb22736f2b1a1ee7d3e7cb7124762f87e4fa1d2e9848eac12bda54ba4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4365966,
                    "digest": "sha256:9b245666c672793e5b50be400fd6cf3981742c5efc93f7836f0fa7b865e502f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50448019,
                    "digest": "sha256:01b323d54d0df6efa09cadf041d10bd52a0d84d1768c0b345362243407b46149"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45818153,
                    "digest": "sha256:ed5108ea24bddd8579eebf3aa50751f8662435147e07b7fffa3da81c21f3546a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100663689,
                    "digest": "sha256:4b635e75caf069ec66494fcb22b6be0cbe227b14327db3331bd0f7aa3690b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:24b684541a589832bbbb0f33522059032ba598b7caba2f41fee760450788f9ea"
                }
            ]
        },
        "1.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:8bda4607c8fc9b1c601c2fab145dbeb9212ee335dba6fab0918d0831b517720b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214898,
                    "digest": "sha256:e6786603fdb9e4ea361b73be3870f1118d3882c1619dfbbf9dec4d483fa32e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312678,
                    "digest": "sha256:cac487c4bc63f07da92ff3259ca4d0fb30f86c5647f775010d11e6d51131b848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371900,
                    "digest": "sha256:a3e9925f73763aaae5f9ccd2b0c87ae90efbee12ee8698074a1056e25c2e6360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487526,
                    "digest": "sha256:9cf6b44fbf659d16c99bbf57d1ee87ae0e6827f8aaa82012f87f1f031f655da5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895383,
                    "digest": "sha256:092388ef108b5a216c6b7dcb99493055f076783f5dc766fc30247724a4e404a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75582036,
                    "digest": "sha256:38b302bcf794c75e86713c96e5ed054c9500247d24583a524ae9f16391f62341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:177dd13076ecdfffa14449fc78ea63f58cf5cde4c73076146aa86716fd7dfb46"
                }
            ]
        },
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:2302e18de3b3165c098ddb7795c9ec1467a147f812149bf49cf0aca4cf91ccdb",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4114,
                "digest": "sha256:5f5c13129aadb1e6e785cc4f3fdc1cbb204454545538d69572ea32f66f44d093"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 495,
                    "digest": "sha256:32465a9f4c50ca5b3bb8ac8f77393a8f3f9e9f8fd7a44d01897c3f7d64b8e3eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113079446,
                    "digest": "sha256:cf1f96b78dc99274d26ecf83de0891db93ad2f6ad5be0f0b8d3f67a8427dba7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:d8ebe6f3cc4ec80892821b67c7994f8b5b0fb9c85771d6a9a6a6a395bcb7cfa8"
                }
            ]
        },
        "1.10.0-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4114,
                "digest": "sha256:5f5c13129aadb1e6e785cc4f3fdc1cbb204454545538d69572ea32f66f44d093"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 495,
                    "digest": "sha256:32465a9f4c50ca5b3bb8ac8f77393a8f3f9e9f8fd7a44d01897c3f7d64b8e3eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113079446,
                    "digest": "sha256:cf1f96b78dc99274d26ecf83de0891db93ad2f6ad5be0f0b8d3f67a8427dba7d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:d8ebe6f3cc4ec80892821b67c7994f8b5b0fb9c85771d6a9a6a6a395bcb7cfa8"
                }
            ]
        },
        "1.10.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5443,
                "digest": "sha256:2908ed2021e7b6de3400c8d187fc209cbc71c629c4ef4954bc9208ca720ef647"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44977147,
                    "digest": "sha256:4777ebf2c92e16819bdac8f1861addbd58c0ed81dbb208e677f5bc404331f1df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10668705,
                    "digest": "sha256:8213858b0ae4fd06d326b00d8a951d74f729dd96bbed2da6e797c380a7504dda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366151,
                    "digest": "sha256:f791772d5eb6cdff561d14b68be84f923eb89474c71886701833c2ced9e2dd3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50447603,
                    "digest": "sha256:e1f738d53429c1c9ea6d045141f02d845c22848230ea6aef9963f790ca0f8e94"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45849661,
                    "digest": "sha256:d54c7db55a82c2a16fd443204b8af6347e1410db9db3461949a625bca666eaeb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100669986,
                    "digest": "sha256:6de495ad8c2161cb5d2b52fee9744ebc2e2d8adc4073855b51275183bd3d1e21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:34a016b89872e057e449edfee3b2a0cecae3454155f7e626ec8a832edcb276d5"
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:f591f51a2bcbceab2c533eedd672bb0616fec55bdd3825ccfb5b400a144c297f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3867,
                "digest": "sha256:2ea341f8a0a12ef657cf292925a44f1875b53ae3fdc393b80d7e549595c11977"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113441453,
                    "digest": "sha256:70df2fc5ccb3f4914eedcbc06cdeffedccab6e94393679e6c93d5f532735a806"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:3d73467edcbf2f261e22069c5ccf66e3f38a93dc2cec2fcfccb00cd32112d84e"
                }
            ]
        },
        "1.10.1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3867,
                "digest": "sha256:2ea341f8a0a12ef657cf292925a44f1875b53ae3fdc393b80d7e549595c11977"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113441453,
                    "digest": "sha256:70df2fc5ccb3f4914eedcbc06cdeffedccab6e94393679e6c93d5f532735a806"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:3d73467edcbf2f261e22069c5ccf66e3f38a93dc2cec2fcfccb00cd32112d84e"
                }
            ]
        },
        "1.10.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5447,
                "digest": "sha256:bd819385f9194859f21463fab66cd5562e8c0ec8e206929ed66b0385a2352013"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45185265,
                    "digest": "sha256:9793d586559922dfd1f10be65f3cabffaf1d31f81660ef474409da1f4f675fc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10282302,
                    "digest": "sha256:e1029d8fb29ae0fbf637f52ff30953b34e447a34365b9055b19faf7f1304d7a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4365988,
                    "digest": "sha256:4db5fb833827f26afd173271cc60ae9e63a0188bcdfcfa887ca20ef5cba5fea5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50450158,
                    "digest": "sha256:880249d542fab8452b7a2557e8f03c0bc9d21c2cb3d863b2e3e4db454ef4f75f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45849699,
                    "digest": "sha256:fb6f405ec9a4d73b12ce9b0b834b5eb00f3de137f8e89ca87138fd012500d427"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100679434,
                    "digest": "sha256:56dda9c6fec4414401ff62489714c167d06388726e4f5538ee01466b90167816"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f9bcbc075fcb1a6ff8e45891c46d790874dc66fa2ca973659dbed00adde6c45c"
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:df3c6764738ce4abccf9ae8af9ea68c7d333074b8fb6fcaaccd89ad514fba20d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4109,
                "digest": "sha256:0677ce3675cfd55987bf4a3488e5978417a1380d3ff49034cdfaa11b1ad2e716"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113446459,
                    "digest": "sha256:bff8be64aee8b723589011721fd82b62bd4de1b4bcb8bfa421ee3d8f33522b30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2836c53756f714b6d2f053194cbc6a5ab99421bb6b7753e34a684232a45da6e0"
                }
            ]
        },
        "1.10.2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4109,
                "digest": "sha256:0677ce3675cfd55987bf4a3488e5978417a1380d3ff49034cdfaa11b1ad2e716"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113446459,
                    "digest": "sha256:bff8be64aee8b723589011721fd82b62bd4de1b4bcb8bfa421ee3d8f33522b30"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2836c53756f714b6d2f053194cbc6a5ab99421bb6b7753e34a684232a45da6e0"
                }
            ]
        },
        "1.10.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:64d216538e7c4de6ba822e20ab5c4b3eb39a7aa80637693b5023abdaa3631cea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45185265,
                    "digest": "sha256:9793d586559922dfd1f10be65f3cabffaf1d31f81660ef474409da1f4f675fc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10300914,
                    "digest": "sha256:c85f5ec4e23ee12af518c5fcad0035942a1f87ec2088506cee32142c1c65f61a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366581,
                    "digest": "sha256:9c2eea9e27e3fa96462ebe8337d9b6cdcd7d157804dcc45590711a4a7408f64d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50450723,
                    "digest": "sha256:7a4c5cebd8cef0143ddd69b694ac843162a0cc224c2db057b0d500f4e4adbb1f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45846358,
                    "digest": "sha256:27f9c279b0484a1400ae129a936d72fabe1ab2a3c1ef923b1f2102f0178d8e0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113259059,
                    "digest": "sha256:c225e2088a3268d973232d76281aabcbd5aa9a98dc71f185c04b489e6e2d310e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6dc30177bb1e08472adfef7a8f4a507ff8f33662255b871808c9e03cd2168eea"
                }
            ]
        },
        "1.10.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5d5bd49b3897c3649e53f43852de028704b8f0e2d6ec5662136c6a56f6f13afb",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4174,
                "digest": "sha256:0c9871fe6ff052f77d3eb5a8a86970aa5fac810133f51c73129a61abe39afb56"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79679694,
                    "digest": "sha256:0f8222f2011a0d5e24cfb16533ee84a6a18b684316990314c9341ad38b4ec786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:a1cc99c4950100285e961d219caddb5098b9f21f1301fad896195a15e53131ab"
                }
            ]
        },
        "1.10.3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4174,
                "digest": "sha256:72453f834b3f6b052dd774a9d7649fac69a19598fc0826ef92d1d498907a6e18"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78698333,
                    "digest": "sha256:26edc37dfad1ca86c64fd2f02f261a01370a28b5aba3ad523022e693d12f4e52"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f1f8a0dceb585cae1e2fc019d43c134cf893ecf971fe901dd5605e175c38c314"
                }
            ]
        },
        "1.10.3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4174,
                "digest": "sha256:0c9871fe6ff052f77d3eb5a8a86970aa5fac810133f51c73129a61abe39afb56"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 79679694,
                    "digest": "sha256:0f8222f2011a0d5e24cfb16533ee84a6a18b684316990314c9341ad38b4ec786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:a1cc99c4950100285e961d219caddb5098b9f21f1301fad896195a15e53131ab"
                }
            ]
        },
        "1.10.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:1311442b6183a9dcca7ca8741754a85884b30cd0423736ff796ef528f573394e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113264376,
                    "digest": "sha256:6592f84af924afe07026b599d59abfe7d4a73fc999e7fe45b1a7e0c1b696a9c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e8bbc36dff940e57c6c6e7a6e62defe3516a3b0a3295e031092399a26017fc05"
                }
            ]
        },
        "1.10.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:fa41b372fa926db911fcb135ba10c16c5e3a665812a406de822f0576d10a18f7",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:571ebba4036114abb60c33dd14500924c7c3d3d3d03539b02f872de91d298e26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78485713,
                    "digest": "sha256:1521886198ad6dc5762f4a06e88378b816453642df3d561243b947e48a2ca24e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5715a919350f55cda01427bc9331975b5102d54e8554f4192fdcc801726f5d4f"
                }
            ]
        },
        "1.10.4-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:fb693eda8acac2513309db18d190392ed17fb6cd5b52174989264b5e6fe1ce4b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78281429,
                    "digest": "sha256:cc2e02465cb8ad9e8f7876b1a39f9a37bfa60935279e378881bd0f85fa93615f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:32b4d66e2872ef69839f8f8bbd2861126458bea4ae3b0f8de868d41529a1d994"
                }
            ]
        },
        "1.10.4-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:571ebba4036114abb60c33dd14500924c7c3d3d3d03539b02f872de91d298e26"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78485713,
                    "digest": "sha256:1521886198ad6dc5762f4a06e88378b816453642df3d561243b947e48a2ca24e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5715a919350f55cda01427bc9331975b5102d54e8554f4192fdcc801726f5d4f"
                }
            ]
        },
        "1.10.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:bf10199bad4eaa0f56bac11ec9a082358c24c0733e3b98b7396faba9694efd52"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199846,
                    "digest": "sha256:78b07ec34b7b34f42b79465f4dd1b021db3ba1c38a3b00ddd21263f3bc43eff5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267467,
                    "digest": "sha256:b9c8260f65eb4db0b05053c5f3a69927777a800ad942fa6f6e48d9d79c9f9aeb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366850,
                    "digest": "sha256:6d46c6e3adf15e8139ab43b8ac8eecbce1bf41cc2701b7ef6829d55a5edbb443"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482928,
                    "digest": "sha256:013a668a2d66f6254dd7423dc547bc94626fd5b6152897559b61d1ac81b15c0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45884324,
                    "digest": "sha256:cd5f33efaea319592bd047e342ebebc86a43d194e3e31d9db228ed1b0cee8223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73509084,
                    "digest": "sha256:7e84bd6d5547c9a8e3e1770494038656c99709fe092d05cdeb299076f3667700"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b90c8ac19cff3f1fdafc7d1f08a3107b4bbf6375345f49efb3e25257ad5617d4"
                }
            ]
        },
        "1.10.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8f47dee1edd5c2960d325ac508793b182f2ec03700dd24002c14c814bd410b6d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:dd30965d70fd7de052437df34909c616a9346b6d99b857594ceb490f24419db0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78489008,
                    "digest": "sha256:30cb62a4fdffa759dbc7213a67d7f111e653551db854f2d617edd59fc04cfd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0fc3b309ba165e2cf5ca5b34723b33b79c0817a0c7944017c48a8681636a7b5a"
                }
            ]
        },
        "1.10.5-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4044,
                "digest": "sha256:5232f4f50a33b7769d3e1f1e7b94dcb4fb0af1337980e27ee29a143efcb420ac"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78281547,
                    "digest": "sha256:75e4b34d5581eaca8a686459ac1567865ddbf3b8e7f3fb1b537b30fda704d407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:2c03edbbb2c46501d6d5bda4e447efef18ba384658edcac408fa1d17f10a622d"
                }
            ]
        },
        "1.10.5-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:dd30965d70fd7de052437df34909c616a9346b6d99b857594ceb490f24419db0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78489008,
                    "digest": "sha256:30cb62a4fdffa759dbc7213a67d7f111e653551db854f2d617edd59fc04cfd17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0fc3b309ba165e2cf5ca5b34723b33b79c0817a0c7944017c48a8681636a7b5a"
                }
            ]
        },
        "1.10.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:58c2f49c63609eae2e3ecc90d16587c14ae05d6d17a046b2188158f71a5a1e1a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45204819,
                    "digest": "sha256:f596702a556198d4d7b269435905a2c6905cc113e004fb9894d6691a56f13f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267982,
                    "digest": "sha256:203080e34787e21c4c72a0bf78364320cb3fbabf324e473daeab90f86995aa97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371951,
                    "digest": "sha256:0afc14212b1fc39cd1e0f3502f09aa3d06c2e21dbb46e96108bbdf3a4f43625e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50484086,
                    "digest": "sha256:aeb1ee8d768a3204c0d5c5b95862c29567826a0cd7348e6de56fe45fa2327274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895433,
                    "digest": "sha256:1b6ad52af4fdc34f5b07382209a188db5a7b743eb7195cff73875a04a6608793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73017495,
                    "digest": "sha256:2448d3549f94142f2eaa3b82a8db1477a75a2b0938563e44ada872a422b8b1e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:01bd108c4daf84bfb2287f00186609d0b9a0e5108507ab1a7798c916da7fd4a1"
                }
            ]
        },
        "1.10.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e60e08d2630482931c7859fdd0a6eb426ffc4f7f6d56fa8bfdcb841a8b0e8c8c",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:59dee8661df6f4056675a80dffc01c0ddac0bd92cb1558c3814460d36789b397"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78510572,
                    "digest": "sha256:3a27205cd7927b6bda8eef10bba2fba70a87bfec07f2bec21de342603facb10d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:98d1094c320ff846d1f6a4fe6ce5b4da291940296023727932cc20ffb0db3c3f"
                }
            ]
        },
        "1.10.6-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:4c50e29b52eaaef8fcceb74f58df36b404b407bfa78c504175c3f02f4b4552ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78293468,
                    "digest": "sha256:ab3c170980cda09d5cdb3f6eabbe91adec78c61c21f05f8d0a2e2a6e7f07d91a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:220c5d4949b66b3ae45dea932f05b723c607b9bc64b7aab635001d169d7a8691"
                }
            ]
        },
        "1.10.6-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:59dee8661df6f4056675a80dffc01c0ddac0bd92cb1558c3814460d36789b397"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78510572,
                    "digest": "sha256:3a27205cd7927b6bda8eef10bba2fba70a87bfec07f2bec21de342603facb10d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:98d1094c320ff846d1f6a4fe6ce5b4da291940296023727932cc20ffb0db3c3f"
                }
            ]
        },
        "1.10.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:d948cdbaf73e195a3d6f2f0907dac7f390a19bea64e8f8c65495d330cd26294e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45204819,
                    "digest": "sha256:f596702a556198d4d7b269435905a2c6905cc113e004fb9894d6691a56f13f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267982,
                    "digest": "sha256:203080e34787e21c4c72a0bf78364320cb3fbabf324e473daeab90f86995aa97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371951,
                    "digest": "sha256:0afc14212b1fc39cd1e0f3502f09aa3d06c2e21dbb46e96108bbdf3a4f43625e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50484086,
                    "digest": "sha256:aeb1ee8d768a3204c0d5c5b95862c29567826a0cd7348e6de56fe45fa2327274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895433,
                    "digest": "sha256:1b6ad52af4fdc34f5b07382209a188db5a7b743eb7195cff73875a04a6608793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73029559,
                    "digest": "sha256:7d294b6aa2079ca20149a3ff78db83ab814cdf9e357319ec5c66e29d52a6e085"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a0f67cae90f574f63c46ee17c62c3f4bf735d29778a317f9116a7baf2d841452"
                }
            ]
        },
        "1.10.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8908f133e66f365c9188435c8a7476288844b254954d5418ab0e5c6c993fa3ac",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4048,
                "digest": "sha256:0d7f2b750d4a5719f796984e483181eda185b185e750b87347c89d2e7dacf3ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78510609,
                    "digest": "sha256:f3230d16001ab4a41491f661909ca2d543bd2c2c34bc6dab9da5b1eeeb5f6ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:344223b38a444775d422c8a857fcd2bc4ebde62532d75c482038955bb90d76d1"
                }
            ]
        },
        "1.10.7-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:122568e13a65cb6edf385277ae8b876148fbc50efef50358a17d5522b8929ce3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78293006,
                    "digest": "sha256:021cb1ab285ff3bc9ea5e567357c99c9ef7f1d173fe3502bc12b5ce9ad8bd612"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:68c9b98d95a208b8f750606709d7caf2d4922cea46a3a0613865aea39c669fc8"
                }
            ]
        },
        "1.10.7-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4048,
                "digest": "sha256:0d7f2b750d4a5719f796984e483181eda185b185e750b87347c89d2e7dacf3ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78510609,
                    "digest": "sha256:f3230d16001ab4a41491f661909ca2d543bd2c2c34bc6dab9da5b1eeeb5f6ab6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:344223b38a444775d422c8a857fcd2bc4ebde62532d75c482038955bb90d76d1"
                }
            ]
        },
        "1.10.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:938c3f41fff280697d38d5c29b111b4507a42a58713cc79216998f03ae8559e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214806,
                    "digest": "sha256:722537c8945eeebf26115a6c640dee5654f86f4895040cc1bd0657fb4e130bed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312971,
                    "digest": "sha256:4057c49d3c3629a7440330e6cef148d76b54a9dc31241519def2f6eb4253481d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371954,
                    "digest": "sha256:dc291abeeae11d57015537fa94de7423586d044d3cc37d0f696d70e180ed5611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487713,
                    "digest": "sha256:9891e0752c1c63f9881959463a49cfea0b9c5348681fda14b6012e3bbd42f805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895459,
                    "digest": "sha256:054d5ec8395e81bc338e38d97e4d77ad4096d7b1539a5c22fbdfbb710ead9a93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 73027866,
                    "digest": "sha256:5678fd73f1cd1402d8a7f8c44192e427ceb4f9a2053bcffbb475141666a43c2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:46c806ce3f9f82b488b1823d3c32e6378a54377efd9a4a464f4b8e7f82ef0336"
                }
            ]
        },
        "1.10.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1aa2a3447762457c32ccd2a75cabeaa0fba7f7c2363e4be19566a726904172a9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:308750e357dc8c2541834900e61b4c81ed82378d7d2716566c42177ddc5cb5b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78422934,
                    "digest": "sha256:faf1a6b2d0b32b7502e9169accdef7108c196ec7b4e31278e66067c70a13624d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6637b376e87c0d5f7736d98e6d3d58cd80a23fd532c014fa02c9fca22eb3a6c3"
                }
            ]
        },
        "1.10.8-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:168b26f8cea5d5421ce75e931ed9e2a024152d82cfd1ca8b4e14d3f706d9c80e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78292379,
                    "digest": "sha256:574df1d6af70cc09b601b26a262787a67d4d914f60fa22ae2cf53365066e7fd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fffb6ed3a91542db4449854bf2b4361e38cfa76adea607ab0d787d891571b478"
                }
            ]
        },
        "1.10.8-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:92133c2f8a30c1af8a76fc6e99e5b583726ea8c28b7411b2fa1f14086f907be4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78510230,
                    "digest": "sha256:731c9a6b1f3c6096e5ec51dbd04d77876040634cd991c9d14fc52b3c3f92ccec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e0e5ab9f7ed4c0255d4f8e92cfdbb7c92cde28456b4c9469da04219fe77dc6ae"
                }
            ]
        },
        "1.10.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4050,
                "digest": "sha256:308750e357dc8c2541834900e61b4c81ed82378d7d2716566c42177ddc5cb5b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 78422934,
                    "digest": "sha256:faf1a6b2d0b32b7502e9169accdef7108c196ec7b4e31278e66067c70a13624d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6637b376e87c0d5f7736d98e6d3d58cd80a23fd532c014fa02c9fca22eb3a6c3"
                }
            ]
        },
        "1.10.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:8bda4607c8fc9b1c601c2fab145dbeb9212ee335dba6fab0918d0831b517720b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214898,
                    "digest": "sha256:e6786603fdb9e4ea361b73be3870f1118d3882c1619dfbbf9dec4d483fa32e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312678,
                    "digest": "sha256:cac487c4bc63f07da92ff3259ca4d0fb30f86c5647f775010d11e6d51131b848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371900,
                    "digest": "sha256:a3e9925f73763aaae5f9ccd2b0c87ae90efbee12ee8698074a1056e25c2e6360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487526,
                    "digest": "sha256:9cf6b44fbf659d16c99bbf57d1ee87ae0e6827f8aaa82012f87f1f031f655da5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895383,
                    "digest": "sha256:092388ef108b5a216c6b7dcb99493055f076783f5dc766fc30247724a4e404a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 75582036,
                    "digest": "sha256:38b302bcf794c75e86713c96e5ed054c9500247d24583a524ae9f16391f62341"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:177dd13076ecdfffa14449fc78ea63f58cf5cde4c73076146aa86716fd7dfb46"
                }
            ]
        },
        "1.10beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:01cba128718cc85b12e544deb2ef77f12e28c895f5455824830d270a7aeac32b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4458,
                "digest": "sha256:59d8719dba4b3f5d4edb6f4cfab8b915ebd16900bf711ca626ea12cd8b1fe7a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497,
                    "digest": "sha256:605851a6f2902e8da4840752a1bd47a634a91f94d99add9df0a791c1d836cc10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112966744,
                    "digest": "sha256:a0f33b8332203a62205af576702e8c6ba37a4a2f4704fa51087b0cc652912937"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4cdc844f452b8aa06e310f3a22f949ce8c8cbcec2eb010d788856afe780e1ed2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1359,
                    "digest": "sha256:ba7ccb5c3cf9549afcc23906f27bbbe6b410aabcd19edcc9bc99b0edf98961e4"
                }
            ]
        },
        "1.10beta1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4458,
                "digest": "sha256:59d8719dba4b3f5d4edb6f4cfab8b915ebd16900bf711ca626ea12cd8b1fe7a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 497,
                    "digest": "sha256:605851a6f2902e8da4840752a1bd47a634a91f94d99add9df0a791c1d836cc10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 112966744,
                    "digest": "sha256:a0f33b8332203a62205af576702e8c6ba37a4a2f4704fa51087b0cc652912937"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4cdc844f452b8aa06e310f3a22f949ce8c8cbcec2eb010d788856afe780e1ed2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1359,
                    "digest": "sha256:ba7ccb5c3cf9549afcc23906f27bbbe6b410aabcd19edcc9bc99b0edf98961e4"
                }
            ]
        },
        "1.10beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5789,
                "digest": "sha256:02cc078094b344ea442bc88aae03f36c67225936ad87f24a0a0f431223ae8033"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44967073,
                    "digest": "sha256:794821622a8cf94cd3f0f66e7708e7aed250701b9f626d2c58e22a73ca6869cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10668313,
                    "digest": "sha256:ff282cac5e026f80f2d55f6c7a510a9d2a8855bdde39824f93da04f1fd369475"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366027,
                    "digest": "sha256:04deb7c3aa54f0bb67511a855139b7d6eaeae932480fd568f7889597e870800f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50448531,
                    "digest": "sha256:f7dd8efc8af21b5bb6284436d2189f0d8edb2eeade70328d44174c5cc870aec2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45814874,
                    "digest": "sha256:1364320336465b0c0c9ce49ceec734250fdb50c9a49a2af4a88ecf8f128580db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 139635611,
                    "digest": "sha256:55cd315483db057b0172c49e918a81ea4a790daaf3c10abc5292cebaf962bf92"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:6c8f8ba9d23288bc54340ca9c2ac4de37446b6fb652e16b854ae4d7c3d831ff4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1368,
                    "digest": "sha256:5b989970a602d7df5a3463d3990e6cb8db9100893c94e8fdfae2af152c096438"
                }
            ]
        },
        "1.10beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 2004,
                    "digest": "sha256:b528a1c06e824df8d39169f73bf11f907332c4e2f7a6313825a4b0c77536e708",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4457,
                "digest": "sha256:48de258ef09627f9e43c92e09e07e349cc18a0e54c13647947ceaff678548ad7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 492,
                    "digest": "sha256:5b673ee028c511df0b4bd1a9cc74095694fef215b236e16a46c682f3a56953fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113028113,
                    "digest": "sha256:4ba41df535eb369f17cdb6b8ca7d1a0cb3255435bac53c9fb7356e172cf108fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:aaa6d646c9158a139c992d787c2dc8f36f1fe9b565439fa82e46996013b91ef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1358,
                    "digest": "sha256:bc5ff74b80dfcda4337a39a56150a602d984bd5774be5e2acc1c51e5fb6df4cb"
                }
            ]
        },
        "1.10beta2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4457,
                "digest": "sha256:48de258ef09627f9e43c92e09e07e349cc18a0e54c13647947ceaff678548ad7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 492,
                    "digest": "sha256:5b673ee028c511df0b4bd1a9cc74095694fef215b236e16a46c682f3a56953fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113028113,
                    "digest": "sha256:4ba41df535eb369f17cdb6b8ca7d1a0cb3255435bac53c9fb7356e172cf108fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:aaa6d646c9158a139c992d787c2dc8f36f1fe9b565439fa82e46996013b91ef0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1358,
                    "digest": "sha256:bc5ff74b80dfcda4337a39a56150a602d984bd5774be5e2acc1c51e5fb6df4cb"
                }
            ]
        },
        "1.10beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5789,
                "digest": "sha256:3d2b1c863c13f15ce35ab5f57d71a8252c05caf4d5ca00f3977ea73e7654ca98"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44967073,
                    "digest": "sha256:794821622a8cf94cd3f0f66e7708e7aed250701b9f626d2c58e22a73ca6869cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10668313,
                    "digest": "sha256:ff282cac5e026f80f2d55f6c7a510a9d2a8855bdde39824f93da04f1fd369475"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366027,
                    "digest": "sha256:04deb7c3aa54f0bb67511a855139b7d6eaeae932480fd568f7889597e870800f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50448531,
                    "digest": "sha256:f7dd8efc8af21b5bb6284436d2189f0d8edb2eeade70328d44174c5cc870aec2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45814874,
                    "digest": "sha256:1364320336465b0c0c9ce49ceec734250fdb50c9a49a2af4a88ecf8f128580db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100619841,
                    "digest": "sha256:e55d9fe8fa65ff0f9ae79a05bad523290cdd3ec419e30715566c2743cc923161"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0788dd93ed182f7ea735386b0c6411b595a06c1582cb40b90c8e8372db37a9ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1369,
                    "digest": "sha256:41848983d205e9518d637ccf7c95d8a75b46842f636428422a5a84d0714a9f95"
                }
            ]
        },
        "1.10rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:75551e6f425e02b85a0215981e5ca5ace452ced8a46b175a9720dae19ad97b4f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4123,
                "digest": "sha256:30f3d792b46cb91ec827b2f868841d6dcc749aa68e696a4655678109b543439e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:419a47f5dbda9c1efc3004193655e1b13be40999c44179519f8a5ab18946d9f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113074994,
                    "digest": "sha256:99e9b08bf1231234efbe87bb9456a8645640b80063656f9a6913714ef610b944"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:1799f9885252d3e51fddda5cd23ddb668a45384a3e81211aa656397967a5a749"
                }
            ]
        },
        "1.10rc1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4123,
                "digest": "sha256:30f3d792b46cb91ec827b2f868841d6dcc749aa68e696a4655678109b543439e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 496,
                    "digest": "sha256:419a47f5dbda9c1efc3004193655e1b13be40999c44179519f8a5ab18946d9f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113074994,
                    "digest": "sha256:99e9b08bf1231234efbe87bb9456a8645640b80063656f9a6913714ef610b944"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:1799f9885252d3e51fddda5cd23ddb668a45384a3e81211aa656397967a5a749"
                }
            ]
        },
        "1.10rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5453,
                "digest": "sha256:bf5f34cbe8ce864ae745f7fb8303b9c5f58101379e5e41d5a30ecce59bb8560f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44967073,
                    "digest": "sha256:794821622a8cf94cd3f0f66e7708e7aed250701b9f626d2c58e22a73ca6869cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10668313,
                    "digest": "sha256:ff282cac5e026f80f2d55f6c7a510a9d2a8855bdde39824f93da04f1fd369475"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366027,
                    "digest": "sha256:04deb7c3aa54f0bb67511a855139b7d6eaeae932480fd568f7889597e870800f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50448531,
                    "digest": "sha256:f7dd8efc8af21b5bb6284436d2189f0d8edb2eeade70328d44174c5cc870aec2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45814874,
                    "digest": "sha256:1364320336465b0c0c9ce49ceec734250fdb50c9a49a2af4a88ecf8f128580db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100692939,
                    "digest": "sha256:0736f565175224eed03b26f3065f71968a32bfb375fed208a9b2bc8b6a19dae2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ce4c4e257db07da68b87fc89f68722d2e4bffed49710cf48077b7e669139cf15"
                }
            ]
        },
        "1.10rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5b47cad7f6995a130f9a05cc8f693ad11881fe4256755664c65aa6d68ef8d841",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.10rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4122,
                "digest": "sha256:cbc7154b68e63622bb7f9946db86bf3181389f057f66fa3da25c780a394c7be3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491,
                    "digest": "sha256:e6b85616907975b3f888cce96b9503236a5aa31043d86552de4dfeead4f449ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113082121,
                    "digest": "sha256:7b766786468ac752cffad1edd4ff90cc04dd183fcf33460cecd634da11cc05c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0cf24158e5e59a7942c5ae6c0fcc3a7dccda533036f8a95df6103f4173175210"
                }
            ]
        },
        "1.10rc2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4122,
                "digest": "sha256:cbc7154b68e63622bb7f9946db86bf3181389f057f66fa3da25c780a394c7be3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309151,
                    "digest": "sha256:c5208e5c258aa1ae009c142f81433bc2d33f2abab9ecb59aebee081866124af5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 491,
                    "digest": "sha256:e6b85616907975b3f888cce96b9503236a5aa31043d86552de4dfeead4f449ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 113082121,
                    "digest": "sha256:7b766786468ac752cffad1edd4ff90cc04dd183fcf33460cecd634da11cc05c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0cf24158e5e59a7942c5ae6c0fcc3a7dccda533036f8a95df6103f4173175210"
                }
            ]
        },
        "1.10rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5453,
                "digest": "sha256:dc53516418f947d2bb3a1fa75055f56dbc5fddeb29650ece94522359acea2558"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44971889,
                    "digest": "sha256:964d84d1f29ab606f833ed91af2d80183a542335d5c85f61d55a80b6c2dbdd32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10668568,
                    "digest": "sha256:eb8de23eb22736f2b1a1ee7d3e7cb7124762f87e4fa1d2e9848eac12bda54ba4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4365966,
                    "digest": "sha256:9b245666c672793e5b50be400fd6cf3981742c5efc93f7836f0fa7b865e502f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50448019,
                    "digest": "sha256:01b323d54d0df6efa09cadf041d10bd52a0d84d1768c0b345362243407b46149"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45818153,
                    "digest": "sha256:ed5108ea24bddd8579eebf3aa50751f8662435147e07b7fffa3da81c21f3546a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100663689,
                    "digest": "sha256:4b635e75caf069ec66494fcb22b6be0cbe227b14327db3331bd0f7aa3690b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:24b684541a589832bbbb0f33522059032ba598b7caba2f41fee760450788f9ea"
                }
            ]
        },
        "1.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:814309020638d6d3a2e1b0b733f10347005514f8899916bea49df95f3a0d654b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:fe7ad4b1edd2d6ce68228ddc2ec7ae2c88afb69994bcbe6765ae8f958bc952fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110421004,
                    "digest": "sha256:0580dc7f605cd421d055569c5c07b23e3d9ae71ea775a2460d89ea3209b1c363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:fb2c200409cc77517f0307de615e3cb1ed9f6303aea5b7257356910221ada0f8"
                }
            ]
        },
        "1.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:fe7ad4b1edd2d6ce68228ddc2ec7ae2c88afb69994bcbe6765ae8f958bc952fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110421004,
                    "digest": "sha256:0580dc7f605cd421d055569c5c07b23e3d9ae71ea775a2460d89ea3209b1c363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:fb2c200409cc77517f0307de615e3cb1ed9f6303aea5b7257356910221ada0f8"
                }
            ]
        },
        "1.11-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:a4b8424a78e3e488a0e91d576823e0a6d53f4caab75e1b3382ffbc156fce3e25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110218009,
                    "digest": "sha256:309e5c19804e9d4e82d54165f91fb1539ebd99612675a16d32b3de1b900e37f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2935799320b3da0bf8c4901e2ea5c01600523ee4e46fde394f3ea4b5ee7958aa"
                }
            ]
        },
        "1.11-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:5f0b7bb66685458d5c46dc4b4fb615e415c629e4e62dcb4e6acfb667e594adc1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110475090,
                    "digest": "sha256:e533d6b03fcabbc82423f1e92fc76948acfe8477e08c37c2b80c08239d4af2e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:ee69722ce4481d7cdadf87ac09289e8dcf62cae276888493182118891afd885e"
                }
            ]
        },
        "1.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:39cd0bd4048f5b59e5e15f75c8345cac6cb7858dec3efd907ffb400d6f09d51a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110824934,
                    "digest": "sha256:1edf0e80ea350a5e8c6c73eaa22453baa587342d157dcbb5b0f91b967c46354b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f8fbb161b0537db202923b2a332aa8e9de40522426031850256e7ba3753ef809"
                }
            ]
        },
        "1.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:38f30fab7c6193d4868b30134a483473c127bfde248f1ce3d51ca2f611a0b0c3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99804910,
                    "digest": "sha256:8d4cf1a563b7bf48c647abd03f3d3ba9e4aa9d3793b09fc292af4829b33b58ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:e7529916d482d88382085de7cd3cf66fb321c1dedcd10d2de58aba441398ab89"
                }
            ]
        },
        "1.11-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8cde76aa081642db006870a8ab26474b5172bd2303aa0ad7c18f5ad4388bb735",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:2dbd545c95dd873479847afd75abf0936337386cb19252342d2a91feecd5389a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111475984,
                    "digest": "sha256:01dcc037c1dd20abc736f001a27d084194af9e1fe546bb52acbdadfc5ccc808b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:82315a47adaf9359e45f230754d45e9459ee0ebde38830ea19fd11b80b45c571"
                }
            ]
        },
        "1.11-rc-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4174,
                "digest": "sha256:ba1f05f559e696bd8d9e9607d9e2608436975f48d8051322fa2e561cef67f45b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110474149,
                    "digest": "sha256:2ea43042b49681c8e48f4de17678662fe7c2ec509fba0e380ffd608d2de285ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f3081b19e7467a9e4f0de259c5a53ec9355c5c8d851f745cbb85e149a154c9b6"
                }
            ]
        },
        "1.11-rc-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:2dbd545c95dd873479847afd75abf0936337386cb19252342d2a91feecd5389a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111475984,
                    "digest": "sha256:01dcc037c1dd20abc736f001a27d084194af9e1fe546bb52acbdadfc5ccc808b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:82315a47adaf9359e45f230754d45e9459ee0ebde38830ea19fd11b80b45c571"
                }
            ]
        },
        "1.11-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:f69431a88d072e26f516b4badddbe0862a7dd98c90e103b0c6c22ccccd7274ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100451233,
                    "digest": "sha256:8fce0461f66ccf0afa291b23b8f2d8320b84a34a5c18bb10253db1e2da3dafec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:49765e5a96dd94cc507dffc3bd782b50d7622257c886d299f48c597ac08185e5"
                }
            ]
        },
        "1.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:b9c423366e6176c77c34257c4b4374deaa1606ed38914616ab69e9a55fe605eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45245026,
                    "digest": "sha256:05b3194a550b956249959e2f64475745fcf943ed7951306c6e3e6a5cd1815dd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317828,
                    "digest": "sha256:5cc01dcd9b0a29ac6daec9b7b4af78f948ee1945fb22e5e8f97993705d589311"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372320,
                    "digest": "sha256:5154470af4c84ea4b0ebc80e0cda7c479ef829d3ec3ece20e7b183bc8ded7563"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489789,
                    "digest": "sha256:cd3b67ff4ea99e03083897f42be8f62c9ef0cd1e1a0603a4c3e627eae76a020d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45947695,
                    "digest": "sha256:81cc889ba28fe8151a735b5521492ab995f1f0bb99ccdd6e121da86bb0dcbf38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99805016,
                    "digest": "sha256:f9c63adc2e8ade4ec5b4166d5236fef2741ed20f897c0820483612811ef77a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4fd77d826b49722ecf6a91b15aa0c80c440ab33cab0d1019f05da295932647d2"
                }
            ]
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:1bcd04e0f943c461c06f6856903f2c3f6261cade5b0285cda9a1d1ef66b49db4",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4039,
                "digest": "sha256:84c72e6b17ab6e4e90e8e563f7454a41f8ea1a7720a41947b6a46eb2dbcb0385"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110257705,
                    "digest": "sha256:9d3e80c82f008bdc47811f02a11d14076ff123319b9b61a4c15dd861ac2f5414"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f4134219563d4e9631224f84fa5cc929c1e2f682010675e55a1fb825cbab1ab7"
                }
            ]
        },
        "1.11.0-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4040,
                "digest": "sha256:c19da141c3460518ecddcfaaf53b15fc70d1ddedf81bd0e97f3762001d4a3ae9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110059763,
                    "digest": "sha256:e44d56e238f3344571ae91a2753d4120257a5ee0cca9ebbbb953b617257dcb09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0f17a074ca6b7410ad54527a310be15630091470d4e04db924865a5b1f4dcced"
                }
            ]
        },
        "1.11.0-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4039,
                "digest": "sha256:84c72e6b17ab6e4e90e8e563f7454a41f8ea1a7720a41947b6a46eb2dbcb0385"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110257705,
                    "digest": "sha256:9d3e80c82f008bdc47811f02a11d14076ff123319b9b61a4c15dd861ac2f5414"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f4134219563d4e9631224f84fa5cc929c1e2f682010675e55a1fb825cbab1ab7"
                }
            ]
        },
        "1.11.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5453,
                "digest": "sha256:bff68187c2363086db703ef27a14a08f62018852005756222dc48cf0f4570501"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199628,
                    "digest": "sha256:0d67503d3ff96f2ecf56e6f53b6d10b562227891864b38cd82deb47291f67e4d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267363,
                    "digest": "sha256:731e997f60fe12a280a40cdbd86b8fe3795ca59b89f45d0841452af5b02a4320"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366746,
                    "digest": "sha256:a92ce7dc85129d33f197d8718147806c5536dc3af5f6311cb463357e64c4f789"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482708,
                    "digest": "sha256:c70de33c55fc49ef835b4924f1078d06a683f98c48e54c95dc5ff447f4588fc5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45883602,
                    "digest": "sha256:220a052fb910918e504f5d63289e8d77cf5e6c64c7d6eb79e9076565aab96a02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100448120,
                    "digest": "sha256:39c3f7e49bf68a806e8ebcb4b485f0e8c0e38f722502b8321d3a9237bbc3ac64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:aacb8f59cbfb578404e4cbcdce1583c37e40f99a76e01fbf5d613c28d9e93397"
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:da7bb1aa2efe46ffaa33b4da932e8038101fb3d93aa7350de9aa29f4fffb9318",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:bdf6d308e815913880ff44eeabc920c26a7ceadee09684e0860af59e8ceaefe6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110305925,
                    "digest": "sha256:d131cd897c92febba96d361f8282982f29415a03c54184cb4a844b8464ac6ded"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f2372ccf339b878e9ae2ea0e44075d4e1aa9e7d6b9a635d353aabfbc2e826f11"
                }
            ]
        },
        "1.11.1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:b943458d9f1bdf42400b26f1802f445db84904f83fc6658f1184305daf159a13"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110109604,
                    "digest": "sha256:35ad5d8fac7bf105b668e28c112130ea9f551bd59285e5b069ad3f43d4c719b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:879e4decded510ce15699302a241986235d8835a9895bc2496f4c9fb15a2b6e3"
                }
            ]
        },
        "1.11.1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:bdf6d308e815913880ff44eeabc920c26a7ceadee09684e0860af59e8ceaefe6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110305925,
                    "digest": "sha256:d131cd897c92febba96d361f8282982f29415a03c54184cb4a844b8464ac6ded"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f2372ccf339b878e9ae2ea0e44075d4e1aa9e7d6b9a635d353aabfbc2e826f11"
                }
            ]
        },
        "1.11.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:6700a20371ab89d3c23ce197925569329df0516dc30c32dd910e2f430114cfde"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199846,
                    "digest": "sha256:78b07ec34b7b34f42b79465f4dd1b021db3ba1c38a3b00ddd21263f3bc43eff5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267467,
                    "digest": "sha256:b9c8260f65eb4db0b05053c5f3a69927777a800ad942fa6f6e48d9d79c9f9aeb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366850,
                    "digest": "sha256:6d46c6e3adf15e8139ab43b8ac8eecbce1bf41cc2701b7ef6829d55a5edbb443"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482928,
                    "digest": "sha256:013a668a2d66f6254dd7423dc547bc94626fd5b6152897559b61d1ac81b15c0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45884324,
                    "digest": "sha256:cd5f33efaea319592bd047e342ebebc86a43d194e3e31d9db228ed1b0cee8223"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100476068,
                    "digest": "sha256:bab099a246e1a1eca9fa34e5b2d989c8bed9d3d05fc3c026a3ad3be67921e783"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a14048751c6a119d9b2b562a6938220f86aaa7535476f8d8117449f3cf6cb151"
                }
            ]
        },
        "1.11.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:c3201336b78c3ccc0f09347c7369093a68e313853831a2a515a43530ac380642",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:6661eea2f9f285dd890d11866cea9c357cc475d71b917d6b3fd9a71bc52fd5a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110390043,
                    "digest": "sha256:18d79103895c127c033999dc86647905e4ff849070f5789bbc9397c6a846b363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a497dbb40de9b4bf07f51fb20f6eb39e23481e3503fbd2575fdb0a35aa1a0c31"
                }
            ]
        },
        "1.11.10-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:3eace40289512dfb72ada9c5fec5407171442a8556aa9cc60843afb4a5148be3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110470078,
                    "digest": "sha256:53eab543fd07f60c6c7d3d96f7374d4f89dccaef980650c95965d6ebd5f155a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:9e13f4b120914dde7eef8602d3e7227dde9db1a9c438fa3c53ec4ae73b2059ce"
                }
            ]
        },
        "1.11.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:6661eea2f9f285dd890d11866cea9c357cc475d71b917d6b3fd9a71bc52fd5a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110390043,
                    "digest": "sha256:18d79103895c127c033999dc86647905e4ff849070f5789bbc9397c6a846b363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a497dbb40de9b4bf07f51fb20f6eb39e23481e3503fbd2575fdb0a35aa1a0c31"
                }
            ]
        },
        "1.11.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:76fd7909988c277941780b40db99c36f2546621b0387ae7d33c75efe7622e0ef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45197640,
                    "digest": "sha256:34d3ef0e6f1ff3be371d86c57ace6652cfebba770c522ecb77770e635c66e696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314034,
                    "digest": "sha256:6fc063f1d64e7e2207325ea5d8e8bd20d7eeb5335ec9e2b74895aa6716554940"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372230,
                    "digest": "sha256:c889930bae60ac0b0b8285fdfa660853def739db23075cd2f465f40bc2cb7254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489321,
                    "digest": "sha256:ee22fc8117545ae9c114a231a110c430652fe3a26ca235784ec115eedc9f0418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45945462,
                    "digest": "sha256:75f69b55caf465fc323d6ee793215b1fe4400863a920c9bdf8df1c2e6fb09573"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99793441,
                    "digest": "sha256:157906863f94681c8bfeef5bb92133171ae952cb5e75cba77e511965c06e54f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:c0adf6b74d21bcb929c45c198b9d4740b0eee39b16a0d7c6121f684415f09660"
                }
            ]
        },
        "1.11.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8dd7cac7b4bf46679d12a7264d32fddf3bf2ef2fbea056db1278938a6d693d02",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:7350971bafd561aca2ccc3e125052e3c9bc893f3cc71ef6fa235a4ae7aaa6b83"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570285,
                    "digest": "sha256:6d7f83980907ca45ebe6a825ca787438c1431aed60fe2145407c2fb808e5f141"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:7594204f2e120d922dcf033d0dd1e1b42bd277f7bdd457e7b57078aa31bc962f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b5cd8533fc156e93555eda809665faecd29e1be933adde81e7fa5e659528423c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110412661,
                    "digest": "sha256:173efea9f8389750d5752d9a210e0016ad42a6efbf3052ae28f687f042f0e3e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ec4c5f9cdfe78c4d7174201dd3ddf2ed59dd44de55bff12b61c6b6172f51db23"
                }
            ]
        },
        "1.11.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:7350971bafd561aca2ccc3e125052e3c9bc893f3cc71ef6fa235a4ae7aaa6b83"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570285,
                    "digest": "sha256:6d7f83980907ca45ebe6a825ca787438c1431aed60fe2145407c2fb808e5f141"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:7594204f2e120d922dcf033d0dd1e1b42bd277f7bdd457e7b57078aa31bc962f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b5cd8533fc156e93555eda809665faecd29e1be933adde81e7fa5e659528423c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110412661,
                    "digest": "sha256:173efea9f8389750d5752d9a210e0016ad42a6efbf3052ae28f687f042f0e3e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ec4c5f9cdfe78c4d7174201dd3ddf2ed59dd44de55bff12b61c6b6172f51db23"
                }
            ]
        },
        "1.11.11-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:5f0b7bb66685458d5c46dc4b4fb615e415c629e4e62dcb4e6acfb667e594adc1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110475090,
                    "digest": "sha256:e533d6b03fcabbc82423f1e92fc76948acfe8477e08c37c2b80c08239d4af2e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:ee69722ce4481d7cdadf87ac09289e8dcf62cae276888493182118891afd885e"
                }
            ]
        },
        "1.11.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:6eb1ec4b73e3551b00a633d3b50b02650fb73df5222616e95bf438f69cf4a27a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110390754,
                    "digest": "sha256:2d59d213570d48c1f46090b00247e83a9ec0403fcdca4e4c6d53d5ea2fde5062"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:14f4466e99fd9fbf75fc7cdf46f36a483dbcb227b355f52c7f5da728ae98adc0"
                }
            ]
        },
        "1.11.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:65cc48c8b4d647144920e26fe0cce7b46a2f396bbb8f3443854914806c5f0454"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45197640,
                    "digest": "sha256:34d3ef0e6f1ff3be371d86c57ace6652cfebba770c522ecb77770e635c66e696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314034,
                    "digest": "sha256:6fc063f1d64e7e2207325ea5d8e8bd20d7eeb5335ec9e2b74895aa6716554940"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372230,
                    "digest": "sha256:c889930bae60ac0b0b8285fdfa660853def739db23075cd2f465f40bc2cb7254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489321,
                    "digest": "sha256:ee22fc8117545ae9c114a231a110c430652fe3a26ca235784ec115eedc9f0418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45945462,
                    "digest": "sha256:75f69b55caf465fc323d6ee793215b1fe4400863a920c9bdf8df1c2e6fb09573"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99793982,
                    "digest": "sha256:3bd7ada670e061547aa837d7f632f021f9d8d4d35328d7350e2846b51988c470"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2f5c6ef509b9883c121cf9abd1db775faaaf10b0c534831f5da827ae576269a3"
                }
            ]
        },
        "1.11.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:c5e2678942b5f46d5137f6b2e76197f6b3d90374ace067022e21d4ed6e4c4a8a",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:37968c5eeb26ddcfe58b259faf7233e8de1601e9bac03c59b37335bca3761496"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570387,
                    "digest": "sha256:a5009044856cb7ec46c0bdccbfae22ed15a7024bee22609e76b16cbb9436ce8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:3e6fa38e67c72c10a20be33980aa973095c45ce3adf95dd77ba89ccad2c21198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b26790b26ce1adc2baac373f11f6e416b9332ed6d99704b8af12b23df3a5d70c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110420096,
                    "digest": "sha256:2b08fe3cba25e705f77229075a140e175e6c20aca91661118f77b3f4b1b6a56e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:985027374cd22bf5428b5720d26bd72c1c7c399459e91775878bdc9fa465c2d3"
                }
            ]
        },
        "1.11.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:37968c5eeb26ddcfe58b259faf7233e8de1601e9bac03c59b37335bca3761496"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570387,
                    "digest": "sha256:a5009044856cb7ec46c0bdccbfae22ed15a7024bee22609e76b16cbb9436ce8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:3e6fa38e67c72c10a20be33980aa973095c45ce3adf95dd77ba89ccad2c21198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b26790b26ce1adc2baac373f11f6e416b9332ed6d99704b8af12b23df3a5d70c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110420096,
                    "digest": "sha256:2b08fe3cba25e705f77229075a140e175e6c20aca91661118f77b3f4b1b6a56e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:985027374cd22bf5428b5720d26bd72c1c7c399459e91775878bdc9fa465c2d3"
                }
            ]
        },
        "1.11.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:dd2f4c9ce30bb1be3b7b8e2f9ffd79fa44ac1947268a379eb38d3a36e4dc91e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110385176,
                    "digest": "sha256:8adc006296c8035d0b9f66b4c7fc6ac878c0d61dedcd027bbb0093f8fba2dd93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:41ada54d342ba769e4dd3897fb4433e52ecd397931cca5978f1ae81bbd8cd7a8"
                }
            ]
        },
        "1.11.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:3ca4a1bf7d31d27f56350702a1732751069e3128444395ec953afeec0752fb66"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48947441,
                    "digest": "sha256:e3a2433c89df0bf69d2687e058a4c495ebd50c504a301012371fda8d3cac87ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371699,
                    "digest": "sha256:e21b8b782fa7f98884b53e195c5bf43822e06814578f808db10a2577f34b9f0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865901,
                    "digest": "sha256:5e2245c70b77a0a604a336bb9edf069e57f9a114edb630442581a58c58148a9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51300703,
                    "digest": "sha256:8a5b01bbf8ffbda2ddaa20a334b186b52f9acd92c033790fc6d0283905de5c13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56541478,
                    "digest": "sha256:020679acc96209cf2475f0caf7b3f4e036625ad658e8be12f0a7d14e4bcf8e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99798616,
                    "digest": "sha256:494a16bf3ad764e5f1ca47f39c0e8f22cc21ddcdc41e41aa5a50d50ffdbc8fe1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:829147d81a3de64bd7808b3ca63cc0fa47fd1a48244f3bc3ad67ec7e6f7dc874"
                }
            ]
        },
        "1.11.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:3087da08418be15da61f00ae64bbb2f7506fa1ccde95078b2b7f4b46fa85b022"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45197726,
                    "digest": "sha256:1aaf237b25582154b89c032f41c4998d95451797d962f1dc7d3850bca1073d4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317354,
                    "digest": "sha256:3282e31ba66b045dcbf7d43950ffced7dbaee019c53f78a909e10c8be3b35d09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372376,
                    "digest": "sha256:a4f691835a34df109456e49cace17444716f5ba69aa30090b90c9a7178941c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489735,
                    "digest": "sha256:5fbf4b6d8ad276dc83d45f67e75b658a6768b3be629bce3ec4b3ec0340218884"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45946448,
                    "digest": "sha256:d797f7f5760662040106b879b4ff79e1a7cfc8cc3d351284a6997f477b161060"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99798616,
                    "digest": "sha256:f417cd8d1dc980fbff6c78d1b9d10de726d6064fec59e9d2c3547bfc3735429a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4c08b6535bed98d15bff2081c3da42c829cd7943e8d7a6f0bb3ac44d87d69213"
                }
            ]
        },
        "1.11.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1794,
                    "digest": "sha256:814309020638d6d3a2e1b0b733f10347005514f8899916bea49df95f3a0d654b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:fe7ad4b1edd2d6ce68228ddc2ec7ae2c88afb69994bcbe6765ae8f958bc952fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110421004,
                    "digest": "sha256:0580dc7f605cd421d055569c5c07b23e3d9ae71ea775a2460d89ea3209b1c363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:fb2c200409cc77517f0307de615e3cb1ed9f6303aea5b7257356910221ada0f8"
                }
            ]
        },
        "1.11.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:fe7ad4b1edd2d6ce68228ddc2ec7ae2c88afb69994bcbe6765ae8f958bc952fd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110421004,
                    "digest": "sha256:0580dc7f605cd421d055569c5c07b23e3d9ae71ea775a2460d89ea3209b1c363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:fb2c200409cc77517f0307de615e3cb1ed9f6303aea5b7257356910221ada0f8"
                }
            ]
        },
        "1.11.13-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:39cd0bd4048f5b59e5e15f75c8345cac6cb7858dec3efd907ffb400d6f09d51a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110824934,
                    "digest": "sha256:1edf0e80ea350a5e8c6c73eaa22453baa587342d157dcbb5b0f91b967c46354b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f8fbb161b0537db202923b2a332aa8e9de40522426031850256e7ba3753ef809"
                }
            ]
        },
        "1.11.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:38f30fab7c6193d4868b30134a483473c127bfde248f1ce3d51ca2f611a0b0c3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99804910,
                    "digest": "sha256:8d4cf1a563b7bf48c647abd03f3d3ba9e4aa9d3793b09fc292af4829b33b58ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:e7529916d482d88382085de7cd3cf66fb321c1dedcd10d2de58aba441398ab89"
                }
            ]
        },
        "1.11.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:b9c423366e6176c77c34257c4b4374deaa1606ed38914616ab69e9a55fe605eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45245026,
                    "digest": "sha256:05b3194a550b956249959e2f64475745fcf943ed7951306c6e3e6a5cd1815dd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317828,
                    "digest": "sha256:5cc01dcd9b0a29ac6daec9b7b4af78f948ee1945fb22e5e8f97993705d589311"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372320,
                    "digest": "sha256:5154470af4c84ea4b0ebc80e0cda7c479ef829d3ec3ece20e7b183bc8ded7563"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489789,
                    "digest": "sha256:cd3b67ff4ea99e03083897f42be8f62c9ef0cd1e1a0603a4c3e627eae76a020d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45947695,
                    "digest": "sha256:81cc889ba28fe8151a735b5521492ab995f1f0bb99ccdd6e121da86bb0dcbf38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99805016,
                    "digest": "sha256:f9c63adc2e8ade4ec5b4166d5236fef2741ed20f897c0820483612811ef77a1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4fd77d826b49722ecf6a91b15aa0c80c440ab33cab0d1019f05da295932647d2"
                }
            ]
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7626183e2b6bf206e03198f3db3d76f8e6f8e3474d69b5c0dd86add3832a4368",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:e0caee180945dd24cf1641373dd2a10f3b422fb92e33ca88a60bb53fa73c9fbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110315756,
                    "digest": "sha256:62f9fb0702cf1f32fdacbcfb22571b17a55af38aff2db8a145e703692679245a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:0ea4246ec2bfa4e6b02b3b6536572d2756978390202304f22441fe604fd09c04"
                }
            ]
        },
        "1.11.2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4046,
                "digest": "sha256:93526be77874ab9c90c71858d3222706683c4795bbca6b36cedb1406375a51dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110118366,
                    "digest": "sha256:db0afcffa2af36623b2a6e3f331d4b3ef9b2a295bbbd6d0a33fc73d8b4ed8525"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:1ee9985803150062dbc2a415121129d8a8f6edb65b4557e315c361416ddbbc52"
                }
            ]
        },
        "1.11.2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:e0caee180945dd24cf1641373dd2a10f3b422fb92e33ca88a60bb53fa73c9fbc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110315756,
                    "digest": "sha256:62f9fb0702cf1f32fdacbcfb22571b17a55af38aff2db8a145e703692679245a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:0ea4246ec2bfa4e6b02b3b6536572d2756978390202304f22441fe604fd09c04"
                }
            ]
        },
        "1.11.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:c371acc21b01e9d330f03c38f204f8d6add1bfd676ccadcc55f85fb2ca364113"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45204819,
                    "digest": "sha256:f596702a556198d4d7b269435905a2c6905cc113e004fb9894d6691a56f13f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267982,
                    "digest": "sha256:203080e34787e21c4c72a0bf78364320cb3fbabf324e473daeab90f86995aa97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371951,
                    "digest": "sha256:0afc14212b1fc39cd1e0f3502f09aa3d06c2e21dbb46e96108bbdf3a4f43625e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50484086,
                    "digest": "sha256:aeb1ee8d768a3204c0d5c5b95862c29567826a0cd7348e6de56fe45fa2327274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895433,
                    "digest": "sha256:1b6ad52af4fdc34f5b07382209a188db5a7b743eb7195cff73875a04a6608793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99653546,
                    "digest": "sha256:948f89437217cc2db434901dcd0935d13f5ae77599961e8a614f3abbab3bfdfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:2a8b34466a43b20f5e41a253acc0f6d6af84926f6eb702acc84eb6695cec44ca"
                }
            ]
        },
        "1.11.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3ea1d39bd82f7ae67c7a6a057603fa7269a9e2466f7ceb2b1f542a2c4dc99939",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:1c5f4722a16c1af746c4886558d006f30c688b7ee8857af6d255d4b6e4e100e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110345887,
                    "digest": "sha256:7a178e0d6278d1482f1b538fab53deb8de1e893109282debae1619eb503637eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b3e743f08144d0afc3cd18afe663988213888aef61d1179277fb5b36ff53049c"
                }
            ]
        },
        "1.11.3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:4b93f240cabdb9da5e809bd9ff219408c0514cc248e076d9123bf531df7f8927"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:d67fa114a3493b4f57b8c5aa7b2a47b04392c611ccaf495f3e8881a9c33d6c19"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309445,
                    "digest": "sha256:62d9314496f9a11b63a2b3c42e724d83980e58456be9659cb829d27e9c47a756"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:ade711cb5ab6a5b6d38fe3b4464e277d7e7b378862902ea411e687b3aab0fe15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110143142,
                    "digest": "sha256:c2147c8d8e0d4cd173343b074297ad288a7208573e3b934d01a468e8adfc4f9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:be80cc9b10f7e45bed368d8d2cb0785f1dd2c050af457e64c49f77929e647685"
                }
            ]
        },
        "1.11.3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4045,
                "digest": "sha256:1c5f4722a16c1af746c4886558d006f30c688b7ee8857af6d255d4b6e4e100e4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307746,
                    "digest": "sha256:e5d7a290acc264d66e5c29923d4b8a79135ffd15887225581968bf7df22fb281"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 176,
                    "digest": "sha256:ad01149bcd3bd207c03ab0c38897be9653222644a37b651c399c24f1e9170313"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309416,
                    "digest": "sha256:bb561d3126b35cb13bedd4f23b2184db9140369cef0de58b3a4e284e9984fcda"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:ba58ed64e881912769f695871270925930a2eb897d81ab2f623accf36a7831d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110345887,
                    "digest": "sha256:7a178e0d6278d1482f1b538fab53deb8de1e893109282debae1619eb503637eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b3e743f08144d0afc3cd18afe663988213888aef61d1179277fb5b36ff53049c"
                }
            ]
        },
        "1.11.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:db74b0505e81b061073cc26e12828fd3fd5192b8bb06355e6dc6b1278bfaa773"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45204819,
                    "digest": "sha256:f596702a556198d4d7b269435905a2c6905cc113e004fb9894d6691a56f13f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267982,
                    "digest": "sha256:203080e34787e21c4c72a0bf78364320cb3fbabf324e473daeab90f86995aa97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371951,
                    "digest": "sha256:0afc14212b1fc39cd1e0f3502f09aa3d06c2e21dbb46e96108bbdf3a4f43625e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50484086,
                    "digest": "sha256:aeb1ee8d768a3204c0d5c5b95862c29567826a0cd7348e6de56fe45fa2327274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895433,
                    "digest": "sha256:1b6ad52af4fdc34f5b07382209a188db5a7b743eb7195cff73875a04a6608793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99670525,
                    "digest": "sha256:3d78d08c93d5fcfa2398c9aee298d7ab1ff32b290519b5c63bcbf1b77b1495aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1471f0f85af26a65c5584777b67fe389d077100958327bad87565387ea8bc325"
                }
            ]
        },
        "1.11.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1c0771b42e5e50be75e7be3277326659500bc2d6a902634bbf0a305669b80434",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:2c94dc319cb769de5abec038071c530514214a7f99e9ab37b3e78788e39b8038"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110416441,
                    "digest": "sha256:fcd06c51940cf88ff74b02f85665f82ddd4d062eb48b735c3eeef2f79ad415ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f5bf956ea37c70c7d2ad67f26fb2850af8b1081f694a93c10560bd096d9a538f"
                }
            ]
        },
        "1.11.4-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:13451fe336d70070ce80a886a60b920885cc81b9a315621a5c71bfbda921026a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110216469,
                    "digest": "sha256:dbbaffada5a3f876d756faaa642f84a63ed900dbf2faf5ced803bc3ca0f1a05d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:581795c76070f1371580b1b9317e157996304fc0d2bfb82c605daea92b1f8d52"
                }
            ]
        },
        "1.11.4-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4047,
                "digest": "sha256:2c94dc319cb769de5abec038071c530514214a7f99e9ab37b3e78788e39b8038"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110416441,
                    "digest": "sha256:fcd06c51940cf88ff74b02f85665f82ddd4d062eb48b735c3eeef2f79ad415ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f5bf956ea37c70c7d2ad67f26fb2850af8b1081f694a93c10560bd096d9a538f"
                }
            ]
        },
        "1.11.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:b077f5ef51e76c48af6fab82caa9ae3f9a2d48574a9a589d7bb65ecb01d26637"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214806,
                    "digest": "sha256:722537c8945eeebf26115a6c640dee5654f86f4895040cc1bd0657fb4e130bed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312971,
                    "digest": "sha256:4057c49d3c3629a7440330e6cef148d76b54a9dc31241519def2f6eb4253481d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371954,
                    "digest": "sha256:dc291abeeae11d57015537fa94de7423586d044d3cc37d0f696d70e180ed5611"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487713,
                    "digest": "sha256:9891e0752c1c63f9881959463a49cfea0b9c5348681fda14b6012e3bbd42f805"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895459,
                    "digest": "sha256:054d5ec8395e81bc338e38d97e4d77ad4096d7b1539a5c22fbdfbb710ead9a93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99749793,
                    "digest": "sha256:19afb71c2d5aa16fb86ac489d41e65d5ee4d46d7c2e803452f9f80ee741f53b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ef023e1c223410c75f0cd03c49e657bbac1524bc7821eb8270eb8ebb406af844"
                }
            ]
        },
        "1.11.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:69163d2ef03c8aa66384692f0408ae2e2be137f0faea38d6b3a18e5bfe3d7018",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:3be553e16a6a7ce8149ac0ec20c275ba7a7287c4088d4ea02263196562d74c6e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110327430,
                    "digest": "sha256:1c9ea4e6e7af84815b089a7fd64077f979a4f85de98fe48987b6768db0bb2f65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:b80078dbd0cd7035ef10c281b7348c5e332e11fd3e8cf5d16fd0315812b0db83"
                }
            ]
        },
        "1.11.5-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4051,
                "digest": "sha256:a4b8424a78e3e488a0e91d576823e0a6d53f4caab75e1b3382ffbc156fce3e25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2201183,
                    "digest": "sha256:6e61c3658cd6273d9aec7222b5e89d66892fed584a6f37e459c0e47646d98af3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0c5a991d0e8727ddad0104264ae7819c2fde180a2ca2fc266d6814b4fa2e135e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309601,
                    "digest": "sha256:b54c14c01a02aa6561685778f03deaf882a1b48a42cbb37e586636aaf1f1bbb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3b938b13a19435b4941dc46f50a7753ca9caff4f3b314c2e0bff62463955933c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110218009,
                    "digest": "sha256:309e5c19804e9d4e82d54165f91fb1539ebd99612675a16d32b3de1b900e37f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2935799320b3da0bf8c4901e2ea5c01600523ee4e46fde394f3ea4b5ee7958aa"
                }
            ]
        },
        "1.11.5-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:c3b90a467c83d08486578fc432db8985deb24abb1afe45e705584bd0fb6585ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110415814,
                    "digest": "sha256:536beee25056c3ac40a70cd23e43a4adbf6af060af9684d1177276f8db20e115"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8ad512b301309b414561d06afff33abb6a9771263802542744d628f490507b0a"
                }
            ]
        },
        "1.11.5-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:3be553e16a6a7ce8149ac0ec20c275ba7a7287c4088d4ea02263196562d74c6e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110327430,
                    "digest": "sha256:1c9ea4e6e7af84815b089a7fd64077f979a4f85de98fe48987b6768db0bb2f65"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:b80078dbd0cd7035ef10c281b7348c5e332e11fd3e8cf5d16fd0315812b0db83"
                }
            ]
        },
        "1.11.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:bcf3f82d670750d8b6fdee5a1e74e4fbb31e3a29a9ac3a45344b9809a0a25348"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199281,
                    "digest": "sha256:39653445334dc97a660d5c33a719f16c20b0727f0918c51fc17e70343f3c2fd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314828,
                    "digest": "sha256:35a786adb578f3dea96f453a6695f6d658fd487c43f0c7dd5375855f6940d82c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372182,
                    "digest": "sha256:d1aa16a552c6ff88adf6745752a99dd6eb610c220d6b46ab8500ca4c491c5f67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489921,
                    "digest": "sha256:e2ae78f46068f6fa2d3f32888f67818a43b3da56f4f44d003a2adeb22dca37fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927468,
                    "digest": "sha256:3edbec8ac429872a1806f23dc4d076874b8af70ef8cb487cccec2a228055f609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 103331713,
                    "digest": "sha256:338d66c854ae2383c9c9711636d3f3a67ec7f067a6809eeab17ebebc40149a57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:e936cc59f78734de0b312117d25f92906c79aff2fb144daa7fe6ad72045478d2"
                }
            ]
        },
        "1.11.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2efcf0084a78464deb0607e760893b2f4e2f96ff8255ac93e7ca6c334c904e12",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:aa3a1695689b67220f853c8cccc752f2315ecb526e269fe960779ad16ed78e94"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110386562,
                    "digest": "sha256:3c7a3f5fa8fb6839cdf68eddfbf54c49908933c4c51122e95cb0486e5b71ba59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:f8068b5e0bf2ba80a1d07eabaed6e1e6e7ce714da36dcf47980a090722cb3962"
                }
            ]
        },
        "1.11.6-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:1c41dd4e244c7397140d3fadb711f866daf367608666aa701b63b4e6c940ee53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110472819,
                    "digest": "sha256:74c2bf9ab3cd4e74777ab91e4cf42104e55ca7220b7b328119b33d7b1361cdf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5818fe9449a927b4c9d4aadc85a893f38b06382fd2107bb8368c5eb42d6790b9"
                }
            ]
        },
        "1.11.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:aa3a1695689b67220f853c8cccc752f2315ecb526e269fe960779ad16ed78e94"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110386562,
                    "digest": "sha256:3c7a3f5fa8fb6839cdf68eddfbf54c49908933c4c51122e95cb0486e5b71ba59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:f8068b5e0bf2ba80a1d07eabaed6e1e6e7ce714da36dcf47980a090722cb3962"
                }
            ]
        },
        "1.11.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:d501948218c5c9b196a6d927048070db9f998a98cb33de73bf995e948c6010bb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99792837,
                    "digest": "sha256:e754b4d72891883b72beb7a9270a5b4a600364f7f62e40536c93b051fc734001"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:dcc8d0a55e522905a9e0a54f4b8bf662a32d136d1012bc2008506cab0d6926b4"
                }
            ]
        },
        "1.11.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:a61f1e61ac586dd37d717c2af7399629c499078e7fdd9fed44797e3061f9b5d2",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:10c458b2e286fc0542b221571e6fd62959a5aad26eb34f0a8111faa34fb1f6ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110807080,
                    "digest": "sha256:42fe9076b1eb50c3fb4df8089874e46fa60a71ada0d05ce54a0c2d193d61af0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4f795ffa3afe17d6721d07fc29608d0b1fca0595016da8cff6a5c0e98efe437a"
                }
            ]
        },
        "1.11.7-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:0685ab06a762f91b8459fc77cb86799c2cff321157a39b34a6a98855044eec30"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110472677,
                    "digest": "sha256:16eca6fb3ed5cdeb99affb4ca362d22cc772d180d35b9ac22d7d886a20ee9c0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 123,
                    "digest": "sha256:89c30a40d387b14d1cd3b6980f00d3efcaebe7cf6c726db397ec4dd662d9fe26"
                }
            ]
        },
        "1.11.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:10c458b2e286fc0542b221571e6fd62959a5aad26eb34f0a8111faa34fb1f6ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110807080,
                    "digest": "sha256:42fe9076b1eb50c3fb4df8089874e46fa60a71ada0d05ce54a0c2d193d61af0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4f795ffa3afe17d6721d07fc29608d0b1fca0595016da8cff6a5c0e98efe437a"
                }
            ]
        },
        "1.11.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:36d5c734f93cd310345e4b868728cf100c4447d302f6f035f6387cf6f51e5200"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99792873,
                    "digest": "sha256:1a135974a8d739134c1169d7fd7c4a971f63243c10bcd602a2a31029a8a5aee0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f89304da2fc89480df10d6f6c1c304ca34438060f987f4cb6b60bdde6a7403f9"
                }
            ]
        },
        "1.11.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3950ce84e131c53aae2db15295ed487c74cc62a06ef44fbfecefbf5cf8748b63",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:ab175fd89989175130824c2b79fd5effb68acbdce7ce39ba521f2bb4bbd2a2f4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110387573,
                    "digest": "sha256:d6b4b198e13fccb19a13b63a8c8b6a818ce2c7b1bc1029ee5e1b4064a48c8cfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:01018492e55699d0f7e03940b33e67381c6be940cc1e5ae6d150d44266ce0603"
                }
            ]
        },
        "1.11.8-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:2a29d4d4cc37e501dc03131741022d7e637edeb7b3cfe5dedfc3b88a5b26c664"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110472857,
                    "digest": "sha256:5f3cf702b7625f7a1d5fe1a72d22b722148fef1f8d490174878f713f2a17069d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b50714a9f6453a6f963d8bf9e77d974ddaad4ce6df2b9eab3f6b4d234bcf835a"
                }
            ]
        },
        "1.11.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:ab175fd89989175130824c2b79fd5effb68acbdce7ce39ba521f2bb4bbd2a2f4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110387573,
                    "digest": "sha256:d6b4b198e13fccb19a13b63a8c8b6a818ce2c7b1bc1029ee5e1b4064a48c8cfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:01018492e55699d0f7e03940b33e67381c6be940cc1e5ae6d150d44266ce0603"
                }
            ]
        },
        "1.11.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:cb5b304808701a709977d0498a9e01109ba2237af600b51c1f57021e3ec9900c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99792714,
                    "digest": "sha256:a08331780d4a789cce6f0cb3ac692a42fabd8d028898e8a303a3566b0e96c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:45a08c9f936d8df58b19471f6f0876e32aa011dbc98c9051ccba1040c00f002f"
                }
            ]
        },
        "1.11.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:693ef12a646f01954a019c44c486345f13c4d6fed2b61353742dfa5932d5e349",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:5a2916e28c4a23ebb994ddf1ad0e5c4ac75b645050917dcbdec8156f604a145d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110387275,
                    "digest": "sha256:be6025254a86e0d675cce64fa57a711c2ea031dcd71a7bd41cd848ef11f1c87e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6f5f3fa1e41ff1521f0e70a530b82f288323c9870c42366e1cc9d259c7eb55ff"
                }
            ]
        },
        "1.11.9-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:d9be1c8b6e24d09d1ac3b0b21668aaddd6e9dee26b7376a519b36be092bccf99"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307669,
                    "digest": "sha256:2dae612ccf35f9ba25dee8f8762f1b8d330eaaad0cccef7cdac1c8292a37a081"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309589,
                    "digest": "sha256:257298cf9264c0a14fdc9d6cd86031b7f6ee38de7cbd79452fa0a4833fdfd546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8eb37945050b7080ebcc659888525c48a65aaad86e053776323fe4984cd9976b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110473609,
                    "digest": "sha256:5a65864f9ac6801931660852bb9a0927b8f6d12e893ba5dbd0d865b7da354840"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:eea0fd940159aacddf30a305c0a62619ac5bb742e8eb58a4f941e990fadfce8f"
                }
            ]
        },
        "1.11.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:5a2916e28c4a23ebb994ddf1ad0e5c4ac75b645050917dcbdec8156f604a145d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110387275,
                    "digest": "sha256:be6025254a86e0d675cce64fa57a711c2ea031dcd71a7bd41cd848ef11f1c87e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:6f5f3fa1e41ff1521f0e70a530b82f288323c9870c42366e1cc9d259c7eb55ff"
                }
            ]
        },
        "1.11.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:18f3b7265dde1bbf243da27ec202e591d32c8ac0b1b891cd0ef47bb7577cab72"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 99793020,
                    "digest": "sha256:8a2cd7eec5fc4f773bdbba17a021ddd15ca23c57e7bdd519c5b37a85905fe882"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:5fcfd9b089cbff2b887791ec8b9bf95529a9b52b6315222edd253edcb5bd8328"
                }
            ]
        },
        "1.11beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:3389171ed793ae93c8edcc7b20f8da6e9c57613e2d5b048ea819149c58978498",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4119,
                "digest": "sha256:680b9503c28fb6134dca7246f64a5d071307af0c4fd1873174c9bc97627639e1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159958385,
                    "digest": "sha256:9d9c83588e4fa8779ba410c51abf77f4f1890183e8e7c67a6ce7088542ce17f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:97163680cafba20ea55ffffe6277836162892a814ab07979e537340a468caca2"
                }
            ]
        },
        "1.11beta1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4117,
                "digest": "sha256:f0f499b3b92df6eba3cd715b7a0885e4fc77619689538793123cd7684eedb8ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152897151,
                    "digest": "sha256:f0eca991e8053038b2bc4379fa5be66b55c6ad77b3bdcf447a3b593f43ad5bea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:c6685708600236606a66da6c102fb67a209d9639144ee1052877e003df69b5c9"
                }
            ]
        },
        "1.11beta1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4119,
                "digest": "sha256:680b9503c28fb6134dca7246f64a5d071307af0c4fd1873174c9bc97627639e1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 159958385,
                    "digest": "sha256:9d9c83588e4fa8779ba410c51abf77f4f1890183e8e7c67a6ce7088542ce17f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:97163680cafba20ea55ffffe6277836162892a814ab07979e537340a468caca2"
                }
            ]
        },
        "1.11beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5472,
                "digest": "sha256:ad0ed5c9136980d9f4027a805e6fe85f2fd220009a4d35ed7c2ae09b7f14a4c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 142116807,
                    "digest": "sha256:d9a05e436b994525f019429175f57d7c03e99c273e058146d61caba93b6bf9aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b6ba71bc67413d7c79c5864d5afa89dc8f42f74f77ca3a5c50ecf25c8ce851f5"
                }
            ]
        },
        "1.11beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:9f0474a58a66caa56c33c26909e3dd4c221ab8a902a80bd3c2f26728dadc4d1d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:fa7f8f504b325415efbe20b3c2734d9854d5af45689298dd8e7a6867da0ae076"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164521684,
                    "digest": "sha256:e5bc68494b56430aae909a026bc2a61923ed7d5fa2f706864efd76dc745967a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:731a04ac74ec39c2a3c01dc952a22b0165b6d48aba5c3462045adbf281c6622d"
                }
            ]
        },
        "1.11beta2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4118,
                "digest": "sha256:f922ae88c07e91bcf4a4a06d21b02826c3c2ee1a54cb6bd07c2af9dfb5fbab39"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157448528,
                    "digest": "sha256:a95caf12d03a46000d9a346316ccbaf354ed224f62a46a8d58327def92ecdad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:6dff363b469447df7d021db79095b55efad6a95849d5ac21e3dfdf350be7496e"
                }
            ]
        },
        "1.11beta2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:fa7f8f504b325415efbe20b3c2734d9854d5af45689298dd8e7a6867da0ae076"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164521684,
                    "digest": "sha256:e5bc68494b56430aae909a026bc2a61923ed7d5fa2f706864efd76dc745967a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:731a04ac74ec39c2a3c01dc952a22b0165b6d48aba5c3462045adbf281c6622d"
                }
            ]
        },
        "1.11beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5470,
                "digest": "sha256:53bc6ec988a321d106e5e2e36bb08e6b80fcdbfe60a855d9376354aecdd9f0d6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150550612,
                    "digest": "sha256:61634b00541b87d1ee2b9a528358184fe5a46fa3149133cc131bcea0edf19ec8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f201db5a11510e003f53ed45a26e8664a52c5f4db41abc9d2cfcc6ee9b38c6d0"
                }
            ]
        },
        "1.11beta3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:6240e43c98411297875da4bfe7e8f24ce8fce9f4192e8b0e408ab25dc832f9db",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11beta3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:1701435c1333f1aafa3097f6be77773e040c9d7dfcf18fb9d491cd5638ce5a60"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164425864,
                    "digest": "sha256:cadc40ec444aa997fcb7af469f621c668915630d94fc9b90db98c649f59521b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ff6ca1b383ea6ee47c638e4d5ff79a3d330abf7b739fc0decba9a66950cde49d"
                }
            ]
        },
        "1.11beta3-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4116,
                "digest": "sha256:a1d9a67e93e95ff7e6b1f7777cedd95c90b1e20f6283ee8459cb9e6ec205f095"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157340685,
                    "digest": "sha256:d72e2547d43519bc401c8225c37c930f5f2f6a7b0444a441603e884a23a35487"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5da3ef5e697d9348bfd65da8427bcc851c9e8589f636bf06c4fa38d8d2315b2f"
                }
            ]
        },
        "1.11beta3-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4120,
                "digest": "sha256:1701435c1333f1aafa3097f6be77773e040c9d7dfcf18fb9d491cd5638ce5a60"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164425864,
                    "digest": "sha256:cadc40ec444aa997fcb7af469f621c668915630d94fc9b90db98c649f59521b7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ff6ca1b383ea6ee47c638e4d5ff79a3d330abf7b739fc0decba9a66950cde49d"
                }
            ]
        },
        "1.11beta3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5471,
                "digest": "sha256:bc2b9d83c4ddc3060dda4b7f53c0ecbc9ebe15d7408d54d5ff92564d10539ac4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150476767,
                    "digest": "sha256:707cab644d858f2eb81b393c593a25d6ba9a73f46412f5e8a00ba10219e8b618"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:00383104b8464eebf7345ef6af2d91699a176981c1d9c6d257e744d2c58c36bb"
                }
            ]
        },
        "1.11rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:548753ae441461fe3db3f320345e165e6c6720f2c0f828c4f9ef1d1eaa1c7162",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:337ae7cc2d06433bbc995872817a40f8e4a6e8da46ff7dcb7ecffdde5eb95ea7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111478320,
                    "digest": "sha256:89491db647aa51a3ca932a3d714cdc863f6bb2985341bf8d8a18986891398c4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a00bae916d07b86e4408ac0c0f2c4924daf8a4ef40279a6bd1a68b0d3d96dfa0"
                }
            ]
        },
        "1.11rc1-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4177,
                "digest": "sha256:d3ca4fc7c0b16a39d7ab3884e86f88138231c4a693b37f7c1f3c419537f7c4a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110475523,
                    "digest": "sha256:b71d632e2f2b7084097e8a1a6b581dff3b6eb007fa54e3ec6a323c20c2960329"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3f2dc02f3a4b72b1c75c59e752b3800d3bc8819d35d0d00232b52e889f251997"
                }
            ]
        },
        "1.11rc1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:337ae7cc2d06433bbc995872817a40f8e4a6e8da46ff7dcb7ecffdde5eb95ea7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111478320,
                    "digest": "sha256:89491db647aa51a3ca932a3d714cdc863f6bb2985341bf8d8a18986891398c4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a00bae916d07b86e4408ac0c0f2c4924daf8a4ef40279a6bd1a68b0d3d96dfa0"
                }
            ]
        },
        "1.11rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:444073ff15d19719c47bf0961fc286adfd5f2635dbd2fb4d6365540661a2d5ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 150538355,
                    "digest": "sha256:7313fa89330218ad3abb8e843695673dc1eae3bdf663520db752c61ef3ccce77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:a7ca2a753bfdb62985d287fbf85e9adc6f7024b1be548ae35769c836cb1dc69e"
                }
            ]
        },
        "1.11rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:8cde76aa081642db006870a8ab26474b5172bd2303aa0ad7c18f5ad4388bb735",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.11rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:2dbd545c95dd873479847afd75abf0936337386cb19252342d2a91feecd5389a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111475984,
                    "digest": "sha256:01dcc037c1dd20abc736f001a27d084194af9e1fe546bb52acbdadfc5ccc808b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:82315a47adaf9359e45f230754d45e9459ee0ebde38830ea19fd11b80b45c571"
                }
            ]
        },
        "1.11rc2-alpine3.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4174,
                "digest": "sha256:ba1f05f559e696bd8d9e9607d9e2608436975f48d8051322fa2e561cef67f45b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2185231,
                    "digest": "sha256:11e7bc85614a236b32043d147930fd2bc9055af8642fe30e5e56142590572b0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:3f825cbb729285f1fe2a0cd1d4d36897e3fe2191c5ee044ce11a5d301dc64a34"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309148,
                    "digest": "sha256:8e086971261bceaf8aea6aa9962223fd5f1c0876f30d440dca2edce64bb2e6ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b94801dbdd0e977fe92249d99be1d017b2b930177b6d3dd44105722b0233438b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110474149,
                    "digest": "sha256:2ea43042b49681c8e48f4de17678662fe7c2ec509fba0e380ffd608d2de285ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f3081b19e7467a9e4f0de259c5a53ec9355c5c8d851f745cbb85e149a154c9b6"
                }
            ]
        },
        "1.11rc2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4179,
                "digest": "sha256:2dbd545c95dd873479847afd75abf0936337386cb19252342d2a91feecd5389a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307471,
                    "digest": "sha256:cdf21ace94188d512903eea53ea8559677e0e6ffd5d6a180a1d88c118abc96fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:ea178433f2f09080fbbf77f09da1b16d588b7ced380d495a2f2ad00d28468338"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309440,
                    "digest": "sha256:a5eeb143e96d53824ae8400edeaff13b2f662c7b1eabb1ea3f35b13606a43844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c4d9e1e34325661474352d946155c6b35e9706f2ab12465bc084d780a7c2bb27"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111475984,
                    "digest": "sha256:01dcc037c1dd20abc736f001a27d084194af9e1fe546bb52acbdadfc5ccc808b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:82315a47adaf9359e45f230754d45e9459ee0ebde38830ea19fd11b80b45c571"
                }
            ]
        },
        "1.11rc2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:f69431a88d072e26f516b4badddbe0862a7dd98c90e103b0c6c22ccccd7274ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45198375,
                    "digest": "sha256:9351e2bf09f4d9a6beab73bfd3f913106d30008c3ebde119c4b5820670de53e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10267412,
                    "digest": "sha256:10c6d95a7f071ed59620c691d7cb2ba7909eebd13ad42f2edea64fa6345b1194"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4366785,
                    "digest": "sha256:c4fda1014bc69bc1831d085530e0e2092c9eaa1f92f6e0861aa060dc4580c9b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50482326,
                    "digest": "sha256:9ee6f36da521265c10265dc58eb783f0fcec8fdfef13b9b8520618833e2208a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45877116,
                    "digest": "sha256:7b447b317dd4925937d6474bc6283857e25e25c167cbbfe03c75bb33603fa51f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 100451233,
                    "digest": "sha256:8fce0461f66ccf0afa291b23b8f2d8320b84a34a5c18bb10253db1e2da3dafec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:49765e5a96dd94cc507dffc3bd782b50d7622257c886d299f48c597ac08185e5"
                }
            ]
        },
        "1.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d516e26ef37469439e8ce05ef231296479e1cbadd7b17bbdaebf1d74342411e8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:ab703201a06732a510bfae8434465dd50eb58f3763b8773a7678bfdf471d310e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124611697,
                    "digest": "sha256:c7691ea91210736b89002a60f8fc582c720c26d1ac201977431600918e76c04d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df96727db822d8011be3473ca532e1c5385998c780f7379c7066b297b9ff7203"
                }
            ]
        },
        "1.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e93f2201faad6893789ee4e3e5c2a74f4552b33e03bdd1c363a9ee6ebaf0c340"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124614118,
                    "digest": "sha256:d130a9ac8d5f0fe4ddb6ad3681dd4d1c9c2fa34977c4160d4d65a64f07907446"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0bc3649952147a74af895a095cf88f723f06ef2188380e741d1a0ecb8bd277b9"
                }
            ]
        },
        "1.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:ab703201a06732a510bfae8434465dd50eb58f3763b8773a7678bfdf471d310e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124611697,
                    "digest": "sha256:c7691ea91210736b89002a60f8fc582c720c26d1ac201977431600918e76c04d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df96727db822d8011be3473ca532e1c5385998c780f7379c7066b297b9ff7203"
                }
            ]
        },
        "1.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:f0afdbb279ca7f91b063e37d98ab299b81f88ca35b0169aa76fa5bc0a099655e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125011501,
                    "digest": "sha256:29801d007d63d68d3d07f09df3934f792021c81528fff8c9ef1a31d40dfde165"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:da27d1d23c7261dc5738c40a24bee1dc1afcb3ec5f12204a99fc92cabde04379"
                }
            ]
        },
        "1.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:24b6a4b65d10827f19c4040297b13ce8fbfa0936021b5853024e83690f28d46b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954499,
                    "digest": "sha256:6f3b736b312bfd59fd7947524542ae1d57ed4564aefaafdf0ccfb7d600f7978f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381759,
                    "digest": "sha256:6eca02855c81b470d73964fc93a8a5e484c5ce5dd6782210cc15b8aca2d28684"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882030,
                    "digest": "sha256:88ecd1a9e0aa67e009dc11b696d0a2029c3bb506e5058e13434114e16ad7a290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51326330,
                    "digest": "sha256:114b7e56002fcad21b16ab9d3774a372824925547f59e9580bc61ec3cee41394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56591695,
                    "digest": "sha256:eba663ac4e1567abd178cbcb653944b168f5b132c1a687c67ef4041d7ed4030d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109775510,
                    "digest": "sha256:caedf537cfdfae491844540e311c7f54eca2103b50214065039b95034cba0b0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3f1219a57b40ca9a0056a562ac88486a3761c4602d0742a33b751275fbb1a960"
                }
            ]
        },
        "1.12-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ef289a985308c710d6a3419caa2f4bcac3b552c0a4896338117b65e7e1dcba74",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4054,
                "digest": "sha256:e322b31bdfb6872dd91bb43c7227c85f73647ac6451abc7508e7f0a9825843ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124738732,
                    "digest": "sha256:efac4bd17408c37d03ca015d395d2a9be0edb4f306b3dd7d1b4a2e1e46e21f0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e192ebe5898c5c1daf3ff88c4a3d8acd23c44395b5940f3232f2995278691ea0"
                }
            ]
        },
        "1.12-rc-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4053,
                "digest": "sha256:0951f3360535acffebe53c1af8a345ef8c3be974de11a5ba85d1a7d7089cd070"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124823944,
                    "digest": "sha256:2c9352d339bf97fe949097e8a0687bf3622912defd5b16029b7ffda931c966d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a235ac37ab16193707f117efec3a8af3686d50677d940b3a9c1f4cd90cc991b9"
                }
            ]
        },
        "1.12-rc-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4054,
                "digest": "sha256:e322b31bdfb6872dd91bb43c7227c85f73647ac6451abc7508e7f0a9825843ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124738732,
                    "digest": "sha256:efac4bd17408c37d03ca015d395d2a9be0edb4f306b3dd7d1b4a2e1e46e21f0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e192ebe5898c5c1daf3ff88c4a3d8acd23c44395b5940f3232f2995278691ea0"
                }
            ]
        },
        "1.12-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:654e5f9ff0949cc7c608d2752310a7751e71c5d75b24ef4701aed5a9f1998aa7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214898,
                    "digest": "sha256:e6786603fdb9e4ea361b73be3870f1118d3882c1619dfbbf9dec4d483fa32e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312678,
                    "digest": "sha256:cac487c4bc63f07da92ff3259ca4d0fb30f86c5647f775010d11e6d51131b848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371900,
                    "digest": "sha256:a3e9925f73763aaae5f9ccd2b0c87ae90efbee12ee8698074a1056e25c2e6360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487526,
                    "digest": "sha256:9cf6b44fbf659d16c99bbf57d1ee87ae0e6827f8aaa82012f87f1f031f655da5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895383,
                    "digest": "sha256:092388ef108b5a216c6b7dcb99493055f076783f5dc766fc30247724a4e404a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110298063,
                    "digest": "sha256:6d8d2aa608400de72295831fbd67e7157520e4b285a5a656941199ca2223ad64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:054f3be4f1ffc9c0c4fce504fcde395b3f071d648391bc6e7041964839568e5c"
                }
            ]
        },
        "1.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:8043a18b80b8b813edd5424ee27b203c58b16e3f55a0026ded501e96bd724907"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241584,
                    "digest": "sha256:fb54e9d54b34d992a5c6582a6fe3836692cce3589a408748090bbb916a4cc63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325358,
                    "digest": "sha256:03d13d85604945e95d31c38d488a822d8e0b84e7548a10db0c89115cca1887aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372596,
                    "digest": "sha256:596b324848b1286794120fbcb3c696328dd955db597ec3e70840b5dc97d794db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50499891,
                    "digest": "sha256:38645e5b0e6402c091627176f5aed8b9d434ccf323ecc4ca2c66f934acc1a11a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982845,
                    "digest": "sha256:555ca4faedcdf5a518aaa854f9752587efa9ed96a7b02a0c1b875b6e09086a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109775516,
                    "digest": "sha256:5e54fb539ef4897decbff3efa2807c65ba0c30d2ce020d2e8b59272f241c83ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:98880fd730cba5cbe091719f9798d0bd8a31da472ab44c1667094e1a9664e650"
                }
            ]
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:48d778f9a2113f560de00d0a294e5bc720b66738c237cbcc2327d4702f42f34b",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3798,
                "digest": "sha256:b25b6ad1726e1cade6f95354506d23f1ec80bd431cc99ded07306b2f0b23e153"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124761681,
                    "digest": "sha256:54612bec194d3c15822a537ed0a261eb620f00423e14efcc306a7e8f6cc53578"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f80bcd5d639b0d00dbcc5579518cf750dda8a1137d96b547ac0b29fb9812d608"
                }
            ]
        },
        "1.12.0-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3798,
                "digest": "sha256:b25b6ad1726e1cade6f95354506d23f1ec80bd431cc99ded07306b2f0b23e153"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124761681,
                    "digest": "sha256:54612bec194d3c15822a537ed0a261eb620f00423e14efcc306a7e8f6cc53578"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f80bcd5d639b0d00dbcc5579518cf750dda8a1137d96b547ac0b29fb9812d608"
                }
            ]
        },
        "1.12.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:06bec1905f806ad41baf00afab028755cd9b549993700591b64b0e82efca9aa5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199281,
                    "digest": "sha256:39653445334dc97a660d5c33a719f16c20b0727f0918c51fc17e70343f3c2fd5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314828,
                    "digest": "sha256:35a786adb578f3dea96f453a6695f6d658fd487c43f0c7dd5375855f6940d82c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372182,
                    "digest": "sha256:d1aa16a552c6ff88adf6745752a99dd6eb610c220d6b46ab8500ca4c491c5f67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489921,
                    "digest": "sha256:e2ae78f46068f6fa2d3f32888f67818a43b3da56f4f44d003a2adeb22dca37fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927468,
                    "digest": "sha256:3edbec8ac429872a1806f23dc4d076874b8af70ef8cb487cccec2a228055f609"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110317276,
                    "digest": "sha256:d654ed33144228adf51747fc1e6cb91d0fad908c01d4524a5f9f899796fb8fff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:cd258cbb89b6e30dcaf85429de10d30ada0907435a70ea0503f0c25188eba791"
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:92627e8b4533a0aba4a205a9238ea59a347823c48c83161dbeddc74d48d342d7",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:2da6bed04b5383231f9059d63ea0af1ca69b1d30e493da5549a1325616d2c664"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125775035,
                    "digest": "sha256:7f8cac6f4f91deac8715372178b70d782dc43515fd489ed57935c2f1b58761dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:cc259d59d6643886641eabbbdcc48cd7e8fe2b1c420c2e022f92bc19e7c12adb"
                }
            ]
        },
        "1.12.1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:2da6bed04b5383231f9059d63ea0af1ca69b1d30e493da5549a1325616d2c664"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125775035,
                    "digest": "sha256:7f8cac6f4f91deac8715372178b70d782dc43515fd489ed57935c2f1b58761dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:cc259d59d6643886641eabbbdcc48cd7e8fe2b1c420c2e022f92bc19e7c12adb"
                }
            ]
        },
        "1.12.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:5725ea28e8c6248de016d4887a846a646afd6d777a4e3aaa262f6e87971e4366"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110984653,
                    "digest": "sha256:d6f47559d09e3e945b06eb6375e48512472b28b9226a1b6cc03cab87faecd67f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f943fe61838f68a2403e95380dce9930daf9ed92eb10d75d9e8315b1e307bc18"
                }
            ]
        },
        "1.12.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:76d2112f046cb902f1b13b392ec256dcc8f2ce2658fc67c0296a433ce9aa33a5",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:7028c638c459388dcb5a6b89a090910612cf19a5c373fe0fcccd1d3b8a1a2600"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125860964,
                    "digest": "sha256:38233bd94a453f51ece2ac3225034afaa533f252b2aea523ec63b56892014a5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c5293577ffddd18d83eb0f785742c5115ac504090c8e155aed585e364e4ff6dc"
                }
            ]
        },
        "1.12.10-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:7028c638c459388dcb5a6b89a090910612cf19a5c373fe0fcccd1d3b8a1a2600"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125860964,
                    "digest": "sha256:38233bd94a453f51ece2ac3225034afaa533f252b2aea523ec63b56892014a5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c5293577ffddd18d83eb0f785742c5115ac504090c8e155aed585e364e4ff6dc"
                }
            ]
        },
        "1.12.10-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:86d833f74b8e8a6c2bd5dc7fbbf31736cf166e56f5d48f0984ee09e0f3dc9180"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126248612,
                    "digest": "sha256:934d6fc4738d057844dae308c5c4a07a2040e06c46535049c69936e49b56631a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:87ced5ff78125a7bb4ce190f00513fa429149e575d27dc900371d615d12e8cc9"
                }
            ]
        },
        "1.12.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:ff995a458312c7b595e498c3c0517b75b3c40ee401e8f460aea9e5d349f68de2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48949946,
                    "digest": "sha256:aeaeeb43f723e2d6411dd54deca73da275af05abcbeaa06facfece152b7cc9f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380461,
                    "digest": "sha256:f716f569a549b2e83daadf9702956ea8c3147d4d0fd2a4c5c8f80b2fd26b7467"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880236,
                    "digest": "sha256:98ba6bcac41c3d29b1d4b7b541a18d8699f01e9cbcf2c25cf50da8d04e1fa1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302006,
                    "digest": "sha256:2d4f7797130be3fe685ad8e78ca714ccdcb83c6b93fb3edb74ac9c64b20f9325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588695,
                    "digest": "sha256:947785ae2d2a04c9d5a8b8735e36e89b60adebfc697ff3b9f2b058cda51dbce0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111035584,
                    "digest": "sha256:e4359decf79e4ea0a76c3b249dbebf987e6d38066fd618a76c117f661dfc0afc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:4218671c5c067734ac80c0aca350ee55ae97c95bc5da9fb00c5dac951d17a2dd"
                }
            ]
        },
        "1.12.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:687421176e14226da64a697b0f467a2745e4a1c71b1d8c0437b06f1090badfd7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241669,
                    "digest": "sha256:ade01ea651a2867944fa9d927cb4cef29871fcfa07620b0963a95848fba8a7b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323827,
                    "digest": "sha256:fbabdb69f63940e074f11d0342ae36dd2601d0d41bcbd963e444655dc459ab58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372295,
                    "digest": "sha256:ff33bd1013d7c7aaa76ef24bc3dd85e5ca91407dd0bc24f3d82033083e775a51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488592,
                    "digest": "sha256:85cfe9d77eff494dfd24e27fe7f48a1b0f7611605869a45f52c46d0bf6537d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982799,
                    "digest": "sha256:ace5139f9caaba7bc41b8382327086c4813ef02e6a00b2bc4c7603b530265b13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111035577,
                    "digest": "sha256:e4d79466b81c6f7ecba12790a7553e02159354469c0afc74c39554b55f99f558"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b00baabad4ce58a4521731072a095af304ed27ff09cf690b656f5535a9439d8e"
                }
            ]
        },
        "1.12.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e12f4e769fac44b99867c7c99dc217d7a338f184383cf0151fde9f321002f944",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:40d88b4ca3b8282f59d18848c3dbf85d162fd4e5cb61f59f8faf47ce07b49884"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125860883,
                    "digest": "sha256:78d0561e7c237700e809cd82170c699f036813a46a5688023bce8849bbb85c5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3c91dc9ff74236a384c854647a9ddb156dcd897adf8978def5d7438dd1cf78ac"
                }
            ]
        },
        "1.12.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:40d88b4ca3b8282f59d18848c3dbf85d162fd4e5cb61f59f8faf47ce07b49884"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125860883,
                    "digest": "sha256:78d0561e7c237700e809cd82170c699f036813a46a5688023bce8849bbb85c5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3c91dc9ff74236a384c854647a9ddb156dcd897adf8978def5d7438dd1cf78ac"
                }
            ]
        },
        "1.12.11-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:9f68c1cc82a007c7d3acde1d41a602db0727d4ae044211df4464c57505339557"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126248740,
                    "digest": "sha256:109c15607c76d44726b67b3abe0fc974bb8653e0d54c5f9cca5c069a84c9574d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c034dfb31a0975ef5c92f8619b83e7c88aa02ec49f789c6bb3ce64bc806ac974"
                }
            ]
        },
        "1.12.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:e1a5b2f5ab6cdf1fc2266498a189880b4efbc59b87f74f65497c029b24cf578f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48949946,
                    "digest": "sha256:aeaeeb43f723e2d6411dd54deca73da275af05abcbeaa06facfece152b7cc9f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380461,
                    "digest": "sha256:f716f569a549b2e83daadf9702956ea8c3147d4d0fd2a4c5c8f80b2fd26b7467"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880236,
                    "digest": "sha256:98ba6bcac41c3d29b1d4b7b541a18d8699f01e9cbcf2c25cf50da8d04e1fa1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302006,
                    "digest": "sha256:2d4f7797130be3fe685ad8e78ca714ccdcb83c6b93fb3edb74ac9c64b20f9325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588695,
                    "digest": "sha256:947785ae2d2a04c9d5a8b8735e36e89b60adebfc697ff3b9f2b058cda51dbce0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111030374,
                    "digest": "sha256:ebe82bea3b41faf01ca3944d626b6e07507ded8406f7568e90aac0d44e8540df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:c4c68fb71bab986fb420ddfd7ff0d3e9e13baa42815b997206fdbed1ccd4e550"
                }
            ]
        },
        "1.12.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5468,
                "digest": "sha256:b964fb061709e6e02a27e9b414dff6b42221d8bc762c86a24901c6197f419846"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241669,
                    "digest": "sha256:ade01ea651a2867944fa9d927cb4cef29871fcfa07620b0963a95848fba8a7b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323827,
                    "digest": "sha256:fbabdb69f63940e074f11d0342ae36dd2601d0d41bcbd963e444655dc459ab58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372295,
                    "digest": "sha256:ff33bd1013d7c7aaa76ef24bc3dd85e5ca91407dd0bc24f3d82033083e775a51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488592,
                    "digest": "sha256:85cfe9d77eff494dfd24e27fe7f48a1b0f7611605869a45f52c46d0bf6537d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982799,
                    "digest": "sha256:ace5139f9caaba7bc41b8382327086c4813ef02e6a00b2bc4c7603b530265b13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111030364,
                    "digest": "sha256:151e10ff651dbe6e3b6b4119bccb4a8e99249136622c6c12abc2548943539667"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:09eedf72ed495129da71dcb5127b9607d445887a53daa6d1c7e04131bfab24a1"
                }
            ]
        },
        "1.12.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f530ce513d60dae431a1f58ce4477cd5e9a5348d807779e2f45eb76fe1750a87",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:a12981d2da2db8fae99d31ea22c2f1c6e417284d430baa2dea5329c0775ffddb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125861514,
                    "digest": "sha256:e34bf313e9debca4c66f8a9c483abd602010e6f66f0aa0c4fc8c243b41f46f57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:825f3fa0065acae8df5c7aad2bd091eba200adb0ae9709463c3f28b380d1a453"
                }
            ]
        },
        "1.12.12-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:a12981d2da2db8fae99d31ea22c2f1c6e417284d430baa2dea5329c0775ffddb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125861514,
                    "digest": "sha256:e34bf313e9debca4c66f8a9c483abd602010e6f66f0aa0c4fc8c243b41f46f57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:825f3fa0065acae8df5c7aad2bd091eba200adb0ae9709463c3f28b380d1a453"
                }
            ]
        },
        "1.12.12-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3806,
                "digest": "sha256:2018a88a15b2ea2680da6bdbd000a755bec8866fddf43f115b1299b5e3353766"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126250437,
                    "digest": "sha256:033f1f853746d8a4b4b2fc4244f3e552b209a5f4a2c3a0005ddc5fdadf0cee32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:bec950a921aa162b6798ade52dc493c7fae3c28fd2e6ab10e5cbb9b0ea4ac90d"
                }
            ]
        },
        "1.12.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:3db3ab27c0a4d5977af8c1433ae74383c9a250a19cb739a78a5ee175b5330418"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48949946,
                    "digest": "sha256:aeaeeb43f723e2d6411dd54deca73da275af05abcbeaa06facfece152b7cc9f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380461,
                    "digest": "sha256:f716f569a549b2e83daadf9702956ea8c3147d4d0fd2a4c5c8f80b2fd26b7467"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880236,
                    "digest": "sha256:98ba6bcac41c3d29b1d4b7b541a18d8699f01e9cbcf2c25cf50da8d04e1fa1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302006,
                    "digest": "sha256:2d4f7797130be3fe685ad8e78ca714ccdcb83c6b93fb3edb74ac9c64b20f9325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588695,
                    "digest": "sha256:947785ae2d2a04c9d5a8b8735e36e89b60adebfc697ff3b9f2b058cda51dbce0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111040646,
                    "digest": "sha256:868736eef24bec5c24e0c68fc2a0e57f96f6681f9fdff11603c8588e58bb25e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:08a3d28d5704343923ef6da7cf78ec501b48cd958d986939de12426ed22615cc"
                }
            ]
        },
        "1.12.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:4dd5631d87ffefc320c7568014182969e31c8036f5a0655a8d5829ce0ae9b9cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241669,
                    "digest": "sha256:ade01ea651a2867944fa9d927cb4cef29871fcfa07620b0963a95848fba8a7b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323827,
                    "digest": "sha256:fbabdb69f63940e074f11d0342ae36dd2601d0d41bcbd963e444655dc459ab58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372295,
                    "digest": "sha256:ff33bd1013d7c7aaa76ef24bc3dd85e5ca91407dd0bc24f3d82033083e775a51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488592,
                    "digest": "sha256:85cfe9d77eff494dfd24e27fe7f48a1b0f7611605869a45f52c46d0bf6537d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982799,
                    "digest": "sha256:ace5139f9caaba7bc41b8382327086c4813ef02e6a00b2bc4c7603b530265b13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111040656,
                    "digest": "sha256:4797583187ebec1425d80411c09786b8fc5e15719db707ede43095b2b8ef4452"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:bc1dce975fef1c79d90cd9e5a616beb7cda6a5843b6b44d072cd07338d592f98"
                }
            ]
        },
        "1.12.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d516e26ef37469439e8ce05ef231296479e1cbadd7b17bbdaebf1d74342411e8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:91c52da138c3713c0693fe28e681079180d8b3ae44d61413ad0571ac8d460d0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125860973,
                    "digest": "sha256:729eb884517fd12e8b173c74490fadc2c8e96289ed1056253d14ddb6b9716cb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:265c0df17676f2c391c3cec058c11c420a3f45c2c872e82de70dcbc0567069de"
                }
            ]
        },
        "1.12.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:91c52da138c3713c0693fe28e681079180d8b3ae44d61413ad0571ac8d460d0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125860973,
                    "digest": "sha256:729eb884517fd12e8b173c74490fadc2c8e96289ed1056253d14ddb6b9716cb7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:265c0df17676f2c391c3cec058c11c420a3f45c2c872e82de70dcbc0567069de"
                }
            ]
        },
        "1.12.13-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3807,
                "digest": "sha256:0ed12089820198ba9588cfda34b52fa65041dc93901184356dbd6c0c8f2de147"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126250360,
                    "digest": "sha256:d1ed1409aec8c0de5609d465a0153642df372ae726040a7eb1ff0d71c14913e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:404f7d2c6fa986fb447bbf82680837dfe6de346b7582392a8e9c82b99796266c"
                }
            ]
        },
        "1.12.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:8ee14b8c35c601d73f50d746a239af185106d6b9e44cb48f355e5e8ddb504b42"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954550,
                    "digest": "sha256:8fdf0c9621bb3a044b28b3bea9f60b87248b8648961de4622d4a93da641f4950"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380308,
                    "digest": "sha256:ec52e72b73f26a9f14f7ff349840b08041045d4e6594216d838e1257596d56ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880255,
                    "digest": "sha256:7c00a95b68a3c0dcde68488ea0c573ea5820e7b0326c2740d9eeb1fdc6a16984"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51320300,
                    "digest": "sha256:2cf76353462bec8e44bb5f54b6e7d087125c79ff62836b4d836919cdcd325e1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56590846,
                    "digest": "sha256:5ceaaaa19e853ee5cabf98457105da50bc44bd5520a1317137792a26d75d95ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111041641,
                    "digest": "sha256:71165d78ed48cdfb429e22d028b4e3b08ae5333c7304773b693532c14391ed87"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:62a03b2c2d7835d3294868acdb848a485091db7dfee0088e978af8d713de1245"
                }
            ]
        },
        "1.12.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:79c8a1de2dbd8092c89d75dd605d217b140ef97dd5520cf68f04996b4bbed7cf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241715,
                    "digest": "sha256:5c0a87668ad496cd2437dc595f8bbf2fff3dd4764f38a3b40a26fad39d8b5336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323709,
                    "digest": "sha256:42584671b3106f70e51753265104ef56231608828a9d6686bbce1b9d657e7ba5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372290,
                    "digest": "sha256:769217f6f555e0026d9206bd251391471d3ac4e845134b62b67697c7c377855d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489325,
                    "digest": "sha256:5975152de57477bbc6bbd9c83361a582c481dcf26e5911ffc85399ec93855db5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982493,
                    "digest": "sha256:2bd8b51b0f3ac21fd973cb63f8b5b6f42d087c4d85a6f7fee92ad2957ff1f1d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111041643,
                    "digest": "sha256:daecd4f1d55d50344d8829fec350bde58255641060727fadbfe2ae57e96267eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:78e4fba707d889aa5105ab851bc354c763721e545262e1f99617478f6ff82fa6"
                }
            ]
        },
        "1.12.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:86b43ba31f94f281234af6a1899639a24c088e9968667423bf3ef1562b285363"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2579591,
                    "digest": "sha256:bca389ebb9be8103bf737251d68f962104771b2f9c1fff1f7ae0207458fa4c86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301806,
                    "digest": "sha256:d80c20330ef3f554370f7a9a7898748f3f8fd4f8078bc2c80901358c41411753"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f89c1cb6d496f7063b44e5552a2450206f007d82c0467e4ebffb4edb8d4311c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124611653,
                    "digest": "sha256:03fcb9ed96d31ba526d1a7d50e01b537e13eb2d9a9118ede0b42bf6ead310b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:b582c4b7a986c5b0b871cf6edc64d73f6fa4c6c854d012d926c1d14dbc56056f"
                }
            ]
        },
        "1.12.14-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:0a6e7a0746af5bbbab07048f5cdd2efce11897ac50c645de7188c6c0ae1afa6c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124624241,
                    "digest": "sha256:467ab334aa1fe8f79a243f0d9aed9969f190f22436a9822746ba635d4809930b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:415b83ae52831ed1e1367aae72ba0a1a115307353a6720eecd4f51c3537e0b40"
                }
            ]
        },
        "1.12.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3837,
                "digest": "sha256:86b43ba31f94f281234af6a1899639a24c088e9968667423bf3ef1562b285363"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2579591,
                    "digest": "sha256:bca389ebb9be8103bf737251d68f962104771b2f9c1fff1f7ae0207458fa4c86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301806,
                    "digest": "sha256:d80c20330ef3f554370f7a9a7898748f3f8fd4f8078bc2c80901358c41411753"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f89c1cb6d496f7063b44e5552a2450206f007d82c0467e4ebffb4edb8d4311c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124611653,
                    "digest": "sha256:03fcb9ed96d31ba526d1a7d50e01b537e13eb2d9a9118ede0b42bf6ead310b2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:b582c4b7a986c5b0b871cf6edc64d73f6fa4c6c854d012d926c1d14dbc56056f"
                }
            ]
        },
        "1.12.14-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:f0afdbb279ca7f91b063e37d98ab299b81f88ca35b0169aa76fa5bc0a099655e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125011501,
                    "digest": "sha256:29801d007d63d68d3d07f09df3934f792021c81528fff8c9ef1a31d40dfde165"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:da27d1d23c7261dc5738c40a24bee1dc1afcb3ec5f12204a99fc92cabde04379"
                }
            ]
        },
        "1.12.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:f56683bbb0ec5370e8ab205296a962314e4c6134ec1c46827bffba5e1f08f1d8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954508,
                    "digest": "sha256:3596c5a237f76c32832c1879a3d0c763989cb13fac0024673b03e9b549b868ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380503,
                    "digest": "sha256:97a87e4c2949f278ec7636f6762169d70bd2588ed301cc3e2721aa830a9227fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880177,
                    "digest": "sha256:b33b91142ed28640cd70826a84025844f0fa1e7bc50f10b67f6ee03ed2f013ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51318842,
                    "digest": "sha256:a23386745bcbf27928754e130693faba015951a5923f1fcf54478337f15c7e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56590901,
                    "digest": "sha256:8f0fbfcf3c9c79e6865a1fef5477d5d13f0ab68756fce199e5bcddd2c8d98e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109787025,
                    "digest": "sha256:b79cea0f9ffd224b57fcc2d68b57d9c82945ba7e4d6359568f50f7bfe0cfeebe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d10f144f369402fabaa9881a9aa31dd5de36856e96e76ebe7bf43e2d0fb569f3"
                }
            ]
        },
        "1.12.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:2f6b135487b1bf6afc8692fb3e03b892169c53cacee826408eed891656820afd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241644,
                    "digest": "sha256:5bf261872a9b22035011c2bf77259c73389d0d5786e4b43bee1df89b5dfada2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323981,
                    "digest": "sha256:2fbc7bfba26bbc482688409940aa0ec283a70804eb1cc6d540e0643c19909078"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372209,
                    "digest": "sha256:2623665c6d27c8c2e9ab44efeae2139d495077f86d1be219a93c300bef788036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50497131,
                    "digest": "sha256:f61ffbab9b0222931cbb6d98ccd0bccb98581c65656a88a5dcb89c5f5d42872e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982433,
                    "digest": "sha256:6dd03b1c80b59de6c3e7211290ca627c231b1d495c3657f55afc4ae7797f8134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109787005,
                    "digest": "sha256:cb7af6b1d75f61546f438731dda92fdd13ec1ad0dcb188bccadfbdbac84aab2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4c219d584c8ab383ad2baf125a49a93c421141cb10e600f2c05d7a3932fead5a"
                }
            ]
        },
        "1.12.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:0f84e98e15c0b05a0734d0360625b0268b7b0bfacb0c474d2b016bb72cbee830"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124617789,
                    "digest": "sha256:35ee2bf08555219a177c5159ae375f4cd1550d70055a74fe0affc43a74ab3b4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:03ea7db0a5716e8914d20248331c67a5104938e5c351bb13ce2cfaad4f68cd85"
                }
            ]
        },
        "1.12.15-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:33310763cd4655a9217a817877b9829bae069909441a8060c86912ed9735197a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124616968,
                    "digest": "sha256:71654b8bd70abf453c996c38dc70478b05e3e9e9ea777c4f794d8b48882fcee2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c881adf018a840999fec3f5a4158a53a3bb66d0190731aaa7b9c14ca6edd9901"
                }
            ]
        },
        "1.12.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3839,
                "digest": "sha256:0f84e98e15c0b05a0734d0360625b0268b7b0bfacb0c474d2b016bb72cbee830"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124617789,
                    "digest": "sha256:35ee2bf08555219a177c5159ae375f4cd1550d70055a74fe0affc43a74ab3b4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:03ea7db0a5716e8914d20248331c67a5104938e5c351bb13ce2cfaad4f68cd85"
                }
            ]
        },
        "1.12.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:fe04cc3e6aad5f5a9270917ef24fc1d47bc7be22ee7f92b60523f337f49f6b4f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954508,
                    "digest": "sha256:3596c5a237f76c32832c1879a3d0c763989cb13fac0024673b03e9b549b868ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380503,
                    "digest": "sha256:97a87e4c2949f278ec7636f6762169d70bd2588ed301cc3e2721aa830a9227fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880177,
                    "digest": "sha256:b33b91142ed28640cd70826a84025844f0fa1e7bc50f10b67f6ee03ed2f013ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51318842,
                    "digest": "sha256:a23386745bcbf27928754e130693faba015951a5923f1fcf54478337f15c7e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56590901,
                    "digest": "sha256:8f0fbfcf3c9c79e6865a1fef5477d5d13f0ab68756fce199e5bcddd2c8d98e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109778511,
                    "digest": "sha256:3d57a5db20a132c1b297e1100203ab59b9a669107a901fb68f62d0f49670503f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:725b20ebab18b1572ceb65dcdb28e676c8c38814bb43f6a56a5297313658ee46"
                }
            ]
        },
        "1.12.15-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:eb5caec775091dff7652625324b841eda745a4937239b7629e1a6c5e514ae1b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241644,
                    "digest": "sha256:5bf261872a9b22035011c2bf77259c73389d0d5786e4b43bee1df89b5dfada2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323981,
                    "digest": "sha256:2fbc7bfba26bbc482688409940aa0ec283a70804eb1cc6d540e0643c19909078"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372209,
                    "digest": "sha256:2623665c6d27c8c2e9ab44efeae2139d495077f86d1be219a93c300bef788036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50497131,
                    "digest": "sha256:f61ffbab9b0222931cbb6d98ccd0bccb98581c65656a88a5dcb89c5f5d42872e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982433,
                    "digest": "sha256:6dd03b1c80b59de6c3e7211290ca627c231b1d495c3657f55afc4ae7797f8134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109778478,
                    "digest": "sha256:f641753fa5a4b93f2e0bb557dcec783c569d4b24309241f7b3f11a0eb66bc4f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:d8fa7f28c7e4015375f2d4f90144f52ba46a2e18e31f2216f9ada6d26e8d1616"
                }
            ]
        },
        "1.12.16-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:4b79b5c52e9e8a7b2904a26692fd8081d71f79e98185278e2397b900db4f1a80"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124612539,
                    "digest": "sha256:eb6fc56bb435ae2f44c7c58d82fc457eb6382b633ff9e4bc2977877bd08b4cb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:02e592c26ae7780f1aa65c9a4da8a468ced828551cf5e1a9083a6f82f7055621"
                }
            ]
        },
        "1.12.16-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:0b1ff44db843852215d48edb61fce05c1db3aa529950eccaa05edb875c1d1203"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124615051,
                    "digest": "sha256:5ee4bea8adac4cf4624d7fb5f985ec2a52a821bb5be968fad411454995826b86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ecaf1f25e85b0c3bd1a247650525f28ab7c69a17601ac3a4bcc6e72fe371baa4"
                }
            ]
        },
        "1.12.16-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:4b79b5c52e9e8a7b2904a26692fd8081d71f79e98185278e2397b900db4f1a80"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124612539,
                    "digest": "sha256:eb6fc56bb435ae2f44c7c58d82fc457eb6382b633ff9e4bc2977877bd08b4cb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:02e592c26ae7780f1aa65c9a4da8a468ced828551cf5e1a9083a6f82f7055621"
                }
            ]
        },
        "1.12.16-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:34b70112bf530993cf1dcab1e0e2dc25f81f08d967f9abf775164887d9806abc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954499,
                    "digest": "sha256:6f3b736b312bfd59fd7947524542ae1d57ed4564aefaafdf0ccfb7d600f7978f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381759,
                    "digest": "sha256:6eca02855c81b470d73964fc93a8a5e484c5ce5dd6782210cc15b8aca2d28684"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882030,
                    "digest": "sha256:88ecd1a9e0aa67e009dc11b696d0a2029c3bb506e5058e13434114e16ad7a290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51326330,
                    "digest": "sha256:114b7e56002fcad21b16ab9d3774a372824925547f59e9580bc61ec3cee41394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56591695,
                    "digest": "sha256:eba663ac4e1567abd178cbcb653944b168f5b132c1a687c67ef4041d7ed4030d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109776119,
                    "digest": "sha256:bdd2d6da28f595b2afb4ee904c478cb609c85a575b1eff704024deae6010aff2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b58ab25a60e71bb1ec5a69eb79afca0113926ce0e1a2785af4c374f8b3c6a3de"
                }
            ]
        },
        "1.12.16-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:54d5b47c91c8908039c7608bc5ae1d993d2da4a43e43ef0cf9ca0bc6742356c9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241584,
                    "digest": "sha256:fb54e9d54b34d992a5c6582a6fe3836692cce3589a408748090bbb916a4cc63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325358,
                    "digest": "sha256:03d13d85604945e95d31c38d488a822d8e0b84e7548a10db0c89115cca1887aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372596,
                    "digest": "sha256:596b324848b1286794120fbcb3c696328dd955db597ec3e70840b5dc97d794db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50499891,
                    "digest": "sha256:38645e5b0e6402c091627176f5aed8b9d434ccf323ecc4ca2c66f934acc1a11a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982845,
                    "digest": "sha256:555ca4faedcdf5a518aaa854f9752587efa9ed96a7b02a0c1b875b6e09086a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109776043,
                    "digest": "sha256:17e0a93fe6a68b0ecb86005b48a0cb051d72a2a6c1af56f31e2ab048ec5a012d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:76d35ac876fe7178a49eb8831bd6bcd2adfd0a3d03125c2e092cc7d7b371fe6f"
                }
            ]
        },
        "1.12.17-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:ab703201a06732a510bfae8434465dd50eb58f3763b8773a7678bfdf471d310e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124611697,
                    "digest": "sha256:c7691ea91210736b89002a60f8fc582c720c26d1ac201977431600918e76c04d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df96727db822d8011be3473ca532e1c5385998c780f7379c7066b297b9ff7203"
                }
            ]
        },
        "1.12.17-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:e93f2201faad6893789ee4e3e5c2a74f4552b33e03bdd1c363a9ee6ebaf0c340"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124614118,
                    "digest": "sha256:d130a9ac8d5f0fe4ddb6ad3681dd4d1c9c2fa34977c4160d4d65a64f07907446"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0bc3649952147a74af895a095cf88f723f06ef2188380e741d1a0ecb8bd277b9"
                }
            ]
        },
        "1.12.17-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:ab703201a06732a510bfae8434465dd50eb58f3763b8773a7678bfdf471d310e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124611697,
                    "digest": "sha256:c7691ea91210736b89002a60f8fc582c720c26d1ac201977431600918e76c04d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df96727db822d8011be3473ca532e1c5385998c780f7379c7066b297b9ff7203"
                }
            ]
        },
        "1.12.17-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:24b6a4b65d10827f19c4040297b13ce8fbfa0936021b5853024e83690f28d46b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954499,
                    "digest": "sha256:6f3b736b312bfd59fd7947524542ae1d57ed4564aefaafdf0ccfb7d600f7978f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381759,
                    "digest": "sha256:6eca02855c81b470d73964fc93a8a5e484c5ce5dd6782210cc15b8aca2d28684"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882030,
                    "digest": "sha256:88ecd1a9e0aa67e009dc11b696d0a2029c3bb506e5058e13434114e16ad7a290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51326330,
                    "digest": "sha256:114b7e56002fcad21b16ab9d3774a372824925547f59e9580bc61ec3cee41394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56591695,
                    "digest": "sha256:eba663ac4e1567abd178cbcb653944b168f5b132c1a687c67ef4041d7ed4030d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109775510,
                    "digest": "sha256:caedf537cfdfae491844540e311c7f54eca2103b50214065039b95034cba0b0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:3f1219a57b40ca9a0056a562ac88486a3761c4602d0742a33b751275fbb1a960"
                }
            ]
        },
        "1.12.17-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:8043a18b80b8b813edd5424ee27b203c58b16e3f55a0026ded501e96bd724907"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241584,
                    "digest": "sha256:fb54e9d54b34d992a5c6582a6fe3836692cce3589a408748090bbb916a4cc63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325358,
                    "digest": "sha256:03d13d85604945e95d31c38d488a822d8e0b84e7548a10db0c89115cca1887aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372596,
                    "digest": "sha256:596b324848b1286794120fbcb3c696328dd955db597ec3e70840b5dc97d794db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50499891,
                    "digest": "sha256:38645e5b0e6402c091627176f5aed8b9d434ccf323ecc4ca2c66f934acc1a11a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982845,
                    "digest": "sha256:555ca4faedcdf5a518aaa854f9752587efa9ed96a7b02a0c1b875b6e09086a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 109775516,
                    "digest": "sha256:5e54fb539ef4897decbff3efa2807c65ba0c30d2ce020d2e8b59272f241c83ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:98880fd730cba5cbe091719f9798d0bd8a31da472ab44c1667094e1a9664e650"
                }
            ]
        },
        "1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:cfc1f5fc0a58f720d9d46dd43bf9391fe5be6b4db9d3a54b7ab1e60b11ae814e",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:c56bc5785f4e2bd2da73bc6fbb578b222c44ab909080af73e50a694608e91d90"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126203246,
                    "digest": "sha256:67e1335d613dbbd1c6f3299b5149247c422222266bcbf28d2eef4b8dc312c6b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:78c6f39548d97acfe7ac25022577058ff5cf96c01577b490150aac093d4e3a53"
                }
            ]
        },
        "1.12.2-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:c56bc5785f4e2bd2da73bc6fbb578b222c44ab909080af73e50a694608e91d90"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541305,
                    "digest": "sha256:d981dc59d98dcf79c1920d433d8d56f9892f229da716de64280980f317a80ef1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302400,
                    "digest": "sha256:29c12d3dbd7380bfedcd015572c35c1dce283417c0c2b631ac99f2161b040271"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:c7ad92bf9a398037815abc4ee32c231115e14a1ae723edc9f817d06fd3937a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126203246,
                    "digest": "sha256:67e1335d613dbbd1c6f3299b5149247c422222266bcbf28d2eef4b8dc312c6b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:78c6f39548d97acfe7ac25022577058ff5cf96c01577b490150aac093d4e3a53"
                }
            ]
        },
        "1.12.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:fb86db4ab45bf2164dead0f36bc3b9c208544aa781e5225860843e6380de4f43"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110979013,
                    "digest": "sha256:f3d98d855172180eede50c0c2c3f04bdb9e1286b138a656fbf911fbe0cf31364"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:83047c67c7701bf627478c37fbed649a3359596f714b7a6a95438a5a1e5cfbaf"
                }
            ]
        },
        "1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:768b6defb51642df60324487a7d0d3de8e0b71bbbc96738e7db90a908d69c384",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:50242b81ca06e6f12cf5b5f772c23a11892fec63172c5eb77a67c71027ad3c64"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125771200,
                    "digest": "sha256:1b574e33f772cf8292e52be618bacd64bbb1272466c086a56ace4751cb1cb9a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:41cbf4ba2d072c369b790033d51fb6dea9952517d99bf8a953c210ddcf1eeb9c"
                }
            ]
        },
        "1.12.3-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:50242b81ca06e6f12cf5b5f772c23a11892fec63172c5eb77a67c71027ad3c64"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125771200,
                    "digest": "sha256:1b574e33f772cf8292e52be618bacd64bbb1272466c086a56ace4751cb1cb9a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:41cbf4ba2d072c369b790033d51fb6dea9952517d99bf8a953c210ddcf1eeb9c"
                }
            ]
        },
        "1.12.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:66be2c36746e4f4a795512a3d559ca0dfe359ae3edbf70b52bd708aab88fd159"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110979503,
                    "digest": "sha256:7b3672b4115bed4dde1b828fcd2a0cb40d1c20417038bfc81de6fb7c7a114561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:48be8e0b65cb3bebf1e32c052e84c188025d1bcfd286f397d9cfb31cccb714d1"
                }
            ]
        },
        "1.12.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:0f21e6a9f31bf2b0de6cd74bcdc98deaabd07818e01fd795fee953fef764c544",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:0b9afc70a2a1195473d26695e5c32d926014528876ef71a24f2a8669446f486e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125770550,
                    "digest": "sha256:ef1c48ac947ff4daaf5e6f72430ec8adc2822a49ef8cb1292befaa90b893216d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c8d5352095ec18b61039b9f8d1d21c0b83b745524c0958784d93d0c527f94d89"
                }
            ]
        },
        "1.12.4-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:0b9afc70a2a1195473d26695e5c32d926014528876ef71a24f2a8669446f486e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543326,
                    "digest": "sha256:5b51e37a522c2e7cd3c67e8a3e5500b45189ea6698e9fdaed7f5d48282326633"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302415,
                    "digest": "sha256:d49aa6253a2d0e3217c71a9c57dc7718d80f75ac929f92954e4d2382814e9acd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:a53c77e30da45978119236891768fc32b0ed182ffe6816dc9aef638c4827bdec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125770550,
                    "digest": "sha256:ef1c48ac947ff4daaf5e6f72430ec8adc2822a49ef8cb1292befaa90b893216d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c8d5352095ec18b61039b9f8d1d21c0b83b745524c0958784d93d0c527f94d89"
                }
            ]
        },
        "1.12.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:51fcea20494a8bad4acfbdcf53dc1680438ac6e75f2f06c0b654cabaacbda851"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45199333,
                    "digest": "sha256:d2a11bbe31e5b32e46b5e6bae2c7bab6594a74680c9c80903b5790853e800a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314977,
                    "digest": "sha256:e6d50ce7d399845400d5a183933ebc5c6cb7095927c6fe7b71f3546b52c20916"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372243,
                    "digest": "sha256:0cb29f88d766eb640800085e76903c14e35253dd5d563451d0fc44981c807de0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489833,
                    "digest": "sha256:b1250363d323e44a672cd18e9371763e0dd3a088fcfd972364b5be924948e988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45927893,
                    "digest": "sha256:022b046b81aee0bb56655ff06895f8ef6e5ffd550bc989070c44b454dd456113"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110979582,
                    "digest": "sha256:1e523fcbbdc1268fc94ea6c15de92ec5f4b0f4feb191fe98aaef6f2dc5e9739c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:abc1240b72a296f696dd83cd336dbac6587859e783ec6bcc0cbc38fb1fba8988"
                }
            ]
        },
        "1.12.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a1f366990d2739b6b395edbc7c72384599ef2241f26f44248001d03a06ae6975",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:1be5919e9aa782e8b78f6dbcc758acd557350a80f4ee45fc2ab9df99980ad173"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125808564,
                    "digest": "sha256:227f1a728c52dceea799e998180e1b28970d81ec912195746a72f302a10d0e00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:dbf5574f688e874d4f149fb93e45921b49774ffdafcc99b659a80b6eef1ca315"
                }
            ]
        },
        "1.12.5-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:1be5919e9aa782e8b78f6dbcc758acd557350a80f4ee45fc2ab9df99980ad173"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125808564,
                    "digest": "sha256:227f1a728c52dceea799e998180e1b28970d81ec912195746a72f302a10d0e00"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:dbf5574f688e874d4f149fb93e45921b49774ffdafcc99b659a80b6eef1ca315"
                }
            ]
        },
        "1.12.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:92d78ab1fd63decd53a11968a9f6c63e77d9096467625e2dd6bcd8821381d7dc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45197640,
                    "digest": "sha256:34d3ef0e6f1ff3be371d86c57ace6652cfebba770c522ecb77770e635c66e696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314034,
                    "digest": "sha256:6fc063f1d64e7e2207325ea5d8e8bd20d7eeb5335ec9e2b74895aa6716554940"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372230,
                    "digest": "sha256:c889930bae60ac0b0b8285fdfa660853def739db23075cd2f465f40bc2cb7254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489321,
                    "digest": "sha256:ee22fc8117545ae9c114a231a110c430652fe3a26ca235784ec115eedc9f0418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45945462,
                    "digest": "sha256:75f69b55caf465fc323d6ee793215b1fe4400863a920c9bdf8df1c2e6fb09573"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111008230,
                    "digest": "sha256:3faa7d052673778b04e241bb1d00fb0e091aa480221e0f0718ef49057ee4bd9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:741f90e7ba2c35b793899e67a3080b88ef586ee99ac72668023ce6d895e8a224"
                }
            ]
        },
        "1.12.6": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:a35fc50dbc1a8aee28c589049ca9d92078b256431ee2a5cfd37c6a09cfaa69c6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:6f01277fb91489b658f3514a5020ced4a17d1d3b5ad17e179c17f13a32c9cf9b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570285,
                    "digest": "sha256:6d7f83980907ca45ebe6a825ca787438c1431aed60fe2145407c2fb808e5f141"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:7594204f2e120d922dcf033d0dd1e1b42bd277f7bdd457e7b57078aa31bc962f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b5cd8533fc156e93555eda809665faecd29e1be933adde81e7fa5e659528423c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125836574,
                    "digest": "sha256:d718894e30b4c9065bd46d8484f85de17cdb63de76fc91bc2263f13844b49a9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b19d385852e4dbd43163b36521c3cca7286c3726e2ef746988c88c61a2787b4f"
                }
            ]
        },
        "1.12.6-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:6f01277fb91489b658f3514a5020ced4a17d1d3b5ad17e179c17f13a32c9cf9b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570285,
                    "digest": "sha256:6d7f83980907ca45ebe6a825ca787438c1431aed60fe2145407c2fb808e5f141"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:7594204f2e120d922dcf033d0dd1e1b42bd277f7bdd457e7b57078aa31bc962f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:b5cd8533fc156e93555eda809665faecd29e1be933adde81e7fa5e659528423c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125836574,
                    "digest": "sha256:d718894e30b4c9065bd46d8484f85de17cdb63de76fc91bc2263f13844b49a9c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b19d385852e4dbd43163b36521c3cca7286c3726e2ef746988c88c61a2787b4f"
                }
            ]
        },
        "1.12.6-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:97108a83ad5bfa9369e8159bcf82b1a22fb854c0da32105f9d47fde093ae6e47"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125802270,
                    "digest": "sha256:55aa1b9a2a08eaa5b773b15bca8fddd7cc73397bf87d0ad98daabe227c5206a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:73b4bcfe7fe7f5cbd35318f26696874a44b6e048425626e8cecc6a551157dce2"
                }
            ]
        },
        "1.12.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:7d19aa6142c59f6251e170b58e85dffc506ddba4214c1c56451f5ba1f0a16e86"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45197640,
                    "digest": "sha256:34d3ef0e6f1ff3be371d86c57ace6652cfebba770c522ecb77770e635c66e696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10314034,
                    "digest": "sha256:6fc063f1d64e7e2207325ea5d8e8bd20d7eeb5335ec9e2b74895aa6716554940"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372230,
                    "digest": "sha256:c889930bae60ac0b0b8285fdfa660853def739db23075cd2f465f40bc2cb7254"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489321,
                    "digest": "sha256:ee22fc8117545ae9c114a231a110c430652fe3a26ca235784ec115eedc9f0418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45945462,
                    "digest": "sha256:75f69b55caf465fc323d6ee793215b1fe4400863a920c9bdf8df1c2e6fb09573"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111022766,
                    "digest": "sha256:4cc256be1cc6bf4f3aca7e19c5f58a5283ab278f0cfedf57decf806436b7f290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:2b0f2f747c752e876a8258f1269b3ab1c4601a5555e7e6609f02814c0e062493"
                }
            ]
        },
        "1.12.7": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:675499f4601a403cc46e010f73b9407a88db2349387d778e534855ea5d8451f9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:3df749221f9b3757ed194a0d0773060ff0b98787d1d594ee6bb977e80a5393aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570387,
                    "digest": "sha256:a5009044856cb7ec46c0bdccbfae22ed15a7024bee22609e76b16cbb9436ce8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:3e6fa38e67c72c10a20be33980aa973095c45ce3adf95dd77ba89ccad2c21198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b26790b26ce1adc2baac373f11f6e416b9332ed6d99704b8af12b23df3a5d70c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125853176,
                    "digest": "sha256:2d0ab7885cdd6d2ecd1e9998660a803771139e909ce3278951d70ca57f0a0c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:357d0bc9efbfd35815c8f5c2c65d2d054b9199437d985a88d4ff8c6a09428cb5"
                }
            ]
        },
        "1.12.7-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:3df749221f9b3757ed194a0d0773060ff0b98787d1d594ee6bb977e80a5393aa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570387,
                    "digest": "sha256:a5009044856cb7ec46c0bdccbfae22ed15a7024bee22609e76b16cbb9436ce8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:3e6fa38e67c72c10a20be33980aa973095c45ce3adf95dd77ba89ccad2c21198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b26790b26ce1adc2baac373f11f6e416b9332ed6d99704b8af12b23df3a5d70c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125853176,
                    "digest": "sha256:2d0ab7885cdd6d2ecd1e9998660a803771139e909ce3278951d70ca57f0a0c62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:357d0bc9efbfd35815c8f5c2c65d2d054b9199437d985a88d4ff8c6a09428cb5"
                }
            ]
        },
        "1.12.7-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:4be9d9a85c0bc417562818ffa460fdcfa84b431b4d84e987b7e695947c6d6451"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125802318,
                    "digest": "sha256:b469e32b596c39059c4d135eb4d4e63d8ae6e723b6f2635e382b00c4adb40100"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:02723ca33b1d696bdbd11e6cd2a55f8dba12c12f9d523c98b4e0ca0d5809223f"
                }
            ]
        },
        "1.12.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:dcf8bc9a5b8159afe1d20839c2ef2cff250dc46cb4f6061c5acf017955335d91"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48947441,
                    "digest": "sha256:e3a2433c89df0bf69d2687e058a4c495ebd50c504a301012371fda8d3cac87ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371699,
                    "digest": "sha256:e21b8b782fa7f98884b53e195c5bf43822e06814578f808db10a2577f34b9f0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865901,
                    "digest": "sha256:5e2245c70b77a0a604a336bb9edf069e57f9a114edb630442581a58c58148a9f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51300703,
                    "digest": "sha256:8a5b01bbf8ffbda2ddaa20a334b186b52f9acd92c033790fc6d0283905de5c13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56541478,
                    "digest": "sha256:020679acc96209cf2475f0caf7b3f4e036625ad658e8be12f0a7d14e4bcf8e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111037311,
                    "digest": "sha256:fbc4f6649652baabbca0044f4c4b47ac714f37f2ddac5f6f10682f22c37ec169"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:9a2b472438cb150803d73bd8a63af5199efaf3d27a3e8574744bb6d1b14dae49"
                }
            ]
        },
        "1.12.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:30c6f13fbf23b5e3b2013c4141312336622525a9b6290552b289b212b79d69a5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45197726,
                    "digest": "sha256:1aaf237b25582154b89c032f41c4998d95451797d962f1dc7d3850bca1073d4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317354,
                    "digest": "sha256:3282e31ba66b045dcbf7d43950ffced7dbaee019c53f78a909e10c8be3b35d09"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372376,
                    "digest": "sha256:a4f691835a34df109456e49cace17444716f5ba69aa30090b90c9a7178941c15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489735,
                    "digest": "sha256:5fbf4b6d8ad276dc83d45f67e75b658a6768b3be629bce3ec4b3ec0340218884"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45946448,
                    "digest": "sha256:d797f7f5760662040106b879b4ff79e1a7cfc8cc3d351284a6997f477b161060"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111037309,
                    "digest": "sha256:7a8eb834c14677a41e8b336c1444fb5fb6c9be9e60110bd244d53c27edeed873"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:5213305c93a07315d229ac7bb6d2c671c90d0bf9694a3f17ddda12623d807329"
                }
            ]
        },
        "1.12.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3880fa43963724946340132f589fd4f0e9537be4f0b759f13fda840ae68facb8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:349142f7f80b16cf463da93368cb8dc673b4d93eaa3ca214d84d6b7cfc0bdf1b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570387,
                    "digest": "sha256:a5009044856cb7ec46c0bdccbfae22ed15a7024bee22609e76b16cbb9436ce8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:3e6fa38e67c72c10a20be33980aa973095c45ce3adf95dd77ba89ccad2c21198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b26790b26ce1adc2baac373f11f6e416b9332ed6d99704b8af12b23df3a5d70c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126242120,
                    "digest": "sha256:94bcb5a3553bf86b933bc3010a908a07dab7a5686c51ae0c00410f08adb7b6a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a33921621e7fd8d08f6856c13a5bb4c07ce76fcb1df9e9bf423ee0a7248849a7"
                }
            ]
        },
        "1.12.8-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:349142f7f80b16cf463da93368cb8dc673b4d93eaa3ca214d84d6b7cfc0bdf1b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570387,
                    "digest": "sha256:a5009044856cb7ec46c0bdccbfae22ed15a7024bee22609e76b16cbb9436ce8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302356,
                    "digest": "sha256:3e6fa38e67c72c10a20be33980aa973095c45ce3adf95dd77ba89ccad2c21198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:b26790b26ce1adc2baac373f11f6e416b9332ed6d99704b8af12b23df3a5d70c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126242120,
                    "digest": "sha256:94bcb5a3553bf86b933bc3010a908a07dab7a5686c51ae0c00410f08adb7b6a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a33921621e7fd8d08f6856c13a5bb4c07ce76fcb1df9e9bf423ee0a7248849a7"
                }
            ]
        },
        "1.12.8-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3803,
                "digest": "sha256:e1ee504ac1fe86b66ba9aa9997da3644b4782eb4a0fdb0bd39630760643e3aa4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126240812,
                    "digest": "sha256:9f6e81ad2a5143a039fcf7d44f393da4fe1c73894e1688f2e3b8f63e72795ac1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:02778a1582d224be5e7320ddcace3ad5f72d96b0b321692a432f987337f339ef"
                }
            ]
        },
        "1.12.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:54f84e264905de0cc62eb868ed6103c4f4bc5fc91be4875924500110037b739a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111031454,
                    "digest": "sha256:ba0d64933eff3848ab66007b53fcd9460375f3c50e8ec58063bbfba8d7e82964"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0764cf869035d35b13ccc447afa239eda40c120827f9d3cef99a2dd08cf9d5a6"
                }
            ]
        },
        "1.12.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:87e331a9279d2ec1575a42026240f3fb11e47037e9168ad9510d07adafa5bf45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45245026,
                    "digest": "sha256:05b3194a550b956249959e2f64475745fcf943ed7951306c6e3e6a5cd1815dd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317828,
                    "digest": "sha256:5cc01dcd9b0a29ac6daec9b7b4af78f948ee1945fb22e5e8f97993705d589311"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372320,
                    "digest": "sha256:5154470af4c84ea4b0ebc80e0cda7c479ef829d3ec3ece20e7b183bc8ded7563"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489789,
                    "digest": "sha256:cd3b67ff4ea99e03083897f42be8f62c9ef0cd1e1a0603a4c3e627eae76a020d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45947695,
                    "digest": "sha256:81cc889ba28fe8151a735b5521492ab995f1f0bb99ccdd6e121da86bb0dcbf38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111031512,
                    "digest": "sha256:c8a80ec91ff1e50ee821139b62289f6a31db1c6f82433472236001162899f2e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:bbaf7f224ceb9e118cbf61602315951e7ca85c09eefe9dd7e28761304c6045e6"
                }
            ]
        },
        "1.12.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:21baeaa3ccfa04f9cfb106e0f4fb597d4a3d4a2f6e13e1f148cc6e966b07c48e",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:ec65c3ffff578aefb8ec3d2e0f0ad970a3d5e16935bb3ee966fe5b916156657b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125859483,
                    "digest": "sha256:d0d4af5bc635d64ce2016805cdec8b2c5955d070e9c6136bfd623368f2517238"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f0d2e240026135523d849dd66b58f270563420428bf8e4d45efeaf38d0f63ea8"
                }
            ]
        },
        "1.12.9-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:ec65c3ffff578aefb8ec3d2e0f0ad970a3d5e16935bb3ee966fe5b916156657b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125859483,
                    "digest": "sha256:d0d4af5bc635d64ce2016805cdec8b2c5955d070e9c6136bfd623368f2517238"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f0d2e240026135523d849dd66b58f270563420428bf8e4d45efeaf38d0f63ea8"
                }
            ]
        },
        "1.12.9-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:9e5e36584aad2fdd067c39a700be56e8a81469482231f971f306a0c1b0f1b922"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2543331,
                    "digest": "sha256:bea4f04d8b33c5bd68ccb34849e615333c5ef00958b400841a03970dd2d5e9ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302397,
                    "digest": "sha256:86efcbb09c21b5959513cbba9acad2e705a0d6739bc8ed1eda85c2cbf7839a77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5022a6761590134550dbde37d10860fc7595717fd6eaad9823d2113128fa7930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126244460,
                    "digest": "sha256:091e4bcbf25ac26e422c56faba854fc670dd6cf0bf083272920a9c36f128c8b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:30dc679c48df87f6451f20eecfd6222052c857f372e59c9e350421b77633a6e4"
                }
            ]
        },
        "1.12.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:6b8eca3ce2c3722a1a2fc19c7aca0f2931e15a29ae405f935dd3c5158474a042"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48945696,
                    "digest": "sha256:bbeb860045589745394db09f27099b5f197ac3a58ed0ab8ee8981d2253118673"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7372084,
                    "digest": "sha256:1ea3f63256493f7f36d9155fbc5ed278f71f3e3104eafc0ebc5f675e7b7bbdb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880336,
                    "digest": "sha256:b5d716e76fd4a94b95123ef4fed208cb0eab65e4a6c9b96064c1629467f17128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51301841,
                    "digest": "sha256:9d1272a8acef68f1517b3f12d18f25cb5cb7b8bfc48e1c5eda67394c64681d66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588689,
                    "digest": "sha256:4197278760ba71cfe42450b14594285513c22fb778bbbc4b71bef5089ed4e5a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111032752,
                    "digest": "sha256:a586f7740858302b1f394f316f06e6495cd17156e92fe1c9d2df0598ab184613"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:23d19b3654cc2312e1dc0aa22449057c58ff94dd3a06c6dcf2b379fc672f486b"
                }
            ]
        },
        "1.12.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:3790327bbaceb7b7eb8cb538392c2cf9af0f7724f70989f8c8af4820ce51d26e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45240190,
                    "digest": "sha256:5d4da55d9cf0eafd201c3838c03984cc0ef153b12bbfd5964ffee9e9d6b38bbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317726,
                    "digest": "sha256:dad3041fe12244954218a4bd2bfdcb5ae29fd416b247bd17e41c73cbdf9b6de5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372276,
                    "digest": "sha256:f6542c8f56fbd52f8d9d01d92625e0a728578d6e417adeba2baa0678cc5009d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488527,
                    "digest": "sha256:25fa3a7ad4fa33ba9843e1e836bf619c36b0cc5a1ce2d9b3e1e1b932c6220148"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982766,
                    "digest": "sha256:471e0aba6530a2e404471271997feaffff9ff00b0327519ae59dbb19c9dc8762"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 111032778,
                    "digest": "sha256:a57c1f92afc552dc6b9228b1be470b70e2ae796967bebec35c20f547dac7f92a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:25fa99d24d1e900e4fa67754ae1a461c0f528383608dec646c5c019f33f1c777"
                }
            ]
        },
        "1.12beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:c7900e43ceab83999c39d172d0a6b1cad0381fff68ad640ab0d2174d8188de26",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4058,
                "digest": "sha256:4e7a66ada1fac7a06200b6ad103f8670a39bb7a1b130ccea0b90b2b189a32a27"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122632709,
                    "digest": "sha256:21503207d402707ad48a60baeac981df8aafa9b5ac14e8f528dc87cc4ed1e687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3acd541856954b9dda3e339a327e4bac42d39844cbbb6b90d6728cb666b02c7c"
                }
            ]
        },
        "1.12beta1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4058,
                "digest": "sha256:4e7a66ada1fac7a06200b6ad103f8670a39bb7a1b130ccea0b90b2b189a32a27"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 122632709,
                    "digest": "sha256:21503207d402707ad48a60baeac981df8aafa9b5ac14e8f528dc87cc4ed1e687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:3acd541856954b9dda3e339a327e4bac42d39844cbbb6b90d6728cb666b02c7c"
                }
            ]
        },
        "1.12beta1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5476,
                "digest": "sha256:0241e1437e2b21285f50b60faad47473d921c2b6ffa83815331b4681c4697f3a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45206162,
                    "digest": "sha256:c5e4ba148bd18e885706d64bd30df16338c81bebed6fd5ef73479d4ac92a7249"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312640,
                    "digest": "sha256:e4ab879437b7ffa94dbf20c17fff26c665632ba45fe169c1234acdfc98235ea4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371853,
                    "digest": "sha256:a26d08cd769086cf57f94597710a8e83155b78206b639c049f55a8c4c2896ce2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488007,
                    "digest": "sha256:05dfbcf77830b9f550dbf3b3cb64574c5b4efd23d0e4d5607d36922028f4c25a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895333,
                    "digest": "sha256:8c8a7e70110ea8fd4fa5ca5124a3aebded7d1059fb14fbdecdae18a0ac5cfda5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 108330156,
                    "digest": "sha256:d5d50c212caa6b4f188e842283ae79d6fd5c32a0dfaadb0dae85b7c347e0d018"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:92ca76db8aee7bd405a5f1e803afb70ee3963572bea5714a6a13dc9fec52a530"
                }
            ]
        },
        "1.12beta2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:5a23a93138dcaa78b0b93695f70f2635b807af4477f61fedce712d72c1e1159d",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12beta2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4058,
                "digest": "sha256:5457a215bf6c07846bc9243a686c0b94588b9874a0f438d61b784608e33452b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124528537,
                    "digest": "sha256:af72cf4050abba538ef4adec82f98a416fa681ac0e0d308efc1c9fc36cc0a87b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:93be0dbedf78ed126400c865e0a9f17b6fa3b8eca194d667cd197efd7fc55047"
                }
            ]
        },
        "1.12beta2-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4058,
                "digest": "sha256:480bea7528f65e1f955c45bde54fafd6f01eb45516abe57edac02cbf4ee7b700"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124618641,
                    "digest": "sha256:ee38f69af7d112db30c4e776e254e146413e0f1ea817d31a3d7a789ae7c95698"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:8c447bee7be90810167a77043f91a40e2e2dccfa642f9363a41df5ad2cdccf9f"
                }
            ]
        },
        "1.12beta2-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4058,
                "digest": "sha256:5457a215bf6c07846bc9243a686c0b94588b9874a0f438d61b784608e33452b6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124528537,
                    "digest": "sha256:af72cf4050abba538ef4adec82f98a416fa681ac0e0d308efc1c9fc36cc0a87b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:93be0dbedf78ed126400c865e0a9f17b6fa3b8eca194d667cd197efd7fc55047"
                }
            ]
        },
        "1.12beta2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5475,
                "digest": "sha256:52f57b20e44b87d4b0c3c4bf481501b622653eb1ad2309d6726fdc587d233563"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214898,
                    "digest": "sha256:e6786603fdb9e4ea361b73be3870f1118d3882c1619dfbbf9dec4d483fa32e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312678,
                    "digest": "sha256:cac487c4bc63f07da92ff3259ca4d0fb30f86c5647f775010d11e6d51131b848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371900,
                    "digest": "sha256:a3e9925f73763aaae5f9ccd2b0c87ae90efbee12ee8698074a1056e25c2e6360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487526,
                    "digest": "sha256:9cf6b44fbf659d16c99bbf57d1ee87ae0e6827f8aaa82012f87f1f031f655da5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895383,
                    "digest": "sha256:092388ef108b5a216c6b7dcb99493055f076783f5dc766fc30247724a4e404a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110088251,
                    "digest": "sha256:2f3f9acf00da1fd4540195297435e44761e5cbd3f4ca7b6a82cbac0f51dd9a0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:42687ff101f3e07ea9f8bfb550ea461e79d5eb643a8fb162550dfb69d6613ca2"
                }
            ]
        },
        "1.12rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1796,
                    "digest": "sha256:ef289a985308c710d6a3419caa2f4bcac3b552c0a4896338117b65e7e1dcba74",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.12rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4054,
                "digest": "sha256:e322b31bdfb6872dd91bb43c7227c85f73647ac6451abc7508e7f0a9825843ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124738732,
                    "digest": "sha256:efac4bd17408c37d03ca015d395d2a9be0edb4f306b3dd7d1b4a2e1e46e21f0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e192ebe5898c5c1daf3ff88c4a3d8acd23c44395b5940f3232f2995278691ea0"
                }
            ]
        },
        "1.12rc1-alpine3.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4053,
                "digest": "sha256:0951f3360535acffebe53c1af8a345ef8c3be974de11a5ba85d1a7d7089cd070"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2307849,
                    "digest": "sha256:15104e3bedebb091b5b7a84edf7fdd60a8c1564c514db2cd2280365c6545b489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:0b6c2e18bbe3b8455119e6724bd63ad7bf07637d1ea3be59615766903e0bfb9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 309575,
                    "digest": "sha256:872b697e31c148997866fca339e75cd06a25b09584a72d806382e929d1fcb650"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:299ba9bbbfaa6399c6c299d75aa651c286ec5c0824e8746eb78c9c8b0ffcbcdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124823944,
                    "digest": "sha256:2c9352d339bf97fe949097e8a0687bf3622912defd5b16029b7ffda931c966d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:a235ac37ab16193707f117efec3a8af3686d50677d940b3a9c1f4cd90cc991b9"
                }
            ]
        },
        "1.12rc1-alpine3.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4054,
                "digest": "sha256:e322b31bdfb6872dd91bb43c7227c85f73647ac6451abc7508e7f0a9825843ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2541348,
                    "digest": "sha256:11396e2e564eba3ffa05ba6ea52a711025650a7cfe1387d6a59fdd9a90f2e024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 175,
                    "digest": "sha256:e33c309129e1ab066f8f8e65929ab8246c5ae9ec293c9522c706fa70dfa0a4c6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302393,
                    "digest": "sha256:a8b318dd5391726da366dd4f5b400c596b9e6c313a0ac4725e2411daca25c81f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:46da44ee63ba4003229bedc359e6b75c56083b2069857461a3f3dc4421728ec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124738732,
                    "digest": "sha256:efac4bd17408c37d03ca015d395d2a9be0edb4f306b3dd7d1b4a2e1e46e21f0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:e192ebe5898c5c1daf3ff88c4a3d8acd23c44395b5940f3232f2995278691ea0"
                }
            ]
        },
        "1.12rc1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5469,
                "digest": "sha256:654e5f9ff0949cc7c608d2752310a7751e71c5d75b24ef4701aed5a9f1998aa7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45214898,
                    "digest": "sha256:e6786603fdb9e4ea361b73be3870f1118d3882c1619dfbbf9dec4d483fa32e76"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10312678,
                    "digest": "sha256:cac487c4bc63f07da92ff3259ca4d0fb30f86c5647f775010d11e6d51131b848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4371900,
                    "digest": "sha256:a3e9925f73763aaae5f9ccd2b0c87ae90efbee12ee8698074a1056e25c2e6360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50487526,
                    "digest": "sha256:9cf6b44fbf659d16c99bbf57d1ee87ae0e6827f8aaa82012f87f1f031f655da5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45895383,
                    "digest": "sha256:092388ef108b5a216c6b7dcb99493055f076783f5dc766fc30247724a4e404a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 110298063,
                    "digest": "sha256:6d8d2aa608400de72295831fbd67e7157520e4b285a5a656941199ca2223ad64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:054f3be4f1ffc9c0c4fce504fcde395b3f071d648391bc6e7041964839568e5c"
                }
            ]
        },
        "1.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:34df2acbe7473a9a58120e63c8a0547be2460d33f88557496252c423301f85f8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:f13f8ca7ce8f2b7641a9ba56e5c1710c526d49e54bd9cd8006cc5474738e43a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127342286,
                    "digest": "sha256:fb9a09b12605ebdc0ad836729713fb5950fccc11f1f9002b07dec89bc1fc458b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:29c45a50119250a3b4d2cc4150ba5a32cb9e262773dbb027bbf26209dc7121ef"
                }
            ]
        },
        "1.13-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:ce347fad3766ca7d883a6af8edccac3582704be98495302e2f12ce76b23598f7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2574478,
                    "digest": "sha256:ab92bebeb6027138cd65f1f6658fd3428e21c60c95bdc978e0c57bf0b2a53970"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301700,
                    "digest": "sha256:d25e393dafe8c06009c16c918824b92e0de33c122db8dcbba23cc7cbec1d9dfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:10eb9f2e57321665b13a0f46886766957f22ec8383659cff4f31a435b2bf55ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126935929,
                    "digest": "sha256:81df902ae51295f3a824a04682583018b1cc2e27a3046690273c0ce853442305"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:349772a6a262f04ea0725e70bcd27e70cc5541bab46481ed3f4fdcf21447f2a3"
                }
            ]
        },
        "1.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:3438f56a523e80353bb9810cff767209f8f1fbd77f14faa9ce135aeed3525aa2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126957913,
                    "digest": "sha256:9f9e7abe9cf4f346d0e0dbc5d79382d6da2e84fc4d11827285a5d1f17efa03a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b3c74e90d3ccdb0b7cd9619960257fe1881fcdd5aaba9aff24fe72a5c0715fbb"
                }
            ]
        },
        "1.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:f13f8ca7ce8f2b7641a9ba56e5c1710c526d49e54bd9cd8006cc5474738e43a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127342286,
                    "digest": "sha256:fb9a09b12605ebdc0ad836729713fb5950fccc11f1f9002b07dec89bc1fc458b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:29c45a50119250a3b4d2cc4150ba5a32cb9e262773dbb027bbf26209dc7121ef"
                }
            ]
        },
        "1.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6188,
                "digest": "sha256:2ccfa7a81d7b4297306fdd2a1fe1763c321c9273784674a28766b86687198484"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966275,
                    "digest": "sha256:f2b199a6d9adcfa5f879ec8042306ab2f919623f8018d0d7a6f4e9dade5e1a71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385167,
                    "digest": "sha256:5615f13ce6c82698ac5df02b39113e3a8949db1a7a7f7f5d07c9265ee15b79d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882139,
                    "digest": "sha256:23ffecb808bd421be3db88ff08f67b19f28c1ffe0d4c157be3fcff3360f527bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379924,
                    "digest": "sha256:44e2ce491a55134d5e4118405670fcc19b140898dc8ac62156e47a49f52e9f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56736713,
                    "digest": "sha256:e060fbdc544cffa8f72ebc5c629d0fd77e9f0ea787a2eec80f4a77dd0833d747"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102229020,
                    "digest": "sha256:734669989488b7bb28db72c8a5f22048aaaf403b6df9988ac684f96140996882"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6880a2f7a4f5b6c1639432d448e9b7a61fd7136c2f108028b8f6003769f66de0"
                }
            ]
        },
        "1.13-rc": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2d7ddfb4a624b7d24a24d385f11e7127fe324b9b423ad176e51f683e22786ddd",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:c3a70d7ad457d3f2fab7a5527a2212ec90c6d36449997bc299f0180eca4f9876"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126855726,
                    "digest": "sha256:9b1eddf7eafe1ae49d3fce30dfe34a8d5db522a11348b1ada59d4495fdf6319d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:75a2c424aab44db3fffea256c797e6a7749a01926c43a6060551c8d2d072b602"
                }
            ]
        },
        "1.13-rc-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:c3a70d7ad457d3f2fab7a5527a2212ec90c6d36449997bc299f0180eca4f9876"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126855726,
                    "digest": "sha256:9b1eddf7eafe1ae49d3fce30dfe34a8d5db522a11348b1ada59d4495fdf6319d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:75a2c424aab44db3fffea256c797e6a7749a01926c43a6060551c8d2d072b602"
                }
            ]
        },
        "1.13-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:1d7647533773fb44d0e41382fba390ea99b646c52ea400edc477b0fd85cf7569"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102141871,
                    "digest": "sha256:53f416ca32704cebd91daa6217c6d7cff2bccafb90651ccf070a39065552fbae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8513c461a6693ed84152aa9c97d56839a722f09d83c3bdda9b4e77e00c27c9d1"
                }
            ]
        },
        "1.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6199,
                "digest": "sha256:38f5b75de325c4a18a192a393a2a26dfe3efa7e96b0aada3410b5d442fca5678"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232505,
                    "digest": "sha256:cc8faf537ff83acc994f80bcea99d8e073aa05b5eb0dab5ce495510af0b6d1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10280522,
                    "digest": "sha256:9816eeae17f469b3b58481bdbae04cc1b7b69f8d8a6ef15f6972d91ba2f29ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372414,
                    "digest": "sha256:13a7344ca59dab92a8238f2df0ea3779840ec21afc295e24f39259558c3bfc05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50510977,
                    "digest": "sha256:e6a9332093631759dcfd58267f270de204b0c9388802581c972141e78700c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015355,
                    "digest": "sha256:61b6579864ff22fdeca13e4d49885f0f743c58aeee072fe66e53629745524eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102227829,
                    "digest": "sha256:51ed48854217825b678d5fdd79d023056fad8bf8c58e8a1f1ebc7283ada39dcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:f07cba84ad77cb418ecd330da730c285685555032c6ca749b03f882cbd9809f2"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:574ae1dfc209f6287dfe56781b38c5de05f51ed1f4933e1c82d852cc541691b8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3799,
                "digest": "sha256:bae9378430aa7f6423fe5907071acf6872414b34e69c14636752ca5d4b71afb4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126857523,
                    "digest": "sha256:3152a3ba36fa7e6df9e3172e0e6a223193dd6117d0b7a7ba9a7339060f0330d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:59c762af8726149dee8d42a62cf4f7756188cd3946d93e2badef891e7b2b9a9f"
                }
            ]
        },
        "1.13.0-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3799,
                "digest": "sha256:bae9378430aa7f6423fe5907071acf6872414b34e69c14636752ca5d4b71afb4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126857523,
                    "digest": "sha256:3152a3ba36fa7e6df9e3172e0e6a223193dd6117d0b7a7ba9a7339060f0330d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:59c762af8726149dee8d42a62cf4f7756188cd3946d93e2badef891e7b2b9a9f"
                }
            ]
        },
        "1.13.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:2c9e73d12c01097bf23c7c40456d74cbeea4439652e86de8d661f68837199105"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48945696,
                    "digest": "sha256:bbeb860045589745394db09f27099b5f197ac3a58ed0ab8ee8981d2253118673"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7372084,
                    "digest": "sha256:1ea3f63256493f7f36d9155fbc5ed278f71f3e3104eafc0ebc5f675e7b7bbdb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880336,
                    "digest": "sha256:b5d716e76fd4a94b95123ef4fed208cb0eab65e4a6c9b96064c1629467f17128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51301841,
                    "digest": "sha256:9d1272a8acef68f1517b3f12d18f25cb5cb7b8bfc48e1c5eda67394c64681d66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588689,
                    "digest": "sha256:4197278760ba71cfe42450b14594285513c22fb778bbbc4b71bef5089ed4e5a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102143221,
                    "digest": "sha256:8e87c41567192eac8599ec5f8371880c6ac262c1882cb4f66c39ec55db9a3a91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:56da1e6b5434568e961d59d6dd4693df590aaf7ddc90d76494a16e1b81af59d5"
                }
            ]
        },
        "1.13.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:cbb48e1a16c3befab988e35dbbd093be2db711a91de9e01f9a1c563b6dbf9578"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45240190,
                    "digest": "sha256:5d4da55d9cf0eafd201c3838c03984cc0ef153b12bbfd5964ffee9e9d6b38bbb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10317726,
                    "digest": "sha256:dad3041fe12244954218a4bd2bfdcb5ae29fd416b247bd17e41c73cbdf9b6de5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372276,
                    "digest": "sha256:f6542c8f56fbd52f8d9d01d92625e0a728578d6e417adeba2baa0678cc5009d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488527,
                    "digest": "sha256:25fa3a7ad4fa33ba9843e1e836bf619c36b0cc5a1ce2d9b3e1e1b932c6220148"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982766,
                    "digest": "sha256:471e0aba6530a2e404471271997feaffff9ff00b0327519ae59dbb19c9dc8762"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102143233,
                    "digest": "sha256:476334eea7f55cdc7463419cdf411bc536c9e8333ceea9a0006f220c9b7a3790"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0d1b6b7590cf7699f0d04e95fb2a0819cd430a7db821479078b1e3d691456ed8"
                }
            ]
        },
        "1.13.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:6c6881c0aa93103377d3cf2294ef55c0fa29983c44945cbf1e71f99c475a7a18",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:d52df8aba5fdc06bd245d84d0e378c2bcc24417beb036d1565a716079902bd40"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126853077,
                    "digest": "sha256:103bee49638f033a8ee5e7bd4d895ba5d8e26d22d812453dcc22cb3240074076"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:8a31f93b68008c743de6db0b7c8a750c0405c3b69f7f9fddcafe1da168d00b4c"
                }
            ]
        },
        "1.13.1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3804,
                "digest": "sha256:d52df8aba5fdc06bd245d84d0e378c2bcc24417beb036d1565a716079902bd40"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126853077,
                    "digest": "sha256:103bee49638f033a8ee5e7bd4d895ba5d8e26d22d812453dcc22cb3240074076"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:8a31f93b68008c743de6db0b7c8a750c0405c3b69f7f9fddcafe1da168d00b4c"
                }
            ]
        },
        "1.13.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:9fe170ed3c8e9b243bb11322d993e8e6f60ecf04cd182582cc50c4ea7193b25e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48949946,
                    "digest": "sha256:aeaeeb43f723e2d6411dd54deca73da275af05abcbeaa06facfece152b7cc9f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380461,
                    "digest": "sha256:f716f569a549b2e83daadf9702956ea8c3147d4d0fd2a4c5c8f80b2fd26b7467"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880236,
                    "digest": "sha256:98ba6bcac41c3d29b1d4b7b541a18d8699f01e9cbcf2c25cf50da8d04e1fa1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302006,
                    "digest": "sha256:2d4f7797130be3fe685ad8e78ca714ccdcb83c6b93fb3edb74ac9c64b20f9325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588695,
                    "digest": "sha256:947785ae2d2a04c9d5a8b8735e36e89b60adebfc697ff3b9f2b058cda51dbce0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102143568,
                    "digest": "sha256:8aaf01e9d5db554e436d458d9b1e80f4e1acf3ec9efb33b73eb5502bf37251c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:b772cb633787ee3fd4eaf1f1087f5a56880d0d3b5d18fc63643d0767a58b7902"
                }
            ]
        },
        "1.13.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:92c4cbd0e6c410cfce9eafa81b4337032ad0ad04350d03b12cefb0e94bfe0b3a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241669,
                    "digest": "sha256:ade01ea651a2867944fa9d927cb4cef29871fcfa07620b0963a95848fba8a7b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323827,
                    "digest": "sha256:fbabdb69f63940e074f11d0342ae36dd2601d0d41bcbd963e444655dc459ab58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372295,
                    "digest": "sha256:ff33bd1013d7c7aaa76ef24bc3dd85e5ca91407dd0bc24f3d82033083e775a51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488592,
                    "digest": "sha256:85cfe9d77eff494dfd24e27fe7f48a1b0f7611605869a45f52c46d0bf6537d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982799,
                    "digest": "sha256:ace5139f9caaba7bc41b8382327086c4813ef02e6a00b2bc4c7603b530265b13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102143556,
                    "digest": "sha256:38741db92cf3152db23359fab0c107d5a5f5fd2e2c73095cf5bc2db1cc305543"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1ab0017398f3766e36aad26b46ec31f5b08c2016afda03dabc775e8be741a158"
                }
            ]
        },
        "1.13.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:8f34d3e8618bd766915c5ad45078599d5259afc897164f48ad80c27aafd7da16",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:4ee020ddcbb15147792253a0ac9d7515035707128010a53d0e4257213f6c83c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126936511,
                    "digest": "sha256:8aa85b1ff409a6497aaeab995854c0bb76e5f29039e8088b12c455a2cc58faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:11b4a6eff5d3890ebbf38cb9dfaf947955e8acca444541d2cd7d9c20b37b263b"
                }
            ]
        },
        "1.13.10-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:143ce200b46f62b631dee4addb66b4cbd832b1b7af86a71323d13259c472c297"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2574478,
                    "digest": "sha256:ab92bebeb6027138cd65f1f6658fd3428e21c60c95bdc978e0c57bf0b2a53970"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301700,
                    "digest": "sha256:d25e393dafe8c06009c16c918824b92e0de33c122db8dcbba23cc7cbec1d9dfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:10eb9f2e57321665b13a0f46886766957f22ec8383659cff4f31a435b2bf55ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126937597,
                    "digest": "sha256:55e5874d0df8a35d4ef783be06ae124ee2f093a8e3d575f38ff9beb7fe79c263"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b0f6a4acb3cf1d6f3c5ab952ee16d2ccad4d0f0019f5e416b00fccad9915e8ca"
                }
            ]
        },
        "1.13.10-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:4ee020ddcbb15147792253a0ac9d7515035707128010a53d0e4257213f6c83c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126936511,
                    "digest": "sha256:8aa85b1ff409a6497aaeab995854c0bb76e5f29039e8088b12c455a2cc58faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:11b4a6eff5d3890ebbf38cb9dfaf947955e8acca444541d2cd7d9c20b37b263b"
                }
            ]
        },
        "1.13.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5459,
                "digest": "sha256:cfa4ceeaedbb095f079230ce1f9a0e83c78669ddf19e07c96947933f440d8a09"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966486,
                    "digest": "sha256:070f0b30acfe8cf53f3aeaae5982c911acd4c4a652a456c849a94c66117d4067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7382266,
                    "digest": "sha256:5db7092766f19f5c47b8a2388225b82a8d95d39c4e0ae321805e2a5cf0c8b961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882148,
                    "digest": "sha256:643084632f50b88b1aea5263e63d7dff9175610fe2041ce83dcdbb3d926246d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51368440,
                    "digest": "sha256:4118b891b350fa9ce5f64fd71fe7161ade2a6f32705dbd623b014ff5198f96b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56714615,
                    "digest": "sha256:4053b3b15437fc70a4c2b72bf1c10fb32c4247d5561a3244b44b3d00185befe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102232970,
                    "digest": "sha256:4cabbde6e7cbb2c994b1a0538e46a7b898bac0f9a732c2b7a31908be92b54f31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:7504d0a28c97997775c7509ec6172dd0179d4c8023c0f2577e0674ccbb37bea0"
                }
            ]
        },
        "1.13.10-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5462,
                "digest": "sha256:b19836112e1f045f8eda9483321083a92efded170cd5e43c3c9230f9228f9b82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232081,
                    "digest": "sha256:dc69489da20ae5bdf6cefc772e7ff8420ffbd2c920a57165de6ead66d1a997e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325875,
                    "digest": "sha256:e8fe5c3a82fe7eb310483d893dd90a653f2b29688e70bb3a0000e8c208de755b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372587,
                    "digest": "sha256:4757a1c09293f132a58fe2f774191e2545fd945ba597ec8d9a399751180aeeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50511235,
                    "digest": "sha256:5ba95febc21c79324c26de8b0b5fd907b89a7799fd541030a61348f0fd2caf6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015657,
                    "digest": "sha256:ee9ea9a105379dcd08f8411ba786e6bd96d5230823b7a860a5953f6adbc335d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102233039,
                    "digest": "sha256:03772c20b19045ed91daed3e37b955bc38f8a272e8158194bdfb8cbd76167a7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a8c7e1b12c98a69f131a4ab112880122c3af83486414ef4886663e62aed743a9"
                }
            ]
        },
        "1.13.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:dd34d857f4b47bea526d37c5e2142dd9b645f7778d40a7f519776798a74e6999",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:9af70a5f4ad82a576208168f3a043209ccef39a22bc7222421e7bdcaf9685d8a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126925075,
                    "digest": "sha256:88df68b178a287718fab9aa147d432d127e116307b86dec7c51f3fc2704aabf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:417af19be6382d00d36afbad1d2148369f4b0d20fef3434a005d0dff42daada7"
                }
            ]
        },
        "1.13.11-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:ce347fad3766ca7d883a6af8edccac3582704be98495302e2f12ce76b23598f7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2574478,
                    "digest": "sha256:ab92bebeb6027138cd65f1f6658fd3428e21c60c95bdc978e0c57bf0b2a53970"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301700,
                    "digest": "sha256:d25e393dafe8c06009c16c918824b92e0de33c122db8dcbba23cc7cbec1d9dfd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:10eb9f2e57321665b13a0f46886766957f22ec8383659cff4f31a435b2bf55ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126935929,
                    "digest": "sha256:81df902ae51295f3a824a04682583018b1cc2e27a3046690273c0ce853442305"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:349772a6a262f04ea0725e70bcd27e70cc5541bab46481ed3f4fdcf21447f2a3"
                }
            ]
        },
        "1.13.11-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:9af70a5f4ad82a576208168f3a043209ccef39a22bc7222421e7bdcaf9685d8a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126925075,
                    "digest": "sha256:88df68b178a287718fab9aa147d432d127e116307b86dec7c51f3fc2704aabf9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:417af19be6382d00d36afbad1d2148369f4b0d20fef3434a005d0dff42daada7"
                }
            ]
        },
        "1.13.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:e208be443ad7c2ef855710207fa23de14639200929f6a47211088c209705ac95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966486,
                    "digest": "sha256:070f0b30acfe8cf53f3aeaae5982c911acd4c4a652a456c849a94c66117d4067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7382266,
                    "digest": "sha256:5db7092766f19f5c47b8a2388225b82a8d95d39c4e0ae321805e2a5cf0c8b961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882148,
                    "digest": "sha256:643084632f50b88b1aea5263e63d7dff9175610fe2041ce83dcdbb3d926246d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51368440,
                    "digest": "sha256:4118b891b350fa9ce5f64fd71fe7161ade2a6f32705dbd623b014ff5198f96b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56714615,
                    "digest": "sha256:4053b3b15437fc70a4c2b72bf1c10fb32c4247d5561a3244b44b3d00185befe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102241027,
                    "digest": "sha256:bb298450597cde1f0ffea0daecf01c64a12a767a830bbd0c8210856dc3774e2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1b4294c1b999280167a27f7dfc1337e26aad94ef4dc6b5e4fec4b73199f95efd"
                }
            ]
        },
        "1.13.11-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:169a422603d28eda4dc8f9ffcf108bc154c1346ca58b46dbbd5998e1e24e88f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232081,
                    "digest": "sha256:dc69489da20ae5bdf6cefc772e7ff8420ffbd2c920a57165de6ead66d1a997e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325875,
                    "digest": "sha256:e8fe5c3a82fe7eb310483d893dd90a653f2b29688e70bb3a0000e8c208de755b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372587,
                    "digest": "sha256:4757a1c09293f132a58fe2f774191e2545fd945ba597ec8d9a399751180aeeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50511235,
                    "digest": "sha256:5ba95febc21c79324c26de8b0b5fd907b89a7799fd541030a61348f0fd2caf6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015657,
                    "digest": "sha256:ee9ea9a105379dcd08f8411ba786e6bd96d5230823b7a860a5953f6adbc335d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102240974,
                    "digest": "sha256:24dc13ad5f118992ada862600fdfec205c013f7751d61350773e2af80b59979a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:a0517cf45d2d6864b49f808ccf8c5c7350d580cbd00dd4d63cd6f70cb6925599"
                }
            ]
        },
        "1.13.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5380bd68a1456dd1b96dc08789297c6883144a9200b0c7f90a0aaae250336efa",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:2f10f8ad9ebd731cd762e06f290765d32c0a4da2a6731ecd72b2669f24bd8a59"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126953613,
                    "digest": "sha256:42b068b25c3c58871d8faa1279322d99e1a77135d661e9c189b1c645b5546f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:e89ddb7df67886915463c83e7a45fa4ef6bd6d286eb6c30d145e4c67b3ec3e3d"
                }
            ]
        },
        "1.13.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:e1c7cb8830c07998c6600df08f728fb4ec97e73d24c8fa052ea2d4dd3c10c5ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126952969,
                    "digest": "sha256:ad81d040dc99e99c8c5ebdf1310e3b440bfedc01dff4e0e5e074b3a5f2d24838"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0093345ded8e355439338aebffae44b891ec0d8e59f5a632a481ce51cf8fda11"
                }
            ]
        },
        "1.13.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:2f10f8ad9ebd731cd762e06f290765d32c0a4da2a6731ecd72b2669f24bd8a59"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126953613,
                    "digest": "sha256:42b068b25c3c58871d8faa1279322d99e1a77135d661e9c189b1c645b5546f7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:e89ddb7df67886915463c83e7a45fa4ef6bd6d286eb6c30d145e4c67b3ec3e3d"
                }
            ]
        },
        "1.13.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6191,
                "digest": "sha256:a061b2a33949407b25d5c8c76e5c35ae4b614319ebf510c9c19699a75eeee690"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48965925,
                    "digest": "sha256:76dae9e9a8f2b69403c29a068363410a0b491d889452a410e1a846db24918418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385198,
                    "digest": "sha256:2ea4ddfd9cac861440dd774171c0df5d003bcf031cc856603f0dcc1a569a7614"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882055,
                    "digest": "sha256:7b4340e9fce6caba0ffebdee007c25f4ed849de61e56dcee1ed7e081edbcf1e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51366573,
                    "digest": "sha256:89446217dee5ed85681993c919acbdf28494151380677fdefa88b6b5e481573c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56714696,
                    "digest": "sha256:17d6d711085f1e16cb55dd6d39b0fa3cfe5a898d10c02f3fbb3a0c22180f588c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102230255,
                    "digest": "sha256:b68265d3859ccbe45d8cc76d2cffed4b71be942aa99b2e229db12555a03da1fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b37d4e108c2b0a658b7cb4feb567715e9c8be44961d075da2323ab6a2ebff2ab"
                }
            ]
        },
        "1.13.12-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6199,
                "digest": "sha256:ad98f368cbe28c95e19c0e0cbe813719f2becfb2a8ab27039087659ec8149c37"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232505,
                    "digest": "sha256:cc8faf537ff83acc994f80bcea99d8e073aa05b5eb0dab5ce495510af0b6d1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10280522,
                    "digest": "sha256:9816eeae17f469b3b58481bdbae04cc1b7b69f8d8a6ef15f6972d91ba2f29ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372414,
                    "digest": "sha256:13a7344ca59dab92a8238f2df0ea3779840ec21afc295e24f39259558c3bfc05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50510977,
                    "digest": "sha256:e6a9332093631759dcfd58267f270de204b0c9388802581c972141e78700c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015355,
                    "digest": "sha256:61b6579864ff22fdeca13e4d49885f0f743c58aeee072fe66e53629745524eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102230318,
                    "digest": "sha256:fcfe81d42358813faeca8c6dd8a6d8245d7e2f6702f70ac38c5782786edb4f9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:8aa430cee9cfc8fa6489afbeb02e4d23f8efb6174f8fde33e26420e719113612"
                }
            ]
        },
        "1.13.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:f2e2475541d1456041170b93db0358734e6b1e166d8da186f7f8f02bc219f804",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:32816c5ccfa28e514fcfb41c7f0068bd1f822f683f0650c14ad2c392c5169f55"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127359357,
                    "digest": "sha256:284e63e478bf505626338feca848c7dc6d97631ccf51272f79608792f852a8e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:24b42664651f6e08c304c6a71f1992594c6358e2c46e4ef8b5d816b517b21d45"
                }
            ]
        },
        "1.13.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:23d002935c693d969bd376894cbdbcb97a77f860e5194f87a72443d96895c950"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126969252,
                    "digest": "sha256:891b14c65401731ea7bfdd83850be9bc8947200d2179e7dfd1f5596352eefc24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:3bf2c7f3d4ffdacace4d0abb7388538d966aa9ebbeb54b2a669000e21be63b0a"
                }
            ]
        },
        "1.13.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:32816c5ccfa28e514fcfb41c7f0068bd1f822f683f0650c14ad2c392c5169f55"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127359357,
                    "digest": "sha256:284e63e478bf505626338feca848c7dc6d97631ccf51272f79608792f852a8e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:24b42664651f6e08c304c6a71f1992594c6358e2c46e4ef8b5d816b517b21d45"
                }
            ]
        },
        "1.13.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6191,
                "digest": "sha256:7484084d2be4a96bad6a99b0510fe870cca3f00f75ecb83e5e05175e34bf4819"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48965925,
                    "digest": "sha256:76dae9e9a8f2b69403c29a068363410a0b491d889452a410e1a846db24918418"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385198,
                    "digest": "sha256:2ea4ddfd9cac861440dd774171c0df5d003bcf031cc856603f0dcc1a569a7614"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882055,
                    "digest": "sha256:7b4340e9fce6caba0ffebdee007c25f4ed849de61e56dcee1ed7e081edbcf1e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51366573,
                    "digest": "sha256:89446217dee5ed85681993c919acbdf28494151380677fdefa88b6b5e481573c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56714696,
                    "digest": "sha256:17d6d711085f1e16cb55dd6d39b0fa3cfe5a898d10c02f3fbb3a0c22180f588c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102250833,
                    "digest": "sha256:57bf95573d9450584c288b568d191f84151e00c10aaebc5a2dd31671140ffad0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:74dc15675f7444f28542e9a134d731f434f08fd6b54513847418ad7f9673661d"
                }
            ]
        },
        "1.13.13-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6198,
                "digest": "sha256:74f6eb9a5a2e5dbce239dca7fc54e93d80ebe53c00793793a233086cad6bd0f3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232505,
                    "digest": "sha256:cc8faf537ff83acc994f80bcea99d8e073aa05b5eb0dab5ce495510af0b6d1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10280522,
                    "digest": "sha256:9816eeae17f469b3b58481bdbae04cc1b7b69f8d8a6ef15f6972d91ba2f29ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372414,
                    "digest": "sha256:13a7344ca59dab92a8238f2df0ea3779840ec21afc295e24f39259558c3bfc05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50510977,
                    "digest": "sha256:e6a9332093631759dcfd58267f270de204b0c9388802581c972141e78700c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015355,
                    "digest": "sha256:61b6579864ff22fdeca13e4d49885f0f743c58aeee072fe66e53629745524eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102250806,
                    "digest": "sha256:939d51f2846d60a626b14e9221cc441f12e2b43c66474dbf895759ad2fc59f93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:2e59060c74fc1b80bbc9a95dc74b3bde6f589527cf2c7d5452a10f6b222c7ad6"
                }
            ]
        },
        "1.13.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:d2a4bc25ce2a6a1f4ba156c384f6651a22a1bb3c09858f16eee8082d74f215dd",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:e58e4fd02770e84fee40e773b1d29f0ffd1adfa6367f82f34122fe8c9a561918"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127349433,
                    "digest": "sha256:56998e89f534882c791c6864d29ad708e7f4de722490d95e1ffce44d22f8fb8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:72c59ae55efdfcf7a9a70ddd270e0a85c29f5fcc706853b500647b1d4ae9733c"
                }
            ]
        },
        "1.13.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:734aeef80b5198220b42fa0ae4b44005c23c24e348be17781ebfa71a57584cd4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126968212,
                    "digest": "sha256:47f4b1203304b1d3095b95bf00704ef28df02ca7f24e2e9512a5f81a060648b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e5ac6d34f226e4107c2c9179b0e5f514074f48e997a5b54a69abe09687b50345"
                }
            ]
        },
        "1.13.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:e58e4fd02770e84fee40e773b1d29f0ffd1adfa6367f82f34122fe8c9a561918"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127349433,
                    "digest": "sha256:56998e89f534882c791c6864d29ad708e7f4de722490d95e1ffce44d22f8fb8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:72c59ae55efdfcf7a9a70ddd270e0a85c29f5fcc706853b500647b1d4ae9733c"
                }
            ]
        },
        "1.13.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6187,
                "digest": "sha256:2e42156bedac290657ae872b45e29b8341fc415b5ff0af67fca09c9df94f0d83"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966275,
                    "digest": "sha256:f2b199a6d9adcfa5f879ec8042306ab2f919623f8018d0d7a6f4e9dade5e1a71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385167,
                    "digest": "sha256:5615f13ce6c82698ac5df02b39113e3a8949db1a7a7f7f5d07c9265ee15b79d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882139,
                    "digest": "sha256:23ffecb808bd421be3db88ff08f67b19f28c1ffe0d4c157be3fcff3360f527bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379924,
                    "digest": "sha256:44e2ce491a55134d5e4118405670fcc19b140898dc8ac62156e47a49f52e9f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56736713,
                    "digest": "sha256:e060fbdc544cffa8f72ebc5c629d0fd77e9f0ea787a2eec80f4a77dd0833d747"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102227760,
                    "digest": "sha256:09f99ac0cf142d9cb750eba1fb080fd48181804e1bc73b794597416b0e4bc708"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:0d74b729ef8e0049961bd7bc6dcb79403c8947a3bb25529905d8868e1652c244"
                }
            ]
        },
        "1.13.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6199,
                "digest": "sha256:38f5b75de325c4a18a192a393a2a26dfe3efa7e96b0aada3410b5d442fca5678"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232505,
                    "digest": "sha256:cc8faf537ff83acc994f80bcea99d8e073aa05b5eb0dab5ce495510af0b6d1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10280522,
                    "digest": "sha256:9816eeae17f469b3b58481bdbae04cc1b7b69f8d8a6ef15f6972d91ba2f29ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372414,
                    "digest": "sha256:13a7344ca59dab92a8238f2df0ea3779840ec21afc295e24f39259558c3bfc05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50510977,
                    "digest": "sha256:e6a9332093631759dcfd58267f270de204b0c9388802581c972141e78700c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015355,
                    "digest": "sha256:61b6579864ff22fdeca13e4d49885f0f743c58aeee072fe66e53629745524eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102227829,
                    "digest": "sha256:51ed48854217825b678d5fdd79d023056fad8bf8c58e8a1f1ebc7283ada39dcf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:f07cba84ad77cb418ecd330da730c285685555032c6ca749b03f882cbd9809f2"
                }
            ]
        },
        "1.13.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:34df2acbe7473a9a58120e63c8a0547be2460d33f88557496252c423301f85f8",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:f13f8ca7ce8f2b7641a9ba56e5c1710c526d49e54bd9cd8006cc5474738e43a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127342286,
                    "digest": "sha256:fb9a09b12605ebdc0ad836729713fb5950fccc11f1f9002b07dec89bc1fc458b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:29c45a50119250a3b4d2cc4150ba5a32cb9e262773dbb027bbf26209dc7121ef"
                }
            ]
        },
        "1.13.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:3438f56a523e80353bb9810cff767209f8f1fbd77f14faa9ce135aeed3525aa2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126957913,
                    "digest": "sha256:9f9e7abe9cf4f346d0e0dbc5d79382d6da2e84fc4d11827285a5d1f17efa03a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:b3c74e90d3ccdb0b7cd9619960257fe1881fcdd5aaba9aff24fe72a5c0715fbb"
                }
            ]
        },
        "1.13.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:f13f8ca7ce8f2b7641a9ba56e5c1710c526d49e54bd9cd8006cc5474738e43a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127342286,
                    "digest": "sha256:fb9a09b12605ebdc0ad836729713fb5950fccc11f1f9002b07dec89bc1fc458b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:29c45a50119250a3b4d2cc4150ba5a32cb9e262773dbb027bbf26209dc7121ef"
                }
            ]
        },
        "1.13.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6188,
                "digest": "sha256:2ccfa7a81d7b4297306fdd2a1fe1763c321c9273784674a28766b86687198484"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966275,
                    "digest": "sha256:f2b199a6d9adcfa5f879ec8042306ab2f919623f8018d0d7a6f4e9dade5e1a71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385167,
                    "digest": "sha256:5615f13ce6c82698ac5df02b39113e3a8949db1a7a7f7f5d07c9265ee15b79d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882139,
                    "digest": "sha256:23ffecb808bd421be3db88ff08f67b19f28c1ffe0d4c157be3fcff3360f527bc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379924,
                    "digest": "sha256:44e2ce491a55134d5e4118405670fcc19b140898dc8ac62156e47a49f52e9f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56736713,
                    "digest": "sha256:e060fbdc544cffa8f72ebc5c629d0fd77e9f0ea787a2eec80f4a77dd0833d747"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102229020,
                    "digest": "sha256:734669989488b7bb28db72c8a5f22048aaaf403b6df9988ac684f96140996882"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6880a2f7a4f5b6c1639432d448e9b7a61fd7136c2f108028b8f6003769f66de0"
                }
            ]
        },
        "1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5c5acc820ad5ecae015894dc34a09f31f140a940bebf14976a39aef0f8b6eb8e",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:96d33789a1d41c43d362e0eef06815881c49635bcba4149a31864abe72808de5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126847617,
                    "digest": "sha256:0ffd046754cbcd044f834942728081332a4b9fb8777922cec6701f1d5cdcf4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:744e924bb5727200b865c20511df78cd6cf9ca609ad7ae17c96d37c0715ed584"
                }
            ]
        },
        "1.13.2-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3801,
                "digest": "sha256:96d33789a1d41c43d362e0eef06815881c49635bcba4149a31864abe72808de5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126847617,
                    "digest": "sha256:0ffd046754cbcd044f834942728081332a4b9fb8777922cec6701f1d5cdcf4ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:744e924bb5727200b865c20511df78cd6cf9ca609ad7ae17c96d37c0715ed584"
                }
            ]
        },
        "1.13.2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:d84feb40a36c06dae4e508149f2d70c101ab5be2bace1cf1cd5c97d7b9b87be4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48949946,
                    "digest": "sha256:aeaeeb43f723e2d6411dd54deca73da275af05abcbeaa06facfece152b7cc9f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380461,
                    "digest": "sha256:f716f569a549b2e83daadf9702956ea8c3147d4d0fd2a4c5c8f80b2fd26b7467"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880236,
                    "digest": "sha256:98ba6bcac41c3d29b1d4b7b541a18d8699f01e9cbcf2c25cf50da8d04e1fa1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302006,
                    "digest": "sha256:2d4f7797130be3fe685ad8e78ca714ccdcb83c6b93fb3edb74ac9c64b20f9325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588695,
                    "digest": "sha256:947785ae2d2a04c9d5a8b8735e36e89b60adebfc697ff3b9f2b058cda51dbce0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102130848,
                    "digest": "sha256:1b64199d3ad04f782bf6a7c561f167fbc68fd49abe7bbb3de7cc3966b956007a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:2af553baff8f9c7e06e3ea989f36411ad69e0d9c3c5922dc6144fbf08416f6cd"
                }
            ]
        },
        "1.13.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:8db3d29eb69bb2f8c1a63c50b1592836eddd5ba9bff380af37fec35763edd371"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241669,
                    "digest": "sha256:ade01ea651a2867944fa9d927cb4cef29871fcfa07620b0963a95848fba8a7b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323827,
                    "digest": "sha256:fbabdb69f63940e074f11d0342ae36dd2601d0d41bcbd963e444655dc459ab58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372295,
                    "digest": "sha256:ff33bd1013d7c7aaa76ef24bc3dd85e5ca91407dd0bc24f3d82033083e775a51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488592,
                    "digest": "sha256:85cfe9d77eff494dfd24e27fe7f48a1b0f7611605869a45f52c46d0bf6537d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982799,
                    "digest": "sha256:ace5139f9caaba7bc41b8382327086c4813ef02e6a00b2bc4c7603b530265b13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102130912,
                    "digest": "sha256:760bec2761b36d2312353f72b7ec6e3ddf869610babac92f237564f7ca20e0a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:1c4c471895e590726f6f66db91dcd3fb84fbfb7066a7bf74a44f8c1340f3429c"
                }
            ]
        },
        "1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:86122b5edf2b98e2829bcf5178e0109a41bb7f130030e6db82fb036ad06cd4f9",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:cfd51d9d2b3400eeaebefe85188158e39ec28d710a0a5ca2da571a00cd8fe97a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126846262,
                    "digest": "sha256:260c5fe3965d777cfeec21f49f25809f1da8bf4b782cf4715de852945f7b17b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fc50949cce29208a0be73d63d72e2a4127fac9571dc598c7cbf5ed62b4589ba7"
                }
            ]
        },
        "1.13.3-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3802,
                "digest": "sha256:cfd51d9d2b3400eeaebefe85188158e39ec28d710a0a5ca2da571a00cd8fe97a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126846262,
                    "digest": "sha256:260c5fe3965d777cfeec21f49f25809f1da8bf4b782cf4715de852945f7b17b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:fc50949cce29208a0be73d63d72e2a4127fac9571dc598c7cbf5ed62b4589ba7"
                }
            ]
        },
        "1.13.3-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5457,
                "digest": "sha256:5ef452e9448f5175800d344f92b3b3362cd0d605e3c5da760ec70e625683d335"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48949946,
                    "digest": "sha256:aeaeeb43f723e2d6411dd54deca73da275af05abcbeaa06facfece152b7cc9f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380461,
                    "digest": "sha256:f716f569a549b2e83daadf9702956ea8c3147d4d0fd2a4c5c8f80b2fd26b7467"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880236,
                    "digest": "sha256:98ba6bcac41c3d29b1d4b7b541a18d8699f01e9cbcf2c25cf50da8d04e1fa1d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302006,
                    "digest": "sha256:2d4f7797130be3fe685ad8e78ca714ccdcb83c6b93fb3edb74ac9c64b20f9325"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56588695,
                    "digest": "sha256:947785ae2d2a04c9d5a8b8735e36e89b60adebfc697ff3b9f2b058cda51dbce0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102168553,
                    "digest": "sha256:5bc6ddcb2f387c7c838339964633dcaac009984664ae58ecfe8605645f13087f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 127,
                    "digest": "sha256:6c346aaa22ed31c054a17d0916b18695871a52394758229f6ab3d78c3f195b41"
                }
            ]
        },
        "1.13.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5465,
                "digest": "sha256:bbf5c8daa22168e7060be2ef6f54320c724f5777583cfdc20e5ef2fa8caa7866"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241669,
                    "digest": "sha256:ade01ea651a2867944fa9d927cb4cef29871fcfa07620b0963a95848fba8a7b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323827,
                    "digest": "sha256:fbabdb69f63940e074f11d0342ae36dd2601d0d41bcbd963e444655dc459ab58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372295,
                    "digest": "sha256:ff33bd1013d7c7aaa76ef24bc3dd85e5ca91407dd0bc24f3d82033083e775a51"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50488592,
                    "digest": "sha256:85cfe9d77eff494dfd24e27fe7f48a1b0f7611605869a45f52c46d0bf6537d7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982799,
                    "digest": "sha256:ace5139f9caaba7bc41b8382327086c4813ef02e6a00b2bc4c7603b530265b13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102168586,
                    "digest": "sha256:dd1ca2300fbc4adc4755757fef7ba0d92e366b66ad6f06cfe4ef909982179bcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:17f5c5fd2aa0b00b65506c22d21aaff8b8c8437d1e02541b42c45b922235319e"
                }
            ]
        },
        "1.13.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:efe05333fe6513ea9417db22a633d7c62c4347f3fa28b56969a7d7a990e114aa",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:4a84ccaeaef50d76fdce1e0070cfac7d5095d3ce38c0ede7d546da5fb9c05a5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126847145,
                    "digest": "sha256:5bea90f7524993d8d9afa0980ce2a67a362e9aaf4ec89bd2c0d63c84588efa8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:69b64497ccf8559eb8958300ae12c0561a8589287219e5225ee7e6806b24902d"
                }
            ]
        },
        "1.13.4-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3805,
                "digest": "sha256:4a84ccaeaef50d76fdce1e0070cfac7d5095d3ce38c0ede7d546da5fb9c05a5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126847145,
                    "digest": "sha256:5bea90f7524993d8d9afa0980ce2a67a362e9aaf4ec89bd2c0d63c84588efa8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:69b64497ccf8559eb8958300ae12c0561a8589287219e5225ee7e6806b24902d"
                }
            ]
        },
        "1.13.4-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:403bd4de08f891b4921cf2257c0c367bd95f6ff5094ed5ceb6e5a310e893a8d0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954550,
                    "digest": "sha256:8fdf0c9621bb3a044b28b3bea9f60b87248b8648961de4622d4a93da641f4950"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380308,
                    "digest": "sha256:ec52e72b73f26a9f14f7ff349840b08041045d4e6594216d838e1257596d56ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880255,
                    "digest": "sha256:7c00a95b68a3c0dcde68488ea0c573ea5820e7b0326c2740d9eeb1fdc6a16984"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51320300,
                    "digest": "sha256:2cf76353462bec8e44bb5f54b6e7d087125c79ff62836b4d836919cdcd325e1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56590846,
                    "digest": "sha256:5ceaaaa19e853ee5cabf98457105da50bc44bd5520a1317137792a26d75d95ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102153352,
                    "digest": "sha256:ac586831573ef1abb3f289e8207a76cc388a5b3fd643d570a41b773c624a7e4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:08182f3ead161074bdb1835f02f432ef89cb4ec690c8ce37e8143daee261b11b"
                }
            ]
        },
        "1.13.4-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:a23a79e19b1437cff5613ddc00238e803a1a5e752d382dd8cb978ec5295a2bfb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241715,
                    "digest": "sha256:5c0a87668ad496cd2437dc595f8bbf2fff3dd4764f38a3b40a26fad39d8b5336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323709,
                    "digest": "sha256:42584671b3106f70e51753265104ef56231608828a9d6686bbce1b9d657e7ba5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372290,
                    "digest": "sha256:769217f6f555e0026d9206bd251391471d3ac4e845134b62b67697c7c377855d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50489325,
                    "digest": "sha256:5975152de57477bbc6bbd9c83361a582c481dcf26e5911ffc85399ec93855db5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982493,
                    "digest": "sha256:2bd8b51b0f3ac21fd973cb63f8b5b6f42d087c4d85a6f7fee92ad2957ff1f1d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102153417,
                    "digest": "sha256:94acdf8e8f0491c1efd3c887a6f6215dcc6600df67467fd29602a965a8412687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:4f69f87b87ecbf28e3d03b1f2bb635e0aaea54bc7d7bcf75d083ce2367beef32"
                }
            ]
        },
        "1.13.5-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:90ac80023b4ad9d14cc261d37566b637e8593aef21c7d6b60527f4d3d38b4432"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2579591,
                    "digest": "sha256:bca389ebb9be8103bf737251d68f962104771b2f9c1fff1f7ae0207458fa4c86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301806,
                    "digest": "sha256:d80c20330ef3f554370f7a9a7898748f3f8fd4f8078bc2c80901358c41411753"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f89c1cb6d496f7063b44e5552a2450206f007d82c0467e4ebffb4edb8d4311c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126848145,
                    "digest": "sha256:9b30bacf92ca4ef5d873a9054e1048a582b9da19acd562130faa3f37fca669ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0c0bc60ba2cc625de57547d80d6380487d154bd81aef10fec2837b8b3a4d4de2"
                }
            ]
        },
        "1.13.5-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:5d60c7ee00322a00cacab49246a57726e1b2a58b6ec8ad9aeeb2728dd52937ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126844618,
                    "digest": "sha256:52803371fe6f686caeee01f8430f242873659c52d23c389049133277bcfbfc40"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:f2b25b273c7bf6bc2d53762359e09484c2e06aa7399b58ce48e2f0a017513e57"
                }
            ]
        },
        "1.13.5-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3835,
                "digest": "sha256:90ac80023b4ad9d14cc261d37566b637e8593aef21c7d6b60527f4d3d38b4432"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2579591,
                    "digest": "sha256:bca389ebb9be8103bf737251d68f962104771b2f9c1fff1f7ae0207458fa4c86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301806,
                    "digest": "sha256:d80c20330ef3f554370f7a9a7898748f3f8fd4f8078bc2c80901358c41411753"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f89c1cb6d496f7063b44e5552a2450206f007d82c0467e4ebffb4edb8d4311c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126848145,
                    "digest": "sha256:9b30bacf92ca4ef5d873a9054e1048a582b9da19acd562130faa3f37fca669ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:0c0bc60ba2cc625de57547d80d6380487d154bd81aef10fec2837b8b3a4d4de2"
                }
            ]
        },
        "1.13.5-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:d687abb358934b9a8e43615e22285d02bb6cf359152ec00a0f23512b3b964b29"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954508,
                    "digest": "sha256:3596c5a237f76c32832c1879a3d0c763989cb13fac0024673b03e9b549b868ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380503,
                    "digest": "sha256:97a87e4c2949f278ec7636f6762169d70bd2588ed301cc3e2721aa830a9227fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880177,
                    "digest": "sha256:b33b91142ed28640cd70826a84025844f0fa1e7bc50f10b67f6ee03ed2f013ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51318842,
                    "digest": "sha256:a23386745bcbf27928754e130693faba015951a5923f1fcf54478337f15c7e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56590901,
                    "digest": "sha256:8f0fbfcf3c9c79e6865a1fef5477d5d13f0ab68756fce199e5bcddd2c8d98e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102166297,
                    "digest": "sha256:69faab8d5a3abf62332158ac5fc62c46ab9f4e3dfc3bc3066d6d3352372643f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ef5966ea04196dfc39d2438a417747bb18e3b2017a53b3e183881cbda60d07f2"
                }
            ]
        },
        "1.13.5-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:a4a13d0d13850e394009ffb689a28fdc27ff6fa061e9d16370c1ad45be2179b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241644,
                    "digest": "sha256:5bf261872a9b22035011c2bf77259c73389d0d5786e4b43bee1df89b5dfada2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323981,
                    "digest": "sha256:2fbc7bfba26bbc482688409940aa0ec283a70804eb1cc6d540e0643c19909078"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372209,
                    "digest": "sha256:2623665c6d27c8c2e9ab44efeae2139d495077f86d1be219a93c300bef788036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50497131,
                    "digest": "sha256:f61ffbab9b0222931cbb6d98ccd0bccb98581c65656a88a5dcb89c5f5d42872e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982433,
                    "digest": "sha256:6dd03b1c80b59de6c3e7211290ca627c231b1d495c3657f55afc4ae7797f8134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102166393,
                    "digest": "sha256:7eb12ef6af510e91761d19053cd6e90c65e02f073ca89a4bd1d73f23287867a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:2fb8fda69e5194b4387ee13fec6b224aeea71574391547db5f7c37503a79a3de"
                }
            ]
        },
        "1.13.6-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:5efe5841bb7f137b462c5624f38273b392f18a708736fd9f5cace1e00c78e42f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126868926,
                    "digest": "sha256:306e94a328da8b31864fed71acf41dda73dc1b18dbf82fdb218aaa6c797cbc77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:7a19ac3d5387f8820e1ae083b6efc9248716811ae303565b662d58ec19dccfb9"
                }
            ]
        },
        "1.13.6-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3836,
                "digest": "sha256:c9e7d2c98a101d3b381152ce280b9bfe1b1e4deca0d3fc172b18d11e74a2ed97"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126863555,
                    "digest": "sha256:c3dc0f29d714c11929a4dd182e956c9fc25428523ea29f713127b3312f51a624"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:146c92cf5f92d73b512512cbbbd7eb69b96583026c2b78fa4eb2297cbddc4821"
                }
            ]
        },
        "1.13.6-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:5efe5841bb7f137b462c5624f38273b392f18a708736fd9f5cace1e00c78e42f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126868926,
                    "digest": "sha256:306e94a328da8b31864fed71acf41dda73dc1b18dbf82fdb218aaa6c797cbc77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 124,
                    "digest": "sha256:7a19ac3d5387f8820e1ae083b6efc9248716811ae303565b662d58ec19dccfb9"
                }
            ]
        },
        "1.13.6-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:8a8fcb3e840c6a9736c3e0da14bfec72ac8fb6f4d755053f29ac9264ba0d798b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954508,
                    "digest": "sha256:3596c5a237f76c32832c1879a3d0c763989cb13fac0024673b03e9b549b868ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7380503,
                    "digest": "sha256:97a87e4c2949f278ec7636f6762169d70bd2588ed301cc3e2721aa830a9227fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9880177,
                    "digest": "sha256:b33b91142ed28640cd70826a84025844f0fa1e7bc50f10b67f6ee03ed2f013ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51318842,
                    "digest": "sha256:a23386745bcbf27928754e130693faba015951a5923f1fcf54478337f15c7e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56590901,
                    "digest": "sha256:8f0fbfcf3c9c79e6865a1fef5477d5d13f0ab68756fce199e5bcddd2c8d98e57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102164535,
                    "digest": "sha256:e57df99e8c52f9339569d29320319176135c23c08d86d08a3cf0897457d0d149"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:935b8545f3ac8fb67c90f8a3be187caf01204d09cb354322cf183ace5b95a7a7"
                }
            ]
        },
        "1.13.6-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5467,
                "digest": "sha256:0e1b9b7ba4c70a2b65122fbd591c7a2e170aef283b4f23b41cf28506c7538b6b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241644,
                    "digest": "sha256:5bf261872a9b22035011c2bf77259c73389d0d5786e4b43bee1df89b5dfada2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10323981,
                    "digest": "sha256:2fbc7bfba26bbc482688409940aa0ec283a70804eb1cc6d540e0643c19909078"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372209,
                    "digest": "sha256:2623665c6d27c8c2e9ab44efeae2139d495077f86d1be219a93c300bef788036"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50497131,
                    "digest": "sha256:f61ffbab9b0222931cbb6d98ccd0bccb98581c65656a88a5dcb89c5f5d42872e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982433,
                    "digest": "sha256:6dd03b1c80b59de6c3e7211290ca627c231b1d495c3657f55afc4ae7797f8134"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102164538,
                    "digest": "sha256:fbc5b64c9d81f253a60e412a78532e6180cfa814d8734eec967a5e3f2f9ded93"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:ad08f1881fb83b180d69c18d0fd0dad490026fe90852bcc0b4f64bbd4e9680b9"
                }
            ]
        },
        "1.13.7-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3828,
                "digest": "sha256:2f109e154bac5476d05e1851d56796db85a1acaeb6e56328d08e0228c9cc17a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126844094,
                    "digest": "sha256:10416da369ddc9c21001b9dcebc5c72c46ea34d7b6f63383eadf52ad721a4b47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:2e176f9abe0f87d87acb72f16c7ef2cedd1dfacfec53973e9dbe8e9bb93d5b90"
                }
            ]
        },
        "1.13.7-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:1efb60f30839a073583539e88125d0b04c387e9a353917e06cd43f44e487e053"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126838077,
                    "digest": "sha256:eacdc76177ce934c63d31e35623dabcb73e3c9c42216357b0d2023e3dcaa9607"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ccc656c9fe5202ea6521005548753c761008b4e20f5fe84638469e2131cbff39"
                }
            ]
        },
        "1.13.7-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3828,
                "digest": "sha256:2f109e154bac5476d05e1851d56796db85a1acaeb6e56328d08e0228c9cc17a7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126844094,
                    "digest": "sha256:10416da369ddc9c21001b9dcebc5c72c46ea34d7b6f63383eadf52ad721a4b47"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:2e176f9abe0f87d87acb72f16c7ef2cedd1dfacfec53973e9dbe8e9bb93d5b90"
                }
            ]
        },
        "1.13.7-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5452,
                "digest": "sha256:405b58165bf06b178dacbf6c969d559fe180cadb2d6f1c75fe0755bdf368aaa0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954499,
                    "digest": "sha256:6f3b736b312bfd59fd7947524542ae1d57ed4564aefaafdf0ccfb7d600f7978f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381759,
                    "digest": "sha256:6eca02855c81b470d73964fc93a8a5e484c5ce5dd6782210cc15b8aca2d28684"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882030,
                    "digest": "sha256:88ecd1a9e0aa67e009dc11b696d0a2029c3bb506e5058e13434114e16ad7a290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51326330,
                    "digest": "sha256:114b7e56002fcad21b16ab9d3774a372824925547f59e9580bc61ec3cee41394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56591695,
                    "digest": "sha256:eba663ac4e1567abd178cbcb653944b168f5b132c1a687c67ef4041d7ed4030d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102161209,
                    "digest": "sha256:213fb37638ee3945de166769c41785746ccd8b769094a578788eaebd421c0646"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:5b56a0d174e1942aa9c4762ba657088d03af1090840f5776077c9784598b3abe"
                }
            ]
        },
        "1.13.7-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:5d476fec283ca004bcc8de81d46648d2ae8a8ed4fff98a1536e7d91973c302d2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241584,
                    "digest": "sha256:fb54e9d54b34d992a5c6582a6fe3836692cce3589a408748090bbb916a4cc63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325358,
                    "digest": "sha256:03d13d85604945e95d31c38d488a822d8e0b84e7548a10db0c89115cca1887aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372596,
                    "digest": "sha256:596b324848b1286794120fbcb3c696328dd955db597ec3e70840b5dc97d794db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50499891,
                    "digest": "sha256:38645e5b0e6402c091627176f5aed8b9d434ccf323ecc4ca2c66f934acc1a11a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982845,
                    "digest": "sha256:555ca4faedcdf5a518aaa854f9752587efa9ed96a7b02a0c1b875b6e09086a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102161199,
                    "digest": "sha256:a6f8268b1ad43b8b3f90827a473fbfbe6ef73cb5bd443b0608fab084eb662656"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5dd96b6bf4019d99cb26c7d954360c489783e6990ca47d5be0b571f2668a722b"
                }
            ]
        },
        "1.13.8": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2969be310b76678b0572275b13d923705f3d1dc33f6a4d3b1cadf77ea108bb83",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.8-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:71ae46f9e20a90bbccc707fa8869feaeac68ac356848ebb9999e666f800d2d51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126848080,
                    "digest": "sha256:0224c0eac8f2edc8bd7692901902c98f9d205a3dbca660ad4863a74a5d57d6ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:44d1e56d7d4ed2f55247d105d92c54cb4ece7e6bf8d3e644af4e3028fb90bb08"
                }
            ]
        },
        "1.13.8-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:f1a72c33c5b0371593b169ae4654bd8630925fefc47e12b7db17d28566f93319"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126842772,
                    "digest": "sha256:d164e214543e394887df10370c6d928637a11c469be38e4423c6cab5ee11224f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dc1772a571e2e8ee350576e9d36b7ff486724383b558b340601073973a2de267"
                }
            ]
        },
        "1.13.8-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:71ae46f9e20a90bbccc707fa8869feaeac68ac356848ebb9999e666f800d2d51"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126848080,
                    "digest": "sha256:0224c0eac8f2edc8bd7692901902c98f9d205a3dbca660ad4863a74a5d57d6ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:44d1e56d7d4ed2f55247d105d92c54cb4ece7e6bf8d3e644af4e3028fb90bb08"
                }
            ]
        },
        "1.13.8-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:0310c4918d38591c12cbbf0f8f4d5acf3515642afccf3ac4447a97843cec7e86"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48958029,
                    "digest": "sha256:0a3603da42bb9e22573006a7f894b198954caeab529e2e041660e12c4fe62462"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7382213,
                    "digest": "sha256:16a7b142236e4c473f4fd19a0485f74364510f658dc999627e6c41f4684a50d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882220,
                    "digest": "sha256:6f2c5965845a6f2fd1bfaa3a4814a17655d46330b5f60ed861daaa390d5b82a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51327256,
                    "digest": "sha256:942858cf91c54d2d1efa88f24491ba2b93cd15ed968d4f5e193c5e26ca4236e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56672934,
                    "digest": "sha256:2d4f5bb4516c3283cf2b8ab45a3231407f9577453fc6a45afc4bdfd62fa05901"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102162917,
                    "digest": "sha256:22d7a2462c9d23e1a2309e49f418ac35e383593a56819261bada04081780433f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5ffa45cfb494cd33d365d10bf1682b55ae6733b9efec850001a276ec9c4f8bd6"
                }
            ]
        },
        "1.13.8-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:f0508f731e521a2411178811dd379a72929a2baa8ba7b79c3ece5f0bc500eaac"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232848,
                    "digest": "sha256:a2baf8ed1bce68a4f36469f3537f12b9e5bebc860ab4aac0954714901595c575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325927,
                    "digest": "sha256:a58b9c529db9ec73f2bb8ba3f678b389c4df7bdb3ff1083ebf516aee839533b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372671,
                    "digest": "sha256:f9d9d2deeb51ba62efa7f9206911520eae29fdd6a401851f5f400f881ef0fbc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50500268,
                    "digest": "sha256:945d494eee6f349916e86f798c51b0ee9e6c3e769f797eb840c23ce5857bed41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015704,
                    "digest": "sha256:92598296cf3650b10a8d2329b614d224834e84c357fcc6209a5506add90180c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102162918,
                    "digest": "sha256:4009333fa159d9c8550a08bbbaae6fb5c38f6ca46b1e08821400675be2a4732c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a424027f0dcf8672d0a406b701fe7b670431e2d9193ffff20f9734141887a271"
                }
            ]
        },
        "1.13.9": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:1869959e92b48f4df8f7f54fbcf37f3236679d4f49f2c3ff028586469d50a577",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13.9-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d97d6a1aefd405b8df823de73a01903fa25018a564e66275e7a0525810a62b50"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582073,
                    "digest": "sha256:ca1c6795bfb97df28a926fd646127ba4944b69beb1cea7b00d62787b8b3c0108"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301883,
                    "digest": "sha256:1f2bb0a1501237b009887e5648076a295233f28d1491419e54e22c70892928c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3c518fd796723526d8106692e5d1984a0c2ebb3594bf473a84d63990ae88ca14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126917421,
                    "digest": "sha256:5b25a8c473164302aafdc11d66e50c60675e83bac5781c8903217ac5320ccf7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5d5846c70f11f5c9f63a1c3e9c93c487150aba865b72de4998d90b0bc391b3d0"
                }
            ]
        },
        "1.13.9-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:81eccd94ce8f997b671777908aa172db20c85005409ecb2ba7e4efc83eeaca4c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573620,
                    "digest": "sha256:0449d076b2977b7e7ce4c35b0fe5199d86cabaf453e869da73b2efb66d6282dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302373,
                    "digest": "sha256:2fb128f7a0b3441af0a1eef960ce0622fd0049be17096db0080f5400b1ee7e64"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:9d2592b42fce901960714d777b7e24fece20b0804186e9abbf2a1af03c43275b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126912538,
                    "digest": "sha256:3ea07d4a553afc1a1acca93691b3fa6bb8f8dfd80f49b3f73b0540835a077bd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:6f3600dfc0bb2835694abade88892b8e1707545697065a1ef2b042f369e5e07c"
                }
            ]
        },
        "1.13.9-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:d97d6a1aefd405b8df823de73a01903fa25018a564e66275e7a0525810a62b50"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582073,
                    "digest": "sha256:ca1c6795bfb97df28a926fd646127ba4944b69beb1cea7b00d62787b8b3c0108"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301883,
                    "digest": "sha256:1f2bb0a1501237b009887e5648076a295233f28d1491419e54e22c70892928c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3c518fd796723526d8106692e5d1984a0c2ebb3594bf473a84d63990ae88ca14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126917421,
                    "digest": "sha256:5b25a8c473164302aafdc11d66e50c60675e83bac5781c8903217ac5320ccf7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5d5846c70f11f5c9f63a1c3e9c93c487150aba865b72de4998d90b0bc391b3d0"
                }
            ]
        },
        "1.13.9-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5455,
                "digest": "sha256:19c08f2986c378fec7e0445eb1fdd253294083edfb92a55ba930c812b7164eeb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48958144,
                    "digest": "sha256:e5611e94178b5632fbdf7d00655f2a077f35fbef849c9665429c154c52784cd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381996,
                    "digest": "sha256:4da65af62001a02cf6d0b02d633e449ec3633ca0c76bd16cd34bcf2ef28a6352"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9881996,
                    "digest": "sha256:d6d21d967603e5e4c423c0f549b7978e548b4e142bf03cb70c03051062726687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51325934,
                    "digest": "sha256:42f16d16a70de35898b54cdb65d4a93001ec7fbbee85141930397ec5ab35b6b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56672848,
                    "digest": "sha256:69d3cb6c4137d1caa2295474c52d7df2b7c299b53d502e6755758ec53a65eb5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102233142,
                    "digest": "sha256:be71c0234a2c65f0cad776acc0a7bdc505be7c6c12bb49def081cafac943befd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:38a50ce2ad06196fc9363e15df92ff6fe2d90109296d495b26c0db4800faf0cd"
                }
            ]
        },
        "1.13.9-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:f53c8936bc7d1c5c50e12154128b519d14bd816e895af46b31a5ac3730917a95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232869,
                    "digest": "sha256:32a0ea7e09635bc86f70dd4db2b929ad05b81856f2418c0f482b647e3ec3453e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325654,
                    "digest": "sha256:1670721d9cffd9a8df08200c9776f5df2d9c67b509f1687f6af2cff87cea8736"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372633,
                    "digest": "sha256:d5ce62003b28e35153216c5f62da651c3fc87ee53f79914403ed0bfcffb7dc6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50500563,
                    "digest": "sha256:1b80b20ffe11033ae476419f8b2a73153d8fa2905a690306b441cf34c2cb895d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015627,
                    "digest": "sha256:9c81538b291c133244fa2bd6acbe88d4210ed77a5301241ea1b3f29b9fc3c0b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102233173,
                    "digest": "sha256:dc436a46f309346af0d8d663a5e7174eac59edf1c6f6dd2dc2520c984a6a03b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9c697a42e9fa6b22bdd86f73c824d9cc5429a96a8d7ee270f90a6e2225947ab2"
                }
            ]
        },
        "1.13beta1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2bc364cfe4033a29152e1475358a5db913a6472b24e99b8ed285aceba428e3ec",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13beta1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3814,
                "digest": "sha256:e5602842ef6f252625f2257941d1953d300ba54f02477bcdcc1cb58d08c772cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126826298,
                    "digest": "sha256:94699edf0604c089ef42d76af8c52c5cd36cc4c2566dfd8a2011e91baf82805f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:818661fb60baac1491ef1420a404f1ace491561e18752421f57961283833312e"
                }
            ]
        },
        "1.13beta1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3814,
                "digest": "sha256:e5602842ef6f252625f2257941d1953d300ba54f02477bcdcc1cb58d08c772cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126826298,
                    "digest": "sha256:94699edf0604c089ef42d76af8c52c5cd36cc4c2566dfd8a2011e91baf82805f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:818661fb60baac1491ef1420a404f1ace491561e18752421f57961283833312e"
                }
            ]
        },
        "1.13beta1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5466,
                "digest": "sha256:7257f61e21e31d2cae501c1c814141cc801623ee383235ee517ed15915a4735c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102100158,
                    "digest": "sha256:645efa6073b4922028f1d7a374c08b9754115b5eeffcc5ffc2b0599e15303bc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:c5353ebe1c4e1d8949950995f57dee27367573b111385f3cbf736f406f66924a"
                }
            ]
        },
        "1.13rc1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:0883fc520442ead6c14cc112423a4fb27d5d6d0f02d913047d3553d7b861a441",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13rc1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:7bb24b5945eb0c66e9058aeac83d416dc05d9fbb2465e4ad77b7ed3fb306f998"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126850881,
                    "digest": "sha256:c9967242d8253dc902ae6b00db00ca874be42f10cd6a527fd6a206ae64492dd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:14f7d6569ad42c9c907f9b90aac24b86600342afdd022a6f84454529d626e2f6"
                }
            ]
        },
        "1.13rc1-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:7bb24b5945eb0c66e9058aeac83d416dc05d9fbb2465e4ad77b7ed3fb306f998"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126850881,
                    "digest": "sha256:c9967242d8253dc902ae6b00db00ca874be42f10cd6a527fd6a206ae64492dd4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:14f7d6569ad42c9c907f9b90aac24b86600342afdd022a6f84454529d626e2f6"
                }
            ]
        },
        "1.13rc1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:5c660dd0ebbe9d389ebf3459baef466bd19f2f55c350379f5f8c9d9fa7f52536"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102142071,
                    "digest": "sha256:64ecd9767277bfb488a78f7c36f2688113f86ef4514c33d63820e37d59c8212c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 125,
                    "digest": "sha256:f1b9390129f8afcf9edf58f5ebb30cb77fa7e32cac4b077fd90c4d62f005192b"
                }
            ]
        },
        "1.13rc2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2d7ddfb4a624b7d24a24d385f11e7127fe324b9b423ad176e51f683e22786ddd",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.13rc2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:c3a70d7ad457d3f2fab7a5527a2212ec90c6d36449997bc299f0180eca4f9876"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126855726,
                    "digest": "sha256:9b1eddf7eafe1ae49d3fce30dfe34a8d5db522a11348b1ada59d4495fdf6319d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:75a2c424aab44db3fffea256c797e6a7749a01926c43a6060551c8d2d072b602"
                }
            ]
        },
        "1.13rc2-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3808,
                "digest": "sha256:c3a70d7ad457d3f2fab7a5527a2212ec90c6d36449997bc299f0180eca4f9876"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2570500,
                    "digest": "sha256:407ea80cb4d5f522b989a33f21507f3c566691fdbdc5a2c97d08ae37916c8501"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302379,
                    "digest": "sha256:9ea2f754c713edf4fc754e6eddf48b0ecddff9b20dc2556dc512e02e5ba7b69c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:f14cbff30a7fc565a630ec90ba1b2d54f1377d411f23129b8b54aeb7e8a9de6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126855726,
                    "digest": "sha256:9b1eddf7eafe1ae49d3fce30dfe34a8d5db522a11348b1ada59d4495fdf6319d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:75a2c424aab44db3fffea256c797e6a7749a01926c43a6060551c8d2d072b602"
                }
            ]
        },
        "1.13rc2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5460,
                "digest": "sha256:1d7647533773fb44d0e41382fba390ea99b646c52ea400edc477b0fd85cf7569"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48948229,
                    "digest": "sha256:1deefd4000e69ac6da7cac46dd8d8e3eafbb5b9e35a957bc00b5ac3dbdad7101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7371697,
                    "digest": "sha256:44e1d1149fe1396ce2ebdf30fbee1b951040add5ff8c1c84c76f80f11f9d8a75"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9865973,
                    "digest": "sha256:65cacb24ae48e0fa65b8c9b3f086d31398252f258fac0b4cb09c3e831514f1c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51302340,
                    "digest": "sha256:f502e4cf2c3ebca4dc078e4edc9d19c924e91f57289a6228b50c46d50102031a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56543246,
                    "digest": "sha256:5f791fbf89c435ec186318ccb114cde34c6512c299810569f40b5b0fe0fa858f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 102141871,
                    "digest": "sha256:53f416ca32704cebd91daa6217c6d7cff2bccafb90651ccf070a39065552fbae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:8513c461a6693ed84152aa9c97d56839a722f09d83c3bdda9b4e77e00c27c9d1"
                }
            ]
        },
        "1.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:838d8cc4b3bb7097d9f7ae46146973a2f742c1dde6db201c916bbbffe60f162f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:d7200035696195e913f7fdc99b21b100ae7861528874757f9ed0b98aa82aa339"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602059,
                    "digest": "sha256:43901f1af0ef9db6b0bf30ac6f6dacd78bf1ecfeb47ad0a93aa2370fa8e62407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281704,
                    "digest": "sha256:f5c81f5f494120b8e4ca8a144d2d322b4757911b8d5b4891b44f9d856163581c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:81a1800090029431c885d4b76daa42ec2a49e4182d3fa414a23aa840667c5a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107140812,
                    "digest": "sha256:86ee20b9961c969b300c1d0c9e32f5b2aa187218f86ef6d796cc06fb40ecfa8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fabd9ea5de2761c546556ca39451114fe320e24f14a31c3b44d7f39d89ecd545"
                }
            ]
        },
        "1.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:a2afab0fcc1f7e80a0126201819b02f07b0b113ab0204f46e5b504bf2101e9fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2583287,
                    "digest": "sha256:ae4c90d25da4580c1cd02a35a672d9113b17e063183b4148c463df4d33079192"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300147,
                    "digest": "sha256:b6d7f18e0586671723c28e56cf36592aa5648a7a31e3d4d01ae84be77848bb72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4ae516cb39ef6e279d954c657d6a8f2b7c2ecdbe4963ede8615f97b78e00dd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107169562,
                    "digest": "sha256:856bbf65aa29d6e13ce128e575c225253a5dcdfb611565769b983dc79c262321"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cd21c074c5aa6bc5b65bc296821caa2052e4f46f58237ca4f1162691be71bb33"
                }
            ]
        },
        "1.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:5e1606941b7d9ec2bd285fab7671258ce4fbc9c3098f3dde986607c4c76586a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2567018,
                    "digest": "sha256:ee52640a49e15b8b7c8edb66c2d048b26abdee8d828d6e5ef4e10a28cb15a84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281328,
                    "digest": "sha256:ffa6a14f4067d7797fd5cfb87803df1ad2a3d7625d0b843e97d16cb7603123a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3fb7c9b3bde5c297668741ef40758508b43d424457fdbd8fcf1feb93e32b22f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107167993,
                    "digest": "sha256:a5a696d1f388bd06b07b2ab498f83854308f12365daa901fdf0e126ee7c267d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8f27c1382d76303a3fe3c8e41dbeb9876963958b5719c07218367958d33cbbb0"
                }
            ]
        },
        "1.14-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:d7200035696195e913f7fdc99b21b100ae7861528874757f9ed0b98aa82aa339"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602059,
                    "digest": "sha256:43901f1af0ef9db6b0bf30ac6f6dacd78bf1ecfeb47ad0a93aa2370fa8e62407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281704,
                    "digest": "sha256:f5c81f5f494120b8e4ca8a144d2d322b4757911b8d5b4891b44f9d856163581c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:81a1800090029431c885d4b76daa42ec2a49e4182d3fa414a23aa840667c5a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107140812,
                    "digest": "sha256:86ee20b9961c969b300c1d0c9e32f5b2aa187218f86ef6d796cc06fb40ecfa8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fabd9ea5de2761c546556ca39451114fe320e24f14a31c3b44d7f39d89ecd545"
                }
            ]
        },
        "1.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7029,
                "digest": "sha256:1ec2e6492ade7552db272705d436c338c33ff16c7bb004d28d84a506af7a320e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48970386,
                    "digest": "sha256:fb61e252baf0cdce361b288d8df47eab4b2adb45935d61331700aa9281372c74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7399445,
                    "digest": "sha256:21893889b63220b2786e70a7182ba39dfc2fffcecd394424c4be2eba9d090798"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9883127,
                    "digest": "sha256:cadc5e0216d8dc7f2fc17b19146d9e168fadadf4acf3bfee694853596f8ee659"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379480,
                    "digest": "sha256:e7c25bdb77d50c2365abbf0b825665a3320edce80f9ee8ce5985b29effa66c21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56788493,
                    "digest": "sha256:dbc4817940a6d8d1eee948db363ee62efe08ed91d295c8091add842212a9ac8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105704805,
                    "digest": "sha256:bbbd83b215b44c21b5ba7320c2065550a1e635f91163fc1dff207fff585118ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:788d8e1f32201680a5853fa1444458bf428af0e49598b99093b9e9a836271ed7"
                }
            ]
        },
        "1.14-rc-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:e1541f9148b2e344f94f63d4ff64712cd661e21567ee46f48bd1d4801327ee95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131622599,
                    "digest": "sha256:253b7201e3bb5357a450f87379cf4d009031e8d619fb86a75698ef622b787039"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9a0e25c3720726c6cf32558acbf39c80945e6aafcc40d41a08bd9e49049502c0"
                }
            ]
        },
        "1.14-rc-alpine3.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3814,
                "digest": "sha256:b1af983c643d2cedd0683b797e722320e5e5c9cd141836882c684b4ff5b64b2e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2573587,
                    "digest": "sha256:fb7172052a60e640810f01efff381654bf9ed44082461455cfcc6306d192d541"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 302371,
                    "digest": "sha256:756641a81b92ce47e818c92880b4e1a144f10ceebe1934f176587bf3980e94ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:30abe3a6a40d80e37f3089718a7b0610ccbbe5e4a45f4034a9a9c322d74585c8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131201235,
                    "digest": "sha256:393d43849c46e73766badccb7ec7a622461cc9e99a1325ba39a406034052f224"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 126,
                    "digest": "sha256:5fde17d7b3b653716268e7d3eea4be713a2be09d2b9f944d0abace2ceffff4ec"
                }
            ]
        },
        "1.14-rc-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3834,
                "digest": "sha256:e1541f9148b2e344f94f63d4ff64712cd661e21567ee46f48bd1d4801327ee95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131622599,
                    "digest": "sha256:253b7201e3bb5357a450f87379cf4d009031e8d619fb86a75698ef622b787039"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9a0e25c3720726c6cf32558acbf39c80945e6aafcc40d41a08bd9e49049502c0"
                }
            ]
        },
        "1.14-rc-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:df4beb85e4d81a10871e31a2f08022c9989e2e6bd0e38a76a5933832994dc9b0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48954499,
                    "digest": "sha256:6f3b736b312bfd59fd7947524542ae1d57ed4564aefaafdf0ccfb7d600f7978f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381759,
                    "digest": "sha256:6eca02855c81b470d73964fc93a8a5e484c5ce5dd6782210cc15b8aca2d28684"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882030,
                    "digest": "sha256:88ecd1a9e0aa67e009dc11b696d0a2029c3bb506e5058e13434114e16ad7a290"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51326330,
                    "digest": "sha256:114b7e56002fcad21b16ab9d3774a372824925547f59e9580bc61ec3cee41394"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56591695,
                    "digest": "sha256:eba663ac4e1567abd178cbcb653944b168f5b132c1a687c67ef4041d7ed4030d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105178635,
                    "digest": "sha256:88e220bb12eae87d75225e8e174cc6c841db892d0a7528cefbf7e204744e320a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:86fbf353359bb33031813b91c2cdf6feac86de05322c4f1dac5ecb085d4076f1"
                }
            ]
        },
        "1.14-rc-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:1bba9a8634afd86ce195b8009fb2bf0a78593aa3007887f9113e9ed12395607a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45241584,
                    "digest": "sha256:fb54e9d54b34d992a5c6582a6fe3836692cce3589a408748090bbb916a4cc63d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325358,
                    "digest": "sha256:03d13d85604945e95d31c38d488a822d8e0b84e7548a10db0c89115cca1887aa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372596,
                    "digest": "sha256:596b324848b1286794120fbcb3c696328dd955db597ec3e70840b5dc97d794db"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50499891,
                    "digest": "sha256:38645e5b0e6402c091627176f5aed8b9d434ccf323ecc4ca2c66f934acc1a11a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45982845,
                    "digest": "sha256:555ca4faedcdf5a518aaa854f9752587efa9ed96a7b02a0c1b875b6e09086a90"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105178549,
                    "digest": "sha256:dc670c1855494eb61452cb8c446fc252f666ee0dbc85059f3d1b3cde4ecea4d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:612548ac9f0f1d50c353fe4dac254ee599f73063c5a9dc844aae2bf24ee37624"
                }
            ]
        },
        "1.14-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6196,
                "digest": "sha256:fe50e97e2fa935dd81c71d1893a7eb2db8dc655add74d2f7894e928446bd0bb4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232505,
                    "digest": "sha256:cc8faf537ff83acc994f80bcea99d8e073aa05b5eb0dab5ce495510af0b6d1f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10280522,
                    "digest": "sha256:9816eeae17f469b3b58481bdbae04cc1b7b69f8d8a6ef15f6972d91ba2f29ee8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372414,
                    "digest": "sha256:13a7344ca59dab92a8238f2df0ea3779840ec21afc295e24f39259558c3bfc05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50510977,
                    "digest": "sha256:e6a9332093631759dcfd58267f270de204b0c9388802581c972141e78700c0bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015355,
                    "digest": "sha256:61b6579864ff22fdeca13e4d49885f0f743c58aeee072fe66e53629745524eca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105381138,
                    "digest": "sha256:bb1218787d7d05caeaf41c361ef30ab03b2f629644369e89624f9b54af2b97c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:b9b6c041eee931f3f5d0030d85357a98ac0f602211a03120db98c70219a8d620"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:bae42bbc0e0bb4321a0e1ef05e08f146f6b700b5fc2ea52fb11855546cdd9ba6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.0-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3824,
                "digest": "sha256:e243ce05b7e3e186ce936c5656a510fea1ef76ebaf232c376db5e9109b529e76"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131600278,
                    "digest": "sha256:bbe234b89e3f9c3f97546beea6ee1a60b77f767cac7fa9887de540e5a8805ae4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:4030b5b1dbb6f028a9f40bd5ad8521e3411d172c1dd704037c8208ae33cd5840"
                }
            ]
        },
        "1.14.0-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3824,
                "digest": "sha256:e243ce05b7e3e186ce936c5656a510fea1ef76ebaf232c376db5e9109b529e76"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582031,
                    "digest": "sha256:176bad61a3a435da03ec603d2bd8f7a69286d92f21f447b17f21f0bc4e085bde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301795,
                    "digest": "sha256:a5098d3328eb232d7f1890bea7d184bb878fdd3fd6f662f587ed0a70612d5587"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:95cfc0bf895b01244b27aba1473ab54b274b1d43e1aacc52256be747e0835a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131600278,
                    "digest": "sha256:bbe234b89e3f9c3f97546beea6ee1a60b77f767cac7fa9887de540e5a8805ae4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:4030b5b1dbb6f028a9f40bd5ad8521e3411d172c1dd704037c8208ae33cd5840"
                }
            ]
        },
        "1.14.0-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5450,
                "digest": "sha256:57f05de541d5447cb84d97f1dcf5aee389c3ef5cede868d349fc4fe7b1946990"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48958029,
                    "digest": "sha256:0a3603da42bb9e22573006a7f894b198954caeab529e2e041660e12c4fe62462"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7382213,
                    "digest": "sha256:16a7b142236e4c473f4fd19a0485f74364510f658dc999627e6c41f4684a50d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882220,
                    "digest": "sha256:6f2c5965845a6f2fd1bfaa3a4814a17655d46330b5f60ed861daaa390d5b82a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51327256,
                    "digest": "sha256:942858cf91c54d2d1efa88f24491ba2b93cd15ed968d4f5e193c5e26ca4236e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56672934,
                    "digest": "sha256:2d4f5bb4516c3283cf2b8ab45a3231407f9577453fc6a45afc4bdfd62fa05901"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105188909,
                    "digest": "sha256:854d6dc369b604fde2f10ceaf36edac56eb800ab27c01274cf8b910f6aa7f51b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:2d337c53cd5c06be81e5ad800f754e5799d118b8516c148099a51970a7ff805e"
                }
            ]
        },
        "1.14.0-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5458,
                "digest": "sha256:d058233603c01c221c43a7a0d22781bb8be37996456e8f7251746e00b81dc7d8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232848,
                    "digest": "sha256:a2baf8ed1bce68a4f36469f3537f12b9e5bebc860ab4aac0954714901595c575"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325927,
                    "digest": "sha256:a58b9c529db9ec73f2bb8ba3f678b389c4df7bdb3ff1083ebf516aee839533b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372671,
                    "digest": "sha256:f9d9d2deeb51ba62efa7f9206911520eae29fdd6a401851f5f400f881ef0fbc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50500268,
                    "digest": "sha256:945d494eee6f349916e86f798c51b0ee9e6c3e769f797eb840c23ce5857bed41"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015704,
                    "digest": "sha256:92598296cf3650b10a8d2329b614d224834e84c357fcc6209a5506add90180c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105188923,
                    "digest": "sha256:4734c8ccdf65146405ed99c1a84dd120ed27937f9182680d02f1ddb222c10627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:11f096abbe9c93a33e704ae2094080daaa33d39e40029646830dd65793657ff0"
                }
            ]
        },
        "1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:7de648d52f3e8b612663c60e18e11140566bf57e306be82a492509b0963c9158",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.1-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:b3418eafd5c27ecc665fc7b7b0b855145808e4bfa084cd9416083b5be616123d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582073,
                    "digest": "sha256:ca1c6795bfb97df28a926fd646127ba4944b69beb1cea7b00d62787b8b3c0108"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301883,
                    "digest": "sha256:1f2bb0a1501237b009887e5648076a295233f28d1491419e54e22c70892928c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3c518fd796723526d8106692e5d1984a0c2ebb3594bf473a84d63990ae88ca14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131713495,
                    "digest": "sha256:f295e39bac94004f5013140cd0489bcf4dfedb96bfa134b9155c2e7a7c6ceadf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ff739ff8f776440ca21d9c67e319dbd9d3e0efc506600eae1ed555320b32ba94"
                }
            ]
        },
        "1.14.1-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3831,
                "digest": "sha256:b3418eafd5c27ecc665fc7b7b0b855145808e4bfa084cd9416083b5be616123d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582073,
                    "digest": "sha256:ca1c6795bfb97df28a926fd646127ba4944b69beb1cea7b00d62787b8b3c0108"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301883,
                    "digest": "sha256:1f2bb0a1501237b009887e5648076a295233f28d1491419e54e22c70892928c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3c518fd796723526d8106692e5d1984a0c2ebb3594bf473a84d63990ae88ca14"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131713495,
                    "digest": "sha256:f295e39bac94004f5013140cd0489bcf4dfedb96bfa134b9155c2e7a7c6ceadf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:ff739ff8f776440ca21d9c67e319dbd9d3e0efc506600eae1ed555320b32ba94"
                }
            ]
        },
        "1.14.1-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:d768cd241babcf078f11db108f558083df1b56541fab6323de571ac26fe39122"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48958144,
                    "digest": "sha256:e5611e94178b5632fbdf7d00655f2a077f35fbef849c9665429c154c52784cd2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7381996,
                    "digest": "sha256:4da65af62001a02cf6d0b02d633e449ec3633ca0c76bd16cd34bcf2ef28a6352"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9881996,
                    "digest": "sha256:d6d21d967603e5e4c423c0f549b7978e548b4e142bf03cb70c03051062726687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51325934,
                    "digest": "sha256:42f16d16a70de35898b54cdb65d4a93001ec7fbbee85141930397ec5ab35b6b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56672848,
                    "digest": "sha256:69d3cb6c4137d1caa2295474c52d7df2b7c299b53d502e6755758ec53a65eb5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105292655,
                    "digest": "sha256:426135bb14655dd748be0346d138addfd11bbb9a8b5316ec36d3ed736c3e59ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:9bd31cf800b638b0a1b868875e4f3ebbc4767ff6a8c277cdcb96352fe85c5610"
                }
            ]
        },
        "1.14.1-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5464,
                "digest": "sha256:9172c8ef7aa447d7377ab1915de50b7f6fa4652a9ee4c8bda9279102b65976b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232869,
                    "digest": "sha256:32a0ea7e09635bc86f70dd4db2b929ad05b81856f2418c0f482b647e3ec3453e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325654,
                    "digest": "sha256:1670721d9cffd9a8df08200c9776f5df2d9c67b509f1687f6af2cff87cea8736"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372633,
                    "digest": "sha256:d5ce62003b28e35153216c5f62da651c3fc87ee53f79914403ed0bfcffb7dc6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50500563,
                    "digest": "sha256:1b80b20ffe11033ae476419f8b2a73153d8fa2905a690306b441cf34c2cb895d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015627,
                    "digest": "sha256:9c81538b291c133244fa2bd6acbe88d4210ed77a5301241ea1b3f29b9fc3c0b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105292774,
                    "digest": "sha256:208b137c06d311a77a94e3a8d627c75b7cc22ff39990f2cb52f4fa7dfaeee403"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:27ec40cdf619079c992f4cd592f09fe6ee7c3e473db0acc6299b0e36c4e111cc"
                }
            ]
        },
        "1.14.10": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:de404a525ccddc80f49312cdbd67c5f097b63937ef90768882e10413f8929576",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.10-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:c05c47919025adaf77d721eab73e8b4b1aa6e841c831cf34b35db530ed4969d7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565829,
                    "digest": "sha256:a4c84ece3d2b98927d25f13a4f367bfd96cbfae272f6ff1117d74c84b92d11d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281363,
                    "digest": "sha256:5139d7663b8674a989574c2161166fb137f26ef16b2f701159c126628be75101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d31a06258ad66efe2dedbf67809ebc107a55757b8a4543af77982f55ff6c067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106870845,
                    "digest": "sha256:2104274731c354d3642b61bc93cddbc5ff4755ae4320bda0b953a2d6920e78c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:70046ac743c9766ece51cb4f6120c8346b8493490eae60a820882b58981a03e9"
                }
            ]
        },
        "1.14.10-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4654,
                "digest": "sha256:b62b3e2259d0547ad064bce05a7fb789533c7d1e248e5798fce9961b4701d4bf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106871643,
                    "digest": "sha256:73edd136e29bd52ab1cdc8fa338afd0657ce33c91900e03329d902208b2677f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:df23f492db98e5f58265781d82ee5acd52ecb8b840bac2679082ba68691fdb2f"
                }
            ]
        },
        "1.14.10-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:c05c47919025adaf77d721eab73e8b4b1aa6e841c831cf34b35db530ed4969d7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565829,
                    "digest": "sha256:a4c84ece3d2b98927d25f13a4f367bfd96cbfae272f6ff1117d74c84b92d11d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281363,
                    "digest": "sha256:5139d7663b8674a989574c2161166fb137f26ef16b2f701159c126628be75101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d31a06258ad66efe2dedbf67809ebc107a55757b8a4543af77982f55ff6c067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 106870845,
                    "digest": "sha256:2104274731c354d3642b61bc93cddbc5ff4755ae4320bda0b953a2d6920e78c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:70046ac743c9766ece51cb4f6120c8346b8493490eae60a820882b58981a03e9"
                }
            ]
        },
        "1.14.10-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7074,
                "digest": "sha256:f9df3704c425a59ed3169da31053dccd38a4941c1f5f5e70f15cc73e192b5546"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966292,
                    "digest": "sha256:dcbd85f88306d080bce94006a992947eaf462efa80b07c202b0514e6ef412fdf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385264,
                    "digest": "sha256:cfbb6631e0a71a71f08faafe174e0f83ad00c87d97301c2bb19333675f52b630"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882087,
                    "digest": "sha256:0fd2d271697ef75e40cfaf5639cbd0b5730ebe44e841fa156ed503f5c3395c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379788,
                    "digest": "sha256:11ee6330fdd3fb2bbdaee3b0cf6e327884e191d85e257c9d94345c55dbf83b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56751650,
                    "digest": "sha256:03d95435a5ed135058e1ecb863d16380fbe6fec384761bfc8b95ab54dd59869b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105410961,
                    "digest": "sha256:02895bef4c089343c9c4abbe60f14c74235768047c96a7ec77e69da40f352b44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:57003368f746b5ae3ac98e176abaea1b6d27cd2e283a814eb75ca40c64e6a636"
                }
            ]
        },
        "1.14.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:5d08c3b2b3e3ab9ea635dd76a384ce3d0dcc2694240d8fd0073bd38a97b182dc",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.11-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:e8de020bfb5d7e3d76b924692dee6ceadc5c850a486804b67aa4aad9a6ec6c70"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565829,
                    "digest": "sha256:a4c84ece3d2b98927d25f13a4f367bfd96cbfae272f6ff1117d74c84b92d11d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281363,
                    "digest": "sha256:5139d7663b8674a989574c2161166fb137f26ef16b2f701159c126628be75101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d31a06258ad66efe2dedbf67809ebc107a55757b8a4543af77982f55ff6c067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107048570,
                    "digest": "sha256:e02a44448cd0d67bcfdbc04c5583bad139970194e2795ad8699b66da2238ed9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4810a62791e651c5fd7242cc42273cb38f14590dfb699cef7c9fdb4ba531fa19"
                }
            ]
        },
        "1.14.11-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4655,
                "digest": "sha256:ad2a191f4a8a37ee21fb4e112498b09f33c343dafbe7807fae295272701b772a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107047783,
                    "digest": "sha256:71975830249baf6ec78b4cf156adfc0cb1da473c6fb0d65333dd364fa80bf539"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fd2ee9cf63a64229e5773b22e9c2ed6f9f0f6981fa75694fb19d04f58c3c9bb8"
                }
            ]
        },
        "1.14.11-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:e8de020bfb5d7e3d76b924692dee6ceadc5c850a486804b67aa4aad9a6ec6c70"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565829,
                    "digest": "sha256:a4c84ece3d2b98927d25f13a4f367bfd96cbfae272f6ff1117d74c84b92d11d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281363,
                    "digest": "sha256:5139d7663b8674a989574c2161166fb137f26ef16b2f701159c126628be75101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d31a06258ad66efe2dedbf67809ebc107a55757b8a4543af77982f55ff6c067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107048570,
                    "digest": "sha256:e02a44448cd0d67bcfdbc04c5583bad139970194e2795ad8699b66da2238ed9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4810a62791e651c5fd7242cc42273cb38f14590dfb699cef7c9fdb4ba531fa19"
                }
            ]
        },
        "1.14.11-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7075,
                "digest": "sha256:37a75c28b2b43119d439474416b319c2ad94da0f1df3bac661ccc426e977e1ed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966292,
                    "digest": "sha256:dcbd85f88306d080bce94006a992947eaf462efa80b07c202b0514e6ef412fdf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385264,
                    "digest": "sha256:cfbb6631e0a71a71f08faafe174e0f83ad00c87d97301c2bb19333675f52b630"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882087,
                    "digest": "sha256:0fd2d271697ef75e40cfaf5639cbd0b5730ebe44e841fa156ed503f5c3395c07"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379788,
                    "digest": "sha256:11ee6330fdd3fb2bbdaee3b0cf6e327884e191d85e257c9d94345c55dbf83b5e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56751650,
                    "digest": "sha256:03d95435a5ed135058e1ecb863d16380fbe6fec384761bfc8b95ab54dd59869b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105611112,
                    "digest": "sha256:28a7e1851475b66687d85d8c78faa5450832d73993e458306b6333a47d632024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a6e6ab386d5a51735fe8ca3d819d6d71287b6079c814a8c2d8a7c1e194213753"
                }
            ]
        },
        "1.14.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:4f4d59f656e7be63ab7e9c52b18baace6b11ad4b4dfa446e8454cd272f18f7e5",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.12-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:5f903ba3d89c4bbd9fbfb551ebd6f9fa6dd439e4441a36b04a179c573f7bd683"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565829,
                    "digest": "sha256:a4c84ece3d2b98927d25f13a4f367bfd96cbfae272f6ff1117d74c84b92d11d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281363,
                    "digest": "sha256:5139d7663b8674a989574c2161166fb137f26ef16b2f701159c126628be75101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d31a06258ad66efe2dedbf67809ebc107a55757b8a4543af77982f55ff6c067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107064734,
                    "digest": "sha256:7a2db7510235a452e801bdb8890ec980a92274717993e156d74846a62b571e63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5fbc5bc2c9ffd9ab7c4053de4cc4c3d179b5190d56ce846a5054e1d6c1543432"
                }
            ]
        },
        "1.14.12-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4655,
                "digest": "sha256:90898e375e938bf2efba4ef122191cdb4b4a7b6dbff9e9404c7bf71480492a1d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107064194,
                    "digest": "sha256:794a5781f003ea08f25d5c80c69e4256a25db50994b1d7210726ce4ea4c632e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:dc5a4b0b7d32bda78f3c40dea53c0bbb4a3773410fbb3f8a6ad115fb9cd5548c"
                }
            ]
        },
        "1.14.12-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:5f903ba3d89c4bbd9fbfb551ebd6f9fa6dd439e4441a36b04a179c573f7bd683"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2565829,
                    "digest": "sha256:a4c84ece3d2b98927d25f13a4f367bfd96cbfae272f6ff1117d74c84b92d11d3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281363,
                    "digest": "sha256:5139d7663b8674a989574c2161166fb137f26ef16b2f701159c126628be75101"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:1d31a06258ad66efe2dedbf67809ebc107a55757b8a4543af77982f55ff6c067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107064734,
                    "digest": "sha256:7a2db7510235a452e801bdb8890ec980a92274717993e156d74846a62b571e63"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:5fbc5bc2c9ffd9ab7c4053de4cc4c3d179b5190d56ce846a5054e1d6c1543432"
                }
            ]
        },
        "1.14.12-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7037,
                "digest": "sha256:b87100543e0c95be3107c38aba5e831f088c0d727e94901115321cf8e4cbd6f4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48968246,
                    "digest": "sha256:6e95a7d20e6bbf957d2bb5912f19784daba6953d8afac5562453108dd45940e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7385996,
                    "digest": "sha256:ab56d289be912cd903623a00b35bdc52f4f1b54a6778c1ba4c076e5cfe339aa5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882242,
                    "digest": "sha256:c29ee109f7efbe0700da6e225717912b22d8e015d8d9a9968e564419b1ba97a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51380183,
                    "digest": "sha256:99e45adeb409573e310b14d50aaf13f2a71a45e62f9f872239e36eb86f927b54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56764966,
                    "digest": "sha256:cf3bece7ae960b4972f4cb216e42f8e6ca845916cbb6ae7b3c30ecc68cf42364"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105615164,
                    "digest": "sha256:5edf273211af85642aaf4bfbe1e83c62674bbc00f0be0d47c75751a58090e787"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:ecd239639035224f56fc87c1168b68cf10b49bbb005990811acbae29e2dd1bce"
                }
            ]
        },
        "1.14.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:3e0135155b39c2d5dcaf0c59a73a420a1bfda956ca56abeab7f361ceb463b9e6",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.13-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:5f1167bc9c04240fdf617c1dfbab732039729150a3fc6980b74cfc46bc7ac723"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2601720,
                    "digest": "sha256:3997176601fb5d5ac06922718668ede4acac00a5c0daef8a9099fd76ce93047f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281708,
                    "digest": "sha256:ceb31ae3a2ea55d5765f99a57baf87f25fd69a463051d14aa6cf1a57eff925c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:e959eca31141e89cb3b94dd613ad5a59a1969778e6ecf3f51d69e3d9eb193b3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107442998,
                    "digest": "sha256:6d7238e5cfafaea8dfe1132896a61885f2b29be6d36085bd6f333a99d3269e7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e8048c763c7d42d6089411101aa140d3810b0d6c88e605d1dfd0711c1ebee981"
                }
            ]
        },
        "1.14.13-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:e6b67284134a31e714b1d9c6a39fe667bc63d509a09932ba2277b8b47f1901d8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2583287,
                    "digest": "sha256:ae4c90d25da4580c1cd02a35a672d9113b17e063183b4148c463df4d33079192"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300147,
                    "digest": "sha256:b6d7f18e0586671723c28e56cf36592aa5648a7a31e3d4d01ae84be77848bb72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4ae516cb39ef6e279d954c657d6a8f2b7c2ecdbe4963ede8615f97b78e00dd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107062949,
                    "digest": "sha256:59d72688a1571e0bc3e7773927a67e91fa42f259cc42a08bc430320befdfc73e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:66ec58b13a17cfc054aa64d1c6d4f279858be029e15c61389a112d888fc923bf"
                }
            ]
        },
        "1.14.13-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:b7800757370af96cf2d953fff1167351d045942b115e5f34c9de7ad7decaa21b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2567018,
                    "digest": "sha256:ee52640a49e15b8b7c8edb66c2d048b26abdee8d828d6e5ef4e10a28cb15a84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281328,
                    "digest": "sha256:ffa6a14f4067d7797fd5cfb87803df1ad2a3d7625d0b843e97d16cb7603123a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3fb7c9b3bde5c297668741ef40758508b43d424457fdbd8fcf1feb93e32b22f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107062709,
                    "digest": "sha256:a5ae1beb46a04d388176d9ae0a5a60ce76de91c1e8d5741caaff2fb84ab733e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:a1d4cbfbd91304f8cdf02d8af26f7e6de9d6ce8c8d790432d69797c115d5c7aa"
                }
            ]
        },
        "1.14.13-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4617,
                "digest": "sha256:5f1167bc9c04240fdf617c1dfbab732039729150a3fc6980b74cfc46bc7ac723"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2601720,
                    "digest": "sha256:3997176601fb5d5ac06922718668ede4acac00a5c0daef8a9099fd76ce93047f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281708,
                    "digest": "sha256:ceb31ae3a2ea55d5765f99a57baf87f25fd69a463051d14aa6cf1a57eff925c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 152,
                    "digest": "sha256:e959eca31141e89cb3b94dd613ad5a59a1969778e6ecf3f51d69e3d9eb193b3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107442998,
                    "digest": "sha256:6d7238e5cfafaea8dfe1132896a61885f2b29be6d36085bd6f333a99d3269e7f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:e8048c763c7d42d6089411101aa140d3810b0d6c88e605d1dfd0711c1ebee981"
                }
            ]
        },
        "1.14.13-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7030,
                "digest": "sha256:03b9c098a6c90e2dde10be7d4555fba6d91260a15d528bfe81ecc90933526df3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48970492,
                    "digest": "sha256:15e71c2ae22f7fff5a03d5a2c1ccbee8b2526b04a21e1cff46ad70648272e773"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7386423,
                    "digest": "sha256:1aaa59f720edfbbd3dceca4a0253274b1730139ee512333e7ec6c74c77ae1a59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9883004,
                    "digest": "sha256:d930b55daa1d1253012758814d63e3c45e1eda80229b838a38e804e1aa47bbe2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51380119,
                    "digest": "sha256:950e64959dfb388a9874bb74ace538bd9da65024ea4fd0f99e2b995c57f1d976"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56778961,
                    "digest": "sha256:26fdb6f58c92c31b8a36f673fb66b9a831535bb25837f4f9f4b625fdd7c7cb96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105613299,
                    "digest": "sha256:575ab4480385ef0f8cd4cccaa08065d99cd3f231ca6a667af23c8fcde8b4b700"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:6659296d28cca56122ddd3778d450ad7380884317aa67b42503c71ed8ff16efb"
                }
            ]
        },
        "1.14.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:e8f32d33902bb71c0372fe3f566be6feeb09a679d039d32a300ffc8a679a1eff",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.14-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4613,
                "digest": "sha256:1cf10e2c4826b727452fdde48b40e43cfa211641e14c5c8842754ab8c634dcf7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602059,
                    "digest": "sha256:43901f1af0ef9db6b0bf30ac6f6dacd78bf1ecfeb47ad0a93aa2370fa8e62407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281704,
                    "digest": "sha256:f5c81f5f494120b8e4ca8a144d2d322b4757911b8d5b4891b44f9d856163581c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:81a1800090029431c885d4b76daa42ec2a49e4182d3fa414a23aa840667c5a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107127591,
                    "digest": "sha256:5c4a3cce071f513863603974bacc4dfe8457784de3c2a010bc8510bc78715afc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:7d46898a17363cf5bd4ab094320ee872f73e392b2414d56f799cbf438239157e"
                }
            ]
        },
        "1.14.14-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4615,
                "digest": "sha256:edf27f4c8ef52b35e20f426e787afb3407472fa7684b37eeb4864f37bfab027e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2583287,
                    "digest": "sha256:ae4c90d25da4580c1cd02a35a672d9113b17e063183b4148c463df4d33079192"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300147,
                    "digest": "sha256:b6d7f18e0586671723c28e56cf36592aa5648a7a31e3d4d01ae84be77848bb72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4ae516cb39ef6e279d954c657d6a8f2b7c2ecdbe4963ede8615f97b78e00dd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107139839,
                    "digest": "sha256:abbcbe7e8ffbdc19a4347b8aec8ae4f8dd4eff88ee8ef122e5d04b37ca7af317"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:c9549e2ffe39e41eb5edad9159f482b3b94d7eb97653c8de1d904d61e506412a"
                }
            ]
        },
        "1.14.14-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:b06089e436cd25f6f1261e3ab6b2b7d36425dec95dd7b0fbf026f4e027c723ea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2567018,
                    "digest": "sha256:ee52640a49e15b8b7c8edb66c2d048b26abdee8d828d6e5ef4e10a28cb15a84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281328,
                    "digest": "sha256:ffa6a14f4067d7797fd5cfb87803df1ad2a3d7625d0b843e97d16cb7603123a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3fb7c9b3bde5c297668741ef40758508b43d424457fdbd8fcf1feb93e32b22f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107139144,
                    "digest": "sha256:0677ba8a0d201a269e96c4dd5c86795a816b95daee5a4d02e46710683d2e6891"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:8a7172affbcb514dbfe2c752b6a0c694091b01be060049fd2505a590f7154987"
                }
            ]
        },
        "1.14.14-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4613,
                "digest": "sha256:1cf10e2c4826b727452fdde48b40e43cfa211641e14c5c8842754ab8c634dcf7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602059,
                    "digest": "sha256:43901f1af0ef9db6b0bf30ac6f6dacd78bf1ecfeb47ad0a93aa2370fa8e62407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281704,
                    "digest": "sha256:f5c81f5f494120b8e4ca8a144d2d322b4757911b8d5b4891b44f9d856163581c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:81a1800090029431c885d4b76daa42ec2a49e4182d3fa414a23aa840667c5a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107127591,
                    "digest": "sha256:5c4a3cce071f513863603974bacc4dfe8457784de3c2a010bc8510bc78715afc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:7d46898a17363cf5bd4ab094320ee872f73e392b2414d56f799cbf438239157e"
                }
            ]
        },
        "1.14.14-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7029,
                "digest": "sha256:339340cfa8eaad118726b5bd849c101974edaaed513a8ea8f338a6ff2150def6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48970492,
                    "digest": "sha256:15e71c2ae22f7fff5a03d5a2c1ccbee8b2526b04a21e1cff46ad70648272e773"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7386423,
                    "digest": "sha256:1aaa59f720edfbbd3dceca4a0253274b1730139ee512333e7ec6c74c77ae1a59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9883004,
                    "digest": "sha256:d930b55daa1d1253012758814d63e3c45e1eda80229b838a38e804e1aa47bbe2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51380119,
                    "digest": "sha256:950e64959dfb388a9874bb74ace538bd9da65024ea4fd0f99e2b995c57f1d976"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56778961,
                    "digest": "sha256:26fdb6f58c92c31b8a36f673fb66b9a831535bb25837f4f9f4b625fdd7c7cb96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105693946,
                    "digest": "sha256:461644e615c87c6ee66c249c29fd0cd8f452dff5d6223372030354c4a559d86f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:2bb01125cfdfdef33ee826822c528e8c832a6e91cc1aae44d82f77e3a4653347"
                }
            ]
        },
        "1.14.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:838d8cc4b3bb7097d9f7ae46146973a2f742c1dde6db201c916bbbffe60f162f",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.15-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:d7200035696195e913f7fdc99b21b100ae7861528874757f9ed0b98aa82aa339"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602059,
                    "digest": "sha256:43901f1af0ef9db6b0bf30ac6f6dacd78bf1ecfeb47ad0a93aa2370fa8e62407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281704,
                    "digest": "sha256:f5c81f5f494120b8e4ca8a144d2d322b4757911b8d5b4891b44f9d856163581c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:81a1800090029431c885d4b76daa42ec2a49e4182d3fa414a23aa840667c5a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107140812,
                    "digest": "sha256:86ee20b9961c969b300c1d0c9e32f5b2aa187218f86ef6d796cc06fb40ecfa8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fabd9ea5de2761c546556ca39451114fe320e24f14a31c3b44d7f39d89ecd545"
                }
            ]
        },
        "1.14.15-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:a2afab0fcc1f7e80a0126201819b02f07b0b113ab0204f46e5b504bf2101e9fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2583287,
                    "digest": "sha256:ae4c90d25da4580c1cd02a35a672d9113b17e063183b4148c463df4d33079192"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 300147,
                    "digest": "sha256:b6d7f18e0586671723c28e56cf36592aa5648a7a31e3d4d01ae84be77848bb72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:4ae516cb39ef6e279d954c657d6a8f2b7c2ecdbe4963ede8615f97b78e00dd0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107169562,
                    "digest": "sha256:856bbf65aa29d6e13ce128e575c225253a5dcdfb611565769b983dc79c262321"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cd21c074c5aa6bc5b65bc296821caa2052e4f46f58237ca4f1162691be71bb33"
                }
            ]
        },
        "1.14.15-alpine3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4616,
                "digest": "sha256:5e1606941b7d9ec2bd285fab7671258ce4fbc9c3098f3dde986607c4c76586a2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2567018,
                    "digest": "sha256:ee52640a49e15b8b7c8edb66c2d048b26abdee8d828d6e5ef4e10a28cb15a84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281328,
                    "digest": "sha256:ffa6a14f4067d7797fd5cfb87803df1ad2a3d7625d0b843e97d16cb7603123a7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:3fb7c9b3bde5c297668741ef40758508b43d424457fdbd8fcf1feb93e32b22f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107167993,
                    "digest": "sha256:a5a696d1f388bd06b07b2ab498f83854308f12365daa901fdf0e126ee7c267d9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8f27c1382d76303a3fe3c8e41dbeb9876963958b5719c07218367958d33cbbb0"
                }
            ]
        },
        "1.14.15-alpine3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 4614,
                "digest": "sha256:d7200035696195e913f7fdc99b21b100ae7861528874757f9ed0b98aa82aa339"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2602059,
                    "digest": "sha256:43901f1af0ef9db6b0bf30ac6f6dacd78bf1ecfeb47ad0a93aa2370fa8e62407"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 281704,
                    "digest": "sha256:f5c81f5f494120b8e4ca8a144d2d322b4757911b8d5b4891b44f9d856163581c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:81a1800090029431c885d4b76daa42ec2a49e4182d3fa414a23aa840667c5a38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 107140812,
                    "digest": "sha256:86ee20b9961c969b300c1d0c9e32f5b2aa187218f86ef6d796cc06fb40ecfa8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:fabd9ea5de2761c546556ca39451114fe320e24f14a31c3b44d7f39d89ecd545"
                }
            ]
        },
        "1.14.15-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7029,
                "digest": "sha256:1ec2e6492ade7552db272705d436c338c33ff16c7bb004d28d84a506af7a320e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48970386,
                    "digest": "sha256:fb61e252baf0cdce361b288d8df47eab4b2adb45935d61331700aa9281372c74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7399445,
                    "digest": "sha256:21893889b63220b2786e70a7182ba39dfc2fffcecd394424c4be2eba9d090798"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9883127,
                    "digest": "sha256:cadc5e0216d8dc7f2fc17b19146d9e168fadadf4acf3bfee694853596f8ee659"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51379480,
                    "digest": "sha256:e7c25bdb77d50c2365abbf0b825665a3320edce80f9ee8ce5985b29effa66c21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56788493,
                    "digest": "sha256:dbc4817940a6d8d1eee948db363ee62efe08ed91d295c8091add842212a9ac8b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105704805,
                    "digest": "sha256:bbbd83b215b44c21b5ba7320c2065550a1e635f91163fc1dff207fff585118ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 157,
                    "digest": "sha256:788d8e1f32201680a5853fa1444458bf428af0e49598b99093b9e9a836271ed7"
                }
            ]
        },
        "1.14.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:05ff4b4cb5e944838d4837ca214f21a793acd3f37d776b0c4c4be46292381c25",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.2-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:5fb71a9c5f9364eaae53facd485697aa1d6afc05ee10d3789f90b3e686e1e024"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131754635,
                    "digest": "sha256:b740a6c801ac078d5a8e6ecd7d6c250dc1597367b4426b9d3b3d20ab05b44b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:791aa96d58566b08b0752b97c24a2f95d300212fdfabcce9ea1bf47436c09005"
                }
            ]
        },
        "1.14.2-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:5fb71a9c5f9364eaae53facd485697aa1d6afc05ee10d3789f90b3e686e1e024"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131754635,
                    "digest": "sha256:b740a6c801ac078d5a8e6ecd7d6c250dc1597367b4426b9d3b3d20ab05b44b48"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:791aa96d58566b08b0752b97c24a2f95d300212fdfabcce9ea1bf47436c09005"
                }
            ]
        },
        "1.14.2-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:758cfaa7d9915a1871661671d7c821bd8330ba78264ca9880fa409fcd24e66d7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966486,
                    "digest": "sha256:070f0b30acfe8cf53f3aeaae5982c911acd4c4a652a456c849a94c66117d4067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7382266,
                    "digest": "sha256:5db7092766f19f5c47b8a2388225b82a8d95d39c4e0ae321805e2a5cf0c8b961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882148,
                    "digest": "sha256:643084632f50b88b1aea5263e63d7dff9175610fe2041ce83dcdbb3d926246d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51368440,
                    "digest": "sha256:4118b891b350fa9ce5f64fd71fe7161ade2a6f32705dbd623b014ff5198f96b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56714615,
                    "digest": "sha256:4053b3b15437fc70a4c2b72bf1c10fb32c4247d5561a3244b44b3d00185befe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105319805,
                    "digest": "sha256:735b4b0d681f052b9e74cf2f67dd95fff34d29ba00d1e6791276b08dbb961c03"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:037331277c487face11a19c0220951bf8eaeb6d0d029a2c713916a52b8e2c94e"
                }
            ]
        },
        "1.14.2-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5461,
                "digest": "sha256:a58faae274b66892b22bec948877750a28abdd8a05eeb675b3097841eaac8cbb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232081,
                    "digest": "sha256:dc69489da20ae5bdf6cefc772e7ff8420ffbd2c920a57165de6ead66d1a997e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325875,
                    "digest": "sha256:e8fe5c3a82fe7eb310483d893dd90a653f2b29688e70bb3a0000e8c208de755b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372587,
                    "digest": "sha256:4757a1c09293f132a58fe2f774191e2545fd945ba597ec8d9a399751180aeeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50511235,
                    "digest": "sha256:5ba95febc21c79324c26de8b0b5fd907b89a7799fd541030a61348f0fd2caf6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015657,
                    "digest": "sha256:ee9ea9a105379dcd08f8411ba786e6bd96d5230823b7a860a5953f6adbc335d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105319805,
                    "digest": "sha256:a4178fa86c14e5e4c529c62beb39992f5b2ace6ec8dd9270bb58a7cd03e74803"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:2455c062cb04cc14920cd8794d524ca0de4380b7ceb852cd651d15710560cfaa"
                }
            ]
        },
        "1.14.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:024cc4a6af31c092fcaea9d808f7a0e995aec180b69edbc0aee4620e2c95e293",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.3-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:e3cc158bc9e6d97e3ba4ded8961bf6d8a627b73ecb9c03cb65c92a37235317bb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131858758,
                    "digest": "sha256:953996d17e01ab26a510ab21d1b8e140a2a82a3a6d470890ee321abc0bd59fd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8ef8c1c28767148ade729d11932d2312b1410b36186d0a9cde1e36c9ba3d301e"
                }
            ]
        },
        "1.14.3-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3832,
                "digest": "sha256:e3cc158bc9e6d97e3ba4ded8961bf6d8a627b73ecb9c03cb65c92a37235317bb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131858758,
                    "digest": "sha256:953996d17e01ab26a510ab21d1b8e140a2a82a3a6d470890ee321abc0bd59fd3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:8ef8c1c28767148ade729d11932d2312b1410b36186d0a9cde1e36c9ba3d301e"
                }
            ]
        },
        "1.14.3-buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5456,
                "digest": "sha256:846058f104453d6c783dc66ba9a9e6eb258476674dd639e9bc9ece2065a19a44"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48966486,
                    "digest": "sha256:070f0b30acfe8cf53f3aeaae5982c911acd4c4a652a456c849a94c66117d4067"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7382266,
                    "digest": "sha256:5db7092766f19f5c47b8a2388225b82a8d95d39c4e0ae321805e2a5cf0c8b961"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9882148,
                    "digest": "sha256:643084632f50b88b1aea5263e63d7dff9175610fe2041ce83dcdbb3d926246d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51368440,
                    "digest": "sha256:4118b891b350fa9ce5f64fd71fe7161ade2a6f32705dbd623b014ff5198f96b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 56714615,
                    "digest": "sha256:4053b3b15437fc70a4c2b72bf1c10fb32c4247d5561a3244b44b3d00185befe5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105352429,
                    "digest": "sha256:e00bf6cc2451da3eea7356afe0114ce67b6709405080eb50450db4f2f4f06777"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:9e30edacfcd0a92040e83a4b48c2bcad82c5a5e0ae103590e9a688a788028f63"
                }
            ]
        },
        "1.14.3-stretch": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 5463,
                "digest": "sha256:b5f0984fe0e86d66600a5b3d691fcb8efcd51a88d678b280fc56f0a77c872d3c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45232081,
                    "digest": "sha256:dc69489da20ae5bdf6cefc772e7ff8420ffbd2c920a57165de6ead66d1a997e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 10325875,
                    "digest": "sha256:e8fe5c3a82fe7eb310483d893dd90a653f2b29688e70bb3a0000e8c208de755b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 4372587,
                    "digest": "sha256:4757a1c09293f132a58fe2f774191e2545fd945ba597ec8d9a399751180aeeb2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 50511235,
                    "digest": "sha256:5ba95febc21c79324c26de8b0b5fd907b89a7799fd541030a61348f0fd2caf6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46015657,
                    "digest": "sha256:ee9ea9a105379dcd08f8411ba786e6bd96d5230823b7a860a5953f6adbc335d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 105352402,
                    "digest": "sha256:3d6062ca903b4543aa81ef73bd493f27aa7a062d18bb723b9e300ed4bfb4d033"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:4f60d68ee6ce391215577a2c45fe1fcfe9ad629a5a6d55ffc4615d610ba4950c"
                }
            ]
        },
        "1.14.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.list.v2+json",
            "manifests": [
                {
                    "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                    "size": 1795,
                    "digest": "sha256:2ce92c03cebeb232354019b2fb02a8b8690f3f51b680ff9eadf0900169419394",
                    "platform": {
                        "architecture": "s390x",
                        "os": "linux"
                    }
                }
            ]
        },
        "1.14.4-alpine": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:e6c122c6573b9446756b9fa45785b8bb605d5e56fe6c8782ed1cf5e314ca7458"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2566189,
                    "digest": "sha256:8fb3d41b2e9a59630b51745f257cd2561f96bcd15cf309fcc20120d5fcee8c5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 283144,
                    "digest": "sha256:2094092570892a8483a3fc940b327cccddf0cb7affb2a628ef4c98e40b4830bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 154,
                    "digest": "sha256:2b64a1c2f9ba0751e3e55cf33ddc6f0fd325bce1e6d64ef921f6258c5115b3c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131814783,
                    "digest": "sha256:acc125fe27a23a8501491445468375e7ea9db946b45cbd911a05a65cfb7c3334"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 156,
                    "digest": "sha256:7129c3822665192c1533e7d5ab270717e256b1b9844d6fd116852b00a29058e9"
                }
            ]
        },
        "1.14.4-alpine3.11": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 3833,
                "digest": "sha256:8a20b7e16ccbe39a943ec4c9f23e0fc1f176702d2147efb589fc6625d560c4d7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 2582859,
                    "digest": "sha256:7184c046fdf17da4c16ca482e5ede36e1f2d41ac8cea9c036e488fd149d6e8e7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 301908,
                    "digest": "sha256:f4bb5699ff3d626466b57d4c92bbf8a5410490fcece2b350c368cad50778b96d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 153,
                    "digest": "sha256:bf86b8de56aab63659ca622083cd8174db3525f6baa42836863267efa18de0e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 131813328,
                    "digest": "sha256:35fc33aefc5654dc9f18f8874ec5df3f0054d95efb6068093b66a806c1a47e54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 155,
                    "digest": "sha256:cb93b54892812fb36828c107902c548f3819372e46c12a6ecc0a7f79d29bdfd7"
                }
            ]
        }
    },
    "tags": [
        "1",
        "1-alpine",
        "1-alpine3.10",
        "1-alpine3.11",
        "1-alpine3.12",
        "1-alpine3.13",
        "1-alpine3.14",
        "1-alpine3.15",
        "1-alpine3.16",
        "1-alpine3.17",
        "1-alpine3.18",
        "1-alpine3.19",
        "1-alpine3.20",
        "1-alpine3.6",
        "1-alpine3.7",
        "1-alpine3.8",
        "1-alpine3.9",
        "1-bookworm",
        "1-bullseye",
        "1-buster",
        "1-jessie",
        "1-onbuild",
        "1-stretch",
        "1.10",
        "1.10-alpine",
        "1.10-alpine3.7",
        "1.10-alpine3.8",
        "1.10-alpine3.9",
        "1.10-rc",
        "1.10-rc-alpine",
        "1.10-rc-alpine3.7",
        "1.10-rc-stretch",
        "1.10-stretch",
        "1.10.0",
        "1.10.0-alpine",
        "1.10.0-alpine3.7",
        "1.10.0-stretch",
        "1.10.1",
        "1.10.1-alpine",
        "1.10.1-alpine3.7",
        "1.10.1-stretch",
        "1.10.2",
        "1.10.2-alpine",
        "1.10.2-alpine3.7",
        "1.10.2-stretch",
        "1.10.3",
        "1.10.3-alpine",
        "1.10.3-alpine3.7",
        "1.10.3-alpine3.8",
        "1.10.3-stretch",
        "1.10.4",
        "1.10.4-alpine",
        "1.10.4-alpine3.7",
        "1.10.4-alpine3.8",
        "1.10.4-stretch",
        "1.10.5",
        "1.10.5-alpine",
        "1.10.5-alpine3.7",
        "1.10.5-alpine3.8",
        "1.10.5-stretch",
        "1.10.6",
        "1.10.6-alpine",
        "1.10.6-alpine3.7",
        "1.10.6-alpine3.8",
        "1.10.6-stretch",
        "1.10.7",
        "1.10.7-alpine",
        "1.10.7-alpine3.7",
        "1.10.7-alpine3.8",
        "1.10.7-stretch",
        "1.10.8",
        "1.10.8-alpine",
        "1.10.8-alpine3.7",
        "1.10.8-alpine3.8",
        "1.10.8-alpine3.9",
        "1.10.8-stretch",
        "1.10beta1",
        "1.10beta1-alpine",
        "1.10beta1-alpine3.7",
        "1.10beta1-stretch",
        "1.10beta2",
        "1.10beta2-alpine",
        "1.10beta2-alpine3.7",
        "1.10beta2-stretch",
        "1.10rc1",
        "1.10rc1-alpine",
        "1.10rc1-alpine3.7",
        "1.10rc1-stretch",
        "1.10rc2",
        "1.10rc2-alpine",
        "1.10rc2-alpine3.7",
        "1.10rc2-stretch",
        "1.11",
        "1.11-alpine",
        "1.11-alpine3.10",
        "1.11-alpine3.7",
        "1.11-alpine3.8",
        "1.11-alpine3.9",
        "1.11-buster",
        "1.11-rc",
        "1.11-rc-alpine",
        "1.11-rc-alpine3.7",
        "1.11-rc-alpine3.8",
        "1.11-rc-stretch",
        "1.11-stretch",
        "1.11.0",
        "1.11.0-alpine",
        "1.11.0-alpine3.7",
        "1.11.0-alpine3.8",
        "1.11.0-stretch",
        "1.11.1",
        "1.11.1-alpine",
        "1.11.1-alpine3.7",
        "1.11.1-alpine3.8",
        "1.11.1-stretch",
        "1.11.10",
        "1.11.10-alpine",
        "1.11.10-alpine3.8",
        "1.11.10-alpine3.9",
        "1.11.10-stretch",
        "1.11.11",
        "1.11.11-alpine",
        "1.11.11-alpine3.10",
        "1.11.11-alpine3.8",
        "1.11.11-alpine3.9",
        "1.11.11-stretch",
        "1.11.12",
        "1.11.12-alpine",
        "1.11.12-alpine3.10",
        "1.11.12-alpine3.9",
        "1.11.12-buster",
        "1.11.12-stretch",
        "1.11.13",
        "1.11.13-alpine",
        "1.11.13-alpine3.10",
        "1.11.13-alpine3.9",
        "1.11.13-buster",
        "1.11.13-stretch",
        "1.11.2",
        "1.11.2-alpine",
        "1.11.2-alpine3.7",
        "1.11.2-alpine3.8",
        "1.11.2-stretch",
        "1.11.3",
        "1.11.3-alpine",
        "1.11.3-alpine3.7",
        "1.11.3-alpine3.8",
        "1.11.3-stretch",
        "1.11.4",
        "1.11.4-alpine",
        "1.11.4-alpine3.7",
        "1.11.4-alpine3.8",
        "1.11.4-stretch",
        "1.11.5",
        "1.11.5-alpine",
        "1.11.5-alpine3.7",
        "1.11.5-alpine3.8",
        "1.11.5-alpine3.9",
        "1.11.5-stretch",
        "1.11.6",
        "1.11.6-alpine",
        "1.11.6-alpine3.8",
        "1.11.6-alpine3.9",
        "1.11.6-stretch",
        "1.11.7",
        "1.11.7-alpine",
        "1.11.7-alpine3.8",
        "1.11.7-alpine3.9",
        "1.11.7-stretch",
        "1.11.8",
        "1.11.8-alpine",
        "1.11.8-alpine3.8",
        "1.11.8-alpine3.9",
        "1.11.8-stretch",
        "1.11.9",
        "1.11.9-alpine",
        "1.11.9-alpine3.8",
        "1.11.9-alpine3.9",
        "1.11.9-stretch",
        "1.11beta1",
        "1.11beta1-alpine",
        "1.11beta1-alpine3.7",
        "1.11beta1-alpine3.8",
        "1.11beta1-stretch",
        "1.11beta2",
        "1.11beta2-alpine",
        "1.11beta2-alpine3.7",
        "1.11beta2-alpine3.8",
        "1.11beta2-stretch",
        "1.11beta3",
        "1.11beta3-alpine",
        "1.11beta3-alpine3.7",
        "1.11beta3-alpine3.8",
        "1.11beta3-stretch",
        "1.11rc1",
        "1.11rc1-alpine",
        "1.11rc1-alpine3.7",
        "1.11rc1-alpine3.8",
        "1.11rc1-stretch",
        "1.11rc2",
        "1.11rc2-alpine",
        "1.11rc2-alpine3.7",
        "1.11rc2-alpine3.8",
        "1.11rc2-stretch",
        "1.12",
        "1.12-alpine",
        "1.12-alpine3.10",
        "1.12-alpine3.11",
        "1.12-alpine3.9",
        "1.12-buster",
        "1.12-rc",
        "1.12-rc-alpine",
        "1.12-rc-alpine3.8",
        "1.12-rc-alpine3.9",
        "1.12-rc-stretch",
        "1.12-stretch",
        "1.12.0",
        "1.12.0-alpine",
        "1.12.0-alpine3.9",
        "1.12.0-stretch",
        "1.12.1",
        "1.12.1-alpine",
        "1.12.1-alpine3.9",
        "1.12.1-stretch",
        "1.12.10",
        "1.12.10-alpine",
        "1.12.10-alpine3.10",
        "1.12.10-alpine3.9",
        "1.12.10-buster",
        "1.12.10-stretch",
        "1.12.11",
        "1.12.11-alpine",
        "1.12.11-alpine3.10",
        "1.12.11-alpine3.9",
        "1.12.11-buster",
        "1.12.11-stretch",
        "1.12.12",
        "1.12.12-alpine",
        "1.12.12-alpine3.10",
        "1.12.12-alpine3.9",
        "1.12.12-buster",
        "1.12.12-stretch",
        "1.12.13",
        "1.12.13-alpine",
        "1.12.13-alpine3.10",
        "1.12.13-alpine3.9",
        "1.12.13-buster",
        "1.12.13-stretch",
        "1.12.14-alpine",
        "1.12.14-alpine3.10",
        "1.12.14-alpine3.11",
        "1.12.14-alpine3.9",
        "1.12.14-buster",
        "1.12.14-stretch",
        "1.12.15-alpine",
        "1.12.15-alpine3.10",
        "1.12.15-alpine3.11",
        "1.12.15-buster",
        "1.12.15-stretch",
        "1.12.16-alpine",
        "1.12.16-alpine3.10",
        "1.12.16-alpine3.11",
        "1.12.16-buster",
        "1.12.16-stretch",
        "1.12.17-alpine",
        "1.12.17-alpine3.10",
        "1.12.17-alpine3.11",
        "1.12.17-buster",
        "1.12.17-stretch",
        "1.12.2",
        "1.12.2-alpine",
        "1.12.2-alpine3.9",
        "1.12.2-stretch",
        "1.12.3",
        "1.12.3-alpine",
        "1.12.3-alpine3.9",
        "1.12.3-stretch",
        "1.12.4",
        "1.12.4-alpine",
        "1.12.4-alpine3.9",
        "1.12.4-stretch",
        "1.12.5",
        "1.12.5-alpine",
        "1.12.5-alpine3.9",
        "1.12.5-stretch",
        "1.12.6",
        "1.12.6-alpine",
        "1.12.6-alpine3.10",
        "1.12.6-alpine3.9",
        "1.12.6-stretch",
        "1.12.7",
        "1.12.7-alpine",
        "1.12.7-alpine3.10",
        "1.12.7-alpine3.9",
        "1.12.7-buster",
        "1.12.7-stretch",
        "1.12.8",
        "1.12.8-alpine",
        "1.12.8-alpine3.10",
        "1.12.8-alpine3.9",
        "1.12.8-buster",
        "1.12.8-stretch",
        "1.12.9",
        "1.12.9-alpine",
        "1.12.9-alpine3.10",
        "1.12.9-alpine3.9",
        "1.12.9-buster",
        "1.12.9-stretch",
        "1.12beta1",
        "1.12beta1-alpine",
        "1.12beta1-alpine3.8",
        "1.12beta1-stretch",
        "1.12beta2",
        "1.12beta2-alpine",
        "1.12beta2-alpine3.8",
        "1.12beta2-alpine3.9",
        "1.12beta2-stretch",
        "1.12rc1",
        "1.12rc1-alpine",
        "1.12rc1-alpine3.8",
        "1.12rc1-alpine3.9",
        "1.12rc1-stretch",
        "1.13",
        "1.13-alpine",
        "1.13-alpine3.10",
        "1.13-alpine3.11",
        "1.13-alpine3.12",
        "1.13-buster",
        "1.13-rc",
        "1.13-rc-alpine",
        "1.13-rc-alpine3.10",
        "1.13-rc-buster",
        "1.13-stretch",
        "1.13.0",
        "1.13.0-alpine",
        "1.13.0-alpine3.10",
        "1.13.0-buster",
        "1.13.0-stretch",
        "1.13.1",
        "1.13.1-alpine",
        "1.13.1-alpine3.10",
        "1.13.1-buster",
        "1.13.1-stretch",
        "1.13.10",
        "1.13.10-alpine",
        "1.13.10-alpine3.10",
        "1.13.10-alpine3.11",
        "1.13.10-buster",
        "1.13.10-stretch",
        "1.13.11",
        "1.13.11-alpine",
        "1.13.11-alpine3.10",
        "1.13.11-alpine3.11",
        "1.13.11-buster",
        "1.13.11-stretch",
        "1.13.12",
        "1.13.12-alpine",
        "1.13.12-alpine3.11",
        "1.13.12-alpine3.12",
        "1.13.12-buster",
        "1.13.12-stretch",
        "1.13.13",
        "1.13.13-alpine",
        "1.13.13-alpine3.11",
        "1.13.13-alpine3.12",
        "1.13.13-buster",
        "1.13.13-stretch",
        "1.13.14",
        "1.13.14-alpine",
        "1.13.14-alpine3.11",
        "1.13.14-alpine3.12",
        "1.13.14-buster",
        "1.13.14-stretch",
        "1.13.15",
        "1.13.15-alpine",
        "1.13.15-alpine3.11",
        "1.13.15-alpine3.12",
        "1.13.15-buster",
        "1.13.2",
        "1.13.2-alpine",
        "1.13.2-alpine3.10",
        "1.13.2-buster",
        "1.13.2-stretch",
        "1.13.3",
        "1.13.3-alpine",
        "1.13.3-alpine3.10",
        "1.13.3-buster",
        "1.13.3-stretch",
        "1.13.4",
        "1.13.4-alpine",
        "1.13.4-alpine3.10",
        "1.13.4-buster",
        "1.13.4-stretch",
        "1.13.5-alpine",
        "1.13.5-alpine3.10",
        "1.13.5-alpine3.11",
        "1.13.5-buster",
        "1.13.5-stretch",
        "1.13.6-alpine",
        "1.13.6-alpine3.10",
        "1.13.6-alpine3.11",
        "1.13.6-buster",
        "1.13.6-stretch",
        "1.13.7-alpine",
        "1.13.7-alpine3.10",
        "1.13.7-alpine3.11",
        "1.13.7-buster",
        "1.13.7-stretch",
        "1.13.8",
        "1.13.8-alpine",
        "1.13.8-alpine3.10",
        "1.13.8-alpine3.11",
        "1.13.8-buster",
        "1.13.8-stretch",
        "1.13.9",
        "1.13.9-alpine",
        "1.13.9-alpine3.10",
        "1.13.9-alpine3.11",
        "1.13.9-buster",
        "1.13.9-stretch",
        "1.13beta1",
        "1.13beta1-alpine",
        "1.13beta1-alpine3.10",
        "1.13beta1-buster",
        "1.13rc1",
        "1.13rc1-alpine",
        "1.13rc1-alpine3.10",
        "1.13rc1-buster",
        "1.13rc2",
        "1.13rc2-alpine",
        "1.13rc2-alpine3.10",
        "1.13rc2-buster",
        "1.14",
        "1.14-alpine",
        "1.14-alpine3.11",
        "1.14-alpine3.12",
        "1.14-alpine3.13",
        "1.14-buster",
        "1.14-rc-alpine",
        "1.14-rc-alpine3.10",
        "1.14-rc-alpine3.11",
        "1.14-rc-buster",
        "1.14-rc-stretch",
        "1.14-stretch",
        "1.14.0",
        "1.14.0-alpine",
        "1.14.0-alpine3.11",
        "1.14.0-buster",
        "1.14.0-stretch",
        "1.14.1",
        "1.14.1-alpine",
        "1.14.1-alpine3.11",
        "1.14.1-buster",
        "1.14.1-stretch",
        "1.14.10",
        "1.14.10-alpine",
        "1.14.10-alpine3.11",
        "1.14.10-alpine3.12",
        "1.14.10-buster",
        "1.14.11",
        "1.14.11-alpine",
        "1.14.11-alpine3.11",
        "1.14.11-alpine3.12",
        "1.14.11-buster",
        "1.14.12",
        "1.14.12-alpine",
        "1.14.12-alpine3.11",
        "1.14.12-alpine3.12",
        "1.14.12-buster",
        "1.14.13",
        "1.14.13-alpine",
        "1.14.13-alpine3.11",
        "1.14.13-alpine3.12",
        "1.14.13-alpine3.13",
        "1.14.13-buster",
        "1.14.14",
        "1.14.14-alpine",
        "1.14.14-alpine3.11",
        "1.14.14-alpine3.12",
        "1.14.14-alpine3.13",
        "1.14.14-buster",
        "1.14.15",
        "1.14.15-alpine",
        "1.14.15-alpine3.11",
        "1.14.15-alpine3.12",
        "1.14.15-alpine3.13",
        "1.14.15-buster",
        "1.14.2",
        "1.14.2-alpine",
        "1.14.2-alpine3.11",
        "1.14.2-buster",
        "1.14.2-stretch",
        "1.14.3",
        "1.14.3-alpine",
        "1.14.3-alpine3.11",
        "1.14.3-buster",
        "1.14.3-stretch",
        "1.14.4",
        "1.14.4-alpine",
        "1.14.4-alpine3.11"
    ],
    "configs": {
        "1-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39a4d7fde2cb00feeb49464c5b596f1a85593c82adb3bf6752d213da1a748045",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "864990cac112ff8c154132dd6a19e7f0d88e07c1d45080f94802e6af1754df1b",
            "container_config": {
                "Hostname": "864990cac112",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39a4d7fde2cb00feeb49464c5b596f1a85593c82adb3bf6752d213da1a748045",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:08.232457881Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:46:20.203032728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:00.878716461Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:07.041763351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:07.241000054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:08.009859113Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:08.232457881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:cb07a8561aaa480e8efc61f9c3504b0ec789650e9964dc831d9999848ee1a794",
                    "sha256:9273e0c269c0ce0221c8b3c1d6d8b584709134e055f20f8e9520b03ffc9ce149"
                ]
            }
        },
        "1-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f9090854a21fd4fbf14f5f2f541272257c96c64d4ec714150419c743e8a9083",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2d19d88ea7ef223bef76e155e33f5bfcb7f6666def4798b26b3c261320c25827",
            "container_config": {
                "Hostname": "2d19d88ea7ef",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f9090854a21fd4fbf14f5f2f541272257c96c64d4ec714150419c743e8a9083",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:56:37.553361683Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:55:24.546183009Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:31.252798468Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '064392433563660c73186991c0a315787688e7c38a561e26647686f89b6c30e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:56:36.561679189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:36.733663847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:37.354239106Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:56:37.553361683Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:4ac1a6d43975df3120dbe36fd242eb9cd15a98c45704135ae46fa8dee30dbf7f",
                    "sha256:19a1cc5d331940bc22481e2aa77c31a92d0c88020bbcb4de2819d5c5af667439"
                ]
            }
        },
        "1-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:067cb32d87458918a93f9afe09ff2090e9526c96b06f9d7c8eb118171bf0dcb5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9b164a6a365a7f821fe64d071ff79ed6e97084debaf4a25407f5b77ba7149b06",
            "container_config": {
                "Hostname": "9b164a6a365a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.16.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:067cb32d87458918a93f9afe09ff2090e9526c96b06f9d7c8eb118171bf0dcb5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-06-10T21:55:17.732341101Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-04-14T18:41:42.231850541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c73a5ff435939cdc9d621ee9dc2aa5a54a5f5e0241caae8dc948c03c423d9fef in / "
                },
                {
                    "created": "2021-04-14T18:41:42.531228376Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-14T20:46:59.767623842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-04-14T20:47:00.574055576Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-04-14T20:47:00.766569041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-04T01:28:45.963521138Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.16.5",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-10T21:55:02.372897877Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$apkArch' (likely packaging update needed)\"; exit 1 ;; \tesac; \t\turl='https://dl.google.com/go/go1.16.5.src.tar.gz'; \tsha256='7bfa7e5908c7cc9e75da5ddf3066d7cbcf3fd9fa51945851325eebc17f50ba80'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\t( \t\tcd /usr/local/go/src; \t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\tGO386= ./bootstrap.bash; \t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\tfi; \t\t./make.bash; \t\tif [ \"${GO386:-}\" = 'softfloat' ]; then \t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\tfi; \t); \t\tgo install std; \t\tapk del --no-network .build-deps; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-06-10T21:55:15.096408658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-10T21:55:15.575777496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-10T21:55:17.096505199Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-06-10T21:55:17.732341101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:56598bc8a01cafda62a425e0975d2e7dbd7f7b8254d417a27e12bcb74a8873b7",
                    "sha256:8f627db583f205c83b5adea5457b392997d725ab6adafbccba3f221c8105d062",
                    "sha256:ed4e17cc80f2eb4b696286792f3b2d79cceeb1c44ccc2e562354724b76accd3b",
                    "sha256:83c6d22471d9c0eb5e357d0e05756f85a79d8a24f49f3020145e4d61152286e4",
                    "sha256:255ed747a04d79cde5b49ad2ee55a8f74fe5a2d27f7c7e058d233d1373bc50da"
                ]
            }
        },
        "1-alpine3.13": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:788398689b9f66973923ae5cb00d922ea678f17e5ee3819f262ee8fdce24173d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ef5a3a7cc52ad6f870ceaee0676f6ad0b2428a874262ae249a06ad2f3b84af27",
            "container_config": {
                "Hostname": "ef5a3a7cc52a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.17.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:788398689b9f66973923ae5cb00d922ea678f17e5ee3819f262ee8fdce24173d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-11-12T22:00:40.19986451Z",
            "docker_version": "20.10.7",
            "history": [
                {
                    "created": "2021-11-12T16:41:44.024640008Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:637f327c9b07758709ef7dbc42eb472c888d221acde89b1c3775553864334d5c in / "
                },
                {
                    "created": "2021-11-12T16:41:44.252207759Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T21:59:06.472853612Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2021-11-12T21:59:06.997659877Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-11-12T21:59:07.1310793Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T21:59:07.256675219Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.17.3",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:00:34.612208488Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.17.3.src.tar.gz'; \t\tsha256='705c64251e5b25d5d55ede1039c6aa22bea40a7a931d14c370339853643c3df0'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\tGO386= ./bootstrap.bash; \t\t\t\texport GOROOT_BOOTSTRAP=\"/usr/local/go-$GOOS-$GOARCH-bootstrap\"; \t\t\t\t\"$GOROOT_BOOTSTRAP/bin/go\" version; \t\t\tfi; \t\t\t./make.bash; \t\t\tif [ -n \"${GO386:-}\" ]; then \t\t\t\trm -rf \"$GOROOT_BOOTSTRAP\"; \t\t\tfi; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2021-11-12T22:00:39.420754523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:00:39.542732163Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-12T22:00:40.069281016Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-11-12T22:00:40.19986451Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc6cd8843f463e8cdd51ab271ea82aac37f8a80e1f1047243797509f5aa02b4b",
                    "sha256:1a500fc3a54140fbbe6ee2b78e56726270838e2a8169ac925ea8bbae1433f48f",
                    "sha256:6c94c67d766f2d4dfb750045a97a0ccd450671dafa4d36ac036f46daa46d9c16",
                    "sha256:a897ee7946833c46a138c81801c8163677de811ab09c199d3ddc8513af34bb5d",
                    "sha256:d9b00481df6dd6c11ebefd39f77ff3c6bc2b785ebbdd351e4152646ba29bec84"
                ]
            }
        },
        "1-alpine3.14": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c3c646fcb7fdb603e1d35930c2a892ee8a36e664e061e18697631ecf4be41337",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dffc8508251ee23a9894f643938f0427195da2be8a08b9407f9f859c305616cb",
            "container_config": {
                "Hostname": "dffc8508251e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.18.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c3c646fcb7fdb603e1d35930c2a892ee8a36e664e061e18697631ecf4be41337",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-05-10T22:46:35.692386826Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-04-04T23:41:47.94877686Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0f70e0f0075bee67acb44e5ef01bf6b9df1f69a25b7aa6fd15bd5bb6ec5bcc9f in / "
                },
                {
                    "created": "2022-04-04T23:41:48.243866389Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-04-05T06:46:26.160922245Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-04-05T06:46:26.701488048Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2022-04-05T06:46:26.832948467Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:44:51.735405161Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.18.2",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:46:28.829143366Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.18.2.src.tar.gz'; \t\tsha256='2c44d03ea2c34092137ab919ba602f2c261a038d08eb468528a3f3a28e5667e2'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-05-10T22:46:34.870474639Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:46:34.989354418Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-10T22:46:35.4936677Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-05-10T22:46:35.692386826Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9e6e35a7444c8310119be011cbb265897a664e04b0d874e8b3a62c83a6720a7a",
                    "sha256:568ea3f445b2e4d24ba8df8ce6e9a49588c65d860d7cb79da57b594c20e31e86",
                    "sha256:2a7a58d7124fcd0fd36cfed673f87befd7dcd60f56a5edfc4cbb538fe7340ab0",
                    "sha256:4d74efcfb03c5f240ed335c9f71a657031896a4af532dd85e1bcc5001d1319e4",
                    "sha256:723754ac98ca7582d437789e1a68e7d4c3cba0899543c0efc910887a08f8b691"
                ]
            }
        },
        "1-alpine3.15": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:c6598c5105a7c436f338b27910c0aabb72f75b577088fe6c715b7f0431ef2f3d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "71693351b5af056456469de905d1ef06a0292b54148b82c5f4d48cecc80abf7b",
            "container_config": {
                "Hostname": "71693351b5af",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:c6598c5105a7c436f338b27910c0aabb72f75b577088fe6c715b7f0431ef2f3d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-11-16T20:00:02.120221783Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-09T17:41:54.675136491Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7489fa84133e97e4f40b13dd5159989b3594c9627d9147bfc4e33134944cc368 in / "
                },
                {
                    "created": "2022-08-09T17:41:54.92971285Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-10-06T20:18:59.508563083Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2022-11-16T19:58:20.165884241Z",
                    "created_by": "/bin/sh -c set -eux; \tif [ -e /etc/nsswitch.conf ]; then \t\tgrep '^hosts: files dns' /etc/nsswitch.conf; \telse \t\techo 'hosts: files dns' > /etc/nsswitch.conf; \tfi"
                },
                {
                    "created": "2022-11-16T19:58:20.276129057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T19:58:20.379076071Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19.3",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T19:59:56.242041183Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.19.3.src.tar.gz'; \t\tsha256='18ac263e39210bcf68d85f4370e97fb1734166995a1f63fb38b4f6e07d90d212'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2022-11-16T20:00:01.426647509Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:00:01.538533188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-16T20:00:01.992379325Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-11-16T20:00:02.120221783Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a468b1a8ae4becc0baa362ba4cfcb512d4faf3af57cfc1470befd0a76a5ae643",
                    "sha256:4b87aab150c4c80289a468281619c532863c195630f701c22a799cf918e29052",
                    "sha256:f5bdc73684bc038288595280155923ea810d6f8dd3505ead3ce65f3fb5faaa6f",
                    "sha256:ad31dd6e54affd3f845ab7790f2c098e52d0ef2c5548321da00995d5fae9cbd6",
                    "sha256:0a4325eea5af60c8834db40458ded00aeb3f37a22d18cc26754eb7165bb71fd4"
                ]
            }
        },
        "1-alpine3.16": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:56c3efdb6f153fb0acc0971f10666a56e57ea6f9b991c300943d809af01a0c15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "912f02f73e229322c7d122ddc97809b36540c49e19c4063a2992bb04aa259ee2",
            "container_config": {
                "Hostname": "912f02f73e22",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.20.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:56c3efdb6f153fb0acc0971f10666a56e57ea6f9b991c300943d809af01a0c15",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-05-02T18:40:27.153445408Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-03-29T17:42:02.243780722Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6c3b2d8f192a3a12e6df8bc7130bbc723b1a39aa71809d23b15cf80bc5135096 in / "
                },
                {
                    "created": "2023-03-29T17:42:02.485866296Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:38:35.846734686Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-05-02T18:38:36.013291899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:38:36.140631598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.20.4",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:21.125461405Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.20.4.src.tar.gz'; \t\tsha256='9f34ace128764b7a3a4b238b805856cc1b2184304df9e5690825b0710f4202d6'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-05-02T18:40:26.307460781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:26.464774795Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-02T18:40:26.973651208Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-05-02T18:40:27.153445408Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5014506b3af3273cfed592919390e04ea8b4d0b49577b2b5d35d0b72cd7dcff1",
                    "sha256:74a4220eee0e516a56cb8819ee7c5e4b92081a845d2d34b22908e1080ac956ef",
                    "sha256:9161061ca7dad19135123b8d4c72edd597017ba4555daf0f29bf5949297edaac",
                    "sha256:1c5636dd63aa3d329180cfc105bb1bbc5f598827a5ed5bf8687f491cf8e16cdb"
                ]
            }
        },
        "1-alpine3.17": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:9b7eb4e69837e6204e425c81411aa1dd3d357456a4b89d382d50d54241f5557f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "170b9a571e08befcf8e6c53c7298e68228114eaa3bdcef396160b3feb19dd972",
            "container_config": {
                "Hostname": "170b9a571e08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.21.5",
                    "GOTOOLCHAIN=local",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9b7eb4e69837e6204e425c81411aa1dd3d357456a4b89d382d50d54241f5557f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2023-12-05T20:46:04.632822669Z",
            "docker_version": "20.10.23",
            "history": [
                {
                    "created": "2023-11-30T22:42:16.911938418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf416048d22b9a0deecb508385355d79b8d5d12b655c600dbdc0948f7dcbb2c2 in / "
                },
                {
                    "created": "2023-11-30T22:42:17.265496047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T08:15:22.955075104Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2023-12-01T08:15:23.171258982Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:45:17.747991364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.21.5",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:45:46.979344572Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-amd64.tar.gz'; \t\t\tsha256='e2bc0b3e4b64111ec117295c088bde5f00eeed1567999ff77bc859d7df70078e'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'armv7') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-armv6l.tar.gz'; \t\t\tsha256='837f4bf4e22fcdf920ffeaa4abf3d02d1314e03725431065f4d44c46a01b42fe'; \t\t\t;; \t\t'aarch64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-arm64.tar.gz'; \t\t\tsha256='841cced7ecda9b2014f139f5bab5ae31785f35399f236b8b3e75dff2a2978d96'; \t\t\t;; \t\t'x86') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-386.tar.gz'; \t\t\tsha256='8f4dba9cf5c61757bbd7e9ebdb93b6a30a1b03f4a636a1ba0cc2f27b907ab8e1'; \t\t\t;; \t\t'ppc64le') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-ppc64le.tar.gz'; \t\t\tsha256='907b8c6ec4be9b184952e5d3493be66b1746442394a8bc78556c56834cd7c38b'; \t\t\t;; \t\t'riscv64') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-riscv64.tar.gz'; \t\t\tsha256='984d8f999f5019d15527a1a0e6b0c3ef879833e26dcd422ab0ef4d81ac486b96'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.21.5.linux-s390x.tar.gz'; \t\t\tsha256='9c4a81b72ebe44368813cd03684e1080a818bf915d84163abae2ed325a1b2dc0'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.21.5.src.tar.gz'; \t\tsha256='285cbbdf4b6e6e62ed58f370f3f6d8c30825d6e56c5853c66d3c23bcdb09db19'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version"
                },
                {
                    "created": "2023-12-05T20:46:01.917642882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOTOOLCHAIN=local",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:02.464235274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:02.97668491Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-05T20:46:04.258041203Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 1777 \"$GOPATH\""
                },
                {
                    "created": "2023-12-05T20:46:04.632822669Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:40215e59e4db577558e476d00e8f0042c09df156016f26ac24eb62ba79445381",
                    "sha256:84c27b86fbd39642389aa0629f1d3ddf7f21072744c4fcb71849771f771e9003",
                    "sha256:24a51d15544d3c78808b6b06990e18d645a0f5f57df7a9aed62dfbfc82dfeb45",
                    "sha256:60a00ee5315d9e1a91eca7160dd68ee8c6804a9745127682972b0c0a08a7600b"
                ]
            }
        },
        "1-alpine3.6": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.9.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bc9e2a05fa4712ac7bc3dec10f2afb952fdac52edf15875f594b9443003d240",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "94e59d74cdce0d417e3660e776588b19b78051b3c531f2caf2936e9c6128016e",
            "container_config": {
                "Hostname": "94e59d74cdce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.9.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1bc9e2a05fa4712ac7bc3dec10f2afb952fdac52edf15875f594b9443003d240",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T11:45:02.701009957Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-10-25T23:28:40.299820099Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6fbdff4b4c08600e192f5da9b67a02c58759237fb40525d70712104c80c34c48 in / "
                },
                {
                    "created": "2017-10-25T23:28:40.585242307Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-10-25T23:28:40.763038405Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-10-26T05:14:09.062794111Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T11:43:34.986385922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.9.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:43:35.304324457Z",
                    "created_by": "/bin/sh -c #(nop) COPY multi:5340852d126c59a835fc30c4253b181919d512298cbb0226c1562e4ec4eba94c in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T11:45:00.636689938Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0573a8df33168977185aa44173305e5a0450f55213600e94541604b75d46dc06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T11:45:01.334687018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:45:01.572811525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:45:02.255691305Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T11:45:02.441559831Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:45:02.701009957Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ddf9050ee71124e724bc111b56d54ddfddbbf71a2cf47d590bf1e319142cc89f",
                    "sha256:58c240bcb06e25b71d104ea231b127657dc8b46116e617c8e60800aa6ab64c77",
                    "sha256:a3d77a1547c5aa4fd0a2aa7516f8cb28cf5ffaac4edba02857b5493c30d0121a",
                    "sha256:fa203e30576647b2ca8628bf12e53c87bb72639ac01765851bf35fb2de88e7b0",
                    "sha256:618b6173539cb3a96571daaf02d39463ed049c80aeec8270a459517254f77ae8",
                    "sha256:0bb3fd178e11cec6769ab6fc446dbde8668799f74a388c8adb9a877361e68f89",
                    "sha256:5a6b16fb80b9746a409a7786b4802a2909669ba30a6d1b1ae2455dafc5bdbbdb"
                ]
            }
        },
        "1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6e1cdcce9ef5fe803d98c5478cda960daf3ed83bb2b1722525c05b949c5456e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a66debaab35b697e2534fcf5189101fc44e2c169fac078ad84252e9b12bf1694",
            "container_config": {
                "Hostname": "a66debaab35b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6e1cdcce9ef5fe803d98c5478cda960daf3ed83bb2b1722525c05b949c5456e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:45:54.535333298Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:44:01.682821317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:52.492027391Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:45:53.188424237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:53.403480118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:54.222686807Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:45:54.535333298Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:e0a2d9bea6755dca62c892247953095b82e478b0ca29ede3856ba70103e68517",
                    "sha256:23beb4ffed6e039d8c6447367a4154d876a752578d163d0c93c8e66ddf9ec746"
                ]
            }
        },
        "1-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:937f8420c7cc808c6532a49ee099cb667dd84f8d0b63564a9f6b02c61d9d4e4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7b3ac3e34af4d57600048d80d0f9433e249e8d998304102fc8f55747b67d03e6",
            "container_config": {
                "Hostname": "7b3ac3e34af4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:937f8420c7cc808c6532a49ee099cb667dd84f8d0b63564a9f6b02c61d9d4e4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:43:56.486400264Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:42:07.278313816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:43:54.076316701Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:43:54.989720386Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:43:55.227754692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:43:56.272337061Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:43:56.486400264Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:2be83fa4727a40922df60940eee02e21677f2a817f83e1cc677dffe2ed8dc48d",
                    "sha256:5f27d43c29cea76aa74e191bc02a35868467689af76752c36979cab931a3b6e5"
                ]
            }
        },
        "1-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a2c935bbedca415da6c2fca442d2e5b5323ca74e6c801cdb8326b2af57e13bb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0730b1fbce42a09510e324095152f755ea8bcdf8fffb312a2e6322ceb8b12df2",
            "container_config": {
                "Hostname": "0730b1fbce42",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a2c935bbedca415da6c2fca442d2e5b5323ca74e6c801cdb8326b2af57e13bb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-15T23:21:44.920169273Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-15T23:19:48.728852481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:21:42.318609755Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-15T23:21:43.044411904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:21:43.373851193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:21:44.497170266Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-15T23:21:44.920169273Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:1caa031d1e50ca5e7d3a5bd550cdd9fd6c69fae25d2ee5d2d952b93b4bb3ef7d",
                    "sha256:b2a29775f05eedcecaa2e193c927b77032e64e8575ed318fbc8a8f4eb3fce797"
                ]
            }
        },
        "1-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b19f8d5b0e4014da82f812826db86b25678a99494953eccd6f60ee2e83e49481",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6ea7992f81051242c7c6ee77675b17cdd356d8ec793e9883ffb342745a08cd1b",
            "container_config": {
                "Hostname": "6ea7992f8105",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.19",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:b19f8d5b0e4014da82f812826db86b25678a99494953eccd6f60ee2e83e49481",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2022-08-02T18:31:40.983930399Z",
            "docker_version": "20.10.12",
            "history": [
                {
                    "created": "2022-08-02T00:42:39.35126087Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d4184c5029732fe05023927be89b0c768483920c072c2069f92b3f4912c1c09b in / "
                },
                {
                    "created": "2022-08-02T00:42:41.868310871Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T01:10:23.444531342Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T01:10:28.057947098Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2022-08-02T01:10:47.414552861Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T18:31:17.531692977Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-02T18:31:19.680342528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T18:31:19.781496117Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.19",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T18:31:35.108241723Z",
                    "created_by": "/bin/sh -c set -eux; \tarch=\"$(dpkg --print-architecture)\"; arch=\"${arch##*-}\"; \turl=; \tcase \"$arch\" in \t\t'amd64') \t\t\turl='https://dl.google.com/go/go1.19.linux-amd64.tar.gz'; \t\t\tsha256='464b6b66591f6cf055bc5df90a9750bf5fbc9d038722bb84a9d56a2bea974be6'; \t\t\t;; \t\t'armel') \t\t\texport GOARCH='arm' GOARM='5' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\turl='https://dl.google.com/go/go1.19.linux-armv6l.tar.gz'; \t\t\tsha256='25197c7d70c6bf2b34d7d7c29a2ff92ba1c393f0fb395218f1147aac2948fb93'; \t\t\t;; \t\t'arm64') \t\t\turl='https://dl.google.com/go/go1.19.linux-arm64.tar.gz'; \t\t\tsha256='efa97fac9574fc6ef6c9ff3e3758fb85f1439b046573bf434cccb5e012bd00c8'; \t\t\t;; \t\t'i386') \t\t\turl='https://dl.google.com/go/go1.19.linux-386.tar.gz'; \t\t\tsha256='6f721fa3e8f823827b875b73579d8ceadd9053ad1db8eaa2393c084865fb4873'; \t\t\t;; \t\t'mips64el') \t\t\texport GOARCH='mips64le' GOOS='linux'; \t\t\t;; \t\t'ppc64el') \t\t\turl='https://dl.google.com/go/go1.19.linux-ppc64le.tar.gz'; \t\t\tsha256='92bf5aa598a01b279d03847c32788a3a7e0a247a029dedb7c759811c2a4241fc'; \t\t\t;; \t\t's390x') \t\t\turl='https://dl.google.com/go/go1.19.linux-s390x.tar.gz'; \t\t\tsha256='58723eb8e3c7b9e8f5e97b2d38ace8fd62d9e5423eaa6cdb7ffe5f881cb11875'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.19.src.tar.gz'; \t\tsha256='9419cc70dc5a2523f29a77053cafff658ed21ef3561d9b6b020280ebceab28b9'; \t\techo >&2; \t\techo >&2 \"warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source\"; \t\techo >&2; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2022-08-02T18:31:40.260167994Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T18:31:40.371557514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T18:31:40.852798158Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2022-08-02T18:31:40.983930399Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:188e839101baf508913aa7489c7484515726aaab8ba237cca3e81ac83768e956",
                    "sha256:eaba624118edf09b4ecb45559900fe0c84772537c9f13b7563636b8205ddbff4",
                    "sha256:5081a78a7b9b795c9d10f7c467a45537f2360799d6ff532408bfe31b10dd3d3f",
                    "sha256:ac95738d5b6869f821e8d1a9049d44be7702f57456f6f546320487853c9cc0db",
                    "sha256:6bdf866cee2b8a1b8f618cbf2e0f2a54366e3c3a911c97e37c6c11033871452d",
                    "sha256:4dc6caa11f6809c5447e94693d1544e7f158e5126f12f7def7e96ab737c75926",
                    "sha256:a3b54d0872ad2489b7b0e010a56d59c082c1dc590071312a84325152b43a0a16"
                ]
            }
        },
        "1-jessie": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:505ee57ac112a9741703733811971a8cdad198452848d399f93b222ee485daab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "6dd571cd0b4ed74e2cf16fd5f7c74a7d4584512da9e572318e03aa1821740829",
            "container_config": {
                "Hostname": "6dd571cd0b4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:505ee57ac112a9741703733811971a8cdad198452848d399f93b222ee485daab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-07-25T06:24:27.000001576Z",
            "docker_version": "17.06.0-ce",
            "history": [
                {
                    "created": "2017-07-25T05:21:33.432726424Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3983c1d6d2f183fa862094a95c35731af3932254c609a259f0dc90620c567358 in / "
                },
                {
                    "created": "2017-07-25T05:21:33.79495703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T05:56:03.968554081Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-25T05:56:04.587154767Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T05:56:33.01736089Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-25T06:24:18.738290534Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-25T06:24:18.986892503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:25.614380896Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-07-25T06:24:25.98488214Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:26.127367733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:26.620362752Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-07-25T06:24:26.794604085Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:27.000001576Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ed3686593307418222c99169effeb3b9a7456e583e9c7021b181a044674e08ae",
                    "sha256:e9623805ce5181a7ec957e81ec4a5ebeb9474ef33889a656281fa41762e1a871",
                    "sha256:9097349ff6946b1b68fde2ead90a424918c3d3c031418d6409cf4ebddf945bec",
                    "sha256:4550253c80afc43a30b18dfc393bb0e3e29c355864f8e8772c8924eeef2b6fa5",
                    "sha256:ddfb87615320ca21c3598e96006b11efbc006d7fbaf622e4b963883490a67cb2",
                    "sha256:16699955796981a0748e0ca333e8c3753333454874b72c9f821332e97fab34a6",
                    "sha256:18f6b6a3677092c9ea23ccb8002f13e3f18f86c77330db3cea70dadc3de43322"
                ]
            }
        },
        "1-onbuild": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "go-wrapper",
                    "run"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9af8a445999ca9886311951faccfde7c4ab3d3dd8adbf43c45002f4b13d23876",
                "Volumes": null,
                "WorkingDir": "/go/src/app",
                "Entrypoint": null,
                "OnBuild": [
                    "COPY . /go/src/app",
                    "RUN go-wrapper download",
                    "RUN go-wrapper install"
                ],
                "Labels": null
            },
            "container": "43471a2f25c64e0ad7f7da006192b51044b8cc8d35c7791be13110acdd0fff66",
            "container_config": {
                "Hostname": "43471a2f25c6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.8.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) ",
                    "ONBUILD RUN go-wrapper install"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9af8a445999ca9886311951faccfde7c4ab3d3dd8adbf43c45002f4b13d23876",
                "Volumes": null,
                "WorkingDir": "/go/src/app",
                "Entrypoint": null,
                "OnBuild": [
                    "COPY . /go/src/app",
                    "RUN go-wrapper download",
                    "RUN go-wrapper install"
                ],
                "Labels": {}
            },
            "created": "2017-07-25T06:24:28.77872044Z",
            "docker_version": "17.06.0-ce",
            "history": [
                {
                    "created": "2017-07-25T05:21:33.432726424Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3983c1d6d2f183fa862094a95c35731af3932254c609a259f0dc90620c567358 in / "
                },
                {
                    "created": "2017-07-25T05:21:33.79495703Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T05:56:03.968554081Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-25T05:56:04.587154767Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg2 \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T05:56:33.01736089Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-25T06:24:18.738290534Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-07-25T06:24:18.986892503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.8.3",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:25.614380896Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1862f4c3d3907e59b04a757cfda0ea7aa9ef39274af99a784f5be843c80c6772' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c30a3e24736ca776fc6314e5092fb8584bd3a4a2c2fa7307ae779ba2735e668' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ff4895eb68fb1daaec41c540602e8bb4c1e8bb2f0e7017367171913fc9995ed2' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e5fb00adfc7291e657f1f3d31c09e74890b5328e6f991a3f395ca72a8c4dc0b3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e2ec3e7c293701b57ca1f32b37977ac9968f57b3df034f2cc2d531e80671e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='5f5dea2447e7dcfdc50fa6b94c512e58bfba5673c039259fd843f68829d99fa6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-07-25T06:24:25.98488214Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:26.127367733Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:26.620362752Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-07-25T06:24:26.794604085Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:27.000001576Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:f6191f2c86edc9343569339f101facba47e886e33e29d70da6916ca6b1101a53 in /usr/local/bin/ "
                },
                {
                    "created": "2017-07-25T06:24:28.090484941Z",
                    "created_by": "/bin/sh -c mkdir -p /go/src/app"
                },
                {
                    "created": "2017-07-25T06:24:28.235130504Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go/src/app",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:28.382732593Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"go-wrapper\" \"run\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:28.535791673Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD COPY . /go/src/app",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:28.659283565Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD RUN go-wrapper download",
                    "empty_layer": true
                },
                {
                    "created": "2017-07-25T06:24:28.77872044Z",
                    "created_by": "/bin/sh -c #(nop)  ONBUILD RUN go-wrapper install",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ed3686593307418222c99169effeb3b9a7456e583e9c7021b181a044674e08ae",
                    "sha256:e9623805ce5181a7ec957e81ec4a5ebeb9474ef33889a656281fa41762e1a871",
                    "sha256:9097349ff6946b1b68fde2ead90a424918c3d3c031418d6409cf4ebddf945bec",
                    "sha256:4550253c80afc43a30b18dfc393bb0e3e29c355864f8e8772c8924eeef2b6fa5",
                    "sha256:ddfb87615320ca21c3598e96006b11efbc006d7fbaf622e4b963883490a67cb2",
                    "sha256:16699955796981a0748e0ca333e8c3753333454874b72c9f821332e97fab34a6",
                    "sha256:18f6b6a3677092c9ea23ccb8002f13e3f18f86c77330db3cea70dadc3de43322",
                    "sha256:9456a6970d2c1d0c56197418bd1d1b8f507c725558b4cfec5e978c5191170f6a"
                ]
            }
        },
        "1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a3982157e3747f171feed6179fbf8536b9d9b1ffb1a9e193883c2560facc3645",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "74ae8a26911eb65345cf8718850e9c227cd83f0609cb84cb2b20ad81b6f369ad",
            "container_config": {
                "Hostname": "74ae8a26911e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a3982157e3747f171feed6179fbf8536b9d9b1ffb1a9e193883c2560facc3645",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:42:39.571725612Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:44:05.164487785Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce4b8c76522cbe8599502985424901aee9d30d37296761d47dbcb9b0770f7aa2 in / "
                },
                {
                    "created": "2020-06-09T01:44:08.233927505Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:13:24.25262502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:13:28.631359651Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:13:54.156684337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:58:25.803725287Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:09:08.41560371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:19.708983092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:33.870036293Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='5c566ddc2e0bcfc25c26a5dc44a440fcc0177f7350c1f01952b34d5989a0d287' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='cab39cc0fdf9731476a339af9d7bcd8fc661bfa323abb1ce9d1633fb31daeb07' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='291bccfd7d7f1915599bbcc90e49d9fccfcb0004b7c62a2f5cdf0f96a09d6a3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='17b2c4e26bd3a82a0a44499ae2d36e3f2155d0fe2f6b9a14ac6b7c5afac3ca6a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eb4c84e7b6aa9edb966c467dd6764d131a57d27afbd87cc8f6d10535df9e898' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cb1f2d001ce15e51f7c4bd43f15045ea23d49268010bb981110242a532138749' ;; \t\t*) goRelArch='src'; goRelSha256='73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-17T02:42:38.403882732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:38.609723095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:39.344369434Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:42:39.571725612Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2c98919d330c2fbdf952180eb94af6ab93836482a5e74dc238ec6060abe6a77",
                    "sha256:f05945093c2b7f0ea547a8e994d0ba3d3f92cde2872edb0be6a38215fdb23e71",
                    "sha256:a459d0c1c28b387f1bcbf08546ac4c4d1469ea0f5defebbe90b146c24c27bdc3",
                    "sha256:45473c26d94be3fc63a6649c5c0a5f43a513079c17f0e9298649274fdda388c8",
                    "sha256:bdf94b8a07de978153bb3f28946de7961e173deb38e9ca78d8d4cec19ad0514a",
                    "sha256:c2687e6ce43c53a35d516172c965b83c8c82574f42c91958de502ea81204ba3f",
                    "sha256:a2a56959d142c62018d79928c717e21ca7dcb0eada2c95bb5dfb65c005cd9a23"
                ]
            }
        },
        "1.10-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "462a3fd93f27a7f28a9ef84dd0c2db9fa4ef6973a8f38f3b45c634febc71325b",
            "container_config": {
                "Hostname": "462a3fd93f27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:55.001867529Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T12:53:37.867826475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:52.332320508Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:53.225237547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:53.502225343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:54.81194503Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:55.001867529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:fd31e1899c1177d14e1135e73ee8efb3f2d2a502462b6fde8b838067128773fc",
                    "sha256:77bf5b0b1d32e443b7b20365cc22c9ea6b61d6cdf9cc61bbf80ef9161d4498b4"
                ]
            }
        },
        "1.10-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05ab776571c9bb45f1816469c77e26a801c68927c61a77978481b1265468592d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "19d3a62505132c20a9679f96f2bb7fc398f60acabdca8b2c74bdf221eef4c06f",
            "container_config": {
                "Hostname": "19d3a6250513",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05ab776571c9bb45f1816469c77e26a801c68927c61a77978481b1265468592d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:50:02.635109858Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:48:28.471177583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:50:00.372729122Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:50:00.970888295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:50:01.268863017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:50:02.412149295Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:50:02.635109858Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:d1899a8bb78bdc060761a456ae9f25dc35c2fdd007853d02d052ec07f36a8c21",
                    "sha256:a31241f63ae5efb29896d101b87b6026dd37606cc5cb3996763993797ba4ae03"
                ]
            }
        },
        "1.10-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c81221389f5ffacca46247aeb61815ab56b294267a4f5623bdd0fbbb1ac8ff1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43f5aff82163345979054aebb83f5c265bc31d87c0473c155ffe1e43547826b1",
            "container_config": {
                "Hostname": "43f5aff82163",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c81221389f5ffacca46247aeb61815ab56b294267a4f5623bdd0fbbb1ac8ff1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:48:16.316009162Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:46:33.213241973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:48:14.627853224Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:48:15.20032185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:48:15.34821549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:48:16.1195506Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:48:16.316009162Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:9d500df7a5bfdf506c20b6f4bfeb24299dc7b68687bee3a99c3bbce411238a50",
                    "sha256:dfa0909ca0040f4a64aad8d2cc70afc29fc467660539fc0752a6a144dc309189"
                ]
            }
        },
        "1.10-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "462a3fd93f27a7f28a9ef84dd0c2db9fa4ef6973a8f38f3b45c634febc71325b",
            "container_config": {
                "Hostname": "462a3fd93f27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:55.001867529Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T12:53:37.867826475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:52.332320508Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:53.225237547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:53.502225343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:54.81194503Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:55.001867529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:fd31e1899c1177d14e1135e73ee8efb3f2d2a502462b6fde8b838067128773fc",
                    "sha256:77bf5b0b1d32e443b7b20365cc22c9ea6b61d6cdf9cc61bbf80ef9161d4498b4"
                ]
            }
        },
        "1.10-rc-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "31237838cc8704011cf3542b5159604e440b91f5645be84f8fb6287ba147ce01",
            "container_config": {
                "Hostname": "31237838cc87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T11:41:42.738067708Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T11:39:53.867557269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:39:54.128704737Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T11:41:41.004725276Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T11:41:41.67932171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:41.860246582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:42.539673705Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T11:41:42.738067708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:9424cedaa2721abc3ac5d5062f224362a4c72b940c5e48bc5ec438744e012aa6",
                    "sha256:d3c020f6ed22d9319892d9491785646045d2ce71afa1c6a1667565c760216a44",
                    "sha256:a81e9525ce108b9dae22a8068b3949776cefe734877a9b07217735bffaa8d26b"
                ]
            }
        },
        "1.10-rc-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "31237838cc8704011cf3542b5159604e440b91f5645be84f8fb6287ba147ce01",
            "container_config": {
                "Hostname": "31237838cc87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T11:41:42.738067708Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T11:39:53.867557269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:39:54.128704737Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T11:41:41.004725276Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T11:41:41.67932171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:41.860246582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:42.539673705Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T11:41:42.738067708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:9424cedaa2721abc3ac5d5062f224362a4c72b940c5e48bc5ec438744e012aa6",
                    "sha256:d3c020f6ed22d9319892d9491785646045d2ce71afa1c6a1667565c760216a44",
                    "sha256:a81e9525ce108b9dae22a8068b3949776cefe734877a9b07217735bffaa8d26b"
                ]
            }
        },
        "1.10-rc-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:703490f759215e6cd81d950a996254e815a87a705374af359c028b5bf9264bfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9945088707d95f3b49861bbcbd0eb23653bddd507f487e6b1168166de4333245",
            "container_config": {
                "Hostname": "9945088707d9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:703490f759215e6cd81d950a996254e815a87a705374af359c028b5bf9264bfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T08:53:14.059578025Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T06:24:07.622849519Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01afc5861263642b3ae4beb3dedd40e7edb1e65d86c4368a502a15247a39a3c1 in / "
                },
                {
                    "created": "2018-02-15T06:24:07.969727526Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T06:54:44.16659093Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T06:54:50.152841679Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T06:55:20.498593569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T08:53:02.273813279Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T08:53:02.583003727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T08:53:12.478385493Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T08:53:12.951717545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T08:53:13.103365587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T08:53:13.881052712Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T08:53:14.059578025Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:91dc17f7d54f55625ff91a35425bc9eb925302a263690d3ece240390eaecf588",
                    "sha256:281b82f07010b8bb1b76b5ceda2b7521464067d5b799bdcea0e3b4a8a7f2f0de",
                    "sha256:a3ac8e9d1720d2bb52cd746bd0eba8999e644f23bd8fbf91e5e6c567f259f632",
                    "sha256:09ac3adcd94e3c28c81426e2a7523fc3ad8412954bc1529cb4a0af67fe2a6301",
                    "sha256:d46279babc285a0a142170c134a4a96db06a8aaa7a44252a416e5517cf10af37",
                    "sha256:94b0728c8b86ba06a97624a1f7eb844725d3520882b497d7f9b9182f921ce2b0",
                    "sha256:7a5b753d3545cd6e7d86610a7ba3935e5e548bec4b36dcea4a97b66e49434065"
                ]
            }
        },
        "1.10-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1717f93aaac89ca1403226ac0b9f97b0e8c600f2ae5625029f544d6deae4c990",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08e34c204b695663f78a7d3c645a87bb6f5e5ed02e125cbc78d7eb8a69958a93",
            "container_config": {
                "Hostname": "08e34c204b69",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1717f93aaac89ca1403226ac0b9f97b0e8c600f2ae5625029f544d6deae4c990",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T21:43:47.687474767Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T12:43:08.313557111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8c452240b3657ec4cc6568239a4d933bc75fd958464a3950f67912097968fff8 in / "
                },
                {
                    "created": "2019-02-06T12:43:08.732890042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T15:27:50.46145522Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T15:27:54.717646277Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T15:28:21.159991728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:42:50.018026485Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:43:38.163193004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:46.238593907Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T21:43:46.715392004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:46.875157628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:47.50790096Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T21:43:47.687474767Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b999405f276ee6dd7eae11f1695f0caf65cf0a5c8396eda7277c729522b82e7",
                    "sha256:d4087f0b598285864381402b67787b7b472ffef34afcb30e5a33e9b22e5d7236",
                    "sha256:b53459201f5ee601fd8f00564ea9c19680d07860ab3b4ffba3bcbee5429a6676",
                    "sha256:7343b78f933a48ec3af11ee27bbe8e487703c0962e56aaa10d009cb83a841006",
                    "sha256:7cbcdd99ed08d3cd9343ae21e4bde979ac73ee1bbd1e8ecb0705149a802d66e6",
                    "sha256:aa5210f471231781730a0a07e795f971eeac5abdcf0368e7e95d8e1acf11ffa9",
                    "sha256:0f8b559bef2a9d8362c0d36a4ddce31dedcdbb809e08e6acd96f7d4bc592b2e5"
                ]
            }
        },
        "1.10.0-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b373b46eedac452409056673b77dd660c1cfde6d272e7c9cb37679f8c64ad70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ccae2717f5bba28e3002e727cabe7db245e9308ba49b573ab1c8cc0b53eb79cf",
            "container_config": {
                "Hostname": "ccae2717f5bb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b373b46eedac452409056673b77dd660c1cfde6d272e7c9cb37679f8c64ad70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-18T11:40:51.502362938Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-18T11:39:43.061506492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-18T11:39:43.290368553Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-18T11:40:50.138690241Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-18T11:40:50.710398428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-18T11:40:50.857778375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-18T11:40:51.338134122Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-18T11:40:51.502362938Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:81eb7d61ae1b59ec0cf55b1fa5d16201285d419d150c6ea34e9dad27cb57ac24",
                    "sha256:e27e160cda99bc5ebbc0a860a132fe68ac4b57fa1241ed9d31ae12460959da1d",
                    "sha256:25c6ac69381bc9459a689595b3c9b88dd5fbad0ccc0adf91e80b1c4514e27c29"
                ]
            }
        },
        "1.10.0-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b373b46eedac452409056673b77dd660c1cfde6d272e7c9cb37679f8c64ad70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ccae2717f5bba28e3002e727cabe7db245e9308ba49b573ab1c8cc0b53eb79cf",
            "container_config": {
                "Hostname": "ccae2717f5bb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b373b46eedac452409056673b77dd660c1cfde6d272e7c9cb37679f8c64ad70",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-18T11:40:51.502362938Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-18T11:39:43.061506492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-18T11:39:43.290368553Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-18T11:40:50.138690241Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-18T11:40:50.710398428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-18T11:40:50.857778375Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-18T11:40:51.338134122Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-18T11:40:51.502362938Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:81eb7d61ae1b59ec0cf55b1fa5d16201285d419d150c6ea34e9dad27cb57ac24",
                    "sha256:e27e160cda99bc5ebbc0a860a132fe68ac4b57fa1241ed9d31ae12460959da1d",
                    "sha256:25c6ac69381bc9459a689595b3c9b88dd5fbad0ccc0adf91e80b1c4514e27c29"
                ]
            }
        },
        "1.10.0-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a04e2bb49f3515b68119c2b591c5f2ba26edb736079f2f4b80a43c9ba3b0406e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ee4305ab5c2a6943a4ed2c0d3065aa36579f4a6c996d083e03829f4d0821924e",
            "container_config": {
                "Hostname": "ee4305ab5c2a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a04e2bb49f3515b68119c2b591c5f2ba26edb736079f2f4b80a43c9ba3b0406e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-03-14T08:17:26.470696642Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-03-14T05:23:49.784726538Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d1edaf8dfadb3f8f127a53726a33b0679e90f8d66b891fa1434e47535999cc2 in / "
                },
                {
                    "created": "2018-03-14T05:23:50.129592322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T05:54:59.760390965Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T05:55:09.408278022Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-03-14T05:55:42.262068032Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T08:17:14.74366828Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-03-14T08:17:15.029894907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T08:17:24.90189226Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6ff665a9ab61240cf9f11a07e03e6819e452a618a32ea05bbb2c80182f838f4f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='efb47e5c0e020b180291379ab625c6ec1c2e9e9b289336bc7169e6aa1da43fd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2d26a9f41fd80eeb445cc454c2ba6b3d0db2fc732c53d7d0427a9f605bfc55a1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1e22e2fbcb3e551e0bf59d0f8aeb4b3f2df86714f09d2acd260c6597c43beee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='71cde197e50afe17f097f81153edb450f880267699f22453272d184e0f4681d7' ;; \t\t*) goRelArch='src'; goRelSha256='f3de49289405fda5fd1483a8fe6bd2fa5469e005fd567df64485c4fa000c7f24'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-03-14T08:17:25.458530946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T08:17:25.676784508Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-03-14T08:17:26.284006197Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-03-14T08:17:26.470696642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:99a23dda2a8822d1f28071e42532359b6c7fee7b7791deff7cccea15a97e0ffa",
                    "sha256:46c92c76dcfbbfc1830826632e8af59a03cb4d3bc08f228d53cadcc77cb96f57",
                    "sha256:6fe85d289bb2b11f052218510dce8ceefcbe7987c5386fa2b177998ddde5f5f9",
                    "sha256:f2c4f5013f1c73621e764c2275a482f837a055867787ccdbc8bb3a2c22efa6a0",
                    "sha256:730b71bc88a93c2d0c714185a8ec57b8a22a03abd227577b715c0824d496644d",
                    "sha256:72f44eae2e0a153ab064400c99358de552ddb70cdcc81687afcaf172177df8cd",
                    "sha256:ea9ce1e85ab6e8a39360a42c67409407bad0920e2fbd679b912fef18f2ff6580"
                ]
            }
        },
        "1.10.1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35fd0104556631fd5da00aa8ae0dd1f411120433244bcefc8d5bcff1f84b9d9c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e537cb1836433e601e94c12ff36a43696941f1b9024ce909010c503f3378ac3c",
            "container_config": {
                "Hostname": "e537cb183643",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35fd0104556631fd5da00aa8ae0dd1f411120433244bcefc8d5bcff1f84b9d9c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-12T11:47:38.97380902Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-04-02T16:41:21.675453598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T11:47:37.483167819Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-12T11:47:38.105825067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T11:47:38.265882043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T11:47:38.770090304Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-12T11:47:38.97380902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:bc06487b975df7706a2304d9aba6c8669c90f1eb5e7d2c346d06f0d1c5245027",
                    "sha256:78c2e9754513ee350e296b7b2ef5e662ff385f160db7bf366b64b845e9d2a733"
                ]
            }
        },
        "1.10.1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35fd0104556631fd5da00aa8ae0dd1f411120433244bcefc8d5bcff1f84b9d9c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e537cb1836433e601e94c12ff36a43696941f1b9024ce909010c503f3378ac3c",
            "container_config": {
                "Hostname": "e537cb183643",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35fd0104556631fd5da00aa8ae0dd1f411120433244bcefc8d5bcff1f84b9d9c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-12T11:47:38.97380902Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-04-02T16:41:21.675453598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T11:47:37.483167819Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-12T11:47:38.105825067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T11:47:38.265882043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-12T11:47:38.770090304Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-12T11:47:38.97380902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:bc06487b975df7706a2304d9aba6c8669c90f1eb5e7d2c346d06f0d1c5245027",
                    "sha256:78c2e9754513ee350e296b7b2ef5e662ff385f160db7bf366b64b845e9d2a733"
                ]
            }
        },
        "1.10.1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b164d43ce30b0bca6f6aa4dc6624c87fce948c5c5166e222ce8a70323a3a6a7c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "3af2e04382e6f511ee2d6daebab93c0c58712390c90c40456d2cbce46661c918",
            "container_config": {
                "Hostname": "3af2e04382e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b164d43ce30b0bca6f6aa4dc6624c87fce948c5c5166e222ce8a70323a3a6a7c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-04-28T17:59:38.41366664Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T11:45:04.146951188Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb13df185b5fc36710007c3b4ec6f239ac340ff9c69cbec1e38fcf974766179b in / "
                },
                {
                    "created": "2018-04-28T11:45:04.53820153Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T13:19:43.164974156Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T13:19:49.371145281Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-04-28T13:20:22.102002869Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T17:59:26.248990869Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-04-28T17:59:26.589607371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T17:59:36.746309744Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='72d820dec546752e5a8303b33b009079c15c2390ce76d67cf514991646c6127b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='feca4e920d5ca25001dc0823390df79bc7ea5b5b8c03483e5a2c54f164654936' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1e07a159414b5090d31166d1a06ee501762076ef21140dcd54cdcbe4e68a9c9b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acbe19d56123549faf747b4f61b730008b185a0e2145d220527d2383627dfe69' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='91d0026bbed601c4aad332473ed02f9a460b31437cbc6f2a37a88c0376fc3a65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e211a5abdacf843e16ac33a309d554403beb63959f96f9db70051f303035434b' ;; \t\t*) goRelArch='src'; goRelSha256='589449ff6c3ccbff1d391d4e7ab5bb5d5643a5a41a04c99315e55c16bbf73ddc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-04-28T17:59:37.29802937Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T17:59:37.497585344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-04-28T17:59:38.198410558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-04-28T17:59:38.41366664Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f33fb2a4c47e8a11e076c96bf9d7e91bc6b438101090cc47213adfb4537d4173",
                    "sha256:0053982726b90927595fb5341f4afde679b87dfb0a4d802e49a412be48b803d1",
                    "sha256:5e01ea5517a7d75d7244328372323a5b5f1145e547706ef67eda91459696cb54",
                    "sha256:76bcadb77e1263e29f24398f3a0d9daa45f205bab8a2ad5c0930635ae4d5a37e",
                    "sha256:7032a431732c9b948aa70eadc0d0c19811262809ad08a97a1c0033238eaee0e8",
                    "sha256:c12af71b268d003a78ac82dadde4e16a9137c1785504ec8ce0be12ec2e8b8f1d",
                    "sha256:a36bd363a8cc97ab1046108bce11ff21460116eee04083d8534cf345279f5168"
                ]
            }
        },
        "1.10.2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19149737638d97493f9038868fa5bf662db8167e5a1399668dbc79f6202314ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "068e83ddda21f625d1a3f421ea3baa27e70104a2eb913140dc07c2bbff25ea50",
            "container_config": {
                "Hostname": "068e83ddda21",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19149737638d97493f9038868fa5bf662db8167e5a1399668dbc79f6202314ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-04T11:43:11.657690542Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-05-04T11:41:57.801788484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T11:43:10.196841156Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-04T11:43:10.766057043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T11:43:10.937803344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T11:43:11.482356781Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-04T11:43:11.657690542Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:ae952a185713b7ff787a25c4d24f4d5548a72e319154746123708891c5c2f4b8",
                    "sha256:3e08ec82cd8a9c994faf47cb03527cd4dea4c003253b697140ff357322629b3c"
                ]
            }
        },
        "1.10.2-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19149737638d97493f9038868fa5bf662db8167e5a1399668dbc79f6202314ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "068e83ddda21f625d1a3f421ea3baa27e70104a2eb913140dc07c2bbff25ea50",
            "container_config": {
                "Hostname": "068e83ddda21",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19149737638d97493f9038868fa5bf662db8167e5a1399668dbc79f6202314ed",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-05-04T11:43:11.657690542Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-05-04T11:41:57.801788484Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T11:43:10.196841156Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-05-04T11:43:10.766057043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T11:43:10.937803344Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-04T11:43:11.482356781Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-05-04T11:43:11.657690542Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:ae952a185713b7ff787a25c4d24f4d5548a72e319154746123708891c5c2f4b8",
                    "sha256:3e08ec82cd8a9c994faf47cb03527cd4dea4c003253b697140ff357322629b3c"
                ]
            }
        },
        "1.10.2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f43fbb9b77f5f79f4b1205de752faea0b250218f31a4d2921fb12e8ff22efb6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9b8f001916cb022a07900e2c9a7d560d5804cdf2d0d7d42f676aee39256d1d63",
            "container_config": {
                "Hostname": "9b8f001916cb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f43fbb9b77f5f79f4b1205de752faea0b250218f31a4d2921fb12e8ff22efb6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-06T12:57:59.686223335Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-04-28T11:45:04.146951188Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cb13df185b5fc36710007c3b4ec6f239ac340ff9c69cbec1e38fcf974766179b in / "
                },
                {
                    "created": "2018-04-28T11:45:04.53820153Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-05-05T12:35:52.026246235Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-05-05T12:35:58.997374311Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-05-05T12:36:38.372925825Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-06T12:57:45.154425085Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-06-06T12:57:45.514128803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T12:57:58.138101383Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4b677d698c65370afa33757b6954ade60347aaca310ea92a63ed717d7cb0c2ff' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='529a16b531d4561572db6ba9d357215b58a1953437a63e76dc0c597be9e25dd2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d6af66c71b12d63c754d5bf49c3007dc1c9821eb1a945118bfd5a539a327c4c8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ea4caddf76b86ed5d101a61bc9a273be5b24d81f0567270bb4d5beaaded9b567' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f0748502c90e9784b6368937f1d157913d18acdae72ac75add50e5c0c9efc85c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2266b7ebdbca13c21a1f6039c9f6887cd2c01617d1e2716ff4595307a0da1d46' ;; \t\t*) goRelArch='src'; goRelSha256='6264609c6b9cd8ed8e02ca84605d727ce1898d74efa79841660b2e3e985a98bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-06T12:57:58.662058782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T12:57:58.838023086Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-06T12:57:59.482483278Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-06T12:57:59.686223335Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f33fb2a4c47e8a11e076c96bf9d7e91bc6b438101090cc47213adfb4537d4173",
                    "sha256:11c3fd3d141a46b06c00d354d86d7c8fb8c9f46a62073d812c9402ff0bc76ff2",
                    "sha256:f84cedfca97424189f30093bf312172fb6e4d8e0d81f60ebe105ff8155e7621c",
                    "sha256:104f7aae8187fc3416bae00ad6a19eed8a37fe4cb5def9985bcf52f58d0aa35d",
                    "sha256:cf8b8d6dc51a936b70d0d2b94da8578035c911b29845637135d1bf04f7dac826",
                    "sha256:fcffed6e8980fc723fe4b53a3607600876893486fbbcaa77d2e127921f6f14d1",
                    "sha256:3accc277dd9ec5edf9615d8dad6c5d3557e3a829e108ba692c8769884de71b5d"
                ]
            }
        },
        "1.10.3-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4aef6d52d2d21308382e34c29cbfd427603c0951bb6734ad8068dedf7e819a14",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f81e662c83d5987072f27d4fe0c7fb429872a95d51ca803f16e3db3a0b18de77",
            "container_config": {
                "Hostname": "f81e662c83d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4aef6d52d2d21308382e34c29cbfd427603c0951bb6734ad8068dedf7e819a14",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T11:52:20.42566386Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T11:43:23.274868036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:52:18.983756196Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T11:52:19.506005583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:52:19.661835563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:52:20.207143833Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T11:52:20.42566386Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:7417980dd0aec1f513dc232b19ed22775806efb3f621b8930fa7904966b41e72",
                    "sha256:8057b1842b2d257865616dc2664477a0598c665c9ae037c3586b697f9a09d828"
                ]
            }
        },
        "1.10.3-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf3019e4c418a21cda608c6c09629e04be650e53f89923c02bd784c0596bd100",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8d29cd4a9e132408cbb1e687ad542b39656fdbc66b204506760845b5b94a933e",
            "container_config": {
                "Hostname": "8d29cd4a9e13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf3019e4c418a21cda608c6c09629e04be650e53f89923c02bd784c0596bd100",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T11:53:49.810245738Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-06-09T11:41:44.037204751Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:53:48.266950301Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T11:53:48.861985914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:53:49.041905636Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:53:49.619396168Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T11:53:49.810245738Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:4ac6730f0bf6d3735ffcabc7381589ad51ee19669a1e4b3cd8b7ab488a13f778",
                    "sha256:2699bc6f1f295e4643a8043d7de4199c8e8357b8b8551c1a5bfc2c9048bee209"
                ]
            }
        },
        "1.10.3-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4aef6d52d2d21308382e34c29cbfd427603c0951bb6734ad8068dedf7e819a14",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f81e662c83d5987072f27d4fe0c7fb429872a95d51ca803f16e3db3a0b18de77",
            "container_config": {
                "Hostname": "f81e662c83d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4aef6d52d2d21308382e34c29cbfd427603c0951bb6734ad8068dedf7e819a14",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T11:52:20.42566386Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T11:43:23.274868036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:52:18.983756196Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T11:52:19.506005583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:52:19.661835563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:52:20.207143833Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T11:52:20.42566386Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:7417980dd0aec1f513dc232b19ed22775806efb3f621b8930fa7904966b41e72",
                    "sha256:8057b1842b2d257865616dc2664477a0598c665c9ae037c3586b697f9a09d828"
                ]
            }
        },
        "1.10.3-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90d71f59589d40c15d73713d19ffc80ece56b2a25b0355fffafb2602ae857138",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "885ae87ca4254548bf7d0795f4d8e70c3119901f79d5562a1b8350533ea21b0b",
            "container_config": {
                "Hostname": "885ae87ca425",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90d71f59589d40c15d73713d19ffc80ece56b2a25b0355fffafb2602ae857138",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T16:26:39.22604008Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:26:28.55016819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T16:26:37.608600185Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d3df3fa3d153e81041af24f31a82f86a21cb7b92c1b5552fb621bad0320f06b6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='355128a05b456c9e68792143801ad18e0431510a53857f640f7b30ba92624ed2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3d5fe1932c904a01acb13dae07a5835bffafef38bef9e5a05450c52948ebdeb4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f3640b2f0990a9617c937775f669ee18f10a82e424e5f87a8ce794a6407b8347' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='34385f64651f82fbc11dc43bdc410c2abda237bdef87f3a430d35a508ec3ce0d' ;; \t\t*) goRelArch='src'; goRelSha256='567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T16:26:38.142068311Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T16:26:38.346080951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T16:26:39.042355686Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T16:26:39.22604008Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:f8a865234618f7b9186cd484b7773d2cc19aece5b9623090dfa63fcd58c7183e",
                    "sha256:3fa0703a8eba1adaca955daa68a101d6844f6692a6069888079360941b95329d"
                ]
            }
        },
        "1.10.4-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24a72c7db81790387e9e9b20426038813c0fb08c27e43b92f8cdba2e5b1a2b72",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7cad8790dc7532717f79302a8078c312a4be4829061f4b5f17ef1e6cfecd9509",
            "container_config": {
                "Hostname": "7cad8790dc75",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24a72c7db81790387e9e9b20426038813c0fb08c27e43b92f8cdba2e5b1a2b72",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-12T12:27:28.534459524Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-12T12:25:58.99019964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:27:26.946315206Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-12T12:27:27.538238081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:27:27.713940078Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:27:28.338785388Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-12T12:27:28.534459524Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:4c7e76a644911b20ac705491df4022dd5d993ebc99840d073f33da0924353129",
                    "sha256:28b916a8bdb1214862905fd4a947464e8a8d2f9327b61d984424ef7599146c6e"
                ]
            }
        },
        "1.10.4-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9af2db485aa9937aaa678d8c70be14a75087135d61a1162cf1f89bd5daf13aca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9b758ca64d775529b4217bf9ef7c8205e3d10fd08750ef0d4b925414bc5e7228",
            "container_config": {
                "Hostname": "9b758ca64d77",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9af2db485aa9937aaa678d8c70be14a75087135d61a1162cf1f89bd5daf13aca",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-12T12:29:08.861632442Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-12T12:27:42.326823138Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:29:07.329969315Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-12T12:29:07.890469145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:29:08.062349958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:29:08.666118997Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-12T12:29:08.861632442Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:c72c857d7be0d4730787424dd61fc175fcd5edadda1078591eb14e5d72108376",
                    "sha256:de6ba438e0c2903ae307dcfb173069a63661c3b935aed03997f87fe72c0fab54"
                ]
            }
        },
        "1.10.4-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24a72c7db81790387e9e9b20426038813c0fb08c27e43b92f8cdba2e5b1a2b72",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7cad8790dc7532717f79302a8078c312a4be4829061f4b5f17ef1e6cfecd9509",
            "container_config": {
                "Hostname": "7cad8790dc75",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:24a72c7db81790387e9e9b20426038813c0fb08c27e43b92f8cdba2e5b1a2b72",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-12T12:27:28.534459524Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-12T12:25:58.99019964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:27:26.946315206Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-12T12:27:27.538238081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:27:27.713940078Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:27:28.338785388Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-12T12:27:28.534459524Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:4c7e76a644911b20ac705491df4022dd5d993ebc99840d073f33da0924353129",
                    "sha256:28b916a8bdb1214862905fd4a947464e8a8d2f9327b61d984424ef7599146c6e"
                ]
            }
        },
        "1.10.4-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:818165a021e182bdfd6e3e7af04c2db860e30569b0642a77545f208341277d4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8a3a7a6582b19d44c82aa8b8299a53471cffe82e222fbb428a1d5c2d969cf256",
            "container_config": {
                "Hostname": "8a3a7a6582b1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:818165a021e182bdfd6e3e7af04c2db860e30569b0642a77545f208341277d4f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T16:04:33.124094963Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-16T11:42:40.958683169Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bae1e3df49bd67a34080167f2c4b8c0eb1b1acbb80f5dc193df094dcea49c837 in / "
                },
                {
                    "created": "2018-10-16T11:42:41.5038039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T12:53:59.873077029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T12:54:05.636560499Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T12:54:30.467581923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T16:03:55.526530674Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T16:04:23.161161212Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T16:04:31.609069694Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fa04efdb17a275a0c6e137f969a1c4eb878939e91e1da16060ce42f02c2ec5ec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4e1e80bd98f3598c0c48ba0c189c836d01b602bfc769b827a4bfed01d2c14b21' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2e0f9e99aeefaabba280b2bf85db0336da122accde73603159b3d72d0b2bd512' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='771f48e55776d4abc9c2a74907457066c7c282ac05fa01cf5ff4422ced76d2ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1cfc147357c0be91a988998046997c5f30b20c6baaeb6cd5774717714db76093' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5593d770d6544090c1bb20d57bb34c743131470695e195fbe5352bf056927a35' ;; \t\t*) goRelArch='src'; goRelSha256='6fe44965ed453cd968a81988523e9b0e794d3a478f91fd7983c28763d52d5781'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T16:04:32.103465148Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T16:04:32.264161211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T16:04:32.919205024Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T16:04:33.124094963Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:12f8e8e85c712c2e683453d2381f359defc26976b7b3964550713142f859f5e8",
                    "sha256:cecd2f0ad635cf9275d433cdddc1581301c429f83833663605f61cf19d149e9c",
                    "sha256:d159e55e90c96bf1bfa5f59fe0451fb8e36ff008ec33d50ee85b448282feebd4",
                    "sha256:ff7e07a82c8effe7e48eaa7b366c61bd176e5a87d1c0b1817a497fb1fc9ba6ef",
                    "sha256:34fdfd08d387c9b7bb25d771ab3e6a45f4cbaaf7d3bd7d5bfdbc40aa884d74fb",
                    "sha256:607b864701fa1f2fa47b8184b3d8f9a4fbbf691cfef00d52fa9ece72d152f662",
                    "sha256:b3e66dbf3837eeb74464d9157d19874594361953c351808fa75773b7f8fc2b50"
                ]
            }
        },
        "1.10.5-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e469fc8fc32fb81863d72a84fa7a177d70d099d351f6355fca026b90681272c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7a6d6543d1ef1b07ff6f6a7ab74189052a6ce9e4b051606f9c1b53eab3c7c73b",
            "container_config": {
                "Hostname": "7a6d6543d1ef",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e469fc8fc32fb81863d72a84fa7a177d70d099d351f6355fca026b90681272c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T11:47:35.839326371Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T11:46:16.226842746Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:47:34.105774482Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T11:47:34.691322443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:47:35.049628127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:47:35.599847057Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T11:47:35.839326371Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:40d2ae5a9f423f2f2da240a4adad76f894feb83aa6d5baa2664e3d58a87037c3",
                    "sha256:e8fbf8b03b18d5d2e4c1234cc459c9b238966859a6a0f5daf24ba48db65be331"
                ]
            }
        },
        "1.10.5-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2d57e52930c23114d7ca0a4fa8f6d08c57fcef709c1ae1d64ffb28beee17b8e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "947aed41bd762911d2c1497a89fac17d77265dcf1cbc9d530d1e9f5a2677fb18",
            "container_config": {
                "Hostname": "947aed41bd76",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2d57e52930c23114d7ca0a4fa8f6d08c57fcef709c1ae1d64ffb28beee17b8e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T11:49:08.730844808Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T11:47:49.9178225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:49:07.227156461Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T11:49:07.795064394Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:49:07.958703874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:49:08.535339315Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T11:49:08.730844808Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:a8a08f6d9f2c1c8042953da3cbf5c31d5bbbd956f3d0f2475df32f1945122d56",
                    "sha256:a13f0dd658eb9443bf08478065013511125ce3cf46b250b553f0c4173926c766"
                ]
            }
        },
        "1.10.5-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e469fc8fc32fb81863d72a84fa7a177d70d099d351f6355fca026b90681272c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "7a6d6543d1ef1b07ff6f6a7ab74189052a6ce9e4b051606f9c1b53eab3c7c73b",
            "container_config": {
                "Hostname": "7a6d6543d1ef",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e469fc8fc32fb81863d72a84fa7a177d70d099d351f6355fca026b90681272c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T11:47:35.839326371Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T11:46:16.226842746Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:47:34.105774482Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T11:47:34.691322443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:47:35.049628127Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:47:35.599847057Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T11:47:35.839326371Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:40d2ae5a9f423f2f2da240a4adad76f894feb83aa6d5baa2664e3d58a87037c3",
                    "sha256:e8fbf8b03b18d5d2e4c1234cc459c9b238966859a6a0f5daf24ba48db65be331"
                ]
            }
        },
        "1.10.5-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9de4a6cfa1199ccb1e84cb1710c08f1fb3641015bf7d7883eb79fb3c048a92b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "a136c688b605ce34bb915a6cf297ab4b85cf89cd3c90d274bd9e287b6e00ea06",
            "container_config": {
                "Hostname": "a136c688b605",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9de4a6cfa1199ccb1e84cb1710c08f1fb3641015bf7d7883eb79fb3c048a92b0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T04:05:06.995524732Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T12:43:53.986261197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2d4f6b3ab8bb9a0b9b22b8c86deeb337db46bef450f6c49a0c6ff1031ea09848 in / "
                },
                {
                    "created": "2018-11-16T12:43:54.556077992Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T20:17:38.514367421Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T20:17:46.257644619Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T20:18:20.780412303Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:04:27.479595858Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:04:56.071605523Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.5",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:05:05.380002046Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a035d9beda8341b645d3f45a1b620cf2d8fb0c5eb409be36b389c0fd384ecc3a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1d864a6d0ec599de9112c8354dcaaa886b4df928757966939402598e9bd9c238' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b4c16fcee18bc79de2fa4776c8d0f9bc164ddfc32101e96fe1da83ebe881e3df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='bc1bd42405a551ba7ac86b79b9d23a5635f21de53caf684acd8bf5dfee8bef5d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fc13736d383312710249b24adf05af59ff14dacb73d9bd715ff463bc89c5c5f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e90269495fab7ef99aea6937caf7a049896b2dc7b181456f80a506e69a8b57fc' ;; \t\t*) goRelArch='src'; goRelSha256='f0a3ed5c775f39a970d4937c64b3b178992e23a5df57ae56a59a1c99253094f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T04:05:05.94705267Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:05:06.169142902Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:05:06.803318814Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T04:05:06.995524732Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:94cf3b48036054a6fec75cad879c7397cef929817f4755b236e92b9ad4cb0ae7",
                    "sha256:294c7667c122ee174f37829c0c421c70b5c0f158450446748a68d70291b14ff9",
                    "sha256:f458529c4bc27c35715d9e5c6ac97866e931da3b9bec5949447fef6c677a4606",
                    "sha256:be761b10e848f29858db26c82fc34e684eb8de6441af3fe16a9035178591218f",
                    "sha256:02a874a954c394a573400ea3e9a9c865b4934e591f9e1e8fc35f093ec9127942",
                    "sha256:1a32ddc1a0d38e1755e1a0cffde943afffbf8dd9cf0ede193ebb8d736d55f477",
                    "sha256:b5c588e76511c4d1e0b3cec776a6b62ee406231aef3d60f8cf7ad93d797f4c24"
                ]
            }
        },
        "1.10.6-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:650e5fc4b16a946455a8fc8caf4db95816008af90e86a4dc2791d7aae4593d77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "73c6ae499731450a9ca8a80fad44143e7d2acbf2d7a3d80b58849f49d6945955",
            "container_config": {
                "Hostname": "73c6ae499731",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:650e5fc4b16a946455a8fc8caf4db95816008af90e86a4dc2791d7aae4593d77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:50:38.401190247Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T12:48:16.330755831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:50:35.869451559Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:50:36.766829648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:50:37.054844943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:50:38.087894261Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:50:38.401190247Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:2a50ad5f85d3c304c1601cd4ad148f60979b9fdf9ede08e423c4f94de675b3ce",
                    "sha256:91ca9918d632e33ce83f58326ed65cc1fbf4bd3a2d5ff9a9f7764b16d1fe95d0"
                ]
            }
        },
        "1.10.6-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e73a37ab2aa4beb1ddbd9a5beaca36c17d1895cbcbe2069bb1b09eaf69a29c0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "a0feff668f9f745b4d8c323415f7c41392d885308302204173d5ff7726359e49",
            "container_config": {
                "Hostname": "a0feff668f9f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e73a37ab2aa4beb1ddbd9a5beaca36c17d1895cbcbe2069bb1b09eaf69a29c0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:53:07.784115445Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T12:50:54.226107246Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:53:04.790604796Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:53:05.81199031Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:53:06.212713818Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:53:07.369637893Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:53:07.784115445Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:d77a22e8b13125a73910ba63adc93378e74f9756b829bcf008e1e13eb16ab11d",
                    "sha256:d741750cd2b04023100c058eb7188cfc43272d83c4807c2b26d60b62078d5d88"
                ]
            }
        },
        "1.10.6-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:650e5fc4b16a946455a8fc8caf4db95816008af90e86a4dc2791d7aae4593d77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "73c6ae499731450a9ca8a80fad44143e7d2acbf2d7a3d80b58849f49d6945955",
            "container_config": {
                "Hostname": "73c6ae499731",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:650e5fc4b16a946455a8fc8caf4db95816008af90e86a4dc2791d7aae4593d77",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:50:38.401190247Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T12:48:16.330755831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:50:35.869451559Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:50:36.766829648Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:50:37.054844943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:50:38.087894261Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:50:38.401190247Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:2a50ad5f85d3c304c1601cd4ad148f60979b9fdf9ede08e423c4f94de675b3ce",
                    "sha256:91ca9918d632e33ce83f58326ed65cc1fbf4bd3a2d5ff9a9f7764b16d1fe95d0"
                ]
            }
        },
        "1.10.6-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1fea8acf4927aa6d132832615a19f06ff3715735e2dbcdca21564245140c7c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5c9cc74b58c398321b7c9f0d76a4a82cdf3af28b90c3ab2deadf2f30d14de07b",
            "container_config": {
                "Hostname": "5c9cc74b58c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1fea8acf4927aa6d132832615a19f06ff3715735e2dbcdca21564245140c7c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:48:03.562615459Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T12:43:53.986261197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2d4f6b3ab8bb9a0b9b22b8c86deeb337db46bef450f6c49a0c6ff1031ea09848 in / "
                },
                {
                    "created": "2018-11-16T12:43:54.556077992Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T20:17:38.514367421Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T20:17:46.257644619Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T20:18:20.780412303Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:04:27.479595858Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-14T12:47:44.111589451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.6",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:48:00.820651935Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='acbdedf28b55b38d2db6f06209a25a869a36d31bdcf09fd2ec3d40e1279e0592' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='4da252fc7e834b7ce35d349fb581aa84a08adece926a0b9a8e4216451ffcb11e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0fcbfbcbf6373c0b6876786900a4a100c1ed9af86bd3258f23ab498cca4c02a1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='171fe6cbecb2845b875a35ac7ad758d4c0c5bd03f330fa35d340de85b9070e71' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ebd7e4688f3e1baabbc735453b19c6c27116e1f292bf46622123bfc4c160c747' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0223daa57bdef5bf85d308f6d2793c58055d294c13cbaca240ead2f568de2e9f' ;; \t\t*) goRelArch='src'; goRelSha256='0f6bd961f6d2d6fa6319b7dc9548e2ae22d0698e7432d4cabf737542913f8c14'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:48:01.605721808Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:48:02.104194683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:48:03.184440746Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:48:03.562615459Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:94cf3b48036054a6fec75cad879c7397cef929817f4755b236e92b9ad4cb0ae7",
                    "sha256:294c7667c122ee174f37829c0c421c70b5c0f158450446748a68d70291b14ff9",
                    "sha256:f458529c4bc27c35715d9e5c6ac97866e931da3b9bec5949447fef6c677a4606",
                    "sha256:be761b10e848f29858db26c82fc34e684eb8de6441af3fe16a9035178591218f",
                    "sha256:02a874a954c394a573400ea3e9a9c865b4934e591f9e1e8fc35f093ec9127942",
                    "sha256:a342ddc4e869d9856e0839fd03f2a70a8318cd984945dbaa27bd4f11e690ec50",
                    "sha256:d8f11bb678a68a892672bbff5ecadd28d1853466b112f0980fa3aeee5495379e"
                ]
            }
        },
        "1.10.7-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:37f5ef628000f8d11313c5469cab7d894dbafe2f106fd5c141e3d093341ae220",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cadd9e22456ff11e30cea2f5bb7276f1acec8f6ad71fac87fa8343fea79d3205",
            "container_config": {
                "Hostname": "cadd9e22456f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:37f5ef628000f8d11313c5469cab7d894dbafe2f106fd5c141e3d093341ae220",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:05:54.25980547Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T13:04:45.407033291Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:05:52.686376528Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:05:53.206879529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:05:53.379357529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:05:54.058949235Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:05:54.25980547Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:9e922a6af4e25032d11a3b7840f0c683d2aeea2a03db4b90d4b34268111fce48",
                    "sha256:ff2463f4df07187665f62cc340c711aedfd007fc374877f7ab79ed6fe972c5e2"
                ]
            }
        },
        "1.10.7-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:114770134af29e72f11ef9a5b567b8cfedac22496ba3abc8f3d543c8d2c50c2d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1f3c79807f58b80494879104c62a1a7eccaa5a39f5b040e64744d29a748047ed",
            "container_config": {
                "Hostname": "1f3c79807f58",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:114770134af29e72f11ef9a5b567b8cfedac22496ba3abc8f3d543c8d2c50c2d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:07:08.379292032Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T13:06:03.695826591Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:07:06.804585242Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:07:07.328981994Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:07:07.500222967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:07:08.187817352Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:07:08.379292032Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:fc04cb5be93601e971bf1be49d77bba793c9a7b5b575ca1a996272c6b878f6b5",
                    "sha256:961773c68a6a7c5d491aec74d07cd2c5bad31d0cf4f1374e662ce5a84fa13dd7"
                ]
            }
        },
        "1.10.7-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:37f5ef628000f8d11313c5469cab7d894dbafe2f106fd5c141e3d093341ae220",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cadd9e22456ff11e30cea2f5bb7276f1acec8f6ad71fac87fa8343fea79d3205",
            "container_config": {
                "Hostname": "cadd9e22456f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:37f5ef628000f8d11313c5469cab7d894dbafe2f106fd5c141e3d093341ae220",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:05:54.25980547Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T13:04:45.407033291Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:05:52.686376528Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:05:53.206879529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:05:53.379357529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:05:54.058949235Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:05:54.25980547Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:9e922a6af4e25032d11a3b7840f0c683d2aeea2a03db4b90d4b34268111fce48",
                    "sha256:ff2463f4df07187665f62cc340c711aedfd007fc374877f7ab79ed6fe972c5e2"
                ]
            }
        },
        "1.10.7-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cd4dd7199ada6c5e31214fe54be725cc542596395912bca3a97781099c68ba6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b44c39a3feb68d6a758f7fff676da23debd0d9b488dd1b3456e343d71e70b3c",
            "container_config": {
                "Hostname": "3b44c39a3feb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cd4dd7199ada6c5e31214fe54be725cc542596395912bca3a97781099c68ba6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T16:20:39.400964649Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-23T12:44:08.419358667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e4330c56c117138f24d32dcf0203d5180ce1e87ab43fd7f0523579c1dbc18ab in / "
                },
                {
                    "created": "2019-01-23T12:44:09.09793803Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T13:17:06.384156328Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T13:17:19.162583834Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-23T13:17:52.607668601Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T16:19:03.861455736Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T16:20:13.804811737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T16:20:24.64189905Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1aabe10919048822f3bb1865f7a22f8b78387a12c03cd573101594bc8fb33579' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1f81c995f829c8fc7def4d0cc1bde63cac1834386e6f650f2cd7be56ab5e8b98' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cb5a274f7c8f6186957e4503e724dda8aeffe84b76a146748c55ea5bb22d9ae4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='55cd25e550cb8ce8250dbc9eda56b9c10b3097c7f6beed45066fbaaf8c6c1ebd' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='11279ffebfcfa875b0552839d428cc72e2056e68681286429b57173c0da91fb4' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e0d7802029ed8d2720a2b27ec1816e71cb29f818380abb8b449080e97547881e' ;; \t\t*) goRelArch='src'; goRelSha256='b84a0d7c90789f3a2ec5349dbe7419efb81f1fac9289b6f60df86bd919bd4447'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T16:20:28.060444823Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T16:20:30.956817205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T16:20:36.05202354Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T16:20:39.400964649Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adef410464c907df5025512e65bc65fa668c744070eeb3e3307adf1a8a2f2b40",
                    "sha256:8fb6df88f68d34da2c83926df7048bc7921f981cd5e5b5b3ff7f3c3171d8b7f0",
                    "sha256:63990bb1a73bbc955a094e425a22915b6486f1a41de366f1221c8b6bc146a637",
                    "sha256:00fe9fcb31ae4b01ff3102d1d07109d19f806f031f0b37cc65e639a78a970005",
                    "sha256:b8b9b67bd2c9f2569f05a1d4f0371352acfbff9b73d15e348aa2452fd2496358",
                    "sha256:afb5d3aaccb1054bd7b82ce07ffcd0c35e738292bc6bbd3c8cf38237f6ab38f3",
                    "sha256:f090fdb667435d2eeea9ebf28ead499d0e35b938f536e2bafccd6a4697d2184f"
                ]
            }
        },
        "1.10.8-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "462a3fd93f27a7f28a9ef84dd0c2db9fa4ef6973a8f38f3b45c634febc71325b",
            "container_config": {
                "Hostname": "462a3fd93f27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:55.001867529Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T12:53:37.867826475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:52.332320508Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:53.225237547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:53.502225343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:54.81194503Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:55.001867529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:fd31e1899c1177d14e1135e73ee8efb3f2d2a502462b6fde8b838067128773fc",
                    "sha256:77bf5b0b1d32e443b7b20365cc22c9ea6b61d6cdf9cc61bbf80ef9161d4498b4"
                ]
            }
        },
        "1.10.8-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05ab776571c9bb45f1816469c77e26a801c68927c61a77978481b1265468592d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "19d3a62505132c20a9679f96f2bb7fc398f60acabdca8b2c74bdf221eef4c06f",
            "container_config": {
                "Hostname": "19d3a6250513",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:05ab776571c9bb45f1816469c77e26a801c68927c61a77978481b1265468592d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:50:02.635109858Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:48:28.471177583Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:50:00.372729122Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:50:00.970888295Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:50:01.268863017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:50:02.412149295Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:50:02.635109858Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:d1899a8bb78bdc060761a456ae9f25dc35c2fdd007853d02d052ec07f36a8c21",
                    "sha256:a31241f63ae5efb29896d101b87b6026dd37606cc5cb3996763993797ba4ae03"
                ]
            }
        },
        "1.10.8-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c81221389f5ffacca46247aeb61815ab56b294267a4f5623bdd0fbbb1ac8ff1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "43f5aff82163345979054aebb83f5c265bc31d87c0473c155ffe1e43547826b1",
            "container_config": {
                "Hostname": "43f5aff82163",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c81221389f5ffacca46247aeb61815ab56b294267a4f5623bdd0fbbb1ac8ff1c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:48:16.316009162Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:46:33.213241973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:48:14.627853224Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:48:15.20032185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:48:15.34821549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:48:16.1195506Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:48:16.316009162Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:9d500df7a5bfdf506c20b6f4bfeb24299dc7b68687bee3a99c3bbce411238a50",
                    "sha256:dfa0909ca0040f4a64aad8d2cc70afc29fc467660539fc0752a6a144dc309189"
                ]
            }
        },
        "1.10.8-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "462a3fd93f27a7f28a9ef84dd0c2db9fa4ef6973a8f38f3b45c634febc71325b",
            "container_config": {
                "Hostname": "462a3fd93f27",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b542988e6f98a5eb3526da6a3abac857fee3f6d81d0ba92d1c7b86f64e805b47",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:54:55.001867529Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T12:53:37.867826475Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:52.332320508Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:54:53.225237547Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:53.502225343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:54:54.81194503Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:54:55.001867529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:fd31e1899c1177d14e1135e73ee8efb3f2d2a502462b6fde8b838067128773fc",
                    "sha256:77bf5b0b1d32e443b7b20365cc22c9ea6b61d6cdf9cc61bbf80ef9161d4498b4"
                ]
            }
        },
        "1.10.8-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1717f93aaac89ca1403226ac0b9f97b0e8c600f2ae5625029f544d6deae4c990",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "08e34c204b695663f78a7d3c645a87bb6f5e5ed02e125cbc78d7eb8a69958a93",
            "container_config": {
                "Hostname": "08e34c204b69",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1717f93aaac89ca1403226ac0b9f97b0e8c600f2ae5625029f544d6deae4c990",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T21:43:47.687474767Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T12:43:08.313557111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8c452240b3657ec4cc6568239a4d933bc75fd958464a3950f67912097968fff8 in / "
                },
                {
                    "created": "2019-02-06T12:43:08.732890042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T15:27:50.46145522Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T15:27:54.717646277Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T15:28:21.159991728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:42:50.018026485Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:43:38.163193004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:46.238593907Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d8626fb6f9a3ab397d88c483b576be41fa81eefcec2fd18562c87626dbb3c39e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6fdbc67524fc4c15fc87014869dddce9ecda7958b78f3cb1bbc5b0a9b61bfb95' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0921a76e78022ec2ae217e85b04940e2e9912b4c3218d96a827deedb9abe1c7b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='10202da0b7f2a0f2c2ec4dd65375584dd829ce88ccc58e5fe1fa1352e69fecaf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9054bcc7582ebb8a69ca43447a38e4b9ea11d08f05511cc7f13720e3a12ff299' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6f71b189c6cf30f7736af21265e992990cb0374138b7a70b0880cf8579399a69' ;; \t\t*) goRelArch='src'; goRelSha256='6faf74046b5e24c2c0b46e78571cca4d65e1b89819da1089e53ea57539c63491'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T21:43:46.715392004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:46.875157628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:47.50790096Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T21:43:47.687474767Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b999405f276ee6dd7eae11f1695f0caf65cf0a5c8396eda7277c729522b82e7",
                    "sha256:d4087f0b598285864381402b67787b7b472ffef34afcb30e5a33e9b22e5d7236",
                    "sha256:b53459201f5ee601fd8f00564ea9c19680d07860ab3b4ffba3bcbee5429a6676",
                    "sha256:7343b78f933a48ec3af11ee27bbe8e487703c0962e56aaa10d009cb83a841006",
                    "sha256:7cbcdd99ed08d3cd9343ae21e4bde979ac73ee1bbd1e8ecb0705149a802d66e6",
                    "sha256:aa5210f471231781730a0a07e795f971eeac5abdcf0368e7e95d8e1acf11ffa9",
                    "sha256:0f8b559bef2a9d8362c0d36a4ddce31dedcdbb809e08e6acd96f7d4bc592b2e5"
                ]
            }
        },
        "1.10beta1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:162ada268a2ffd1fd928ac7b35b891b5e51ae96867ee357c3d9a0b9163ed038e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "350dd43c27a0e15563502e1dc4b6ba2bfde546a220635a7ed9b774c5ae37536e",
            "container_config": {
                "Hostname": "350dd43c27a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:162ada268a2ffd1fd928ac7b35b891b5e51ae96867ee357c3d9a0b9163ed038e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-09T11:41:33.198745881Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2017-12-09T11:40:24.798470197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:25.054667869Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2017-12-09T11:41:31.237052327Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-09T11:41:31.92279718Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:41:32.094661649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:41:32.716830257Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-09T11:41:32.919588181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:41:33.198745881Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:9147c6478c948be9d180e894f5513cf9c93512d17e82297d3cee5f8f68b80ddf",
                    "sha256:1838bf1402695c4d7b239106bf2d45bfeeae6e8ebd777d83ad355f0981774c8a",
                    "sha256:348a4f50ecda398c48bb4a832ac4555416536755872eabf88507eac144611abb",
                    "sha256:e8dfbf9c0f6d1724a5869a4c51b7f6a17d591e9ebe8015a8c2363bc8c7f4d774"
                ]
            }
        },
        "1.10beta1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:162ada268a2ffd1fd928ac7b35b891b5e51ae96867ee357c3d9a0b9163ed038e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "350dd43c27a0e15563502e1dc4b6ba2bfde546a220635a7ed9b774c5ae37536e",
            "container_config": {
                "Hostname": "350dd43c27a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:162ada268a2ffd1fd928ac7b35b891b5e51ae96867ee357c3d9a0b9163ed038e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-09T11:41:33.198745881Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2017-12-09T11:40:24.798470197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:25.054667869Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2017-12-09T11:41:31.237052327Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-09T11:41:31.92279718Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:41:32.094661649Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:41:32.716830257Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-09T11:41:32.919588181Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:41:33.198745881Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:9147c6478c948be9d180e894f5513cf9c93512d17e82297d3cee5f8f68b80ddf",
                    "sha256:1838bf1402695c4d7b239106bf2d45bfeeae6e8ebd777d83ad355f0981774c8a",
                    "sha256:348a4f50ecda398c48bb4a832ac4555416536755872eabf88507eac144611abb",
                    "sha256:e8dfbf9c0f6d1724a5869a4c51b7f6a17d591e9ebe8015a8c2363bc8c7f4d774"
                ]
            }
        },
        "1.10beta1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:475546bfaa1c7e89322318ce38090387a57536fbe239537f6c6ec24653acea69",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "0d302e8b2ed2af1f238439f97792e16336d012b34e222539d9c510b1300a3574",
            "container_config": {
                "Hostname": "0d302e8b2ed2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:475546bfaa1c7e89322318ce38090387a57536fbe239537f6c6ec24653acea69",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2017-12-12T09:42:51.652479028Z",
            "docker_version": "17.06.1-ce",
            "history": [
                {
                    "created": "2017-12-12T06:25:26.776947969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:52c2ff6c220e01ce9ef3bf8a808c3f51de553ffa707ffd3e664068af07974881 in / "
                },
                {
                    "created": "2017-12-12T06:25:27.191505502Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T06:58:40.250896039Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T06:58:49.909421788Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T06:59:15.198888121Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T09:42:24.001906869Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T09:42:24.331813119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta1",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T09:42:49.681634504Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ec7a10b5bf147a8e06cf64e27384ff3c6d065c74ebd8fdd31f572714f74a1055' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='32daa257a930ef85ca74bca107d477b3484f0b5ef7cc48086110916368d9c584' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a80555b3c4beecfb9af88c718f8676101ada74dea84f4aa1ade29d2d78554e0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0f30e18384e3beae8ce16cc6d095d899e29fb786c57297650acb7727fb3090e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b4c7404771b380212277fecc3b9a4f99f9978d024a45d3644c495a469df31ed8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bc3c66ab980e782ce52165a3a1572484353904c1b884dbbb87a662776280489d' ;; \t\t*) goRelArch='src'; goRelSha256='841df62b20fd915d83a2e43b7d043c2a3781c299de78abc45480eec575186b6b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2017-12-12T09:42:50.320658244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T09:42:50.50847962Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T09:42:51.124964933Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2017-12-12T09:42:51.339828572Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T09:42:51.652479028Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b4a81fc267fe62ff244c2bd3013ae8ffd79f1561da3fbc79c5d45c4b90d267b0",
                    "sha256:beed8a6ee29f3efe6a907892086d7400c741c66b7b29d110e8dcd36a08185819",
                    "sha256:a6ac7be86af86591e9e03cf5ea6fb4b8fcbf87af74235d6b7cf815fe5345dd72",
                    "sha256:695abdfc867c1e07c6322b84a206fde242e80fd68fad7c05cea65d7b257a7499",
                    "sha256:f7457da58e60bb068aa53e5241b2a90635f0e2fa08e649e23f693cd56f24febd",
                    "sha256:dab81ab19585a238db8ed837ef028954c6ff76116fa9d59fb998380a657f848e",
                    "sha256:738c634c49c166e2a681deb0116bf0e1c806bf095f18fbf9eba76ae440ef21ae",
                    "sha256:37421a04bc407e46b471e33faf368eeebe47c6ba9d5e3eda5d1a0a3f89897528"
                ]
            }
        },
        "1.10beta2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aedebf860de50c8d87a7ac1af207455bc0acd7c638c26f0866b77edb83c9308c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "57faaa158022307dc393eba023b5d44867baf085febddf13f178a2f1e12b073d",
            "container_config": {
                "Hostname": "57faaa158022",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aedebf860de50c8d87a7ac1af207455bc0acd7c638c26f0866b77edb83c9308c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-16T11:40:43.509850513Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-16T11:39:38.321281632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:39:38.545933379Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-16T11:40:41.968307191Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-16T11:40:42.45351644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:40:42.605394775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:40:43.08605364Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-16T11:40:43.265460651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:40:43.509850513Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:2002f89c68ff6aa60aa204373de725d26dd921910867695a1329148ecef6a110",
                    "sha256:fc3a7f69208c3f5b05dab38ccf8528c41277bca48388630a4a485f3e602f1003",
                    "sha256:aaf780015c63906c684da8e4ad29dbc82bab84cedb913b3a7a1fc5f61145c08a",
                    "sha256:3c95b0243aa248d9eb895c7db2e9b368a6332a5ad61a267184cc838f5fe427f7"
                ]
            }
        },
        "1.10beta2-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aedebf860de50c8d87a7ac1af207455bc0acd7c638c26f0866b77edb83c9308c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "57faaa158022307dc393eba023b5d44867baf085febddf13f178a2f1e12b073d",
            "container_config": {
                "Hostname": "57faaa158022",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aedebf860de50c8d87a7ac1af207455bc0acd7c638c26f0866b77edb83c9308c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-16T11:40:43.509850513Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-16T11:39:38.321281632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:39:38.545933379Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-16T11:40:41.968307191Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-16T11:40:42.45351644Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:40:42.605394775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:40:43.08605364Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-16T11:40:43.265460651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:40:43.509850513Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:2002f89c68ff6aa60aa204373de725d26dd921910867695a1329148ecef6a110",
                    "sha256:fc3a7f69208c3f5b05dab38ccf8528c41277bca48388630a4a485f3e602f1003",
                    "sha256:aaf780015c63906c684da8e4ad29dbc82bab84cedb913b3a7a1fc5f61145c08a",
                    "sha256:3c95b0243aa248d9eb895c7db2e9b368a6332a5ad61a267184cc838f5fe427f7"
                ]
            }
        },
        "1.10beta2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0560ae69b795b8593d1c8581d623f129dc5a91d85945760aede8ebe5f869afa3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "27d2bfd21148c65607b868bdfc6a3153ca3443be01c3ad2660558d0125ad093f",
            "container_config": {
                "Hostname": "27d2bfd21148",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0560ae69b795b8593d1c8581d623f129dc5a91d85945760aede8ebe5f869afa3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-16T11:39:34.805707753Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T06:25:26.776947969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:52c2ff6c220e01ce9ef3bf8a808c3f51de553ffa707ffd3e664068af07974881 in / "
                },
                {
                    "created": "2017-12-12T06:25:27.191505502Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T06:58:40.250896039Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T06:58:49.909421788Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T06:59:15.198888121Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T09:42:24.001906869Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-16T11:39:24.029527753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:39:33.454412941Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ab3abb7d731dd5ac7a06d5d5e64ef19946f57d4ce34555d262a87b8899901a93' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='777a59c2b1516598e161c0c5b25809c83fdec3737a0b7f4942c855259d57b3fe' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='2f51e94a227473d41bf3d9dbbdc5855308e64d82fb740a15019bd4fe733c9518' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4e5bc465a828c88e0e3c6049c58ee735d8ca27a994bc1d709424425cd20cab79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ace75d03dc73351320d055535f1f314b7dbd27ab21c7878db27a385b1e00d5b0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4d8625f071edd2cb2b16251f23530a43f9ff64db1b6ce080daff0dcc984005da' ;; \t\t*) goRelArch='src'; goRelSha256='a77c130eabfdea21fca629276f509b18da925912509903102b49113bc7dede9d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-16T11:39:33.861266713Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:39:34.005245879Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:39:34.461561907Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-16T11:39:34.60980771Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-16T11:39:34.805707753Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:ea7c9f4702f94a0df05f60648914e97f7876c4a7c5163e7870dd98fa896ff722 in /usr/local/bin/ "
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b4a81fc267fe62ff244c2bd3013ae8ffd79f1561da3fbc79c5d45c4b90d267b0",
                    "sha256:beed8a6ee29f3efe6a907892086d7400c741c66b7b29d110e8dcd36a08185819",
                    "sha256:a6ac7be86af86591e9e03cf5ea6fb4b8fcbf87af74235d6b7cf815fe5345dd72",
                    "sha256:695abdfc867c1e07c6322b84a206fde242e80fd68fad7c05cea65d7b257a7499",
                    "sha256:f7457da58e60bb068aa53e5241b2a90635f0e2fa08e649e23f693cd56f24febd",
                    "sha256:22ef622e1f6f46442be52fd892527a3041b2317d62ae6f1078ddc887ca5b1257",
                    "sha256:4ec4dc514a68f1d748f58660fb323672115fea37a08f0c2ab72b1a0c7df4c832",
                    "sha256:60a8a05092b6e60c9d7bc81a92df95e74d21495cb4776c940dc2d380b0c1a079"
                ]
            }
        },
        "1.10rc1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f53fd27747ba0a7072f38933fa1872c8bb7a5f9b8339dfcc4408873cd3d83341",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f32c0bfcfae94e53f1e7baf02d7bc1499d948836b9ea2c3a7075b9d73a1dcc3a",
            "container_config": {
                "Hostname": "f32c0bfcfae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f53fd27747ba0a7072f38933fa1872c8bb7a5f9b8339dfcc4408873cd3d83341",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T11:40:57.790236873Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-26T11:39:42.094020499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:39:42.313718312Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-26T11:40:56.461641201Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T11:40:56.973419436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:40:57.113164463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:40:57.610119436Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T11:40:57.790236873Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:5285952db98ad37d07016ba29b2685f6ddcaf4646655ba64a5f799234316eece",
                    "sha256:16c13e24042806bd1e42e176944ffd06858d3f41d7e3cfa37d36e1e61ac4bd3a",
                    "sha256:8871e07c5483e352cbde246411a6627dd3f4d42cdb4d84be6dcdf70359afac15"
                ]
            }
        },
        "1.10rc1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f53fd27747ba0a7072f38933fa1872c8bb7a5f9b8339dfcc4408873cd3d83341",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "f32c0bfcfae94e53f1e7baf02d7bc1499d948836b9ea2c3a7075b9d73a1dcc3a",
            "container_config": {
                "Hostname": "f32c0bfcfae9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f53fd27747ba0a7072f38933fa1872c8bb7a5f9b8339dfcc4408873cd3d83341",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T11:40:57.790236873Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-01-26T11:39:42.094020499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:39:42.313718312Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-01-26T11:40:56.461641201Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T11:40:56.973419436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:40:57.113164463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:40:57.610119436Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T11:40:57.790236873Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:5285952db98ad37d07016ba29b2685f6ddcaf4646655ba64a5f799234316eece",
                    "sha256:16c13e24042806bd1e42e176944ffd06858d3f41d7e3cfa37d36e1e61ac4bd3a",
                    "sha256:8871e07c5483e352cbde246411a6627dd3f4d42cdb4d84be6dcdf70359afac15"
                ]
            }
        },
        "1.10rc1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:801245dad905ada68c7c50ee1a78fd4564bf0d16b47b3b3bb525322f053e2c40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "967372cf24f08404d2a547cbf1a7bd017b79b802f94e802490330a7a9a38d12b",
            "container_config": {
                "Hostname": "967372cf24f0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:801245dad905ada68c7c50ee1a78fd4564bf0d16b47b3b3bb525322f053e2c40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-01-26T11:39:36.838016186Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-12T06:25:26.776947969Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:52c2ff6c220e01ce9ef3bf8a808c3f51de553ffa707ffd3e664068af07974881 in / "
                },
                {
                    "created": "2017-12-12T06:25:27.191505502Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-12T06:58:40.250896039Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T06:58:49.909421788Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2017-12-12T06:59:15.198888121Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2017-12-12T09:42:24.001906869Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-01-26T11:39:27.117367348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:39:35.610859768Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='c10d3cc7760bf3799037bd39027bbffdc568aea21d6fe60fe833373289c7b7c6' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2c1ed86e3cbf9d9866333b73cee96a0cd0b8c73654f4705088caa64eb5a624d4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3a749faf38e80025b832dae250442ddc86d5bc353d752c781ea632e904922ff1' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='03a98cc12b65dde36ed9561fa23530bcf5fa7ed85596aa74f2380f686fcbe928' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f482c7d6193c23d36657f8f026a74222c82eeb443331c38bbf3493d971144988' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a20d4077c0bb1d58710e48478ba0042950cf282f6ef1593aea4ac6e66265d22c' ;; \t\t*) goRelArch='src'; goRelSha256='743e97c856067f12fb39f1323d6e9956fb5f3339f0691d8749ecea553548ab03'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-01-26T11:39:36.00936006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:39:36.125388259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-26T11:39:36.658864325Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-01-26T11:39:36.838016186Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b4a81fc267fe62ff244c2bd3013ae8ffd79f1561da3fbc79c5d45c4b90d267b0",
                    "sha256:beed8a6ee29f3efe6a907892086d7400c741c66b7b29d110e8dcd36a08185819",
                    "sha256:a6ac7be86af86591e9e03cf5ea6fb4b8fcbf87af74235d6b7cf815fe5345dd72",
                    "sha256:695abdfc867c1e07c6322b84a206fde242e80fd68fad7c05cea65d7b257a7499",
                    "sha256:f7457da58e60bb068aa53e5241b2a90635f0e2fa08e649e23f693cd56f24febd",
                    "sha256:b1517b9ef9d8092e7e55d8dcc94b38ad05a2d948e3c777b6ff0e9333e8d073ac",
                    "sha256:3da0460237468897b8da5810296d457c7de395d779d90356ba27f49c4e3bf1d2"
                ]
            }
        },
        "1.10rc2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "31237838cc8704011cf3542b5159604e440b91f5645be84f8fb6287ba147ce01",
            "container_config": {
                "Hostname": "31237838cc87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T11:41:42.738067708Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T11:39:53.867557269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:39:54.128704737Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T11:41:41.004725276Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T11:41:41.67932171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:41.860246582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:42.539673705Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T11:41:42.738067708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:9424cedaa2721abc3ac5d5062f224362a4c72b940c5e48bc5ec438744e012aa6",
                    "sha256:d3c020f6ed22d9319892d9491785646045d2ce71afa1c6a1667565c760216a44",
                    "sha256:a81e9525ce108b9dae22a8068b3949776cefe734877a9b07217735bffaa8d26b"
                ]
            }
        },
        "1.10rc2-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "31237838cc8704011cf3542b5159604e440b91f5645be84f8fb6287ba147ce01",
            "container_config": {
                "Hostname": "31237838cc87",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a524bffebd9b7d507ba87951f7135afc5c2edd84139b38753fb313c2fa4f23a0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-08T11:41:42.738067708Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2017-12-09T11:40:24.614439454Z",
                    "created_by": "/bin/sh -c apk add --no-cache ca-certificates"
                },
                {
                    "created": "2018-02-08T11:39:53.867557269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:39:54.128704737Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:05dc434ec17d0f39e5733c78e8250d0f8fb6dddc1c65ff8d43a8a82f38272d32 in /go-alpine-patches/ "
                },
                {
                    "created": "2018-02-08T11:41:41.004725276Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-08T11:41:41.67932171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:41.860246582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-08T11:41:42.539673705Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-08T11:41:42.738067708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:c6388970e61f6c503d72c7fb905502f954ff2587f835d622f47307fd24df71b6",
                    "sha256:9424cedaa2721abc3ac5d5062f224362a4c72b940c5e48bc5ec438744e012aa6",
                    "sha256:d3c020f6ed22d9319892d9491785646045d2ce71afa1c6a1667565c760216a44",
                    "sha256:a81e9525ce108b9dae22a8068b3949776cefe734877a9b07217735bffaa8d26b"
                ]
            }
        },
        "1.10rc2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:703490f759215e6cd81d950a996254e815a87a705374af359c028b5bf9264bfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9945088707d95f3b49861bbcbd0eb23653bddd507f487e6b1168166de4333245",
            "container_config": {
                "Hostname": "9945088707d9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.10rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:703490f759215e6cd81d950a996254e815a87a705374af359c028b5bf9264bfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-02-15T08:53:14.059578025Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-02-15T06:24:07.622849519Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01afc5861263642b3ae4beb3dedd40e7edb1e65d86c4368a502a15247a39a3c1 in / "
                },
                {
                    "created": "2018-02-15T06:24:07.969727526Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T06:54:44.16659093Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T06:54:50.152841679Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-02-15T06:55:20.498593569Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T08:53:02.273813279Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-02-15T08:53:02.583003727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.10rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T08:53:12.478385493Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6a6a4c0654bc603bcfee4d6ac34a479c260ac61b3edcc8d6773384eb0bda512e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='aa145c2a9736cbcb39b9340182c319f7fc0ab3d0f2156d7dfd722572f4da519b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dfa7fbe299b3766b94fb4bc231db4330b9860c44a57274f6a0d418bf00eccbc8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='18832b97cdc2f21783ac60fc0136f25c19d39b7cc43459f5114dd62c0a212fe4' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='21a6e64c83df9f124993901dda2ec608640e97a13f50cf5a58f518651b576fd8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d3aa6ec3a761b328e093b51ca14dbb8a8000685bb8957dbab44b4bb3b1d76e7' ;; \t\t*) goRelArch='src'; goRelSha256='360bb3e627cd5308626ebe994be734da9c1c444fb420d10e79082ec110d004f6'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-02-15T08:53:12.951717545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T08:53:13.103365587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-02-15T08:53:13.881052712Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-02-15T08:53:14.059578025Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:91dc17f7d54f55625ff91a35425bc9eb925302a263690d3ece240390eaecf588",
                    "sha256:281b82f07010b8bb1b76b5ceda2b7521464067d5b799bdcea0e3b4a8a7f2f0de",
                    "sha256:a3ac8e9d1720d2bb52cd746bd0eba8999e644f23bd8fbf91e5e6c567f259f632",
                    "sha256:09ac3adcd94e3c28c81426e2a7523fc3ad8412954bc1529cb4a0af67fe2a6301",
                    "sha256:d46279babc285a0a142170c134a4a96db06a8aaa7a44252a416e5517cf10af37",
                    "sha256:94b0728c8b86ba06a97624a1f7eb844725d3520882b497d7f9b9182f921ce2b0",
                    "sha256:7a5b753d3545cd6e7d86610a7ba3935e5e548bec4b36dcea4a97b66e49434065"
                ]
            }
        },
        "1.11-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b91ebab5e617cf39c891c68008304c06fd8f11a5f3775a4b7d1d6f00c572029",
            "container_config": {
                "Hostname": "6b91ebab5e61",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:44:14.085707354Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:42:06.806534671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:10.772540631Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:44:11.724928494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:12.036797792Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:13.522068012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:44:14.085707354Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:cbe99263e47b0abf405a0ecfc6f378ff172278dd52e7912f2aa3b687477f8551",
                    "sha256:a5747a9ccc9c48f63856585041642b8f52d0940b47923d1162857dea5e77db8f"
                ]
            }
        },
        "1.11-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b91ebab5e617cf39c891c68008304c06fd8f11a5f3775a4b7d1d6f00c572029",
            "container_config": {
                "Hostname": "6b91ebab5e61",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:44:14.085707354Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:42:06.806534671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:10.772540631Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:44:11.724928494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:12.036797792Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:13.522068012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:44:14.085707354Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:cbe99263e47b0abf405a0ecfc6f378ff172278dd52e7912f2aa3b687477f8551",
                    "sha256:a5747a9ccc9c48f63856585041642b8f52d0940b47923d1162857dea5e77db8f"
                ]
            }
        },
        "1.11-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6e1cdcce9ef5fe803d98c5478cda960daf3ed83bb2b1722525c05b949c5456e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a66debaab35b697e2534fcf5189101fc44e2c169fac078ad84252e9b12bf1694",
            "container_config": {
                "Hostname": "a66debaab35b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6e1cdcce9ef5fe803d98c5478cda960daf3ed83bb2b1722525c05b949c5456e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:45:54.535333298Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:44:01.682821317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:52.492027391Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:45:53.188424237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:53.403480118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:54.222686807Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:45:54.535333298Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:e0a2d9bea6755dca62c892247953095b82e478b0ca29ede3856ba70103e68517",
                    "sha256:23beb4ffed6e039d8c6447367a4154d876a752578d163d0c93c8e66ddf9ec746"
                ]
            }
        },
        "1.11-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8c23ebb642acbe04c756a7b12a2a9ef9222e7978985f0f06f4754203a15f1941",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56d060363838cf8869aa69c6f17f96ef69f581a20a5ca416952d61a5339b89d9",
            "container_config": {
                "Hostname": "56d060363838",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8c23ebb642acbe04c756a7b12a2a9ef9222e7978985f0f06f4754203a15f1941",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:50:36.798113974Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:47:50.782623506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:50:33.736374228Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:50:34.583087318Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:50:35.072991444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:50:36.246579818Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:50:36.798113974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:18821dddc8d4963294209b4f34bad9ad2272effc6510089f4dfadbc4d930311b",
                    "sha256:b6ea05a94bb8b1bf0f8e24eb4b1475e24fa8a947ac34c9a4e118d93586679b95"
                ]
            }
        },
        "1.11-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cacbf6c09452388cd1b5bf74ef1408aa72cefbafc1b6a5d0997ff21bf1393ee0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "23c508596e7c82147e0cac5b363a067f99d4a5339d8dc53d24e3e2884a3f3989",
            "container_config": {
                "Hostname": "23c508596e7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cacbf6c09452388cd1b5bf74ef1408aa72cefbafc1b6a5d0997ff21bf1393ee0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:43:58.189914507Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:41:46.330752603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:54.38419263Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:43:55.658339762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:56.046004439Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:57.621820184Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:43:58.189914507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:8bce7cddb3e5e2b3bf534a31ef5cbdd2c4646ef4df097eca9144349f6a3b8cb9",
                    "sha256:597241079129feb5db195bfe269198e06666a638552a0660f621b59e3d8b7b79"
                ]
            }
        },
        "1.11-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5b44720fb42c648d86b0294933cae5622cea93f1564254906ea6238c58a39db3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bfcef24b6cfffa94700ff8f2eb5191c39abe72890280c14d057000ef3f44a9b2",
            "container_config": {
                "Hostname": "bfcef24b6cff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5b44720fb42c648d86b0294933cae5622cea93f1564254906ea6238c58a39db3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:35:00.758501402Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:34:36.115273857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:57.849799089Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:34:58.621421861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:59.025271664Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:00.370904596Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:35:00.758501402Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:57f1c9501f096da549bef35d0656da0ec5dcc259ddd308b29c337b729ebcc3c9",
                    "sha256:516886d06f6c00f9c3262e027efdc8bddc964d40c8e8eb4732669f625ff16548"
                ]
            }
        },
        "1.11-rc-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75223f264d5ecd01bc2c9659af4a5931c7cf1e9ecd26a069cf72949f84a00f25",
            "container_config": {
                "Hostname": "75223f264d5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:43:09.388137058Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T11:41:49.621552939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:07.766146104Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:43:08.389158702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:08.576774008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:09.209181731Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:43:09.388137058Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:4736d90a79932ee4f7d28c0bac96562b8c937f1a1452e2a5a870a2a5c7407025",
                    "sha256:89e8dcdb48f70ea58eee8d5a32a45493b3509385e992561221633341a83a56f8"
                ]
            }
        },
        "1.11-rc-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a7c67540cea411bef70402ea3120634554319265d20540d27d5d44ad616e7d00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "caf064f0eae8fe1479dc8003ae02f32597e9b82f222f454e18b2d0f44c07cb39",
            "container_config": {
                "Hostname": "caf064f0eae8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a7c67540cea411bef70402ea3120634554319265d20540d27d5d44ad616e7d00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:46:14.53391658Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T11:43:26.67021006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:46:12.882813996Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:46:13.445818252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:46:13.648283574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:46:14.355355129Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:46:14.53391658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:30343707fc4fa19f083ae07be462cc4205c5a9f05b1c034354d8be512127eddd",
                    "sha256:3d08c28404015fdda9f3f22842e54a42b4517033a3fc3c7e60ad7201c8dd9a48"
                ]
            }
        },
        "1.11-rc-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75223f264d5ecd01bc2c9659af4a5931c7cf1e9ecd26a069cf72949f84a00f25",
            "container_config": {
                "Hostname": "75223f264d5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:43:09.388137058Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T11:41:49.621552939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:07.766146104Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:43:08.389158702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:08.576774008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:09.209181731Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:43:09.388137058Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:4736d90a79932ee4f7d28c0bac96562b8c937f1a1452e2a5a870a2a5c7407025",
                    "sha256:89e8dcdb48f70ea58eee8d5a32a45493b3509385e992561221633341a83a56f8"
                ]
            }
        },
        "1.11-rc-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:102bf8711381d6e8e54d3cf6c0ad1f60738178c9d16e8d12ce85a38586ddb9c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "00ef03489696c834aa393cac21890e4979aeca0cfec8267abce413bc18138d3a",
            "container_config": {
                "Hostname": "00ef03489696",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:102bf8711381d6e8e54d3cf6c0ad1f60738178c9d16e8d12ce85a38586ddb9c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:41:39.050492211Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T11:41:28.917621872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:41:37.535483934Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:41:38.042149184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:41:38.236477951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:41:38.85058159Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:41:39.050492211Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:3910344073ffed9e66f24acc5820fee850b12f62e7a5be71b49a13234d4e13a3",
                    "sha256:d395d091437f37b4a946f309a1b1d26de0a15baeb018bb62c533dbb9e2e53a39"
                ]
            }
        },
        "1.11-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da4cedf75eb891cba99a934893ba92e05fa69f5dbb6029e27bf44a163197c216",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b10c190a85b6ae9e4bcc3076b30a53b7a28852ec0ec50bfc115f80f16c8d0b0",
            "container_config": {
                "Hostname": "3b10c190a85b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da4cedf75eb891cba99a934893ba92e05fa69f5dbb6029e27bf44a163197c216",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:35:33.641248908Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:45:55.755870174Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:628950cdb60edf56519623bb5bceb8f913d0e4a57fb94d64bbeb5f99491a79c8 in / "
                },
                {
                    "created": "2019-08-14T00:45:56.535687841Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:02:33.075987011Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:02:43.563070285Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:03:35.533964572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:33:50.515712646Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:35:08.878636736Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:28.849315778Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:35:31.556308714Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:31.890257498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:33.218355715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:35:33.641248908Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53a17e96ea9649f943041fdc5c56c8a4898d8424215f1a1fefab3d82f8db264b",
                    "sha256:c270d0c8327fc2255bb5a28b9b2197c59043d5e7c0dc8b802f103356bc986ed7",
                    "sha256:dedaf50a60c0f650fc5b54cc1625f1a041633609c133c00f1595c4dcf336e340",
                    "sha256:ea6cd4652d5c3fc3a28501285762aa7d0d0971feb3dd45961f27183a2ab89a22",
                    "sha256:abaf085f2e558d02d9a160c0a90dfbcac487c08b01c6cdb5ab904f0539145b8c",
                    "sha256:8dfb504438a8f8c6cf683c853f9d3d383669882b535aaa3d418db8d8272553d8",
                    "sha256:876e2830462a378edecd21314651b2e0e2fbe9d3ecd597e2c104608352b7d073"
                ]
            }
        },
        "1.11.0-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5cff0181467ba57d26c6a9788b43b1974218668763a6caa407c107b9ee4d0ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "014e51900dced62f58a66edf253d7b211a23bf7895ee49633136999974d83c1c",
            "container_config": {
                "Hostname": "014e51900dce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5cff0181467ba57d26c6a9788b43b1974218668763a6caa407c107b9ee4d0ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-12T12:23:54.262181089Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-12T12:22:29.533945709Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:23:52.708203184Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-12T12:23:53.33848408Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:23:53.51786008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:23:54.054545169Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-12T12:23:54.262181089Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:9459ef7cad44aeb795a374ba4a78b82e76e85b29ddd8c43d2743c6c3e2e2e407",
                    "sha256:44e8ae7b8ffba8f32aa19cd1d8aa77e37f88d15f6177d6fc47d17af92db28146"
                ]
            }
        },
        "1.11.0-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c21ddf986f81b310014a4fdae0aa2faa61b921d5bc012b32d7743ec6b31b304",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "234ca8b3b07f885c688d44a69d2fb268d3cf2e9c55e192251ac5e9a6e425b87e",
            "container_config": {
                "Hostname": "234ca8b3b07f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c21ddf986f81b310014a4fdae0aa2faa61b921d5bc012b32d7743ec6b31b304",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-12T12:25:46.050233844Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-12T12:24:05.438315768Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:25:44.484707642Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-12T12:25:45.050581183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:25:45.238166025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:25:45.850902515Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-12T12:25:46.050233844Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:dba7b67a9bbdf3566cb09ddb584ca5c05ef7d2c57974c8e5f3065c53c930007e",
                    "sha256:c1b8f95ff0a5ecffbf35b234db88b2f35035e6e1765384eef22b960527d632f6"
                ]
            }
        },
        "1.11.0-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5cff0181467ba57d26c6a9788b43b1974218668763a6caa407c107b9ee4d0ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "014e51900dced62f58a66edf253d7b211a23bf7895ee49633136999974d83c1c",
            "container_config": {
                "Hostname": "014e51900dce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5cff0181467ba57d26c6a9788b43b1974218668763a6caa407c107b9ee4d0ff",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-12T12:23:54.262181089Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-09-12T12:22:29.533945709Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:23:52.708203184Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-12T12:23:53.33848408Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:23:53.51786008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:23:54.054545169Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-12T12:23:54.262181089Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:9459ef7cad44aeb795a374ba4a78b82e76e85b29ddd8c43d2743c6c3e2e2e407",
                    "sha256:44e8ae7b8ffba8f32aa19cd1d8aa77e37f88d15f6177d6fc47d17af92db28146"
                ]
            }
        },
        "1.11.0-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4a2f8e5c8a35e7f028950039d47026f38663c1a592d9b904b43f9ea2cfa78c9f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "1871e51e4b9a5478801e0e3c8a64b34820f6ce03812b26465edb3ed7969ffe77",
            "container_config": {
                "Hostname": "1871e51e4b9a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4a2f8e5c8a35e7f028950039d47026f38663c1a592d9b904b43f9ea2cfa78c9f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-09-05T18:34:49.88651649Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-05T11:43:59.62359802Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8d7ae40251e43d792ae1b2a67f12263d8a7bbdb75e0b43b488b1e3a4beb6ad2 in / "
                },
                {
                    "created": "2018-09-05T11:44:00.112211325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T12:44:11.97528468Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T12:44:16.196815736Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-09-05T12:44:45.436115957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T18:34:37.458442976Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-09-05T18:34:37.879676159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T18:34:48.387392445Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='8ffeb3577d8ca5477064f1cb8739835973c866487f2bf81df1227eaa96826acd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e4853168f41d0bea65e4d38f992a2d44b58552605f623640c5ead89d515c56c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a91932b65b4af2f84ef2dce10d790e6a0d3d22c9ea1bdf3d8c4d9279dfa680e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e874d617f0e322f8c2dda8c23ea3a2ea21d5dfe7177abb1f8b6a0ac7cd653272' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c113495fbb175d6beb1b881750de1dd034c7ae8657c30b3de8808032c9af0a15' ;; \t\t*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-09-05T18:34:48.958447007Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T18:34:49.142454882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-05T18:34:49.698395444Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-09-05T18:34:49.88651649Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f643c4c2c261dc7b616bfe820c537e702e7da928c99ade0c8610e9f8e344e5e",
                    "sha256:26d9fd5d08a93895dcbb3343699c8efb118384d2871ca659c5f77d0733ba2a8b",
                    "sha256:986a96da00e9091b8c57c17dc1e5f0ca1ce9f7375003965777f80e1e340757cf",
                    "sha256:e84974e294c735fc9a45ea984049ba90cc9034de809b496b9e97d0ef06fd6867",
                    "sha256:58b92f444df0b24b44b6b67d7ba37a8383fe6b5ddba992462a3263749f0035bb",
                    "sha256:3b739df76732827c3f76523101aa779f3ce3fb91350392a4aa5f46505212e89d",
                    "sha256:071663b68e5d7fcff1cf6ae7dbe5790acc85d1e05b396829d48f0ef49599d78a"
                ]
            }
        },
        "1.11.1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:837541d41a0f8b58092f829ab86e659cd5c48780f3facff5e940c7b2072cb152",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9f475ff290ffe4615e5ae7edda09cc3cb62b17134013012ffe2976d840ff7739",
            "container_config": {
                "Hostname": "9f475ff290ff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:837541d41a0f8b58092f829ab86e659cd5c48780f3facff5e940c7b2072cb152",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T11:51:13.485540395Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T11:49:09.157839332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:51:10.797251707Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T11:51:11.797392958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:51:12.065152316Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:51:13.143418457Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T11:51:13.485540395Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:d8a146925873e1a1eac12c489776df1e304a06191e05c8a7ad1e950f9dde1f16",
                    "sha256:8d42df5c348a34bb013e7462c784f254a1d63c53dda178af45d0b9d2d147cbb7"
                ]
            }
        },
        "1.11.1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0808938b04290a54afd4757360fb4c06665bb2796a24f7f0fe41fdb1e716efdc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "947af3e266a6e45fbed041dc47d94b4987f205605b35c77c695ff5942640303d",
            "container_config": {
                "Hostname": "947af3e266a6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0808938b04290a54afd4757360fb4c06665bb2796a24f7f0fe41fdb1e716efdc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T11:53:38.938895519Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T11:51:24.252394224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:53:35.835513456Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T11:53:36.972339894Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:53:37.357519414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:53:38.617103462Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T11:53:38.938895519Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:d174f3b27a11a0d459c33a617bd3d78a6583380a371f4ad0b1d150143c58dd88",
                    "sha256:e4de2738ec60c863dd9300ed5be26d9c97c53b7280e52d0193b1bbf2ec96a1f1"
                ]
            }
        },
        "1.11.1-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:837541d41a0f8b58092f829ab86e659cd5c48780f3facff5e940c7b2072cb152",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9f475ff290ffe4615e5ae7edda09cc3cb62b17134013012ffe2976d840ff7739",
            "container_config": {
                "Hostname": "9f475ff290ff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:837541d41a0f8b58092f829ab86e659cd5c48780f3facff5e940c7b2072cb152",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-03T11:51:13.485540395Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-10-03T11:49:09.157839332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:51:10.797251707Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-03T11:51:11.797392958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:51:12.065152316Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-03T11:51:13.143418457Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-03T11:51:13.485540395Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:d8a146925873e1a1eac12c489776df1e304a06191e05c8a7ad1e950f9dde1f16",
                    "sha256:8d42df5c348a34bb013e7462c784f254a1d63c53dda178af45d0b9d2d147cbb7"
                ]
            }
        },
        "1.11.1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3e3acb92f0f77aa905aafd33e9be57759a686c517d46db351d1c32985aa0a5ce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ab61c9e3dd78a17315c898a7326aeb20eed311c108af401b14eab051d75b591e",
            "container_config": {
                "Hostname": "ab61c9e3dd78",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3e3acb92f0f77aa905aafd33e9be57759a686c517d46db351d1c32985aa0a5ce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-10-16T16:04:10.058467972Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-10-16T11:42:40.958683169Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bae1e3df49bd67a34080167f2c4b8c0eb1b1acbb80f5dc193df094dcea49c837 in / "
                },
                {
                    "created": "2018-10-16T11:42:41.5038039Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T12:53:59.873077029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T12:54:05.636560499Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-10-16T12:54:30.467581923Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T16:03:55.526530674Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-10-16T16:03:55.927217711Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.1",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T16:04:08.365174711Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2871270d8ff0c8c69f161aaae42f9f28739855ff5c5204752a8d92a1c9f63993' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bc601e428f458da6028671d66581b026092742baf6d3124748bb044c82497d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='25e1a281b937022c70571ac5a538c9402dd74bceb71c2526377a7e5747df5522' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='52935db83719739d84a389a8f3b14544874fba803a316250b8d596313283aadf' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f929d434d6db09fc4c6b67b03951596e576af5d02ff009633ca3c5be1c832bdd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='93afc048ad72fa2a0e5ec56bcdcd8a34213eb262aee6f39a7e4dfeeb7e564c9d' ;; \t\t*) goRelArch='src'; goRelSha256='558f8c169ae215e25b81421596e8de7572bd3ba824b79add22fba6e284db1117'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-10-16T16:04:08.983192969Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T16:04:09.154675658Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-10-16T16:04:09.883540649Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-10-16T16:04:10.058467972Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:12f8e8e85c712c2e683453d2381f359defc26976b7b3964550713142f859f5e8",
                    "sha256:cecd2f0ad635cf9275d433cdddc1581301c429f83833663605f61cf19d149e9c",
                    "sha256:d159e55e90c96bf1bfa5f59fe0451fb8e36ff008ec33d50ee85b448282feebd4",
                    "sha256:ff7e07a82c8effe7e48eaa7b366c61bd176e5a87d1c0b1817a497fb1fc9ba6ef",
                    "sha256:34fdfd08d387c9b7bb25d771ab3e6a45f4cbaaf7d3bd7d5bfdbc40aa884d74fb",
                    "sha256:4b825cd05cabc7738a4f1976e83b808c9022d843e9e16b0ebdc3fd554e161670",
                    "sha256:b16c5f274c6655a44bd6a33280cced1f9472391aece87fb1b896b9c71dc0ec0b"
                ]
            }
        },
        "1.11.10-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afd62d2c26482f16d1d8c9fbdaf2a14d6181513dc64b92a6b5549f0334eb46e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae18c339d6aed01de890d0869caf1d94684929ff9701bd7240d06990d6538290",
            "container_config": {
                "Hostname": "ae18c339d6ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afd62d2c26482f16d1d8c9fbdaf2a14d6181513dc64b92a6b5549f0334eb46e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T14:01:18.991264207Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:59:21.192846367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T14:01:16.31457883Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T14:01:17.21572088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T14:01:17.424183255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T14:01:18.648702663Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T14:01:18.991264207Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:758645e35e3fff39b3aaff0892de671ca43bcf447a0185b4253d779c65c7d353",
                    "sha256:0ffc1c2f3cc6b8568508c8c9e21318c27baa0bbd5062d665fb1015529ced7688"
                ]
            }
        },
        "1.11.10-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1e33dd004b06dbd941c9bc9dd29494671ac16eb2f0512f04b7217783ffe2395",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c06d9c4ccc4cf9deff178a504def1bb24f8a4b37d8aac4d200bdb32112ad3179",
            "container_config": {
                "Hostname": "c06d9c4ccc4c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a1e33dd004b06dbd941c9bc9dd29494671ac16eb2f0512f04b7217783ffe2395",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-07T23:20:35.535223447Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-07T23:16:34.900696292Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T23:20:29.370765072Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-07T23:20:31.590926509Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T23:20:32.254833446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-07T23:20:34.819089393Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-07T23:20:35.535223447Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:75e61b300c5246db583f486ed52b206899204bcb8852abf10f5737321eac4146",
                    "sha256:67a0096927e1ae3382d985b5c3d59d1ebc83587dcba551eeb05d63c50eb0dc7c"
                ]
            }
        },
        "1.11.10-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afd62d2c26482f16d1d8c9fbdaf2a14d6181513dc64b92a6b5549f0334eb46e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ae18c339d6aed01de890d0869caf1d94684929ff9701bd7240d06990d6538290",
            "container_config": {
                "Hostname": "ae18c339d6ae",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afd62d2c26482f16d1d8c9fbdaf2a14d6181513dc64b92a6b5549f0334eb46e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T14:01:18.991264207Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:59:21.192846367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T14:01:16.31457883Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T14:01:17.21572088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T14:01:17.424183255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T14:01:18.648702663Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T14:01:18.991264207Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:758645e35e3fff39b3aaff0892de671ca43bcf447a0185b4253d779c65c7d353",
                    "sha256:0ffc1c2f3cc6b8568508c8c9e21318c27baa0bbd5062d665fb1015529ced7688"
                ]
            }
        },
        "1.11.10-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d666a3278ed3dfd68dbe84b5ef3fca1963b9c295de725c601d5bb702d4c1d433",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3c434c17cb44b86409a20878020c4c60e6b9bcee63b582583aa26edd21b5b204",
            "container_config": {
                "Hostname": "3c434c17cb44",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d666a3278ed3dfd68dbe84b5ef3fca1963b9c295de725c601d5bb702d4c1d433",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-11T04:08:03.831459107Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:43:36.636332548Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:afcc920e9f12a9a8dcd8fc13d10697d5a80737bb1480544b3e85270be9be266a in / "
                },
                {
                    "created": "2019-06-10T23:43:38.619170431Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T01:45:11.355101413Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T01:45:18.601652558Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T01:45:46.66167408Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T04:07:28.717810775Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T04:07:51.18836641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T04:08:02.125564165Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aefaa228b68641e266d1f23f1d95dba33f17552ba132878b65bb798ffa37e6d0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='29812e3443c469de6b976e4e44b5e6402d55f6358a544278addc22446a0abe8b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6743c54f0e33873c113cbd66df7749e81785f378567734831c2e5d3b6b6aa2b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='619ddab5b56597d72681467810c63238063ab0d221fe0df9b2e85608c10161e5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a6c7129e92fe325645229846257e563dab1d970bb0e61820d63524df2b54fcf8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='35f196abd74db6f049018829ea6230fde6b8c2e24d2da9f9e75ce0e6d0292b49' ;; \t\t*) goRelArch='src'; goRelSha256='df27e96a9d1d362c46ecd975f1faa56b8c300f5c529074e9ea79bdd885493c1b'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-11T04:08:02.681129973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T04:08:02.89861654Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T04:08:03.579329056Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-11T04:08:03.831459107Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c6fd90e80d4b434e488af57f1a1590f2f574e1e816da0f472896bb77183f4d5",
                    "sha256:440cc9a8a104b6901153c16e6ad6b301e0368f0b4af83469aaf02eeb40df9a48",
                    "sha256:2536c76e2e9bcb68e9a300b777370a8325f4763d83bc82c5c76e1d1da9cfcf9c",
                    "sha256:7bb48140e739f3409af923731a00f81b1ef1f97b3343a48bcc8b7b7e1ebb3ad5",
                    "sha256:0168edc1632d76deaf6c300b26ea3631156f2a524ebac65cba67d812aa86e2d0",
                    "sha256:2ef7dad6b4f2751ddede022ae5a81da01e4a3c0e9a65fe4c6a535d5c227eebd2",
                    "sha256:805f8a387bc64b435c6a770b4aef149ea2eb8ed568b22030625018604df1065f"
                ]
            }
        },
        "1.11.11-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ddeeaf5f9d11d8904381c3cdbc2dca3259e48ed7dcc987674e83d70580b6d1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "85d67f521988f89a0abed5024d397ec9dba3c6375c4d951739fa5f98e6fbabb8",
            "container_config": {
                "Hostname": "85d67f521988",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ddeeaf5f9d11d8904381c3cdbc2dca3259e48ed7dcc987674e83d70580b6d1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:45:17.307675462Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:41:48.246355621Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1ef73640a5f885504655c88e9b4086090c61ab5304de3f4613faa793293a285a in / "
                },
                {
                    "created": "2019-06-19T20:41:48.479418127Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:36.29806462Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:41:37.054897437Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:43:42.191801434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:45:15.39952Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:45:16.093988933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:45:16.327536781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:45:17.044436313Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:45:17.307675462Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d9d6429128aef2ef3a76cd73098bce0778ea68ee48ae28049c675ea10765173",
                    "sha256:5593d838133be8dc53f0536fb5498f28630421fc45d3ca5f74ffe918fdc68a4e",
                    "sha256:3235cf194ea7143d6ff70b37f3df42222e2abd8d34c1d5f5c9d7a3352541081d",
                    "sha256:9eefd042d887ae96ae53eedba38e2d948f259559285bbfcdfb17a162fa2c60e1",
                    "sha256:b531498516ad34bd3fcf10677d09058647db841343bdcf9cfbdc91c294ab1182"
                ]
            }
        },
        "1.11.11-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ddeeaf5f9d11d8904381c3cdbc2dca3259e48ed7dcc987674e83d70580b6d1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "85d67f521988f89a0abed5024d397ec9dba3c6375c4d951739fa5f98e6fbabb8",
            "container_config": {
                "Hostname": "85d67f521988",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ddeeaf5f9d11d8904381c3cdbc2dca3259e48ed7dcc987674e83d70580b6d1f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:45:17.307675462Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:41:48.246355621Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1ef73640a5f885504655c88e9b4086090c61ab5304de3f4613faa793293a285a in / "
                },
                {
                    "created": "2019-06-19T20:41:48.479418127Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:36.29806462Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:41:37.054897437Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:43:42.191801434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:45:15.39952Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:45:16.093988933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:45:16.327536781Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:45:17.044436313Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:45:17.307675462Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d9d6429128aef2ef3a76cd73098bce0778ea68ee48ae28049c675ea10765173",
                    "sha256:5593d838133be8dc53f0536fb5498f28630421fc45d3ca5f74ffe918fdc68a4e",
                    "sha256:3235cf194ea7143d6ff70b37f3df42222e2abd8d34c1d5f5c9d7a3352541081d",
                    "sha256:9eefd042d887ae96ae53eedba38e2d948f259559285bbfcdfb17a162fa2c60e1",
                    "sha256:b531498516ad34bd3fcf10677d09058647db841343bdcf9cfbdc91c294ab1182"
                ]
            }
        },
        "1.11.11-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8c23ebb642acbe04c756a7b12a2a9ef9222e7978985f0f06f4754203a15f1941",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56d060363838cf8869aa69c6f17f96ef69f581a20a5ca416952d61a5339b89d9",
            "container_config": {
                "Hostname": "56d060363838",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8c23ebb642acbe04c756a7b12a2a9ef9222e7978985f0f06f4754203a15f1941",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:50:36.798113974Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:47:50.782623506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:50:33.736374228Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:50:34.583087318Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:50:35.072991444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:50:36.246579818Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:50:36.798113974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:18821dddc8d4963294209b4f34bad9ad2272effc6510089f4dfadbc4d930311b",
                    "sha256:b6ea05a94bb8b1bf0f8e24eb4b1475e24fa8a947ac34c9a4e118d93586679b95"
                ]
            }
        },
        "1.11.11-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57efe8624d4111780c7c275442da4e93d26f3d494a543ad967e45166d91db53a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4c902816fedc313cb268febb12b16b6e055bb8bf85de6bc19e150c6a1c54edc2",
            "container_config": {
                "Hostname": "4c902816fedc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57efe8624d4111780c7c275442da4e93d26f3d494a543ad967e45166d91db53a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:47:34.792756132Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:45:20.501203776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:47:31.182492367Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:47:32.077162942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:47:32.537043443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:47:34.364739182Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:47:34.792756132Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:c6b5720c0925976efdf8528ec48cbf5dc01a32ad609775b92a1da5ff055a117c",
                    "sha256:2625ac9bd39475bed5aaf46b9f3b0f95f39c8b662b5fed0ce08ab76a36e3d8c7"
                ]
            }
        },
        "1.11.11-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c66cb0d6cbecd1ec5a14e1899093eff1543eac47087dabd94d0668dd6685c4a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "090ae224c067e504665da4b4289752391767c60676863378973b2a2ad8ea0fb7",
            "container_config": {
                "Hostname": "090ae224c067",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c66cb0d6cbecd1ec5a14e1899093eff1543eac47087dabd94d0668dd6685c4a2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:45:16.193638898Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:43:36.636332548Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:afcc920e9f12a9a8dcd8fc13d10697d5a80737bb1480544b3e85270be9be266a in / "
                },
                {
                    "created": "2019-06-10T23:43:38.619170431Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T01:45:11.355101413Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T01:45:18.601652558Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T01:45:46.66167408Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T04:07:28.717810775Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-12T15:44:51.170912381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:45:14.036565319Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2fd47b824d6e32154b0f6c8742d066d816667715763e06cebb710304b195c775' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c2b882a5fbb3bac5c9cc6d65bfe17a5febfe0251a339fc059306bb825dec9b17' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5ee39ea08e5d8c017658f36d0f969b17a44d49576214f4a00710f2d98bb773be' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c711fe5025608e14bcd0efda9403e9b8f05cb4a53a125e296d639c10d280a65f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='98ff7ff2367239e26745231aabeaf9d7e51c40b616bb9aa15d4376792ff581d1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='d7471874ed396f72dd550c3593c9f42d5e3d38a2cca7658e669305bf9023e6c8' ;; \t\t*) goRelArch='src'; goRelSha256='1fff7c33ef2522e6dfaf6ab96ec4c2a8b76d018aae6fc88ce2bd40f2202d0f8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:45:14.681093341Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:45:14.938545505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:45:15.872129504Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:45:16.193638898Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c6fd90e80d4b434e488af57f1a1590f2f574e1e816da0f472896bb77183f4d5",
                    "sha256:440cc9a8a104b6901153c16e6ad6b301e0368f0b4af83469aaf02eeb40df9a48",
                    "sha256:2536c76e2e9bcb68e9a300b777370a8325f4763d83bc82c5c76e1d1da9cfcf9c",
                    "sha256:7bb48140e739f3409af923731a00f81b1ef1f97b3343a48bcc8b7b7e1ebb3ad5",
                    "sha256:0168edc1632d76deaf6c300b26ea3631156f2a524ebac65cba67d812aa86e2d0",
                    "sha256:3ad53cc361e1482352e9d3a0063442e23ebfbd7046e1ace86993b5628ee0b699",
                    "sha256:b8f650e48f974e3de73a7afa76827eedc39da347511c9205a94b5d828a3a4f5f"
                ]
            }
        },
        "1.11.12-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d863a6a2b1a5aeb6d1e979e69c5ce341e369c44199969c360af729af0b41aa4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5f5ce91c9c526bd3121bd721d2299f74aa0b15d87a0198d2741fc58da436aa6",
            "container_config": {
                "Hostname": "f5f5ce91c9c5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d863a6a2b1a5aeb6d1e979e69c5ce341e369c44199969c360af729af0b41aa4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T23:02:49.53699873Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:42:03.609141709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e61dfaf44f65996214c6cd92da44431e76d5a8165fda16b2ac98840a10a64b5 in / "
                },
                {
                    "created": "2019-07-11T21:42:04.02489859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:56:11.218695107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:56:12.070128483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T23:00:54.989268041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:02:47.463746315Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T23:02:48.182297989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:02:48.423894916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:02:49.278154802Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T23:02:49.53699873Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1305b268e0bd8801c4362c39910be2cbbf6f22615d23f7ede9671b737463635d",
                    "sha256:4bdb0c5caabd3fad9b301261163339f4ff825836daafa4176419e6412da69e53",
                    "sha256:5f07370ab8791eb86f26a0263ee981b8160dde6e682bd5d620d0aa70ba8c170b",
                    "sha256:4b42bc21decae3d8376bba0670465ccd7a1afc11d53148d5e9d56ae9d06c08fa",
                    "sha256:2c020187ff8f83b259d42e14a62e30942dc329998ac5d42ceec710e543d98da1"
                ]
            }
        },
        "1.11.12-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d863a6a2b1a5aeb6d1e979e69c5ce341e369c44199969c360af729af0b41aa4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f5f5ce91c9c526bd3121bd721d2299f74aa0b15d87a0198d2741fc58da436aa6",
            "container_config": {
                "Hostname": "f5f5ce91c9c5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d863a6a2b1a5aeb6d1e979e69c5ce341e369c44199969c360af729af0b41aa4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T23:02:49.53699873Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:42:03.609141709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e61dfaf44f65996214c6cd92da44431e76d5a8165fda16b2ac98840a10a64b5 in / "
                },
                {
                    "created": "2019-07-11T21:42:04.02489859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:56:11.218695107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:56:12.070128483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T23:00:54.989268041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:02:47.463746315Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T23:02:48.182297989Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:02:48.423894916Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:02:49.278154802Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T23:02:49.53699873Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1305b268e0bd8801c4362c39910be2cbbf6f22615d23f7ede9671b737463635d",
                    "sha256:4bdb0c5caabd3fad9b301261163339f4ff825836daafa4176419e6412da69e53",
                    "sha256:5f07370ab8791eb86f26a0263ee981b8160dde6e682bd5d620d0aa70ba8c170b",
                    "sha256:4b42bc21decae3d8376bba0670465ccd7a1afc11d53148d5e9d56ae9d06c08fa",
                    "sha256:2c020187ff8f83b259d42e14a62e30942dc329998ac5d42ceec710e543d98da1"
                ]
            }
        },
        "1.11.12-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8c8438d04a6a073b8cf2da87a1a1f6c70fc96bc4ea48eb09aa5f97bedb6ead0c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6689ab4aa03bd02016fef5ecb62cefa8b6906225d3cb09f5cea02187d2e34c5a",
            "container_config": {
                "Hostname": "6689ab4aa03b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8c8438d04a6a073b8cf2da87a1a1f6c70fc96bc4ea48eb09aa5f97bedb6ead0c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T00:50:46.748732056Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T00:49:09.621614996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:50:44.219658369Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T00:50:44.913784868Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:50:45.231564322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:50:46.416799805Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T00:50:46.748732056Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:f07d8c51e4bf7abca8f679c6ed1b61b8868f631bc994ac84628ef177c0810626",
                    "sha256:ba1f86dc62c8b9fbc5de1019098f912b5d07b329d577f36f9100497a4dd084ba"
                ]
            }
        },
        "1.11.12-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81f4bc79a45f9c113849d3be55c47338177c76cb612fe6ce54c6da976e43e4ce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4eeefc61684dbc3bfee305a9abdca6919adfebbe189d8494e325fa7bd64af723",
            "container_config": {
                "Hostname": "4eeefc61684d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81f4bc79a45f9c113849d3be55c47338177c76cb612fe6ce54c6da976e43e4ce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T02:00:47.177572749Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:42:45.322904679Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:536d71672e18e6e6c5d314bc26d43ea8e8c5156bacc61c8723ffbf1b73c91968 in / "
                },
                {
                    "created": "2019-07-09T21:42:46.153654397Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:30:20.093538378Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:30:31.135592815Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:31:11.222131647Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:31:12.151260204Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T02:00:35.937746687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:00:45.367764125Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T02:00:45.877373773Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:00:46.105102687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:00:46.912095887Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T02:00:47.177572749Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d3580dc0d352d17851e2baa5bb74f825d062d37efbf4679582b39285dc545a4",
                    "sha256:026b57c9615a2bef16c0ffe3e1b0278cce79611db0d646cd482640d2ed4e1fff",
                    "sha256:a67dfda94ba530dc10ef11296cbb53f69b8ec3c4634de9114e6b1db3da0db3cd",
                    "sha256:9a1782c823e13ce646484b574ebbd5e29300804a2825126c2ab33328206721b2",
                    "sha256:b7c7e566fee45926d2ae0f0ebfef8e01101c181b262a775147f03acfea2e70b1",
                    "sha256:790bb46726f08f6392033643f24bbb653d756a98d391012d4dec64b6c28911cf",
                    "sha256:3d730d1352b0cd674514eab75f8fb9b6fc465c0382bfe485a07dcc4846aec856"
                ]
            }
        },
        "1.11.12-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8772957216988c4f0a59cf70ae123621b00350565ad33987abb9a280c2443c71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "85186b43d77b55befc43fb88b4472431e749d5f4cbc1680839a67870330d1407",
            "container_config": {
                "Hostname": "85186b43d77b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8772957216988c4f0a59cf70ae123621b00350565ad33987abb9a280c2443c71",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T02:32:36.579592664Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:46:01.441663162Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:160c4bb8ec56e2dd405448d806cd11fe91ab4f9d9de18bb4225a10f0dbdd827c in / "
                },
                {
                    "created": "2019-07-09T21:46:02.325936663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:37:42.94339904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:37:58.871420073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:38:37.720191516Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:31:50.690526639Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:32:22.140417388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:32:33.921375451Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='14ec881815eb9e6618f95df5eb385d961283efc196d97912595ba6484a56180d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='5ffe422dc054909da4e468cb0df6e2cd41cebfe4fd9515f32bb3e3fbfc416016' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d79c075773fc3121d0e719b83b46115efff685ade94545a52f3ac22f43d76196' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='8467e68d6ed6f6a95c6db6a1e352fc529f256bba0955eaef472e50cf4c0cba61' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='92bd4dc0dc8227fb22ad88545dd72669923019760cd640d4cca189860870561a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a4d100a1c92e50fd9b8a4d529da0ef0f4509c72643d6fb481918fd543f5871c0' ;; \t\t*) goRelArch='src'; goRelSha256='6d7a5ba05476609a7614af3292f29c3be06327503c1f1fdc02ef417870fd6926'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T02:32:35.00139603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:32:35.319846827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:32:36.28766229Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T02:32:36.579592664Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22e7bd3d86b8511fb9665950661eee9ba7987bf8f562f92673db9428f1012b5f",
                    "sha256:ace8782861497e6437c058c87ac96a432e3195da1fafb04d05a27f5f82cfb259",
                    "sha256:94a99e7505bdd6fff57c1db26aba8e94ad80a675f822d0d4307d45b205bca7bf",
                    "sha256:7c98c40689bb7e378537071116d3943c4848dd0bb8b40007017983ac1a0b2689",
                    "sha256:352cd89307c7e424b87d04c5846d7fb6cb056d1497a9543dd1e8e8976f225752",
                    "sha256:d43225c4e8a0360395d02fba82e9d512db7e8ec445ef5af61fff4c8bdab7095f",
                    "sha256:f31a0c2d279cfc25e4090406f2099e83d33a4d5de47f162d37ec536a5c2fa370"
                ]
            }
        },
        "1.11.13-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b91ebab5e617cf39c891c68008304c06fd8f11a5f3775a4b7d1d6f00c572029",
            "container_config": {
                "Hostname": "6b91ebab5e61",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:44:14.085707354Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:42:06.806534671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:10.772540631Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:44:11.724928494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:12.036797792Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:13.522068012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:44:14.085707354Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:cbe99263e47b0abf405a0ecfc6f378ff172278dd52e7912f2aa3b687477f8551",
                    "sha256:a5747a9ccc9c48f63856585041642b8f52d0940b47923d1162857dea5e77db8f"
                ]
            }
        },
        "1.11.13-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6b91ebab5e617cf39c891c68008304c06fd8f11a5f3775a4b7d1d6f00c572029",
            "container_config": {
                "Hostname": "6b91ebab5e61",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0c663f178e1eb286600bff6e82db947be6f3bf2a570cd5656ce8ac5d96843d78",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:44:14.085707354Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:42:06.806534671Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:10.772540631Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:44:11.724928494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:12.036797792Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:44:13.522068012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:44:14.085707354Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:cbe99263e47b0abf405a0ecfc6f378ff172278dd52e7912f2aa3b687477f8551",
                    "sha256:a5747a9ccc9c48f63856585041642b8f52d0940b47923d1162857dea5e77db8f"
                ]
            }
        },
        "1.11.13-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cacbf6c09452388cd1b5bf74ef1408aa72cefbafc1b6a5d0997ff21bf1393ee0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "23c508596e7c82147e0cac5b363a067f99d4a5339d8dc53d24e3e2884a3f3989",
            "container_config": {
                "Hostname": "23c508596e7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cacbf6c09452388cd1b5bf74ef1408aa72cefbafc1b6a5d0997ff21bf1393ee0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:43:58.189914507Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:41:46.330752603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:54.38419263Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:43:55.658339762Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:56.046004439Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:43:57.621820184Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:43:58.189914507Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:8bce7cddb3e5e2b3bf534a31ef5cbdd2c4646ef4df097eca9144349f6a3b8cb9",
                    "sha256:597241079129feb5db195bfe269198e06666a638552a0660f621b59e3d8b7b79"
                ]
            }
        },
        "1.11.13-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5b44720fb42c648d86b0294933cae5622cea93f1564254906ea6238c58a39db3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bfcef24b6cfffa94700ff8f2eb5191c39abe72890280c14d057000ef3f44a9b2",
            "container_config": {
                "Hostname": "bfcef24b6cff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5b44720fb42c648d86b0294933cae5622cea93f1564254906ea6238c58a39db3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:35:00.758501402Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:34:36.115273857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:57.849799089Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:34:58.621421861Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:59.025271664Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:00.370904596Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:35:00.758501402Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:57f1c9501f096da549bef35d0656da0ec5dcc259ddd308b29c337b729ebcc3c9",
                    "sha256:516886d06f6c00f9c3262e027efdc8bddc964d40c8e8eb4732669f625ff16548"
                ]
            }
        },
        "1.11.13-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da4cedf75eb891cba99a934893ba92e05fa69f5dbb6029e27bf44a163197c216",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b10c190a85b6ae9e4bcc3076b30a53b7a28852ec0ec50bfc115f80f16c8d0b0",
            "container_config": {
                "Hostname": "3b10c190a85b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da4cedf75eb891cba99a934893ba92e05fa69f5dbb6029e27bf44a163197c216",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:35:33.641248908Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:45:55.755870174Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:628950cdb60edf56519623bb5bceb8f913d0e4a57fb94d64bbeb5f99491a79c8 in / "
                },
                {
                    "created": "2019-08-14T00:45:56.535687841Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:02:33.075987011Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:02:43.563070285Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:03:35.533964572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:33:50.515712646Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:35:08.878636736Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:28.849315778Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='50fe8e13592f8cf22304b9c4adfc11849a2c3d281b1d7e09c924ae24874c6daa' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='513eb46158917662e1588cb89f51d11839730e46847778646c36c69c687bfdc5' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e94329c97b38b5bffe9c18e84e9f521dc995e02df7696897a7626293da9ac593' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='282e20167a7aaaba7b23de980696e1944a004efd0079e80d675d66b263ef595b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ad3c7397ddd41a5af9d9bf3c560d3d0f8c1bdef4ac4d21819a021ea88e25efca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd00bd27e641450f165a37a83f1e83a4ef3c626ef5675b77184e9c0147257657' ;; \t\t*) goRelArch='src'; goRelSha256='5032095fd3f641cafcce164f551e5ae873785ce7b07ca7c143aecd18f7ba4076'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:35:31.556308714Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:31.890257498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:35:33.218355715Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:35:33.641248908Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53a17e96ea9649f943041fdc5c56c8a4898d8424215f1a1fefab3d82f8db264b",
                    "sha256:c270d0c8327fc2255bb5a28b9b2197c59043d5e7c0dc8b802f103356bc986ed7",
                    "sha256:dedaf50a60c0f650fc5b54cc1625f1a041633609c133c00f1595c4dcf336e340",
                    "sha256:ea6cd4652d5c3fc3a28501285762aa7d0d0971feb3dd45961f27183a2ab89a22",
                    "sha256:abaf085f2e558d02d9a160c0a90dfbcac487c08b01c6cdb5ab904f0539145b8c",
                    "sha256:8dfb504438a8f8c6cf683c853f9d3d383669882b535aaa3d418db8d8272553d8",
                    "sha256:876e2830462a378edecd21314651b2e0e2fbe9d3ecd597e2c104608352b7d073"
                ]
            }
        },
        "1.11.2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f57cf94bd82d995d3b7461f81f923cde380c875a5672f226cab31b2f926df39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d7b2e9a30e4e0e101e6ab15fad48912067fc1647e6d4aa6bb950e4b6ec43ca26",
            "container_config": {
                "Hostname": "d7b2e9a30e4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f57cf94bd82d995d3b7461f81f923cde380c875a5672f226cab31b2f926df39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T11:43:59.579034875Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T11:42:34.906852275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:43:58.094529929Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T11:43:58.691217319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:43:58.852477066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:43:59.407599366Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T11:43:59.579034875Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:6e58476c6baaf3007c100a88b512879140948b03894172b1cc25fdc96bef4039",
                    "sha256:45a18f10754b4e3d3467319fb9142b8197cef5f9ce9df781f991f0238e1444ac"
                ]
            }
        },
        "1.11.2-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2685ad8ff5329c9a4e73f3aea359c3d57719fb77ecc7fc85235594b94ab87346",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "5bb38ed976bed2683e27c380839f766310d5ddaa073a5456050d72b0112bb41b",
            "container_config": {
                "Hostname": "5bb38ed976be",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2685ad8ff5329c9a4e73f3aea359c3d57719fb77ecc7fc85235594b94ab87346",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T11:45:42.971095137Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T11:44:08.810480242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:45:39.063243569Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T11:45:39.843819768Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:45:40.043245557Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:45:40.783138596Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T11:45:42.971095137Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:858479fa79060431cf5d9f7bd08e4152538dc377fb90d5eb9da0b539850ff274",
                    "sha256:d3be6662b31ecd0313aca527860663c1c1cae6184c9a3d38d6f33957f89f2e40"
                ]
            }
        },
        "1.11.2-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f57cf94bd82d995d3b7461f81f923cde380c875a5672f226cab31b2f926df39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d7b2e9a30e4e0e101e6ab15fad48912067fc1647e6d4aa6bb950e4b6ec43ca26",
            "container_config": {
                "Hostname": "d7b2e9a30e4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f57cf94bd82d995d3b7461f81f923cde380c875a5672f226cab31b2f926df39",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-03T11:43:59.579034875Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-11-03T11:42:34.906852275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:43:58.094529929Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-03T11:43:58.691217319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:43:58.852477066Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-03T11:43:59.407599366Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-03T11:43:59.579034875Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:6e58476c6baaf3007c100a88b512879140948b03894172b1cc25fdc96bef4039",
                    "sha256:45a18f10754b4e3d3467319fb9142b8197cef5f9ce9df781f991f0238e1444ac"
                ]
            }
        },
        "1.11.2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9098f2ba4d7b7e843b9b1d6979632ad4e2717d8fa0761bddcb4505f4998e8823",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "c97dd02f6cfceb43fd3c56e265c1db67d8e35e33fcfa343e4e842a8cd723e528",
            "container_config": {
                "Hostname": "c97dd02f6cfc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9098f2ba4d7b7e843b9b1d6979632ad4e2717d8fa0761bddcb4505f4998e8823",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-11-17T04:04:39.012373046Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T12:43:53.986261197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2d4f6b3ab8bb9a0b9b22b8c86deeb337db46bef450f6c49a0c6ff1031ea09848 in / "
                },
                {
                    "created": "2018-11-16T12:43:54.556077992Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T20:17:38.514367421Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T20:17:46.257644619Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T20:18:20.780412303Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:04:27.479595858Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:04:27.807338693Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.2",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:04:37.598682202Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1dfe664fa3d8ad714bbd15a36627992effd150ddabd7523931f077b3926d736d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b9d16a8eb1f7b8fdadd27232f6300aa8b4427e5e4cb148c4be4089db8fb56429' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='98a42b9b8d3bacbcc6351a1e39af52eff582d0bc3ac804cd5a97ce497dd84026' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e74f2f37b43b9b1bcf18008a11e0efb8921b41dff399a4f48ac09a4f25729881' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='23291935a299fdfde4b6a988ce3faa0c7a498aab6d56bbafbf1e7476468529a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a67ef820ef8cfecc8d68c69dd5bf513aaf647c09b6605570af425bf5fe8a32f0' ;; \t\t*) goRelArch='src'; goRelSha256='042fba357210816160341f1002440550e952eb12678f7c9e7e9d389437942550'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-11-17T04:04:38.107350513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:04:38.268819683Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-17T04:04:38.816548636Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-11-17T04:04:39.012373046Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:94cf3b48036054a6fec75cad879c7397cef929817f4755b236e92b9ad4cb0ae7",
                    "sha256:294c7667c122ee174f37829c0c421c70b5c0f158450446748a68d70291b14ff9",
                    "sha256:f458529c4bc27c35715d9e5c6ac97866e931da3b9bec5949447fef6c677a4606",
                    "sha256:be761b10e848f29858db26c82fc34e684eb8de6441af3fe16a9035178591218f",
                    "sha256:02a874a954c394a573400ea3e9a9c865b4934e591f9e1e8fc35f093ec9127942",
                    "sha256:9f499218e9b3a3942c463aa5c03d4ab802612c3c79c0378f7df6a614c2022593",
                    "sha256:3a212b5d31f1b6b8c9b606fef4e60da5260feefa4961174e21dcb332522793f2"
                ]
            }
        },
        "1.11.3-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:559d1802f0dfad1c16fa14dfdb4db796af6f8ef7ce4112da3ebaecc86e594b45",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ca459fb1ad133f5c76af00afd60adb25267f8997cef6371a8fbc7049f64d5206",
            "container_config": {
                "Hostname": "ca459fb1ad13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:559d1802f0dfad1c16fa14dfdb4db796af6f8ef7ce4112da3ebaecc86e594b45",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:44:30.82227626Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T12:42:10.991087934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:44:28.477808122Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:44:29.378158235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:44:29.636492904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:44:30.559885965Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:44:30.82227626Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:3111aa4cf31987aac0d9e9a0c35b2eb6a32726c22a0f27b80e40185a88672039",
                    "sha256:be1c713eb76bdfaca975d592f894f9f2d01f45728715ee108f6cc5a59c843ed2"
                ]
            }
        },
        "1.11.3-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e7263447dd5bc9426ae68ca855ab0358822a49e4b8567848148ddadd1ee8e0b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "bdea8f866bbda22b4ef60066e15b583a96f8cc79e35b99046a6343a595d72d0d",
            "container_config": {
                "Hostname": "bdea8f866bbd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e7263447dd5bc9426ae68ca855ab0358822a49e4b8567848148ddadd1ee8e0b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:47:25.591921708Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:05.625073492Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59da37af8f4febfa87a2102dfdd3a709cbcb545454395455d8892b079d5475a in / "
                },
                {
                    "created": "2018-09-12T11:42:10.43314403Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:10.620649347Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:24:04.552339239Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:24:05.255221769Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T12:44:47.133715396Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:47:22.621220387Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:47:23.518018904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:47:24.05873871Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:47:25.199846309Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:47:25.591921708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:c72ba0b3db9b91cb26547e221e221630c3192e0520845f2df0a2b4b07044b8fd",
                    "sha256:f127c1d0a6adac55ac7f2bd9046dd034df117a80b28e0c073a67dcf65ec99901",
                    "sha256:497c0227aeae026859d95b8538fdea125693f91c2af70e98b7fceec1cf08cc5c",
                    "sha256:ae700176046ac89283453de92fe50728c160e00eff37f0356b96c54eabfd3b39",
                    "sha256:2704c4815a22fa531f655db8a020a85086621eb60ae01a96c9fe37d5aceb6589"
                ]
            }
        },
        "1.11.3-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:559d1802f0dfad1c16fa14dfdb4db796af6f8ef7ce4112da3ebaecc86e594b45",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "ca459fb1ad133f5c76af00afd60adb25267f8997cef6371a8fbc7049f64d5206",
            "container_config": {
                "Hostname": "ca459fb1ad13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:559d1802f0dfad1c16fa14dfdb4db796af6f8ef7ce4112da3ebaecc86e594b45",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:44:30.82227626Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-09-12T11:42:25.264655218Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:532f451315fcf5c4077ef91f62d9838cf5681b4a348af2d78f6edd825146612c in / "
                },
                {
                    "created": "2018-09-12T11:42:25.545113913Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-09-12T11:42:25.706469962Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-09-12T12:22:28.745610895Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-09-12T12:22:29.360898362Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-14T12:42:10.991087934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:44:28.477808122Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:44:29.378158235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:44:29.636492904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:44:30.559885965Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:44:30.82227626Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:78cca8518cfa690411b2473d44038212f3183ae88270dfde0ec9e84476abea64",
                    "sha256:b3af890e7712e51e78e732a344223f59e1f46c7607f9d768d206ed9fb33678f8",
                    "sha256:ce0ce566914bf7cf1be76feea0fb274c5b9036ea2a8a4247b93e1a196bc8b456",
                    "sha256:1bc64c862d3e5c5009fdc5c9fb3b9cd614b189e194d4597e099f2765e2d7808e",
                    "sha256:3111aa4cf31987aac0d9e9a0c35b2eb6a32726c22a0f27b80e40185a88672039",
                    "sha256:be1c713eb76bdfaca975d592f894f9f2d01f45728715ee108f6cc5a59c843ed2"
                ]
            }
        },
        "1.11.3-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff6cb2e225971870acbe33edfbe706a1c97b7eac2454c08279f66a9694ff1fa6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "bc0de903952e20137cceb6f7ef132948955baabd638dbb3c8eabc4e38f72d30d",
            "container_config": {
                "Hostname": "bc0de903952e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff6cb2e225971870acbe33edfbe706a1c97b7eac2454c08279f66a9694ff1fa6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-12-14T12:41:59.777788191Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-11-16T12:43:53.986261197Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2d4f6b3ab8bb9a0b9b22b8c86deeb337db46bef450f6c49a0c6ff1031ea09848 in / "
                },
                {
                    "created": "2018-11-16T12:43:54.556077992Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-11-16T20:17:38.514367421Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-16T20:17:46.257644619Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-11-16T20:18:20.780412303Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-17T04:04:27.479595858Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-14T12:41:37.421367059Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.3",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:41:56.803808761Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d20a4869ffb13cee0f7ee777bf18c7b9b67ef0375f93fac1298519e0c227a07f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='384933e6e97b74c5125011c8f0539362bbed5a015978a34e441d7333d8e519b9' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='723c54cb081dd629a44d620197e4a789dccdfe6dee7f8b4ad7a6659f76952056' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c3fadf7f8652c060e18b7907fb8e15b853955b25aa661dbd991f6d6bc581d7a9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='57c89a047ef4f539580af4cadebf1364a906891b065afa0664592e72a034b0ee' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='183258709c051ceb2900dee5ee681abb0bc440624c8f657374bde2a5658bef27' ;; \t\t*) goRelArch='src'; goRelSha256='7ec5140f384db2bd42b396c93c231dfba342ee137ad8a4b33120016951eb1231'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-14T12:41:57.81935876Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:41:58.147039574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-14T12:41:59.316511005Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-14T12:41:59.777788191Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:94cf3b48036054a6fec75cad879c7397cef929817f4755b236e92b9ad4cb0ae7",
                    "sha256:294c7667c122ee174f37829c0c421c70b5c0f158450446748a68d70291b14ff9",
                    "sha256:f458529c4bc27c35715d9e5c6ac97866e931da3b9bec5949447fef6c677a4606",
                    "sha256:be761b10e848f29858db26c82fc34e684eb8de6441af3fe16a9035178591218f",
                    "sha256:02a874a954c394a573400ea3e9a9c865b4934e591f9e1e8fc35f093ec9127942",
                    "sha256:82acd4a201d69fee2e2b98c24d69a4ebd1e68cbed97b20e7b36af12ece2e8911",
                    "sha256:9eda89b44b00d5eeb8c24205c1f246e07724adc9ae69cdb128277611c9cbb82b"
                ]
            }
        },
        "1.11.4-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e65bb459dac963255477e596216baf68612798fc8d9a7162228e7e6c71a57e06",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "de8fd001a99d9309988721e6e1e1c4be054bdec725b3e311874ea0195d0fd7d4",
            "container_config": {
                "Hostname": "de8fd001a99d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e65bb459dac963255477e596216baf68612798fc8d9a7162228e7e6c71a57e06",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:02:55.02335754Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T13:01:30.327084241Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:02:53.105846852Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:02:53.70433494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:02:53.890156977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:02:54.721430178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:02:55.02335754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:23358fed69846d7ef8ec588042789a8fd94c58f72fee8b8e4bb252974e76bff7",
                    "sha256:63803ce7f0ec07546323790d19bdcb22a92bee6973e7772f872455c1d8aab8d8"
                ]
            }
        },
        "1.11.4-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:276f8cbd4d32a1cd5200332abe89e9f3447844323ce666e63569e0ace85131cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8fd8f60e8546ffa4a659435d33055620c39e0ec547104a113b7d9547cf3643e0",
            "container_config": {
                "Hostname": "8fd8f60e8546",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:276f8cbd4d32a1cd5200332abe89e9f3447844323ce666e63569e0ace85131cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:04:33.464166604Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T13:03:07.671750603Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:04:31.855593854Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:04:32.432413165Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:04:32.599140539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:04:33.267871933Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:04:33.464166604Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:e962453cafd65842c253f7cebf6ce22d78dc838e33a26b5ba3273710081585e3",
                    "sha256:6202838ed93c2e520f00d277012f33ad14b7f2b4801b6bee26e63e05cde4f798"
                ]
            }
        },
        "1.11.4-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e65bb459dac963255477e596216baf68612798fc8d9a7162228e7e6c71a57e06",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "de8fd001a99d9309988721e6e1e1c4be054bdec725b3e311874ea0195d0fd7d4",
            "container_config": {
                "Hostname": "de8fd001a99d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e65bb459dac963255477e596216baf68612798fc8d9a7162228e7e6c71a57e06",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:02:55.02335754Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T13:01:30.327084241Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:02:53.105846852Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:02:53.70433494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:02:53.890156977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:02:54.721430178Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:02:55.02335754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:23358fed69846d7ef8ec588042789a8fd94c58f72fee8b8e4bb252974e76bff7",
                    "sha256:63803ce7f0ec07546323790d19bdcb22a92bee6973e7772f872455c1d8aab8d8"
                ]
            }
        },
        "1.11.4-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a27bdd4374a4fb127a59a02efbcadf807d749497397a0fae6da61ffe9210f01e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4311febc31a5c630b91f2fd29edfdf8fed9a01f7120b8a182d74cb7615982960",
            "container_config": {
                "Hostname": "4311febc31a5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a27bdd4374a4fb127a59a02efbcadf807d749497397a0fae6da61ffe9210f01e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-23T16:19:59.435414488Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-23T12:44:08.419358667Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5e4330c56c117138f24d32dcf0203d5180ce1e87ab43fd7f0523579c1dbc18ab in / "
                },
                {
                    "created": "2019-01-23T12:44:09.09793803Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T13:17:06.384156328Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T13:17:19.162583834Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-01-23T13:17:52.607668601Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T16:19:03.861455736Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-23T16:19:41.902732446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T16:19:55.067245988Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='fb26c30e6a04ad937bbc657a1b5bba92f80096af1e8ee6da6430c045a8db3a5b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f7a71d27fef69f654a93e265560c8d9db1a2ca3f1dcdbe5288c46facfde5821' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b76df430ba8caff197b8558921deef782cdb20b62fa36fa93f81a8c08ab7c8e7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cecd2da1849043237d5f0756a93d601db6798fa3bb27a14563d201088aa415f3' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1f10146826acd56716b00b9188079af53823ddd79ceb6362e78e2f3aafb370ab' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='4467442dacf89eb94c5d6f9f700204cb360be82db60e6296cc2ef8d0e890cd42' ;; \t\t*) goRelArch='src'; goRelSha256='4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-23T16:19:58.255757738Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T16:19:58.447670391Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-23T16:19:59.217759317Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-23T16:19:59.435414488Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adef410464c907df5025512e65bc65fa668c744070eeb3e3307adf1a8a2f2b40",
                    "sha256:8fb6df88f68d34da2c83926df7048bc7921f981cd5e5b5b3ff7f3c3171d8b7f0",
                    "sha256:63990bb1a73bbc955a094e425a22915b6486f1a41de366f1221c8b6bc146a637",
                    "sha256:00fe9fcb31ae4b01ff3102d1d07109d19f806f031f0b37cc65e639a78a970005",
                    "sha256:b8b9b67bd2c9f2569f05a1d4f0371352acfbff9b73d15e348aa2452fd2496358",
                    "sha256:5a3ca8e1ec4b83bf9afbcf3311f744e1ccfc0f327ab604a8860c15ba59035e49",
                    "sha256:4c82d1be863001a8c311c217d82a28f9a20eb29a8cb5e0a05ffe541f6ed4a2ef"
                ]
            }
        },
        "1.11.5-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33967aa217cdfef4f8a7eda96de74065814256b5070d4a4006411b2ec0cf0874",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d5f21e505857d535c9cafdfe6d175223f20008b09acaf4778bd6d0d04a99c05c",
            "container_config": {
                "Hostname": "d5f21e505857",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33967aa217cdfef4f8a7eda96de74065814256b5070d4a4006411b2ec0cf0874",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T04:15:46.579268644Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T04:14:18.195572255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:15:44.50172108Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T04:15:45.177040582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:15:45.370968581Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:15:46.38055758Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T04:15:46.579268644Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:cc9637e095a287db1434d5da8271a0bcd8c248fdfb3b07a49dd54b124893d7a4",
                    "sha256:2439a492c4ed6cef8ee1aee1034a0418f3c67a0e2b0193add14c535ed22c060c"
                ]
            }
        },
        "1.11.5-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6e1cdcce9ef5fe803d98c5478cda960daf3ed83bb2b1722525c05b949c5456e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a66debaab35b697e2534fcf5189101fc44e2c169fac078ad84252e9b12bf1694",
            "container_config": {
                "Hostname": "a66debaab35b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d6e1cdcce9ef5fe803d98c5478cda960daf3ed83bb2b1722525c05b949c5456e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-24T12:45:54.535333298Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:29.868395803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b764f04695aef161430a2063aee41e228cb016459404dee09be3448c73f75349 in / "
                },
                {
                    "created": "2018-12-21T12:42:30.057767886Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:30.219896065Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:03:06.776623857Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T13:03:07.503637728Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-24T12:44:01.682821317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:52.492027391Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-24T12:45:53.188424237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:53.403480118Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-24T12:45:54.222686807Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-24T12:45:54.535333298Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6b3831aa6fe1e31b2df8360894ba0198440f5c31f9b02a5b3ef219cad392457c",
                    "sha256:cdddbea87e1410323f591d87a67842d3dd34120333e13c5623c5f96d87a66745",
                    "sha256:d46b8fcd3133d824c0cdfada430323cfee353a3e0f1a83062a28576959d44a12",
                    "sha256:cdf373632785b0cb20b6b7966c74f5aedebbec8eacf0cac2330002c9a124733d",
                    "sha256:e0a2d9bea6755dca62c892247953095b82e478b0ca29ede3856ba70103e68517",
                    "sha256:23beb4ffed6e039d8c6447367a4154d876a752578d163d0c93c8e66ddf9ec746"
                ]
            }
        },
        "1.11.5-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a0665bea575d49da4f0d764ef5ea1787aac5d09674bba9f3be347ad7dac011a9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "51fb6d18d352762584527a48e3cfd2cb42ec60e3c8d27cbf6de48b59ebab956f",
            "container_config": {
                "Hostname": "51fb6d18d352",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a0665bea575d49da4f0d764ef5ea1787aac5d09674bba9f3be347ad7dac011a9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T04:18:05.175750394Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T04:16:04.729320519Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:03.244511705Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T04:18:03.891325277Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:04.095289149Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:18:04.936232349Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T04:18:05.175750394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:82a4600b4e3963a7371c436a7dacaaed5080f7c5bb4db768899efbcce47e92dc",
                    "sha256:98294ac4e75997f919ee54a0d3d5e297780303f2e1e9eaf9a65aa1605517d7a2"
                ]
            }
        },
        "1.11.5-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33967aa217cdfef4f8a7eda96de74065814256b5070d4a4006411b2ec0cf0874",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d5f21e505857d535c9cafdfe6d175223f20008b09acaf4778bd6d0d04a99c05c",
            "container_config": {
                "Hostname": "d5f21e505857",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33967aa217cdfef4f8a7eda96de74065814256b5070d4a4006411b2ec0cf0874",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T04:15:46.579268644Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T04:14:18.195572255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:15:44.50172108Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T04:15:45.177040582Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:15:45.370968581Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:15:46.38055758Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T04:15:46.579268644Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:cc9637e095a287db1434d5da8271a0bcd8c248fdfb3b07a49dd54b124893d7a4",
                    "sha256:2439a492c4ed6cef8ee1aee1034a0418f3c67a0e2b0193add14c535ed22c060c"
                ]
            }
        },
        "1.11.5-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0eabe0a039aeedb9596a91c72aa824b94b285de6455ffe935babf0f15b9993a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4b53037b15359de6dce82d5448f0b972981808da3c07284fef785f806ff4f70e",
            "container_config": {
                "Hostname": "4b53037b1535",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0eabe0a039aeedb9596a91c72aa824b94b285de6455ffe935babf0f15b9993a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T16:57:05.215186007Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-05T12:42:57.910087004Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8271a1ca944204307a0659ebf47e18f728c4aa651091092aee9270e619c17663 in / "
                },
                {
                    "created": "2019-03-05T12:42:58.595982058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T13:35:37.931884111Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T13:35:43.740268654Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T13:36:11.277551029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:56:27.725983252Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:56:49.975059881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:57:03.059536356Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ff54aafedff961eb94792487e827515da683d61a5f9482f668008832631e5d25' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b26b53c94923f78955236386fee0725ef4e76b6cb47e0df0ed0c0c4724e7b198' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6ee9a5714444182a236d3cc4636e74cfc5e24a1bacf0463ac71dcf0e7d4288ed' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acd8e05f8d3eed406e09bb58eab89de3f0a139d4aef15f74adeed2d2c24cb440' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66e83152c68cb35d41f21453377d6a811585c9e01a6ac54b19f7a6e2cbb3d1f5' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='56209e5498c64a8338cd6f0fe0c2e2cbf6857c0acdb10c774894f0cc0d19f413' ;; \t\t*) goRelArch='src'; goRelSha256='bc1ef02bb1668835db1390a2e478dcbccb5dd16911691af9d75184bbe5aa943e'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T16:57:03.702477357Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:57:03.942843866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:57:04.958527992Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T16:57:05.215186007Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8e11f36fc45b7073d3b0eb3636428dedebb40f392bea9fa5751ed92848ca875",
                    "sha256:9b55b21b26ac195af7926b06f6d48d3a71e6f86c513684bbec2121ef8d70d4a4",
                    "sha256:d59c98f39596cafc4a513ef23975858fb9fc43d7fea6dd321be38debfe95fa1c",
                    "sha256:0f7aedf67c4fb1ee53e22bd1d07bb2655c7e2d1f35185a03020d348d6ed5252f",
                    "sha256:3778aa58dcfe5ed1569fc0e0c96963d6423de6958a2d4e56466d2095684a00e1",
                    "sha256:b7b002a304b366ff69d125f3f7422e9f633a763d79c6693bc77e381145e0ee9d",
                    "sha256:57d57d241f76658f2a424984a770fae23e88e76ab1bea42828c1be5bc6b36acb"
                ]
            }
        },
        "1.11.6-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:762d43947cd8813a6b7e4143eea9bb4b60cf9b1d17728fc4528548034f272940",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "268c94dc5d3772d857135f6f598f375f960984a27a667db019fb23ce51f72490",
            "container_config": {
                "Hostname": "268c94dc5d37",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:762d43947cd8813a6b7e4143eea9bb4b60cf9b1d17728fc4528548034f272940",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T11:46:52.704388557Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:44:29.498852996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:46:49.998817245Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T11:46:50.79473112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:46:51.076282308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:46:52.435821291Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T11:46:52.704388557Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:1fdfba8323c8cae686f77040ab568daa57b6a71672a1415653bf02409eed0df5",
                    "sha256:499b2c8ce76dddf2e5d175761270cf656e9d2e63026d9a327d7ad6ea73cb18f0"
                ]
            }
        },
        "1.11.6-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7167747865da01f71dad1e16ee66df9e585258b0d153595e0845876bf6d3d8b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0ff76f8a64d48dcc1e32c6620a9bedc9d1920f34732a76ccb57c7d1712ac0486",
            "container_config": {
                "Hostname": "0ff76f8a64d4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7167747865da01f71dad1e16ee66df9e585258b0d153595e0845876bf6d3d8b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T11:50:21.735145632Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:47:00.774588309Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:50:18.49565982Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T11:50:19.389514057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:50:19.924461183Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:50:21.423836832Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T11:50:21.735145632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:bb5fef60e13a1cb9bb44e34a19f9513cf0a8ba2f2b03b148a32ff31d426b7878",
                    "sha256:367fb99fc1e3e15eff527de3ea3dfe3368c905b16405a9881e9bf1e2331a4194"
                ]
            }
        },
        "1.11.6-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:762d43947cd8813a6b7e4143eea9bb4b60cf9b1d17728fc4528548034f272940",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "268c94dc5d3772d857135f6f598f375f960984a27a667db019fb23ce51f72490",
            "container_config": {
                "Hostname": "268c94dc5d37",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:762d43947cd8813a6b7e4143eea9bb4b60cf9b1d17728fc4528548034f272940",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T11:46:52.704388557Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:44:29.498852996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:46:49.998817245Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T11:46:50.79473112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:46:51.076282308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:46:52.435821291Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T11:46:52.704388557Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:1fdfba8323c8cae686f77040ab568daa57b6a71672a1415653bf02409eed0df5",
                    "sha256:499b2c8ce76dddf2e5d175761270cf656e9d2e63026d9a327d7ad6ea73cb18f0"
                ]
            }
        },
        "1.11.6-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:449f207ed622f19ae66105bc207143b1152827c5e43f4a416cbd2f172b688d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ccaaf6eb92349cf505add815b407b7f9894eadacfb252580bcd9822c6cef7e1a",
            "container_config": {
                "Hostname": "ccaaf6eb9234",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:449f207ed622f19ae66105bc207143b1152827c5e43f4a416cbd2f172b688d40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T17:34:20.660163139Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:33:34.529716095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:34:17.905256331Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4e1864282d8d20010d6385a12a1e35641783a380a7c57907bfb46a5499c5eb49' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62597fe72f1170cbb939958823555a701510e00362eb8a10b7ace6e59c8e7e6e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='29f64505cea47c57a46e2c8001ecf8d0c01cbf1ec86de96f4e3126b94a12ebb7' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7d90e484bb92e68648c1a7b6b1790e97af33718bae457d2ee02ee5d1dd0ce2b7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43d7cc7d3cdc1e57af33a13296b48713735f55e25aa655187afb19a707143c77' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c7f83fa5975a8f11641962bad79f89a7e17a6580d0d21ca828733dc0cfe470f7' ;; \t\t*) goRelArch='src'; goRelSha256='a96da1425dcbec094736033a8a416316547f8100ab4b72c31d4824d761d3e133'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T17:34:18.659605686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:34:19.025062249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:34:20.342214324Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T17:34:20.660163139Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:11b1bf459012c1370a5de8dd09ae7ffa43dbe53fc228c5730a367a23e539061d",
                    "sha256:80ca00f10b6605e39b382ad1cd2fc5598ec6d01fcd585e85fcfa2d3401d5abaf"
                ]
            }
        },
        "1.11.7-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d060d729eb317edd637d0bfe5770e2dd949e58580996b3354e5f79f272de6361",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ba12a88595d5f5c7f69cfe0fe591f66aceee6ee3c8ff911dfb95a40d2f6afd27",
            "container_config": {
                "Hostname": "ba12a88595d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d060d729eb317edd637d0bfe5770e2dd949e58580996b3354e5f79f272de6361",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:47:11.243647628Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:45:06.490124509Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:47:08.289444691Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:47:09.190442942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:47:09.575006587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:47:10.813816192Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:47:11.243647628Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:ceb1be67eb1057b70849bb03f89df0fe5196bb4fa0d14ef233e42429e9c82589",
                    "sha256:bbfc9aa907a742a601be1bc10a91b7c41d84bf0c6740b3216ecb3c02d8e4c2c8"
                ]
            }
        },
        "1.11.7-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae7af5c4c2baac2c62c84a89e48f12df9dcfb9ac6996f63b320a3a5f68b83205",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4e76e14bd65398803da29ac78bb5fc08337bfc26589aebd7c03e3bb6bd4d1499",
            "container_config": {
                "Hostname": "4e76e14bd653",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae7af5c4c2baac2c62c84a89e48f12df9dcfb9ac6996f63b320a3a5f68b83205",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:49:30.867793192Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:47:23.484844255Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:49:28.453224317Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:49:29.174914316Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:49:29.440663772Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:49:30.569628842Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:49:30.867793192Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:cd6010f36c9f733a9cb965b374cd6c14ea13a467c1ff18fbbe130a74acdeefac",
                    "sha256:3ea925dc8c6be0c80e23baac3f7434510b6f9ba9a650eb18a19a5c7b1085fd61"
                ]
            }
        },
        "1.11.7-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d060d729eb317edd637d0bfe5770e2dd949e58580996b3354e5f79f272de6361",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ba12a88595d5f5c7f69cfe0fe591f66aceee6ee3c8ff911dfb95a40d2f6afd27",
            "container_config": {
                "Hostname": "ba12a88595d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d060d729eb317edd637d0bfe5770e2dd949e58580996b3354e5f79f272de6361",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:47:11.243647628Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:45:06.490124509Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:47:08.289444691Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:47:09.190442942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:47:09.575006587Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:47:10.813816192Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:47:11.243647628Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:ceb1be67eb1057b70849bb03f89df0fe5196bb4fa0d14ef233e42429e9c82589",
                    "sha256:bbfc9aa907a742a601be1bc10a91b7c41d84bf0c6740b3216ecb3c02d8e4c2c8"
                ]
            }
        },
        "1.11.7-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01600c39ba42123157e4259b480627dddec126ec031529113010dc573d7e8c01",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5f7438ecc7ca89445ac918bd043cb38e035bdbae214b014d1390910b865296c",
            "container_config": {
                "Hostname": "a5f7438ecc7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:01600c39ba42123157e4259b480627dddec126ec031529113010dc573d7e8c01",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:45:00.88613288Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T11:44:31.181431088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:56.198362942Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='db687814288b3b541c1754dfd4ecc2b8fd0d5e7995624945e3054a350ca573d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7d6ae2e119a432a4b00a6dc2c2085f56ead4973f40d58e534308f1535b45afc2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='fe7ba5046aa4f52ae8fa36531aac4a949ad8e10c02b0f4aa05a420b4e803f8c6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='86d11a58bd99298719cb7ebea160255aefc56735d14089d2b2241d581967a482' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='43b04f58b37808f86f526e6f1a8d6643fe196c1314acc3d7db710ec9ae960d18' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='178932743c7af70c94f170f800202f490e0f85e74796dabe0a23d50630ba0333' ;; \t\t*) goRelArch='src'; goRelSha256='cfbe1078fbb1e34e77ad09de40d96d47ef280ba15791da9f02fc05486a4b16bd'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:44:58.350982612Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:58.678733755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:45:00.350008941Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:45:00.88613288Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:1fc25fd507481efbf5241041f6a6f7daa614cd7106eeeaf548754df68e6bf9a0",
                    "sha256:bdd6d6ac7935506c1fa5ba4c25e13a79a422ef8c4f408a16a1c5cbfbd10790fd"
                ]
            }
        },
        "1.11.8-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a4b2e249b23496e12608344c98022ac856feab9dae18dd542e7aa3dc224824b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "13cc0f80e2a7ab514846700e2918083add5cdd72e0c21f9fd11358faad0a6ed1",
            "container_config": {
                "Hostname": "13cc0f80e2a7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a4b2e249b23496e12608344c98022ac856feab9dae18dd542e7aa3dc224824b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:14:58.436442435Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:11:09.311374251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:14:52.421529123Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:14:54.30444628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:14:54.726868499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:14:57.693583195Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:14:58.436442435Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:345d5dc637f3825e07361be59c4f08fbadfeefb4a0c4fe8b2b934be7908214f5",
                    "sha256:6d0792d740cb77598d1e98ea8ca304bcc27f32ae5f096562e1ae41d980664181"
                ]
            }
        },
        "1.11.8-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9e0524d25b389d3dcb3c892c9c112f9868a8cb470d17050e39a8dd91c49a186",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "969c9205aa3cbe2fd9fb8150be4c622c15f73a2f7e70d4f733f17275ddacc420",
            "container_config": {
                "Hostname": "969c9205aa3c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9e0524d25b389d3dcb3c892c9c112f9868a8cb470d17050e39a8dd91c49a186",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T11:48:26.417520127Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-09T11:46:34.886857814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:48:24.118044377Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T11:48:24.894254753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:48:25.171101821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:48:26.158113526Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T11:48:26.417520127Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:2c530796b9aaccdd0dfedca2bbec4d2abc695e26a9b8e13fde83c5fa0df9a486",
                    "sha256:1b006ea4b1b2dd5fe28cf79153fe1758b11cac0e23cec15a6a0a79a24e32a559"
                ]
            }
        },
        "1.11.8-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a4b2e249b23496e12608344c98022ac856feab9dae18dd542e7aa3dc224824b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "13cc0f80e2a7ab514846700e2918083add5cdd72e0c21f9fd11358faad0a6ed1",
            "container_config": {
                "Hostname": "13cc0f80e2a7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a4b2e249b23496e12608344c98022ac856feab9dae18dd542e7aa3dc224824b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:14:58.436442435Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:11:09.311374251Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:14:52.421529123Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:14:54.30444628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:14:54.726868499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:14:57.693583195Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:14:58.436442435Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:345d5dc637f3825e07361be59c4f08fbadfeefb4a0c4fe8b2b934be7908214f5",
                    "sha256:6d0792d740cb77598d1e98ea8ca304bcc27f32ae5f096562e1ae41d980664181"
                ]
            }
        },
        "1.11.8-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04150d06337437f6bf0ec811633522071c90a0f7d43074c7a4227348564ca745",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "00464525fa957fe3d36757e813559bcb78144e5a5bef03193ce89fe719548a31",
            "container_config": {
                "Hostname": "00464525fa95",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04150d06337437f6bf0ec811633522071c90a0f7d43074c7a4227348564ca745",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T11:44:28.7836397Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T11:44:12.537486814Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:44:25.338338485Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e32ab1c934b747999d04e8a550b97f4647f8b1b43e152de5650d4476bfd1d2e1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c5d4fd90242761c214124eedb0ffc35af52be19e7a4eb4006b036b5dcb422c87' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='68c42239d118b27f5e52a449f444c8a53e64a181b12d9ecbda14d0c3b765a5ee' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e0e62a02516fa2197a2eb319a6957e7bd7007005a11b4da5c6650879999db899' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4f0559832957c37022f771420902c1f19100c0a5b391c4957753c521a9eba56e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='023928ee1d896af181c62acfd0a4e7bd713c8503a9b3b9aec745a3a830630e1b' ;; \t\t*) goRelArch='src'; goRelSha256='ba18bf8daf89218f9f2d853b3a9bc117d0ac24d3c98dac3474ed9ff9bf8efead'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T11:44:27.33765269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:44:27.583990759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:44:28.530087576Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T11:44:28.7836397Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:03e5e20496bdce635132fc2f008ae1f7809334dfd12c4be7280d0bcd165274ba",
                    "sha256:1da25f232ce124bb4b6a09947b245de478430ba93376ab633d3c61f3bce31981"
                ]
            }
        },
        "1.11.9-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9be19ae2021a2aca815d51fac8a16284895ab937eb81432fc394ead42d29df6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c43dcddd46ce5e48ff2fd96233f2aaedab1738501c6e4a21656e9ec70e9e3587",
            "container_config": {
                "Hostname": "c43dcddd46ce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9be19ae2021a2aca815d51fac8a16284895ab937eb81432fc394ead42d29df6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:48:35.208102207Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-13T11:45:29.315915911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:48:31.678048576Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:48:32.642202076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:48:32.969020576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:48:34.818573016Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:48:35.208102207Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:eea54afca0295ef1169a9287073204ebcaede1dd778d8cb81219f0435215fe47",
                    "sha256:e4ef37672ad6a9dcd52d5138923edb0da0ff544cf5e416ec60656c0f3c5ffd87"
                ]
            }
        },
        "1.11.9-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:76fb08c484d35d9dac6afeb798cffadfd433f04fb22c4261361872b555df21e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "27d12450437a869d56a877505b61ece42ac740c7a83c4d5490a51d4b2c5b31cf",
            "container_config": {
                "Hostname": "27d12450437a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:76fb08c484d35d9dac6afeb798cffadfd433f04fb22c4261361872b555df21e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:51:15.909601961Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:50.42236292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b9321d1e8cf25ce80f0bd36bfb6169057897654d8014c3bd74545c2348e8018d in / "
                },
                {
                    "created": "2019-03-08T03:35:50.604306295Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:16:03.793715785Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:16:04.523693405Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-13T11:48:51.089130294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:51:13.310603959Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:51:14.078787225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:51:14.426659451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:51:15.598724333Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:51:15.909601961Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:948329230314fe1cb4acac28d108a7b42b8a87773c87d0b6d3ada708df0b464e",
                    "sha256:88602911111cd9bf0f6a2a53858c50cc7aaaf7c09cab62b000a67726455d1630",
                    "sha256:949fe4579bdd307297985a8521e1fb6357d2dede13cb0b57918c00ec56936c0c",
                    "sha256:b8701d28c2694b2fb8476ae07d47df870bd4186d5bf08efac1e86e97af5d8a56",
                    "sha256:ab8203af514479abe73e0cc9ca28563430f213fa7cb42cd49c61e78ce47e7ae9"
                ]
            }
        },
        "1.11.9-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9be19ae2021a2aca815d51fac8a16284895ab937eb81432fc394ead42d29df6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c43dcddd46ce5e48ff2fd96233f2aaedab1738501c6e4a21656e9ec70e9e3587",
            "container_config": {
                "Hostname": "c43dcddd46ce",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9be19ae2021a2aca815d51fac8a16284895ab937eb81432fc394ead42d29df6f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:48:35.208102207Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-13T11:45:29.315915911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:48:31.678048576Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:48:32.642202076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:48:32.969020576Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:48:34.818573016Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:48:35.208102207Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:eea54afca0295ef1169a9287073204ebcaede1dd778d8cb81219f0435215fe47",
                    "sha256:e4ef37672ad6a9dcd52d5138923edb0da0ff544cf5e416ec60656c0f3c5ffd87"
                ]
            }
        },
        "1.11.9-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b302d38c35bdcb1558981770616899a566814dc7a1b95dadf3d4d682af2c52d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6fb5638391430da15f56c34c55946a1c09bd5fdaf8de53c2fa8e5ec335fb0fa0",
            "container_config": {
                "Hostname": "6fb563839143",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b302d38c35bdcb1558981770616899a566814dc7a1b95dadf3d4d682af2c52d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:45:24.456458541Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-13T11:44:59.672867211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:45:21.803186701Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e88aa3e39104e3ba6a95a4e05629348b4a1ec82791fb3c941a493ca349730608' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f0d7b039cae61efdc346669f3459460e3dc03b6c6de528ca107fc53970cba0d1' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='892ab6c2510c4caa5905b3b1b6a1d4c6f04e384841fec50881ca2be7e8accf05' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='0fa4001fcf1ef0644e261bf6dde02fc9f10ae4df6d74fda61fc4d3c3cbef1d79' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6a0a6a80997529543a434667f404ead2da88ac8fecc59bfba82f62bd2588e6c8' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0dd7073469d0f414b264fbadc4f720f9582b13ff6a0a978a9ef23020f9e42ac1' ;; \t\t*) goRelArch='src'; goRelSha256='ee80684b352f8d6b49d804d4e615f015ae92da41c4096cfee89ed4783b2498e3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:45:22.583546513Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:45:22.865711532Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:45:24.169777637Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:45:24.456458541Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:9cc7568355d6f21f9ba3424333162d844989fefeef1ad40c9407293d91c8e74e",
                    "sha256:957ecca09b2d4e58a7fd2eb796f95400a8fff88c3c2eb2244177465060a8f2b5"
                ]
            }
        },
        "1.11beta1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:02c5de3954135bf8f238155b8b7656c7149212bf468a94e644fb08e230fbe842",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d2d95398686d0673eafbff0da5c1a429f5d0c0a2700ea8072b6105abb8fb7801",
            "container_config": {
                "Hostname": "d2d95398686d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:02c5de3954135bf8f238155b8b7656c7149212bf468a94e644fb08e230fbe842",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-13T11:43:00.235346393Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T11:41:33.813826188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:42:58.48900891Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-13T11:42:59.260990676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:42:59.473114921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:43:00.056331018Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-13T11:43:00.235346393Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:2aa48df50324f267ad70312d7361d81f39dcd9e92e05e4820757df435cf20545",
                    "sha256:acecd4cb8cce3ea0e424a0641ed121bc8ffcc3adf9fb9802c59c61cdf42c9233"
                ]
            }
        },
        "1.11beta1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4c4ec0ecd5fcccbe6d855c59dc7f556c33e821dc226f273077fe32c59c4f6f2c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9f736c5ca870b47662dcb61a7423ca6ec56cab13de559542c085d6923aa51601",
            "container_config": {
                "Hostname": "9f736c5ca870",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4c4ec0ecd5fcccbe6d855c59dc7f556c33e821dc226f273077fe32c59c4f6f2c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-06-28T11:45:40.198222517Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-06-28T11:44:13.518500834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-28T11:45:38.592399238Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-06-28T11:45:39.289796664Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-28T11:45:39.450088891Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-06-28T11:45:40.03013977Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-06-28T11:45:40.198222517Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:89ab547d1e4fe8435b8f320f7d2ec880276c84a26baf1be5913c6a05db7775aa",
                    "sha256:c987501e0d83775b13a1020aa73ea2b24564ff797e0a9d03c7e4d3e84435a0e2"
                ]
            }
        },
        "1.11beta1-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:02c5de3954135bf8f238155b8b7656c7149212bf468a94e644fb08e230fbe842",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d2d95398686d0673eafbff0da5c1a429f5d0c0a2700ea8072b6105abb8fb7801",
            "container_config": {
                "Hostname": "d2d95398686d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:02c5de3954135bf8f238155b8b7656c7149212bf468a94e644fb08e230fbe842",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-13T11:43:00.235346393Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-13T11:41:33.813826188Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:42:58.48900891Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-13T11:42:59.260990676Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:42:59.473114921Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:43:00.056331018Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-13T11:43:00.235346393Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:2aa48df50324f267ad70312d7361d81f39dcd9e92e05e4820757df435cf20545",
                    "sha256:acecd4cb8cce3ea0e424a0641ed121bc8ffcc3adf9fb9802c59c61cdf42c9233"
                ]
            }
        },
        "1.11beta1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a2ab644d9dacff1e4c390e5172a98659751384cb57e244fe906d6684becb328",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "e59d8e4d57d28b7a7029d6586edb510665a11e3148a22b79d1bd0afe5f070a53",
            "container_config": {
                "Hostname": "e59d8e4d57d2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a2ab644d9dacff1e4c390e5172a98659751384cb57e244fe906d6684becb328",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-17T16:26:14.029996628Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.933315565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T16:26:12.358051753Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='df7fe096ffab5d331d35c6d038d2ec0426b45ce17f55a93037e371d3af9d4e6d' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='844ed9e34b118a9c2b069a18924a7879236929e08c887a92e5be1af5d701fb90' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9c1795148e777c81ac3cb381e3ea970eea60f5db2323658c061e5c4382125dd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a6e804652f58785b3dfe272d96b8206250210e7ba7bdcb1ffb726ab3753db4af' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='66529a525c0369d2b79ecd19f6d16444ed162c9bf88f7b37715520841c36de65' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='731b9e6ac0d4c9709297f0efc1a6455589b978d2ecc207184d3e5be07a130c9c' ;; \t\t*) goRelArch='src'; goRelSha256='5955eeb8f45e02aa5357fc18e62f1fe6c1b19e0c50aba93b8b9d9ef13b862dda'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-17T16:26:12.922184201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T16:26:13.118250441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T16:26:13.834443881Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-17T16:26:14.029996628Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:176035d771279cbc8d1cc604ea485a3787e9f29fde01e5912dcae7a516da8585",
                    "sha256:2c1a9cf756c0b0f2119efb0fe8108471280b1653cb09580a8add6a0a84cf84a6"
                ]
            }
        },
        "1.11beta2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a69673e53a85ed272f61625f32eaa6bd04c7b82a4ffdc43c0bec3502cea4800",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "a3d6d2883e9152224f08df2c8deeac392d8394b7782f2d130b92d8e7c3f3c41b",
            "container_config": {
                "Hostname": "a3d6d2883e91",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a69673e53a85ed272f61625f32eaa6bd04c7b82a4ffdc43c0bec3502cea4800",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T11:51:36.494351281Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T11:50:11.145897278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:51:34.862330465Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T11:51:35.582319342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:51:35.742030907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:51:36.310312918Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T11:51:36.494351281Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:ab0241df56e0182cc7916826e81b9d487494bf77984cb211517bbec830753ce6",
                    "sha256:af145478c90b15873dcd209b2c06b8e4263f1f280ce146030788a396504f6bcd"
                ]
            }
        },
        "1.11beta2-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33d346dfb850b602cf09c119741080e545fb0250b1584578e53e062f16c0b969",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "bc8f3081c46f007f847aa546d0a9df2d9e37d902955a6f2935d9fe10ad0ce43c",
            "container_config": {
                "Hostname": "bc8f3081c46f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:33d346dfb850b602cf09c119741080e545fb0250b1584578e53e062f16c0b969",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T11:53:08.768702026Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T11:51:45.718388798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:53:07.150678339Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T11:53:07.798167043Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:53:07.958523538Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:53:08.538640776Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T11:53:08.768702026Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:a671865758a86f7a740021d14875f0d21064bba08d8786cb04ed61fe41a3c264",
                    "sha256:8bc4bf48a24bd149ccc6c68f6ec69831fabd6899d46ffbec6447dda42671c06e"
                ]
            }
        },
        "1.11beta2-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a69673e53a85ed272f61625f32eaa6bd04c7b82a4ffdc43c0bec3502cea4800",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "a3d6d2883e9152224f08df2c8deeac392d8394b7782f2d130b92d8e7c3f3c41b",
            "container_config": {
                "Hostname": "a3d6d2883e91",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a69673e53a85ed272f61625f32eaa6bd04c7b82a4ffdc43c0bec3502cea4800",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T11:51:36.494351281Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-07-21T11:50:11.145897278Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:51:34.862330465Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T11:51:35.582319342Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:51:35.742030907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:51:36.310312918Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T11:51:36.494351281Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:ab0241df56e0182cc7916826e81b9d487494bf77984cb211517bbec830753ce6",
                    "sha256:af145478c90b15873dcd209b2c06b8e4263f1f280ce146030788a396504f6bcd"
                ]
            }
        },
        "1.11beta2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:07c582048c605504070331a06c2d1c10250d0adf9272de9ebea30a21c7009389",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "333b5b856564194537366e3c78a60c437a01c68179fca3066704494fc1a2c332",
            "container_config": {
                "Hostname": "333b5b856564",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:07c582048c605504070331a06c2d1c10250d0adf9272de9ebea30a21c7009389",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-07-21T11:50:02.938402655Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-21T11:49:39.154225171Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta2",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:50:01.406117897Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ccb60f1ae6efe4fcef115db8143eb7f9ba134c63486f47b2c5176706ede35af5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3242225cc9bb151789b4ba606903862b68b0e81682a5ab75245d76ab1ddf38fb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='835fc6ebae5cb4368fc39683a911fe5a25c36b4251b2b254112f3fc8f36a9f39' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='acc26b494699f7dca7e30ec2c08d0f2af8813437a234f17605fafe9c7c8cf69e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='31168f17e2791e664e591dc4c5e2c37ab5c3b942a2898d84075437daed3fc9f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='648b0f22ff517668bf4b642749a2a479d421f69b1e11bcd0ab1a71994e1c94db' ;; \t\t*) goRelArch='src'; goRelSha256='50f4bd23334f54c60ad7d07c742874c62488cf1556fa3e6e51dc03d5f5abda81'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-07-21T11:50:01.94422673Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:50:02.130067633Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-21T11:50:02.74237623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-07-21T11:50:02.938402655Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:2912ac9edc367d0625f06dc1079aa7376984623d016cf2c06faccaf61a3db918",
                    "sha256:f1401e9b3eea1c4541d149e3fed9dc35059094c738a155ab6868c7ec0eba952a"
                ]
            }
        },
        "1.11beta3-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3d18f1e7abbbaf6a703528c5dfbb0848f4bbe098c8bd55c4fbfcf6c41df5577",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d3009fd0e9ee1c5cc63c687ce556a8231fdd21a6a4ba402f6839caff550c3577",
            "container_config": {
                "Hostname": "d3009fd0e9ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3d18f1e7abbbaf6a703528c5dfbb0848f4bbe098c8bd55c4fbfcf6c41df5577",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T11:43:59.314096911Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T11:42:30.075513996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:43:57.268507478Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T11:43:58.024656605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:43:58.198300274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:43:58.726028775Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T11:43:59.314096911Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:a348c773f126ea592b2fec27c1290575079dd097448500f3971d056fde173b7b",
                    "sha256:042b0cad0d80a3861a4c3476b1d4865702085a94972362d68d37a3f4bde7d456"
                ]
            }
        },
        "1.11beta3-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1af99e00888c2d43418e515a784f1a2890678a9485e0b0ac69257e94f7a641dc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "8897c1cd4681623c9aff506e1b81062c6981d781d5f5e42bbab5d684f848f114",
            "container_config": {
                "Hostname": "8897c1cd4681",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1af99e00888c2d43418e515a784f1a2890678a9485e0b0ac69257e94f7a641dc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T11:46:05.83382449Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T11:44:17.225505967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:46:04.144306127Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T11:46:04.821838492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:46:05.030006927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:46:05.662203833Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T11:46:05.83382449Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:a52d03faccfc0a69a775586899f9fe6a896b8e52fe6edaa1860d5e1b2c7d480c",
                    "sha256:4e1326557f08bd44b4c7672f2f6da8e49bcd9e2307e7134c76c12e71c8a40cd3"
                ]
            }
        },
        "1.11beta3-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3d18f1e7abbbaf6a703528c5dfbb0848f4bbe098c8bd55c4fbfcf6c41df5577",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "d3009fd0e9ee1c5cc63c687ce556a8231fdd21a6a4ba402f6839caff550c3577",
            "container_config": {
                "Hostname": "d3009fd0e9ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3d18f1e7abbbaf6a703528c5dfbb0848f4bbe098c8bd55c4fbfcf6c41df5577",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T11:43:59.314096911Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-04T11:42:30.075513996Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:43:57.268507478Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf /go-alpine-patches; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T11:43:58.024656605Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:43:58.198300274Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:43:58.726028775Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T11:43:59.314096911Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:a348c773f126ea592b2fec27c1290575079dd097448500f3971d056fde173b7b",
                    "sha256:042b0cad0d80a3861a4c3476b1d4865702085a94972362d68d37a3f4bde7d456"
                ]
            }
        },
        "1.11beta3-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:30f0a9fddcf6220da972c30e1c1bb9b04953a4db4796e7a434e7e2ab78b9cf7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "518425cad5b93933691e79b7ac03263f9261c46b91fd6145a49458be1d045820",
            "container_config": {
                "Hostname": "518425cad5b9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11beta3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:30f0a9fddcf6220da972c30e1c1bb9b04953a4db4796e7a434e7e2ab78b9cf7d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-04T11:42:17.749577449Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-04T11:42:01.197573227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11beta3",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:42:16.263548537Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='674c1091f4712c1cfdcd77ecddafe6aef81cbda740af64a6e3f893ddf3dfb11c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='491e4d1288ad9f69d16e8ec990d4a4a2b9cc494c3b9488743a96c168424cbb5c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d8fb9d36a3c862a68db828eb22268e0723e3e245f41cc33f5da0a5b7e293fea5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e3e4e1271aa74f7dc64c586048f351e89d7ab20b5f3c3a518e87a628f5abf582' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6fe3a4db6a43a59fbe364069fd94536e1d2920df897d5ec93bea7fd519031c54' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='518762a66c9992d667bf7cae4adda285d14f856413ccc7cd853876aae0670382' ;; \t\t*) goRelArch='src'; goRelSha256='b11a92814601c85910e3f98dd06b941974d03b48c2c255defbee1cc99f19d721'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-04T11:42:16.817568261Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:42:16.981858949Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-04T11:42:17.57828652Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-04T11:42:17.749577449Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:b52b08d3b647e6c09e5464efba1a7ad7d9573137b415b7e9a4a1769db8edec73",
                    "sha256:16cc59404ac6c44346fc2fad1e685a110b1b05184fb54d42e56f5871cc111f68"
                ]
            }
        },
        "1.11rc1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a8f401ec4a293206fac8a427be72f816a7b75f34044c1998738fab0ae2b40dc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9f2fbf03a8f55d62462e21ffa5d85950a1e0e307c4c17c11e92abc3886db6b77",
            "container_config": {
                "Hostname": "9f2fbf03a8f5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a8f401ec4a293206fac8a427be72f816a7b75f34044c1998738fab0ae2b40dc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T11:48:30.151697411Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:35:46.217733864Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:48:28.444156826Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T11:48:29.126180411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:48:29.306903687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:48:29.951218977Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T11:48:30.151697411Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:6edb668db9ed848fa8a19868a11569d73a9da510178de7987bf2d51a65a29638",
                    "sha256:b7982681c068ffac3de4ea872924710fff74ecd50057cd9510c2b26c770b7a28"
                ]
            }
        },
        "1.11rc1-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e49eb8dcbd1b865353d8821aeaf84f556e3d2c721c96b6351cb336a4af42ef9d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9c962d201844d60847544bd585b5e45dc3bac278cfc00a6da4b99b16403b9d74",
            "container_config": {
                "Hostname": "9c962d201844",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e49eb8dcbd1b865353d8821aeaf84f556e3d2c721c96b6351cb336a4af42ef9d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T11:50:49.602996985Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:37:20.906716238Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:50:48.070840661Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T11:50:48.653510599Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:50:48.825651849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:50:49.402932224Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T11:50:49.602996985Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:d935bf43c8653e90d1d6ef26dd3118b7128a79a0777329fe5b82b7ddd11d3838",
                    "sha256:e001c94ff96dc55107d995efb2916158f2bb406cf8aeb95f3bee2d1a4d68a4f6"
                ]
            }
        },
        "1.11rc1-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a8f401ec4a293206fac8a427be72f816a7b75f34044c1998738fab0ae2b40dc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "9f2fbf03a8f55d62462e21ffa5d85950a1e0e307c4c17c11e92abc3886db6b77",
            "container_config": {
                "Hostname": "9f2fbf03a8f5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a8f401ec4a293206fac8a427be72f816a7b75f34044c1998738fab0ae2b40dc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-23T11:48:30.151697411Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-14T16:35:46.217733864Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:48:28.444156826Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-23T11:48:29.126180411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:48:29.306903687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-23T11:48:29.951218977Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-23T11:48:30.151697411Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:6edb668db9ed848fa8a19868a11569d73a9da510178de7987bf2d51a65a29638",
                    "sha256:b7982681c068ffac3de4ea872924710fff74ecd50057cd9510c2b26c770b7a28"
                ]
            }
        },
        "1.11rc1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81ac2fbc849ee82c216a20512b9438df71c06e26c674355362c8de798d56b3db",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "b172c1844fd9765f513085e23366c2574e566766e4bbc3062b1af17d15cecb7a",
            "container_config": {
                "Hostname": "b172c1844fd9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81ac2fbc849ee82c216a20512b9438df71c06e26c674355362c8de798d56b3db",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-14T16:35:38.653604139Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-14T16:35:20.845685668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc1",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:35:37.215923254Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1a071f069982427b245aea736d3174e065a12e8481c34051c672d62a5ca59ca9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2c0a53850e7dcd2f1592eb51325fa5da20ee953512bebf1b0d3fb046874dc4' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8a3d96e3e7604cf5390b7e318ff35112cdb13e0e44ddf0130659cefd196ab50e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='afe8f516fbd0316981e70fc0dda8c67116837baaa0431ee2da47f4fee4614433' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='972e7b6bfecee780a9cd970100297b35bed4c82cacc2bd55d78428928b66683d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bd30adfb32de8c441fc0b12a9a9acbd5098a77ab77609269aed7ea4f8dd682ae' ;; \t\t*) goRelArch='src'; goRelSha256='fcb8778ad5d1bb7f5bfd1564ba4107894011f1d65f69be9fa1e693f6b5143828'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-14T16:35:37.81442621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:35:37.969540569Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-14T16:35:38.482364911Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-14T16:35:38.653604139Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:bddced32840c68f7539cacf989278f7270969dbf3b506dffb9658fa05482bebf",
                    "sha256:4c80ee3832f3931a3f2ce493d947dbf9da1a11be596cd3cf546b393fd5d3d145"
                ]
            }
        },
        "1.11rc2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75223f264d5ecd01bc2c9659af4a5931c7cf1e9ecd26a069cf72949f84a00f25",
            "container_config": {
                "Hostname": "75223f264d5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:43:09.388137058Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T11:41:49.621552939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:07.766146104Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:43:08.389158702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:08.576774008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:09.209181731Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:43:09.388137058Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:4736d90a79932ee4f7d28c0bac96562b8c937f1a1452e2a5a870a2a5c7407025",
                    "sha256:89e8dcdb48f70ea58eee8d5a32a45493b3509385e992561221633341a83a56f8"
                ]
            }
        },
        "1.11rc2-alpine3.7": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a7c67540cea411bef70402ea3120634554319265d20540d27d5d44ad616e7d00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "caf064f0eae8fe1479dc8003ae02f32597e9b82f222f454e18b2d0f44c07cb39",
            "container_config": {
                "Hostname": "caf064f0eae8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a7c67540cea411bef70402ea3120634554319265d20540d27d5d44ad616e7d00",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:46:14.53391658Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2017-12-01T18:41:57.786801347Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9c09dfc247c393ab1c6205a4b7857047a3d88e398e8d35aede30f7d613ef1de9 in / "
                },
                {
                    "created": "2017-12-01T18:41:58.1189885Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2017-12-01T18:41:58.347096009Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-01-07T09:17:41.607665942Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-01-07T09:17:42.104157915Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T11:43:26.67021006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:46:12.882813996Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:46:13.445818252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:46:13.648283574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:46:14.355355129Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:46:14.53391658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:898754bd98a340248567a749270e9c191e1d08503e555cc0cd6718385c9bac11",
                    "sha256:9e19ba8d74aa24c6fcd1e7da4d6554ba0c57e843d155ef3b1d70ed4892cb9e8c",
                    "sha256:764cbf8e03210223db749a6f4a3d40312aec275edb5badeb2853ba5c5b2bb0de",
                    "sha256:d4359b07283abdfba487f695c51018d415077075d299029245274b419e8209bd",
                    "sha256:30343707fc4fa19f083ae07be462cc4205c5a9f05b1c034354d8be512127eddd",
                    "sha256:3d08c28404015fdda9f3f22842e54a42b4517033a3fc3c7e60ad7201c8dd9a48"
                ]
            }
        },
        "1.11rc2-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "75223f264d5ecd01bc2c9659af4a5931c7cf1e9ecd26a069cf72949f84a00f25",
            "container_config": {
                "Hostname": "75223f264d5e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:645aa706f4bbd321c5839c53de180ea57cb294a7d163d8bba37066d444569e55",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:43:09.388137058Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-06T11:41:42.806339084Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:376dd7fc34ad39570d2e20f3704305e788ae613c589445b3e8fb880147c3eb59 in / "
                },
                {
                    "created": "2018-07-06T11:41:43.066458551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:0f1d36dd7d8d53613b275660a88c5bf9b608ea8aa73a8054cb8bdbd73fd971ac in /etc/localtime "
                },
                {
                    "created": "2018-07-06T11:41:43.229887675Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-13T11:41:31.214385956Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-07-13T11:41:33.625649231Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-08-24T11:41:49.621552939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:07.766146104Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \tfor p in /go-alpine-patches/*.patch; do \t\t[ -f \"$p\" ] || continue; \t\tpatch -p2 -i \"$p\"; \tdone; \t./make.bash; \t\trm -rf \t\t/go-alpine-patches \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:43:08.389158702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:08.576774008Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:43:09.209181731Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:43:09.388137058Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:84a772ad7fddee8810a018506e46b24e25877e35d2060d398291c264ecd3f50f",
                    "sha256:b9aa29f838989246d180b45f7fbe90ea005c14ded9b8c15d2c925bde3a95bd0a",
                    "sha256:70149fb9fbc007b7322d49818decb7f01ff28afa34416f757babd8bfdb0a739e",
                    "sha256:3857f9def0f36310b4f991428f3456c2f0b76910423f394c6c2ae4524d18a9b5",
                    "sha256:4736d90a79932ee4f7d28c0bac96562b8c937f1a1452e2a5a870a2a5c7407025",
                    "sha256:89e8dcdb48f70ea58eee8d5a32a45493b3509385e992561221633341a83a56f8"
                ]
            }
        },
        "1.11rc2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:102bf8711381d6e8e54d3cf6c0ad1f60738178c9d16e8d12ce85a38586ddb9c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": null
            },
            "container": "00ef03489696c834aa393cac21890e4979aeca0cfec8267abce413bc18138d3a",
            "container_config": {
                "Hostname": "00ef03489696",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.11rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:102bf8711381d6e8e54d3cf6c0ad1f60738178c9d16e8d12ce85a38586ddb9c4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": [],
                "Labels": {}
            },
            "created": "2018-08-24T11:41:39.050492211Z",
            "docker_version": "17.06.2-ce",
            "history": [
                {
                    "created": "2018-07-17T11:43:17.640185849Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8359a87f8de229cd148a6a7f227042a80cb73366ce79cb1a866426a6a91103e7 in / "
                },
                {
                    "created": "2018-07-17T11:43:18.050709339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-07-17T13:21:02.748183202Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T13:21:06.954677517Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-07-17T13:21:33.132682728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-07-17T16:25:58.576731028Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-08-24T11:41:28.917621872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.11rc2",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:41:37.535483934Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='7d3fc1dec64b056cbd22ffd80bb9733725c1296aabfd58cc92bab8a5c6560e03' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='502272db03f6c6883fec5c9e17730b469966d87f9c07e6a306637ddf0fe83526' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5b160c1ea4c863f82d5d9ebad51edc08f5a5ecf368d315c8aff2c99420fb075c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a1982f3af77875c1e8f7c5056ce815236a62902472aceb95fc66e47555d88010' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d58470aa1e79282b35f7b61cb8d1ac3f0cbecd6d837076795a30003c947feef2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='85f56c3847eb1ba6b1faf14869671b6d7c31d5ef0082dc1c32a2c53a5e831c76' ;; \t\t*) goRelArch='src'; goRelSha256='5947695c5289ddb6ddc22d01d498b94ddb86bb6775593d772156c4e72a482516'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-08-24T11:41:38.042149184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:41:38.236477951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-08-24T11:41:38.85058159Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-08-24T11:41:39.050492211Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2900128b1ad3aab2a27388fdf5505dee8440ef763c095da19855e01aa66f0782",
                    "sha256:7caf884f7a7d8369c9fa835a2f91a2fb9c7779c02e196a4f93a09fdeb16feb0d",
                    "sha256:3249dbb7fde78b648374d85d39a6c1016aac8ee5407fa1ad3dbcc5bf796394a6",
                    "sha256:a4c00f3cb02536b6247cb659af2cff4ca76d459f1986bfd97a1b1c8c3f8c9bf1",
                    "sha256:9f5ccdbf35cc6f8911df273fd7fe8520aae451285e6e0238936b94b0c991c4f8",
                    "sha256:3910344073ffed9e66f24acc5820fee850b12f62e7a5be71b49a13234d4e13a3",
                    "sha256:d395d091437f37b4a946f309a1b1d26de0a15baeb018bb62c533dbb9e2e53a39"
                ]
            }
        },
        "1.12-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b25c1770fc2f21971958b2d11cf9e0729847f8f297467699cdf4409fd76e00b",
            "container_config": {
                "Hostname": "2b25c1770fc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:50:43.321101489Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:16.809046514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:35.650055511Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:50:42.025817666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:42.257534817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:43.019747737Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:50:43.321101489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:7668e9eff8a0bbea13cf9f23cf91eb302ec514474582ffc9171babb470b4cc00",
                    "sha256:05fa336752f3afd2d9108d7ffa6d8a2614bb03cfce501c8348edeec1e770ff9a"
                ]
            }
        },
        "1.12-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4675442ebb1e3d06108703495645014aa7a7cf3a44d760663e66cee2f02e629",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ccead75c95d3c1aef98cef295b22325213cbaecff8fece6010c91cd5a5d51938",
            "container_config": {
                "Hostname": "ccead75c95d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4675442ebb1e3d06108703495645014aa7a7cf3a44d760663e66cee2f02e629",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:52:12.828886845Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:50:47.928157903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:52:04.698421971Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:52:11.54240161Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:52:11.739369079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:52:12.564162082Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:52:12.828886845Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:d2eb934f6a32c9326edd58163799c4bf946b45d8c8993bc1ef0cd20ba7452417",
                    "sha256:45d6536bcca159db5ad13f3ad2fc17fc98be77ffffa76744bc3094ee7cc3827f"
                ]
            }
        },
        "1.12-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b25c1770fc2f21971958b2d11cf9e0729847f8f297467699cdf4409fd76e00b",
            "container_config": {
                "Hostname": "2b25c1770fc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:50:43.321101489Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:16.809046514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:35.650055511Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:50:42.025817666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:42.257534817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:43.019747737Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:50:43.321101489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:7668e9eff8a0bbea13cf9f23cf91eb302ec514474582ffc9171babb470b4cc00",
                    "sha256:05fa336752f3afd2d9108d7ffa6d8a2614bb03cfce501c8348edeec1e770ff9a"
                ]
            }
        },
        "1.12-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4070d330189ac5a96b12d0f8b9e489f9926bb81fab4887a5652828d08231107",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "58ac7719639fc14dac163aef1dca8eac39b8b7af34183e3e2436b88361958d76",
            "container_config": {
                "Hostname": "58ac7719639f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4070d330189ac5a96b12d0f8b9e489f9926bb81fab4887a5652828d08231107",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T22:46:46.367143747Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:45:35.711110242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:46:44.760355764Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T22:46:45.299694468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:46:45.507331423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:46:46.140852327Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T22:46:46.367143747Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:1f43693992b9469d2e8d427a8efa39450c712b341b06d4d93ae9e4c549a39c0a",
                    "sha256:b8de91dbc16705b2173eed71ca2d870ac75b03540de0f9e53d5a917632a3abad"
                ]
            }
        },
        "1.12-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1b0606f808333b7cb73513cc62f2984293bde7eb4a419f7785116c55ee63fa9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "97cb5b96e87d0ca32bbd905629a0329deb06af8ffba705b1d1b5b702681ba81a",
            "container_config": {
                "Hostname": "97cb5b96e87d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1b0606f808333b7cb73513cc62f2984293bde7eb4a419f7785116c55ee63fa9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:45.840064528Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:42:14.611862776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:642aef2e391d18e3999374d6068f29ccc5ad62b25a0d18c852a6b5534daa18f7 in / "
                },
                {
                    "created": "2020-02-01T16:42:17.103633842Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:50:06.040856429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:50:10.595293372Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:50:31.474116864Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:01:23.888198931Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:21.643245079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:39.632542228Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:44.568610235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:44.803581789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:45.626637212Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:45.840064528Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce9ae4d85766f36c16f76335167b6ff66f01ec49ff1fd15b34d51ae44c2b827a",
                    "sha256:d5ca591fbd5c5eb90cdb08fe05704093261e850fd2e1cb13214387bd093f1317",
                    "sha256:b28011d3a4044088991efd1ac1c8f9e7b5d169c3229b142532ed89f597ad251c",
                    "sha256:91cc825677a7691dd2ceadaea5b90144d7578b19044d58f91bb5a6bc586f6a04",
                    "sha256:53df2c5f8b0d79e1336ffe66722cfd3438a02a86c845cd7f597efa00f1f2c336",
                    "sha256:03150ea331942f9c6442e6f0f31b3c63059f543bc25289e726ef2a76836166fc",
                    "sha256:2df708357b3be98e81d06e23d0ba03c5aa2fee5d6426cf87972b5edaf9795e75"
                ]
            }
        },
        "1.12-rc-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56049d07c5eee0122d1392ffc0b44ad08f3c731d695cb4cccd30642b44a1a47f",
            "container_config": {
                "Hostname": "56049d07c5ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:43:36.230862048Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T12:41:48.099501035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:34.607149483Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:43:35.194078597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:35.358452608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:36.051752347Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:43:36.230862048Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:af6e62868ab4499f6805ca1fc125f3f800b566aeb244804b86254fa8cc3f5cdc",
                    "sha256:7ab36c0167f94f3b48736390ae6836b66332d3836d1093bf46c6633e458a8e41"
                ]
            }
        },
        "1.12-rc-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a779865d00ac224a82cab333b06dfb8b1d486afe9300dd072bfeb0d235c835bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f3a3e788f8407e40c3c6f17fb8e169c048c7a236d795d0474b64e281f35d4d5c",
            "container_config": {
                "Hostname": "f3a3e788f840",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a779865d00ac224a82cab333b06dfb8b1d486afe9300dd072bfeb0d235c835bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:45:17.895206661Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T12:43:48.255560847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:45:16.330548866Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:45:16.906792616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:45:17.062586223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:45:17.691523356Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:45:17.895206661Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:4baa9f55026e7f9fac09f28a8a7eced62dd4ab5076a70f0a30f31d763535575f",
                    "sha256:87e795c6ad66b9ff8a7afff1664323583bf12e00d10fb557ae083d13884639fc"
                ]
            }
        },
        "1.12-rc-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56049d07c5eee0122d1392ffc0b44ad08f3c731d695cb4cccd30642b44a1a47f",
            "container_config": {
                "Hostname": "56049d07c5ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:43:36.230862048Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T12:41:48.099501035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:34.607149483Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:43:35.194078597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:35.358452608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:36.051752347Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:43:36.230862048Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:af6e62868ab4499f6805ca1fc125f3f800b566aeb244804b86254fa8cc3f5cdc",
                    "sha256:7ab36c0167f94f3b48736390ae6836b66332d3836d1093bf46c6633e458a8e41"
                ]
            }
        },
        "1.12-rc-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ab694a6f671e00c589ae18937bb3bf5318a25d43f74a3010ff903b40628e320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "addb3c8424688f9dc60638442d9e1597d04532c75ead755ec1094a3d367095da",
            "container_config": {
                "Hostname": "addb3c842468",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ab694a6f671e00c589ae18937bb3bf5318a25d43f74a3010ff903b40628e320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:41:44.769739698Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T12:43:08.313557111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8c452240b3657ec4cc6568239a4d933bc75fd958464a3950f67912097968fff8 in / "
                },
                {
                    "created": "2019-02-06T12:43:08.732890042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T15:27:50.46145522Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T15:27:54.717646277Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T15:28:21.159991728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:42:50.018026485Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-13T12:41:30.811647166Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:41:43.197779347Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:41:43.703984104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:41:43.863641723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:41:44.595515855Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:41:44.769739698Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b999405f276ee6dd7eae11f1695f0caf65cf0a5c8396eda7277c729522b82e7",
                    "sha256:d4087f0b598285864381402b67787b7b472ffef34afcb30e5a33e9b22e5d7236",
                    "sha256:b53459201f5ee601fd8f00564ea9c19680d07860ab3b4ffba3bcbee5429a6676",
                    "sha256:7343b78f933a48ec3af11ee27bbe8e487703c0962e56aaa10d009cb83a841006",
                    "sha256:7cbcdd99ed08d3cd9343ae21e4bde979ac73ee1bbd1e8ecb0705149a802d66e6",
                    "sha256:bb2cc37c292bace0df68b10da8ece1b1a67586bd654633114acdaf5856997bb8",
                    "sha256:6f30a502ae2bf59eca4c1538c7f654a99b85eca32c2b5a5fcb97bb96db17d01e"
                ]
            }
        },
        "1.12-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b05883af486688f52c20875a4663b83ce723976529d6e42f5f0454ce9d392475",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8494b3c3718f470b96cdebb3f8ceda2c25efb1ee45e91b59b7dd099e479ac515",
            "container_config": {
                "Hostname": "8494b3c3718f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b05883af486688f52c20875a4663b83ce723976529d6e42f5f0454ce9d392475",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:49:11.578303836Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:43.10676531Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17af4834ca99365d5ecf14eb938572689bd3c3ad5fd8a88da12c4c3474975771 in / "
                },
                {
                    "created": "2020-02-01T16:43:45.448668694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:05.998032957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:10.073726234Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:00:32.841833549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:02:27.410645524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:51.252629312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:05.271529462Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:49:10.406201563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:10.616469488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:11.313161751Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:49:11.578303836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:243e9604e20f567f6e9429f240bb02d5ef5db2eb3f56f28b4ed33feea0727e4c",
                    "sha256:a4c9827bc1ab9b709f72fbebb77db0e5dee3f97330d5825e43b3d3bce003d5d2",
                    "sha256:891ccf47c6ae19f4440e245373355c4e0e8f07f7f531028112953f984b137f7a",
                    "sha256:b3b708bfc02280b6ee5084770f85aa5c9ee498d625fd35f5ad3a5a1a3e889876",
                    "sha256:4d4abc98dc73a30130742b13258b3234e4ae349b45d72621157f733ad39e0e24",
                    "sha256:9ab2e5413d1055621fbadda9b4849a285e5398c6bffc634755fd95d6d27d3743",
                    "sha256:665a810da2a0ce12837e7267f3737e161200aa25647896b95f509bf073a3c5fe"
                ]
            }
        },
        "1.12.0-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9743c714202ec824cec525c378114b6aff1ef69a2410849a8ab5509794ed8ee7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "30d2d232a08b92c97080aedd766c3e9cbca02c8c32a14a6b8cdb0ac0eba7c842",
            "container_config": {
                "Hostname": "30d2d232a08b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9743c714202ec824cec525c378114b6aff1ef69a2410849a8ab5509794ed8ee7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T04:14:03.356438004Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T04:11:57.364541331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:14:01.577384639Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T04:14:02.224926942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:14:02.421433441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:14:03.153787393Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T04:14:03.356438004Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:7728ef7a86ae32d1c05509e9adbc18bcba68cbfde2e83729044202551075bdb1",
                    "sha256:06f37f7aa689a1b2c36b94ba39154be4b6b3a0119ed96f514e030d438fc9a04b"
                ]
            }
        },
        "1.12.0-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9743c714202ec824cec525c378114b6aff1ef69a2410849a8ab5509794ed8ee7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "30d2d232a08b92c97080aedd766c3e9cbca02c8c32a14a6b8cdb0ac0eba7c842",
            "container_config": {
                "Hostname": "30d2d232a08b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9743c714202ec824cec525c378114b6aff1ef69a2410849a8ab5509794ed8ee7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-08T04:14:03.356438004Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-08T04:11:57.364541331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:14:01.577384639Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-08T04:14:02.224926942Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:14:02.421433441Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:14:03.153787393Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-08T04:14:03.356438004Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:7728ef7a86ae32d1c05509e9adbc18bcba68cbfde2e83729044202551075bdb1",
                    "sha256:06f37f7aa689a1b2c36b94ba39154be4b6b3a0119ed96f514e030d438fc9a04b"
                ]
            }
        },
        "1.12.0-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab8c0ccf807825118228aa6ded5810e3e436c97c144e5a7247d0aa7fe3c9bc32",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dd48eceff773cd7d442df6b302fc03e8ba8309f6dac452d38753588dd1964335",
            "container_config": {
                "Hostname": "dd48eceff773",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab8c0ccf807825118228aa6ded5810e3e436c97c144e5a7247d0aa7fe3c9bc32",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-05T16:56:41.975801669Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-05T12:42:57.910087004Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8271a1ca944204307a0659ebf47e18f728c4aa651091092aee9270e619c17663 in / "
                },
                {
                    "created": "2019-03-05T12:42:58.595982058Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T13:35:37.931884111Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T13:35:43.740268654Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-05T13:36:11.277551029Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:56:27.725983252Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-05T16:56:28.092049305Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:56:40.137056443Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='750a07fef8579ae4839458701f4df690e0b20b8bcce33b437e4df89c451b6f13' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ea0636f055763d309437461b5817452419411eb1f598dc7f35999fae05bcb79a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7bf59c2f1ac48eb587817a2a30b02168ecc99635fc19b6e677cce01406e3fac' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3ac1db65a6fa5c13f424b53ee181755429df0c33775733cede1e0d540440fd7b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='5be21e7035efa4a270802ea04fb104dc7a54e3492641ae44632170b93166fb68' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c0aef360b99ebb4b834db8b5b22777b73a11fa37b382121b24bf587c40603915' ;; \t\t*) goRelArch='src'; goRelSha256='09c43d3336743866f2985f566db0520b36f4992aea2b4b2fd9f52f17049e88f2'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-05T16:56:40.69726967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:56:40.889927506Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T16:56:41.764713554Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-05T16:56:41.975801669Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d8e11f36fc45b7073d3b0eb3636428dedebb40f392bea9fa5751ed92848ca875",
                    "sha256:9b55b21b26ac195af7926b06f6d48d3a71e6f86c513684bbec2121ef8d70d4a4",
                    "sha256:d59c98f39596cafc4a513ef23975858fb9fc43d7fea6dd321be38debfe95fa1c",
                    "sha256:0f7aedf67c4fb1ee53e22bd1d07bb2655c7e2d1f35185a03020d348d6ed5252f",
                    "sha256:3778aa58dcfe5ed1569fc0e0c96963d6423de6958a2d4e56466d2095684a00e1",
                    "sha256:af9d08024f0efdbfc5e8e484e63c8c91dc7f100bd03f6044a6dd0f1464d90de9",
                    "sha256:c9bb48ea424ce348060f36a3c474b640d51e9bf8ae2ac7823ee9a2aa79959a32"
                ]
            }
        },
        "1.12.1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:440c21875ab7d0c74e78a66afae7ba3a51a1125f3ff7b5191a425a32291de2c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fad963186cf70c41471072150ebc1b0be290db9e39775d84837790dd4e6a8b9a",
            "container_config": {
                "Hostname": "fad963186cf7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:440c21875ab7d0c74e78a66afae7ba3a51a1125f3ff7b5191a425a32291de2c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T11:43:54.157373808Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:41:47.282851259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:43:52.062320193Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T11:43:52.745567006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:43:52.978772621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:43:53.899507627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T11:43:54.157373808Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:0b83c67b7633961cfca480351a020a46fc17081adc144081f8821fb84dcb4f92",
                    "sha256:4196eb8cc78b95967ef9bfb0676363eecff8b596918690edfcaa723105e7ef79"
                ]
            }
        },
        "1.12.1-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:440c21875ab7d0c74e78a66afae7ba3a51a1125f3ff7b5191a425a32291de2c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fad963186cf70c41471072150ebc1b0be290db9e39775d84837790dd4e6a8b9a",
            "container_config": {
                "Hostname": "fad963186cf7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:440c21875ab7d0c74e78a66afae7ba3a51a1125f3ff7b5191a425a32291de2c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-16T11:43:54.157373808Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-03-16T11:41:47.282851259Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:43:52.062320193Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-16T11:43:52.745567006Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:43:52.978772621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-16T11:43:53.899507627Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-16T11:43:54.157373808Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:0b83c67b7633961cfca480351a020a46fc17081adc144081f8821fb84dcb4f92",
                    "sha256:4196eb8cc78b95967ef9bfb0676363eecff8b596918690edfcaa723105e7ef79"
                ]
            }
        },
        "1.12.1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1836e41ee0cde8a4d89e3077a21cde24e2ddb5c46e0adab4d73bb2970a0d4c81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d57f5c33915e34d78504d4dc6b6d2f8ee44cff3a03c96b32a7a6a36ffd254103",
            "container_config": {
                "Hostname": "d57f5c33915e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1836e41ee0cde8a4d89e3077a21cde24e2ddb5c46e0adab4d73bb2970a0d4c81",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-03-27T17:32:59.358061728Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:15.306755935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:32:52.428638204Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ceac33f07f8fdbccd6c6f7339db33479e1be8c206e67458ba259470fe796dbf2' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='10dba44cf95c7aa7abc3c72610c12ebcaf7cad6eed761d5ad92736ca3bc0d547' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='af74b6572dd0c133e5de121928616eab60a6252c66f6d9b15007c82207416a2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e1258c81f420c88339abf40888423904c0023497b4e9bbffac9ee484597a57d3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a9b8f49be6b2083e2586c2ce8a2a86d5dbf47cca64ac6195546a81c9927f9513' ;; \t\t*) goRelArch='src'; goRelSha256='0be127684df4b842a64e58093154f9d15422f1405f1fcff4b2c36ffc6a15818a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-03-27T17:32:54.824438848Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:32:55.691078161Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:32:58.877380157Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-03-27T17:32:59.358061728Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:c78d6e9672265845a6b2a0ae227c70f66fbaa583927468114acfed0d8e16d079",
                    "sha256:9b5d8d21970fb2a9363555dc6edfde0ab8b6f6990cbf75fce9f3a09148144940"
                ]
            }
        },
        "1.12.10-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d349368046de586bc86d6ddd9f92925c490639c73ba7056837348a43ec7b9600",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d2e0d3114e473937c8d33e3e990f23594fbe49520fc036dc4996df22fbedecc5",
            "container_config": {
                "Hostname": "d2e0d3114e47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d349368046de586bc86d6ddd9f92925c490639c73ba7056837348a43ec7b9600",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:54:58.894183853Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:52:48.850580022Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:54:56.905735885Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:54:57.588080478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:54:57.828469602Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:54:58.625425353Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:54:58.894183853Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:05dfceb6b5d004236618592b9063d061ae20d81d4e5bbbdff5596e140b421afa",
                    "sha256:481b68b85ef98cfad88cc61279cf2c2e16d9c2c7208ffc7d90a4f06d2a9658d3"
                ]
            }
        },
        "1.12.10-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d349368046de586bc86d6ddd9f92925c490639c73ba7056837348a43ec7b9600",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d2e0d3114e473937c8d33e3e990f23594fbe49520fc036dc4996df22fbedecc5",
            "container_config": {
                "Hostname": "d2e0d3114e47",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d349368046de586bc86d6ddd9f92925c490639c73ba7056837348a43ec7b9600",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:54:58.894183853Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:52:48.850580022Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:54:56.905735885Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:54:57.588080478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:54:57.828469602Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:54:58.625425353Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:54:58.894183853Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:05dfceb6b5d004236618592b9063d061ae20d81d4e5bbbdff5596e140b421afa",
                    "sha256:481b68b85ef98cfad88cc61279cf2c2e16d9c2c7208ffc7d90a4f06d2a9658d3"
                ]
            }
        },
        "1.12.10-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:482b5b7839017073cbb29ffe0435cf533ab6d66745c0c16496b5b2fe7d0ec3a9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "78b1a7d49b35f431651378ef9fbdc775e972cd6d33462e2d42a7532cbd8196df",
            "container_config": {
                "Hostname": "78b1a7d49b35",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:482b5b7839017073cbb29ffe0435cf533ab6d66745c0c16496b5b2fe7d0ec3a9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:56:45.268008379Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:55:07.045493406Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:43.190574533Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:56:43.940498479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:44.189809969Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:56:44.970471781Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:56:45.268008379Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:5cf1ace272169d85a87d731396f92c39fbbedfa493c658b2977b3f0be36aa8ba",
                    "sha256:4a888e95e0fa580d29d169b32f6cd4bdc901677cfea721d812c4509c07ce2fec"
                ]
            }
        },
        "1.12.10-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a7b9e842c8a0fd71893f0323ead7fe20e1f0299bb91759ee0620fa8b7c3e7dda",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d9701936602c3508c2a0b378ce2217f662d1833e667501140c88f8c0c6335c3f",
            "container_config": {
                "Hostname": "d9701936602c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a7b9e842c8a0fd71893f0323ead7fe20e1f0299bb91759ee0620fa8b7c3e7dda",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:10:06.784739655Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:42:27.86238717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cacbc5a59bab479d85dfe3a5aec6e1ad9416d48e0e2f16b6033695dd2a83a853 in / "
                },
                {
                    "created": "2019-10-16T23:42:28.487112567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:21:11.804112644Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:21:30.131756863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:22:12.861490145Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.123257559Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:09:41.402642404Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:10:03.238617205Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:10:04.467503823Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:10:04.893685815Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:10:06.251224504Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:10:06.784739655Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2bafd7624292e54f259adf7a25e44eabebcbbca7c23e052842de5a2b6296578e",
                    "sha256:4e612e2c1ae811ad7c2fdc1f0fd227c4a912e08fed9f6b836e6c94a79a3273f8",
                    "sha256:f9628f754759f2335ca1c84b84581ca7de9555d83dc31000f650735ac7d7feae",
                    "sha256:c69edfccd2ef44e5e0adbbacf2b668852c7e9523c30ac480d847d118e525133e",
                    "sha256:e30f7cb1218539d9f6c4b1cfd1ca1ee5917628573d5fc7df515637583d8ac104",
                    "sha256:252baec2ce16c08a3b73e941427b79cb7bb85aaf55582e925a295e2c8dcaba8f",
                    "sha256:8d37bc590686dd2184196662486559ead8b70f9b0c201e1e508b2c40ecbb5b19"
                ]
            }
        },
        "1.12.10-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e99a4a33de3d909b581377f95c7ccb9610cd7e5f4a922eb0ddd7f9ebd080ce87",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fdc1fa5b8fa4121da8857f630151433cc784572e5bd4418ed5dedf5dfbfb0b26",
            "container_config": {
                "Hostname": "fdc1fa5b8fa4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e99a4a33de3d909b581377f95c7ccb9610cd7e5f4a922eb0ddd7f9ebd080ce87",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:10:43.114915627Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:44:51.462160111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17e092081465a34f8597d022a74168de001d3a2d1561a4c7c9ca44c5620c82b2 in / "
                },
                {
                    "created": "2019-10-16T23:44:52.084569481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:30:19.692374989Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:30:28.80288174Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:31:13.674433866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.356975662Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:10:12.980208628Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.10",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:10:35.786656717Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aaa84147433aed24e70b31da369bb6ca2859464a45de47c2a5023d8573412f6b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b20a897e3a078637a91e8c91ff69a27bcefea7384a0019e56fbfd21f8170fe6b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='d45d1eebe10a33a3d850cafcefd45200091a9ddb880857135307ee0de9424d24' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='863ad8abc9a9a18a9d55e2a3a2c68046ae57ccd34c2fa0159b70d015957391d6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='9c5787aeca109c6f90f0ef82328f9ec8d54cf5a4a51d23bfedfc440e92649f9d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a8ab50d133db183d9afa304f79c9e994c9208aec9d1bf14b04cd2bda478f406a' ;; \t\t*) goRelArch='src'; goRelSha256='f56e48fce80646d3c94dcf36d3e3f490f6d541a92070ad409b87b6bbb9da3954'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:10:40.938243718Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:10:41.271256129Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:10:42.738245502Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:10:43.114915627Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:15f65c118fb66793954d9048e28391368c87e0a330a1ee03774bf579aaa7f62f",
                    "sha256:cc58db1e2d0fe1cb08f7a044d6cc20a02c8f33d60565ebbfd88b71b34dd936e6",
                    "sha256:26379916f58947f4e7200ea0ef9baba17783e51e64ea1f1e8ee00b2420ef913b",
                    "sha256:df960a00fac2058d18e3f35fe6cfd56e8c56b5d6cb7772547d8d9e688ec3fc52",
                    "sha256:0523ab0827194b6a72ab39b5bcc07506856a003e8d97e27348965ab2788114bd",
                    "sha256:4bde7ed7526f40d817355cd913cc42ad94348b6f54546b914365e0cf177f3fbb",
                    "sha256:5d388b6ed506f1c61a28921a4fb1991cb2bc9744e4a5d18bb233bf06f9fbc518"
                ]
            }
        },
        "1.12.11-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0cb075bb92573a5df0bd4840f2af2aa5c172a18a9b74195a55a972ab23168f58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4a5618aaac95fe2fbe85b2d7474a4a09f48731fc6c33dc0c388e4235d8bccb35",
            "container_config": {
                "Hostname": "4a5618aaac95",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0cb075bb92573a5df0bd4840f2af2aa5c172a18a9b74195a55a972ab23168f58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:30:38.335670074Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:27:46.802908743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:30:34.334008825Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:30:35.720945637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:30:36.087001574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:30:37.883307012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:30:38.335670074Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:16c1f68f3eb8b95143eab11b42611dbd950bf50137ec59be45f7785f7133f813",
                    "sha256:3fbda82e1ed902711f5d1d2e85ff603a44531db5c3709769f6d0d54e5efb5469"
                ]
            }
        },
        "1.12.11-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0cb075bb92573a5df0bd4840f2af2aa5c172a18a9b74195a55a972ab23168f58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4a5618aaac95fe2fbe85b2d7474a4a09f48731fc6c33dc0c388e4235d8bccb35",
            "container_config": {
                "Hostname": "4a5618aaac95",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0cb075bb92573a5df0bd4840f2af2aa5c172a18a9b74195a55a972ab23168f58",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:30:38.335670074Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:27:46.802908743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:30:34.334008825Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:30:35.720945637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:30:36.087001574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:30:37.883307012Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:30:38.335670074Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:16c1f68f3eb8b95143eab11b42611dbd950bf50137ec59be45f7785f7133f813",
                    "sha256:3fbda82e1ed902711f5d1d2e85ff603a44531db5c3709769f6d0d54e5efb5469"
                ]
            }
        },
        "1.12.11-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bf371b22f6a36302057376cc001f0336a4f687d289d1139e6fe0bf383d64cab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fa1cdffee53439c72e97c8b19845a0d69ae11e42897c7d62ed5bcc60431d6a32",
            "container_config": {
                "Hostname": "fa1cdffee534",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bf371b22f6a36302057376cc001f0336a4f687d289d1139e6fe0bf383d64cab",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:24:04.288110123Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T23:22:18.454444119Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:24:01.87653102Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:24:02.740363834Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:24:03.040233772Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:24:04.00596587Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:24:04.288110123Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:cd6cb1c3cb475c23af641bc11e0ea228a3743fc647a443476a1b0518f6bd6288",
                    "sha256:fa02ddbfc4e6b0e0bccd0d0c54bd02fc9772ddf67dea598912eb16e46d071903"
                ]
            }
        },
        "1.12.11-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:014c80adf90e5841778c39dc8a63cfcbb5fb88548f19a0a49147ec5d78a36853",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ec93a516645ab3cb215385a4baf46ba9d8754e78093159e39f956c0d8ee33d92",
            "container_config": {
                "Hostname": "ec93a516645a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:014c80adf90e5841778c39dc8a63cfcbb5fb88548f19a0a49147ec5d78a36853",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:19:34.12856534Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:42:27.86238717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cacbc5a59bab479d85dfe3a5aec6e1ad9416d48e0e2f16b6033695dd2a83a853 in / "
                },
                {
                    "created": "2019-10-16T23:42:28.487112567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:21:11.804112644Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:21:30.131756863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:22:12.861490145Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.123257559Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T23:18:55.915748447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:31.020468523Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:19:31.917323017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:32.27973792Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:19:33.647248265Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:19:34.12856534Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2bafd7624292e54f259adf7a25e44eabebcbbca7c23e052842de5a2b6296578e",
                    "sha256:4e612e2c1ae811ad7c2fdc1f0fd227c4a912e08fed9f6b836e6c94a79a3273f8",
                    "sha256:f9628f754759f2335ca1c84b84581ca7de9555d83dc31000f650735ac7d7feae",
                    "sha256:c69edfccd2ef44e5e0adbbacf2b668852c7e9523c30ac480d847d118e525133e",
                    "sha256:e30f7cb1218539d9f6c4b1cfd1ca1ee5917628573d5fc7df515637583d8ac104",
                    "sha256:b236de953684799ac863ef650c961c49d34b3d8026715d3e8eec34654cc7f474",
                    "sha256:6e611613d4984e60508500e7c0b06750f47304a8b78cfa2450c51a5c16ea40d7"
                ]
            }
        },
        "1.12.11-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04ded6851bba5a905a976b1817b9e7628ca952fd0c3cd8b697cad1c75fa8da91",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1a8126891f5387414deb6723dbaf8fee27522ebcd35d95db6a1a8fbb50eaca14",
            "container_config": {
                "Hostname": "1a8126891f53",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04ded6851bba5a905a976b1817b9e7628ca952fd0c3cd8b697cad1c75fa8da91",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:20:07.674985077Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:44:51.462160111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17e092081465a34f8597d022a74168de001d3a2d1561a4c7c9ca44c5620c82b2 in / "
                },
                {
                    "created": "2019-10-16T23:44:52.084569481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:30:19.692374989Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:30:28.80288174Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:31:13.674433866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.356975662Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T23:19:40.869458703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.11",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:20:01.171919391Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2c5960292da8b747d83f171a28a04116b2977e809169c344268c893e4cf0a857' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='895766c9c1d1a32e9e0e7ea2f9fac6f33df0397954564c05b56ecdc58605fd1e' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a05361badb95f6cc5724e32f59b0f33048dfca63b539cf2bd8ab77fa4f2ba923' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='9d979c489471c5ec9b9cd6b0922f061b2dca7b801effc39d7826a1255e8221c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8f962f84bd36f5caad78710b32e074406d12e864e334bf6c8820836dbd1b6409' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='faa9de31cc41c0ecb79382569f1269758a7e51ca526aaf849d7189da6e28f716' ;; \t\t*) goRelArch='src'; goRelSha256='fcf58935236802929f5726e96cd1d900853b377bec2c51b2e37219c658a4950f'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:20:05.821509529Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:20:06.19545339Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:20:07.323824202Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:20:07.674985077Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:15f65c118fb66793954d9048e28391368c87e0a330a1ee03774bf579aaa7f62f",
                    "sha256:cc58db1e2d0fe1cb08f7a044d6cc20a02c8f33d60565ebbfd88b71b34dd936e6",
                    "sha256:26379916f58947f4e7200ea0ef9baba17783e51e64ea1f1e8ee00b2420ef913b",
                    "sha256:df960a00fac2058d18e3f35fe6cfd56e8c56b5d6cb7772547d8d9e688ec3fc52",
                    "sha256:0523ab0827194b6a72ab39b5bcc07506856a003e8d97e27348965ab2788114bd",
                    "sha256:33374dee467b31d98c83f5adac167a0349c08262a132bd01532e5594fc8da76b",
                    "sha256:98f07603e44dfa916a2887de49a03518139d06ba5ad0140bc41cb4f842ca5512"
                ]
            }
        },
        "1.12.12-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a8a967bf398f3f6daa3d8b5ac6f0501cdf06d9474834b298b377703df6beda4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5ec062ead2e4d07f86571643a0de725a631f720835d3c89a987b6ed45c5a1f0",
            "container_config": {
                "Hostname": "a5ec062ead2e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a8a967bf398f3f6daa3d8b5ac6f0501cdf06d9474834b298b377703df6beda4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:33:52.672807545Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:31:11.878052712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:33:50.230972331Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:33:51.176488216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:33:51.512871779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:33:52.42209812Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:33:52.672807545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:0c3b08b607b478cfeea091f37a5529f7efbc71c9c818a179e263c700d59666fd",
                    "sha256:c824b12142c9f9ced362c7eafb5742647a4e497f932f945737214813ed32c277"
                ]
            }
        },
        "1.12.12-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a8a967bf398f3f6daa3d8b5ac6f0501cdf06d9474834b298b377703df6beda4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5ec062ead2e4d07f86571643a0de725a631f720835d3c89a987b6ed45c5a1f0",
            "container_config": {
                "Hostname": "a5ec062ead2e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2a8a967bf398f3f6daa3d8b5ac6f0501cdf06d9474834b298b377703df6beda4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:33:52.672807545Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:31:11.878052712Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:33:50.230972331Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:33:51.176488216Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:33:51.512871779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:33:52.42209812Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:33:52.672807545Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:0c3b08b607b478cfeea091f37a5529f7efbc71c9c818a179e263c700d59666fd",
                    "sha256:c824b12142c9f9ced362c7eafb5742647a4e497f932f945737214813ed32c277"
                ]
            }
        },
        "1.12.12-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be3f27209c89e38013a0a966098c31ac7f3f46c962817606d6c942ceff4c4eb2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cee9fdf04f1db3a6d4d6fe332d4677a11b6a6169d1c49145fe13b5e315e42fc6",
            "container_config": {
                "Hostname": "cee9fdf04f1d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:be3f27209c89e38013a0a966098c31ac7f3f46c962817606d6c942ceff4c4eb2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:50:05.88897591Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-18T04:48:11.155751284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:50:03.011502608Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:50:03.985540034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:50:04.341465284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:50:05.571481847Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:50:05.88897591Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:7b4edbfa9002ac7ed86e23f4f1437473a0b2655ded61dfc993d8a690be13e9fd",
                    "sha256:c7279ecb4dc36328abc36c5b578e2fc64a8b452e0f9608b01ba8932d7f749416"
                ]
            }
        },
        "1.12.12-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8cf372b00cc825b1ec2ab543c4bd9f326c732554782f733f3b6fa48fc4b51e40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59841554d76c46838e6adfb284fc8f3a73addd84e91848681f33a6f55fddedc5",
            "container_config": {
                "Hostname": "59841554d76c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8cf372b00cc825b1ec2ab543c4bd9f326c732554782f733f3b6fa48fc4b51e40",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:45:25.31180342Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:42:27.86238717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cacbc5a59bab479d85dfe3a5aec6e1ad9416d48e0e2f16b6033695dd2a83a853 in / "
                },
                {
                    "created": "2019-10-16T23:42:28.487112567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:21:11.804112644Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:21:30.131756863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:22:12.861490145Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.123257559Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:44:57.777521767Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:45:22.166202888Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4cf11ac6a8fa42d26ab85e27a5d916ee171900a87745d9f7d4a29a21587d78fc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ed3cda3c2d0648a712fa13cfc25e82431772231ef8f3db70de2fa9c2b893a5ab' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7e2fed536904f2bf7007deed3609b3484c55660821bd2faaeb6928fa62fd33e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='59a48035f9b1387347e8a8a0f7c6d693e6bc84e0374ef802fb8ec61f894db073' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adee3f914baf578bd21526479f45f99782791dcd12bfba2a7ca2d3fb79e4d623' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='24b0be352713a6e047b21093cf2aaaf22c7757d3606839ddd26da60e7f18dba6' ;; \t\t*) goRelArch='src'; goRelSha256='fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:45:22.896531167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:45:23.347389896Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:45:24.837992337Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:45:25.31180342Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2bafd7624292e54f259adf7a25e44eabebcbbca7c23e052842de5a2b6296578e",
                    "sha256:4e612e2c1ae811ad7c2fdc1f0fd227c4a912e08fed9f6b836e6c94a79a3273f8",
                    "sha256:f9628f754759f2335ca1c84b84581ca7de9555d83dc31000f650735ac7d7feae",
                    "sha256:c69edfccd2ef44e5e0adbbacf2b668852c7e9523c30ac480d847d118e525133e",
                    "sha256:e30f7cb1218539d9f6c4b1cfd1ca1ee5917628573d5fc7df515637583d8ac104",
                    "sha256:497885af95ffbc232da4b5596fb54424fe4f9c3f736aa3a1aad067030bdf5810",
                    "sha256:0ac5b75da46814930899ab4ee4a38a9502bd3f3c1d2f18fad649f4276761f782"
                ]
            }
        },
        "1.12.12-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f9a1bf392abcf48b645bb04a8ac485b862df91fd188918d02ed34c4b745215cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "081148fd242c845b0c8a819a3dd5064af7c0f46dfaa8013e31b069ea9e8a495a",
            "container_config": {
                "Hostname": "081148fd242c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f9a1bf392abcf48b645bb04a8ac485b862df91fd188918d02ed34c4b745215cf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:45:59.200547247Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:44:51.462160111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17e092081465a34f8597d022a74168de001d3a2d1561a4c7c9ca44c5620c82b2 in / "
                },
                {
                    "created": "2019-10-16T23:44:52.084569481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:30:19.692374989Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:30:28.80288174Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:31:13.674433866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.356975662Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:45:32.921056826Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.12",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:45:49.370866388Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='4cf11ac6a8fa42d26ab85e27a5d916ee171900a87745d9f7d4a29a21587d78fc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ed3cda3c2d0648a712fa13cfc25e82431772231ef8f3db70de2fa9c2b893a5ab' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7e2fed536904f2bf7007deed3609b3484c55660821bd2faaeb6928fa62fd33e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='59a48035f9b1387347e8a8a0f7c6d693e6bc84e0374ef802fb8ec61f894db073' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='adee3f914baf578bd21526479f45f99782791dcd12bfba2a7ca2d3fb79e4d623' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='24b0be352713a6e047b21093cf2aaaf22c7757d3606839ddd26da60e7f18dba6' ;; \t\t*) goRelArch='src'; goRelSha256='fcb33b5290fa9bcc52be3211501540df7483d7276b031fc77528672a3c705b99'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:45:54.669029889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:45:57.606602526Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:45:58.821486961Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:45:59.200547247Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:15f65c118fb66793954d9048e28391368c87e0a330a1ee03774bf579aaa7f62f",
                    "sha256:cc58db1e2d0fe1cb08f7a044d6cc20a02c8f33d60565ebbfd88b71b34dd936e6",
                    "sha256:26379916f58947f4e7200ea0ef9baba17783e51e64ea1f1e8ee00b2420ef913b",
                    "sha256:df960a00fac2058d18e3f35fe6cfd56e8c56b5d6cb7772547d8d9e688ec3fc52",
                    "sha256:0523ab0827194b6a72ab39b5bcc07506856a003e8d97e27348965ab2788114bd",
                    "sha256:e7d0c92174a7f83c0c01459c27a958ab6081edfed3fe5d1d2df4c469d2954867",
                    "sha256:fd4adfe53c152cd0fa217098a40ad1895c19efbedf397a0273d6b8fb43800e30"
                ]
            }
        },
        "1.12.13-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e4cb063b8c39abc65c0986dee93f92bd84ac344e91cf95a5181e493e89e3fdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e05c9914bdafe2f9d7f122cdb5ddea68d1ac8a6c39cc59a9458e721cc82ef3b",
            "container_config": {
                "Hostname": "9e05c9914bda",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e4cb063b8c39abc65c0986dee93f92bd84ac344e91cf95a5181e493e89e3fdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:49:44.257153091Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:47:35.223879556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:49:41.281008837Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:49:42.142684991Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:49:42.578357398Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:49:43.836427692Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:49:44.257153091Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:ec83215070d331e769ba2d74082a59f60e1a672f02c249c8e08363049963d631",
                    "sha256:74836fc7128ed2b61dc79de22dffc64a74ce765cfad67353638b58beab77f881"
                ]
            }
        },
        "1.12.13-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e4cb063b8c39abc65c0986dee93f92bd84ac344e91cf95a5181e493e89e3fdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e05c9914bdafe2f9d7f122cdb5ddea68d1ac8a6c39cc59a9458e721cc82ef3b",
            "container_config": {
                "Hostname": "9e05c9914bda",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9e4cb063b8c39abc65c0986dee93f92bd84ac344e91cf95a5181e493e89e3fdd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:49:44.257153091Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:47:35.223879556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:49:41.281008837Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:49:42.142684991Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:49:42.578357398Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:49:43.836427692Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:49:44.257153091Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:ec83215070d331e769ba2d74082a59f60e1a672f02c249c8e08363049963d631",
                    "sha256:74836fc7128ed2b61dc79de22dffc64a74ce765cfad67353638b58beab77f881"
                ]
            }
        },
        "1.12.13-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d976ee47b8f74bfff2276312ad5902291342bb1754be2fe1b7b2df8c9b549d8c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "974469250c3bb86d0fdf87e46a00f52561d099bc5078cdd07ff11feea47c2e2f",
            "container_config": {
                "Hostname": "974469250c3b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d976ee47b8f74bfff2276312ad5902291342bb1754be2fe1b7b2df8c9b549d8c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:52:12.911521316Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:49:53.399666469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:52:09.890581813Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:52:10.90236672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:52:11.264372812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:52:12.482200339Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:52:12.911521316Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:35900b80c917d3a24ec0381f574c54e600c55f4507391b097e934bbd704c0984",
                    "sha256:6667efc1f9718c29848e716b20e326c71d94cba16f35290dfcb894ae6e1f3356"
                ]
            }
        },
        "1.12.13-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71218ace077021af184970641674bebc7aa7b5b4809ea6f0ad31e97ba6c7c362",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3eb60117861ae4f5a72592662eb07c62df4ee7738e4e98bc08c16f834d7dcc0",
            "container_config": {
                "Hostname": "b3eb60117861",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71218ace077021af184970641674bebc7aa7b5b4809ea6f0ad31e97ba6c7c362",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-22T20:30:32.41947267Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T10:40:18.797308824Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:72d4939c469faaa7a7e3a81ea946b8effcfef763585a28c0da719de4acc60c40 in / "
                },
                {
                    "created": "2019-11-22T10:40:19.171630686Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T11:27:16.538356672Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T11:27:22.781241693Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T11:27:45.351953106Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:29:25.621214128Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:30:17.787474961Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:30.918081858Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='da036454cb3353f9f507f0ceed4048feac611065e4e1818b434365eb32ac9bdc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bf061cc3d4951e07904496b5c3d6c82419309d24634835522d786673a3f5438f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dcfcb3785292c98f7a75c2276169dfe2d445c19f8ffe1d40b3f7b8f59712d361' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='fafcb585591557b7b16d9b22dec4654193d205cf444b1810ab2988f658585e23' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='77056264abcf5444ed0d9ab7552552ae2145ca8fb6c39d33db3c735eaf3f42d2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8ef1ffbe7d0e944a52aadd529fc88fd6a2303ec67ee7eeb906712ca38ada0c91' ;; \t\t*) goRelArch='src'; goRelSha256='5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-22T20:30:31.379536204Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:31.575525905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:32.179741329Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-22T20:30:32.41947267Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2b11243fe5ceb53fe290d580c7bc8e62cf019bc5b73407a82f939ece1eb9890",
                    "sha256:41c88cf715b718d56bd005973250eb1d04e18f03e922800e7d52584c21e61645",
                    "sha256:f836f09848e465408849732aaadfe8fe74c4c31c5844001af48f8d0bbd766489",
                    "sha256:0b99d819dcdba975f84b7fed96694104cd1ea46615a5862c1ae88a3a3a515d5f",
                    "sha256:9a84cbfeaaa9584163f407ef17ec432cc766893180a82decc8957abcf3f5218b",
                    "sha256:86552e434632feb9ea163d45c9d9d4e73332c2f2b65c7dc9a0d3090f26331b71",
                    "sha256:ece80ef0a9a545cf66ea208d9042ff7fdac4fd2b2973e32d4440d67359582a00"
                ]
            }
        },
        "1.12.13-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:302075f99764829a8d23f0e4485ee165dbafd288b31e94b55b5861eddbe8d5f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c1315996f90e282c4a302a79bd3e8be24ef0e88a9cd192895924422165540e5c",
            "container_config": {
                "Hostname": "c1315996f90e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:302075f99764829a8d23f0e4485ee165dbafd288b31e94b55b5861eddbe8d5f2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-22T20:30:47.611292081Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T10:41:54.933127776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7355df331b8f4a8c39f396e0530ee4fc04847b5d3c3b9f7e17e2c81026fce911 in / "
                },
                {
                    "created": "2019-11-22T10:41:55.287755419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T11:32:27.457248316Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T11:32:40.707152815Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T11:33:12.697812399Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:30:00.839212587Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:30:37.495662341Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:46.110678383Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='da036454cb3353f9f507f0ceed4048feac611065e4e1818b434365eb32ac9bdc' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bf061cc3d4951e07904496b5c3d6c82419309d24634835522d786673a3f5438f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='dcfcb3785292c98f7a75c2276169dfe2d445c19f8ffe1d40b3f7b8f59712d361' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='fafcb585591557b7b16d9b22dec4654193d205cf444b1810ab2988f658585e23' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='77056264abcf5444ed0d9ab7552552ae2145ca8fb6c39d33db3c735eaf3f42d2' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8ef1ffbe7d0e944a52aadd529fc88fd6a2303ec67ee7eeb906712ca38ada0c91' ;; \t\t*) goRelArch='src'; goRelSha256='5383d3b8db4baa48284ffcb14606d9cad6f03e9db843fa6d835b94d63cccf5a7'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-22T20:30:46.57937935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:46.776352776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:47.387832558Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-22T20:30:47.611292081Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5c63b5727a9ddd765f23dd8fd46145bc6176d30ed3d58f583274ba176dc88aaf",
                    "sha256:282e212ad5cca52dc0123e069f885d3556f18230a9f46e1b415e0b0d217271f9",
                    "sha256:79e94e00dd175a967ed006683e6939b9c16581ea1d615725e6c47306dfc4ae8d",
                    "sha256:951fbdded31f49012c036901038e16ac02bf9cdcf882a9d4da3fb9775c258de7",
                    "sha256:acb458e8a3cb6d411b3f40547bdd1ca3524f4ccdd554b053e2bdae29f86b857b",
                    "sha256:a23901f9a314a48c641a9e258077dcc44362acccba1624858ce312895ca8a2d9",
                    "sha256:00cade85b570ca11c1bc67506f2a5230072baf8ce23aeb150fae64d2ff7d4e85"
                ]
            }
        },
        "1.12.14-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d77408f6f9b0b9f9157c298485eeded2e7bca9c773440fe6a5ba25fac1acd947",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "612014c8e06de35da486b48447516b851aeb19f7919b0240cf5ae9ae6715fe78",
            "container_config": {
                "Hostname": "612014c8e06d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d77408f6f9b0b9f9157c298485eeded2e7bca9c773440fe6a5ba25fac1acd947",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T20:46:45.453378801Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:16:56.189275974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d26fbcd308b78da175af74382b16ee1f7a3370ab9d618b306d604d292e72c560 in / "
                },
                {
                    "created": "2019-12-24T20:16:56.355325006Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:41:30.46265509Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T20:41:31.075585725Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T20:45:39.23101972Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:46:43.841045707Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T20:46:44.396237933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:46:44.628129765Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:46:45.239787093Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T20:46:45.453378801Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6a030c795c6591c986bbe6e8a01c2b982da718204caebfaa14f0f9d3a03317b7",
                    "sha256:79fad325804996350ccf6789b2da9324955355362d53a1c7ff9703a3eaea5ba7",
                    "sha256:a32d56e92799badec4038cb61467e2c15ae7bcc117e5675fc8ddf5a7644810f5",
                    "sha256:471552693672ca46d6d832721f8dbb77db28baec26d23442088fd71c2ba359c5",
                    "sha256:89f84c0b0d6511bb6c78af88d8ec842a584fa2ceba7d91cd5339b02a797d6daf"
                ]
            }
        },
        "1.12.14-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cd1d357fc69197535ccc76f1dbbd547035219ac75dd86e69deb89cd1ad14af04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7b64f8f20bb33cbef2379e30460ad3eb8b4ba0818665b5d5927e09916ac1de60",
            "container_config": {
                "Hostname": "7b64f8f20bb3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cd1d357fc69197535ccc76f1dbbd547035219ac75dd86e69deb89cd1ad14af04",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T20:48:02.559172646Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:44:18.307578562Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:48:00.954799749Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T20:48:01.495456866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:48:01.691374151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:48:02.312023744Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T20:48:02.559172646Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:ddb7cb1b7ffe03b6f2cc2720a7c59b38eaf26d86c696d0379a43372de832301b",
                    "sha256:efe467df1a64741b1800a8a419327e8e43cb02c3f93c1ce3734e71328b932ebc"
                ]
            }
        },
        "1.12.14-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d77408f6f9b0b9f9157c298485eeded2e7bca9c773440fe6a5ba25fac1acd947",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "612014c8e06de35da486b48447516b851aeb19f7919b0240cf5ae9ae6715fe78",
            "container_config": {
                "Hostname": "612014c8e06d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d77408f6f9b0b9f9157c298485eeded2e7bca9c773440fe6a5ba25fac1acd947",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T20:46:45.453378801Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:16:56.189275974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d26fbcd308b78da175af74382b16ee1f7a3370ab9d618b306d604d292e72c560 in / "
                },
                {
                    "created": "2019-12-24T20:16:56.355325006Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:41:30.46265509Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T20:41:31.075585725Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T20:45:39.23101972Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:46:43.841045707Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T20:46:44.396237933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:46:44.628129765Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:46:45.239787093Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T20:46:45.453378801Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6a030c795c6591c986bbe6e8a01c2b982da718204caebfaa14f0f9d3a03317b7",
                    "sha256:79fad325804996350ccf6789b2da9324955355362d53a1c7ff9703a3eaea5ba7",
                    "sha256:a32d56e92799badec4038cb61467e2c15ae7bcc117e5675fc8ddf5a7644810f5",
                    "sha256:471552693672ca46d6d832721f8dbb77db28baec26d23442088fd71c2ba359c5",
                    "sha256:89f84c0b0d6511bb6c78af88d8ec842a584fa2ceba7d91cd5339b02a797d6daf"
                ]
            }
        },
        "1.12.14-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4070d330189ac5a96b12d0f8b9e489f9926bb81fab4887a5652828d08231107",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "58ac7719639fc14dac163aef1dca8eac39b8b7af34183e3e2436b88361958d76",
            "container_config": {
                "Hostname": "58ac7719639f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4070d330189ac5a96b12d0f8b9e489f9926bb81fab4887a5652828d08231107",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-05T22:46:46.367143747Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:45:35.711110242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:46:44.760355764Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-05T22:46:45.299694468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:46:45.507331423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-05T22:46:46.140852327Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-05T22:46:46.367143747Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:1f43693992b9469d2e8d427a8efa39450c712b341b06d4d93ae9e4c549a39c0a",
                    "sha256:b8de91dbc16705b2173eed71ca2d870ac75b03540de0f9e53d5a917632a3abad"
                ]
            }
        },
        "1.12.14-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b356103b9b600495efb2e95ea31d0d88f23b2f3c77fb97c49f746cf8d31fa307",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9bc5cda6951002ffee4757fe3eb178f082243468e8ea2ab67db55fcef533aeb0",
            "container_config": {
                "Hostname": "9bc5cda69510",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b356103b9b600495efb2e95ea31d0d88f23b2f3c77fb97c49f746cf8d31fa307",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-28T10:51:16.071312657Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:41:51.448418567Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aeaf0b11195b2ba7eb7890ce128ad93c114a8e183a516cf2e4ea42da324c57ea in / "
                },
                {
                    "created": "2019-12-28T04:41:51.77543716Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:44:59.979522854Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:45:05.253202199Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:45:27.952034372Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:49:43.660688744Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:58.599068531Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:51:11.262613988Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='925a1a9d8b31c2425d7313fe73d3342288968a66e26cd8bf1b6b5656f4603fcb' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c7aa5562168b6eb3a4bb54af061d68bcb6b9ecae9d785f9a38255c107c986b73' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1ab765f4cf74f05cfba40ddcea9160ca6cf9a57915036a559ca1691942862e7c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='76dda90b4fc0410212094b433cfdc40c9802fba972427e95cbdec3c5b94fd7a6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4e237b1357922e186337989914201e98bd9aed855f4034a5918476650484f83d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='affd9764e5b163591ca87f351984c17d74e518e03b9d5e16f2be57bd30a82c80' ;; \t\t*) goRelArch='src'; goRelSha256='39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-28T10:51:11.72768533Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:51:12.176572197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:51:15.593246207Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-28T10:51:16.071312657Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1ad0b6e3fe44c5d336ef75ed8a3c6399a49c3ed32cda107fed894183c5ef0f1",
                    "sha256:251413c0d9b02cf2c76e474a09eae20840935c9d1c2ce1681a30c9ebd072a71d",
                    "sha256:c8a16eeb22dfe451df0d9131b0ff675f8095c5532ac8a57b803b33722f39ec72",
                    "sha256:7c64b9a51d6f731d4065e4f8c8bc96983d31464a8caad874d492c9c34ec8d31a",
                    "sha256:32acb696159feadd5f8daecf0078ef6525d31523347f2ec8ae8ebc7a56d62f9b",
                    "sha256:4bd1a0e712023823169e437f886393125ae5ff52edab626c914fa3c6fee3c5fb",
                    "sha256:748af908450ee99079e5a4f715a540057ed240e68607be3a3efcd8cbbef01840"
                ]
            }
        },
        "1.12.14-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:34dc63fc0cb5b84ca3cddeadce4fd2dcbc8b5255574e9683c7c7158e05f1e357",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "df5b1412094afa5eab2d2447e77f97ffd226956b598b76ee5886e1a401bc79ec",
            "container_config": {
                "Hostname": "df5b1412094a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:34dc63fc0cb5b84ca3cddeadce4fd2dcbc8b5255574e9683c7c7158e05f1e357",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-28T10:51:31.17516438Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:08.420821807Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b85ece7344f0ad0749b115e76a51a3b9f322e23bcc8c692cd2edff403ba8840e in / "
                },
                {
                    "created": "2019-12-28T04:43:08.755615599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:49:54.012144205Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:49:58.424750405Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:50:21.113770749Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:31.236268529Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:51:21.28730283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.14",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:51:29.629073531Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='925a1a9d8b31c2425d7313fe73d3342288968a66e26cd8bf1b6b5656f4603fcb' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c7aa5562168b6eb3a4bb54af061d68bcb6b9ecae9d785f9a38255c107c986b73' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='1ab765f4cf74f05cfba40ddcea9160ca6cf9a57915036a559ca1691942862e7c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='76dda90b4fc0410212094b433cfdc40c9802fba972427e95cbdec3c5b94fd7a6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4e237b1357922e186337989914201e98bd9aed855f4034a5918476650484f83d' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='affd9764e5b163591ca87f351984c17d74e518e03b9d5e16f2be57bd30a82c80' ;; \t\t*) goRelArch='src'; goRelSha256='39dbf05f7e2ffcb19b08f07d53dcc96feadeb1987fef9e279e7ff0c598213064'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-28T10:51:30.055395282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:51:30.267251116Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:51:30.903692024Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-28T10:51:31.17516438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f116422eb3ff59132287fd5828a299aefd95c8c9b0ef02de8ed2e075c48b45e2",
                    "sha256:b840da31b0f5899cfacfc590e8f040c3a0a38577a1a65a86951fbd65236b7649",
                    "sha256:7b4ff82da31dcaba42d8808b727906de79fa85a1fe5d4c9ca15703610167039c",
                    "sha256:cab219d2260261bde2a4398d2eff2cbd42252c4c5b6f2ad3d2907985dbd90e9c",
                    "sha256:212e2bb92872453134062c14e7f3c9c3bf6dafa65f97a23dbd23c2bfb7352ddc",
                    "sha256:7a987dc655c11f5203bc3878d52da75e430d7cf4224e914325c2ca4cc6db2c04",
                    "sha256:5f2e5041091df2d584fe94bce5303803f2c57c693eda714534adcd4490b84e04"
                ]
            }
        },
        "1.12.15-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:232491487511318cf6accb14ccb3212d87562a700cb509cfb4ddccc038b2ba27",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3278408987f949843ba645ac822059fae75aaba2942f943c83abbb9db28f9362",
            "container_config": {
                "Hostname": "3278408987f9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:232491487511318cf6accb14ccb3212d87562a700cb509cfb4ddccc038b2ba27",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T01:46:54.473687003Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T01:45:48.558983657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:46:52.989658001Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T01:46:53.474550049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:46:53.661562035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:46:54.255690412Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T01:46:54.473687003Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:95c0c1bcd703523ddfb6ba78b73d646d245fd46c694f0c852a7154aec8ffc328",
                    "sha256:0db68a5b1fec4dba2789061ca4630f54bef621e794f9aa87bd867f68c0fc3dd5"
                ]
            }
        },
        "1.12.15-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:366693cd8bc31e307a2fc35ffca6828fe275f23608b62a0af156ba47194b6714",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "09f6e20c063eb83454c20e33ca7ffdf69083835c803fd8ed5715e54bd0ad901d",
            "container_config": {
                "Hostname": "09f6e20c063e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:366693cd8bc31e307a2fc35ffca6828fe275f23608b62a0af156ba47194b6714",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-23T19:23:53.329440842Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-23T19:22:46.622670682Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:23:51.725674958Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-23T19:23:52.258635835Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:23:52.466008288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:23:53.091373213Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-23T19:23:53.329440842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:36a2cdc886dd8f8028ccdf7ba36334240c9915db717f85f6af365d6d00f3175d",
                    "sha256:9b9d696774d2a68089864cbd70c8388d49cd5cedc7dd05ea0710079248b885ff"
                ]
            }
        },
        "1.12.15-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:232491487511318cf6accb14ccb3212d87562a700cb509cfb4ddccc038b2ba27",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3278408987f949843ba645ac822059fae75aaba2942f943c83abbb9db28f9362",
            "container_config": {
                "Hostname": "3278408987f9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:232491487511318cf6accb14ccb3212d87562a700cb509cfb4ddccc038b2ba27",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T01:46:54.473687003Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T01:45:48.558983657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:46:52.989658001Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T01:46:53.474550049Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:46:53.661562035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:46:54.255690412Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T01:46:54.473687003Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:95c0c1bcd703523ddfb6ba78b73d646d245fd46c694f0c852a7154aec8ffc328",
                    "sha256:0db68a5b1fec4dba2789061ca4630f54bef621e794f9aa87bd867f68c0fc3dd5"
                ]
            }
        },
        "1.12.15-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bc5137bb51a1930982e89870ad7911fee337d62367319c24542af283a5bfaec",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b10d3153601af1d44d4928559a8716eecbd05d5cfdfad1aefd1433f5f38a567",
            "container_config": {
                "Hostname": "8b10d3153601",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bc5137bb51a1930982e89870ad7911fee337d62367319c24542af283a5bfaec",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:47:18.372892551Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:41:51.448418567Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aeaf0b11195b2ba7eb7890ce128ad93c114a8e183a516cf2e4ea42da324c57ea in / "
                },
                {
                    "created": "2019-12-28T04:41:51.77543716Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:44:59.979522854Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:45:05.253202199Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:45:27.952034372Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:49:43.660688744Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:47:05.119804235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:47:16.633140435Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='61068419f3d3fcd3cc415c352c4a93d6ae0e723ac18a22ac572b4904d78b5a4c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3a36d168bf80c780694bf25d6cb2ed0dbb6d4bc29b1c82bb29e819d9dbe6347b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cff1a28f0b207dd54230bf822cdcfbcc7cd411261a9366616a05a1fa1fbeedd3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='608c9fb90b2b35f7b4e4b110a9c6919d8902311388c6309487b5f77aed9d2b74' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4fe9ce71a6cd9acd56f0e898dd87d95ed9bc83a6a5be0863e9b5b646e05eee05' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a02061245a738bc80c645251cddd7a22c1ea9fee0726d5caf5da7645dea3787e' ;; \t\t*) goRelArch='src'; goRelSha256='8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:47:17.327649075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:47:17.523392436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:47:18.117563879Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:47:18.372892551Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1ad0b6e3fe44c5d336ef75ed8a3c6399a49c3ed32cda107fed894183c5ef0f1",
                    "sha256:251413c0d9b02cf2c76e474a09eae20840935c9d1c2ce1681a30c9ebd072a71d",
                    "sha256:c8a16eeb22dfe451df0d9131b0ff675f8095c5532ac8a57b803b33722f39ec72",
                    "sha256:7c64b9a51d6f731d4065e4f8c8bc96983d31464a8caad874d492c9c34ec8d31a",
                    "sha256:32acb696159feadd5f8daecf0078ef6525d31523347f2ec8ae8ebc7a56d62f9b",
                    "sha256:0882aa83190dc997d2cdaf0550e80aa74c3fd96b6e31469291dbe4a81a9b56ad",
                    "sha256:42ada100b2ad22fdfa824619f4b1f3ddee79051abb41be3fedfac6ff0efed365"
                ]
            }
        },
        "1.12.15-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:92bf0eb5bf330d864969c0002859075b113dd1dad12d11b4494424b53dad78ce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "030b4d2c7c9708f19b59d7c57546758353f5f09fcd71b5d521b995088f90f157",
            "container_config": {
                "Hostname": "030b4d2c7c97",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:92bf0eb5bf330d864969c0002859075b113dd1dad12d11b4494424b53dad78ce",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:47:35.480332485Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:08.420821807Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b85ece7344f0ad0749b115e76a51a3b9f322e23bcc8c692cd2edff403ba8840e in / "
                },
                {
                    "created": "2019-12-28T04:43:08.755615599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:49:54.012144205Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:49:58.424750405Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:50:21.113770749Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:31.236268529Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:47:24.880102593Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:47:33.940690317Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='61068419f3d3fcd3cc415c352c4a93d6ae0e723ac18a22ac572b4904d78b5a4c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3a36d168bf80c780694bf25d6cb2ed0dbb6d4bc29b1c82bb29e819d9dbe6347b' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cff1a28f0b207dd54230bf822cdcfbcc7cd411261a9366616a05a1fa1fbeedd3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='608c9fb90b2b35f7b4e4b110a9c6919d8902311388c6309487b5f77aed9d2b74' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4fe9ce71a6cd9acd56f0e898dd87d95ed9bc83a6a5be0863e9b5b646e05eee05' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a02061245a738bc80c645251cddd7a22c1ea9fee0726d5caf5da7645dea3787e' ;; \t\t*) goRelArch='src'; goRelSha256='8aba74417e527524ad5724e6e6c21016795d1017692db76d1b0851c6bdec84c3'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:47:34.387699505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:47:34.60312823Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:47:35.247113373Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:47:35.480332485Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f116422eb3ff59132287fd5828a299aefd95c8c9b0ef02de8ed2e075c48b45e2",
                    "sha256:b840da31b0f5899cfacfc590e8f040c3a0a38577a1a65a86951fbd65236b7649",
                    "sha256:7b4ff82da31dcaba42d8808b727906de79fa85a1fe5d4c9ca15703610167039c",
                    "sha256:cab219d2260261bde2a4398d2eff2cbd42252c4c5b6f2ad3d2907985dbd90e9c",
                    "sha256:212e2bb92872453134062c14e7f3c9c3bf6dafa65f97a23dbd23c2bfb7352ddc",
                    "sha256:f194604f03dde704c0600fdc312227903586cb68314c019e03ee2ce0f89675c6",
                    "sha256:37e24e290441603697b7b0040e9bd3249c9129bb03582ab1a7148c44b6e80715"
                ]
            }
        },
        "1.12.16-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82bfc83cf332d9cf3ebfdba9b0ed52aee93724540629211e2581f3b6df9f23f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4c6ea4639e0108df563c8458ac3d72f95436c8c4de96488161a25de8c4770fe1",
            "container_config": {
                "Hostname": "4c6ea4639e01",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82bfc83cf332d9cf3ebfdba9b0ed52aee93724540629211e2581f3b6df9f23f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:49:33.27369366Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:48:20.904516431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:49:25.432624266Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:49:32.173381759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:49:32.359686085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:49:33.016426414Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:49:33.27369366Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:fc2797c8c4ac6622ab6dfdb0c3e0fc26f1608f9e9c99587e261809f2c70f46d9",
                    "sha256:89cb198eb93d6113a5929ca1fb0a349e489d3e85650afc475e954e5ab4a83d14"
                ]
            }
        },
        "1.12.16-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bded1c3291429e878ccf5ef6e1b992757886304aee821319e9881aafe36c6528",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea121689b9d5ab7e4a2c8429301bb252cd9ac0810cb82ffd9f8fdc00f8ee90db",
            "container_config": {
                "Hostname": "ea121689b9d5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bded1c3291429e878ccf5ef6e1b992757886304aee821319e9881aafe36c6528",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:50:48.147286166Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:49:37.990632025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:50:41.915877677Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:50:47.148133798Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:50:47.336094229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:50:47.940258285Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:50:48.147286166Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:696d28040bdaf8ed62b51420440a865c4399c27086a5d8b6e69cca6840e20e4f",
                    "sha256:69791210b6b0f18cf2919e68c04fc1b137e5b065b44280473e2e3ea06a2e2ee4"
                ]
            }
        },
        "1.12.16-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82bfc83cf332d9cf3ebfdba9b0ed52aee93724540629211e2581f3b6df9f23f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4c6ea4639e0108df563c8458ac3d72f95436c8c4de96488161a25de8c4770fe1",
            "container_config": {
                "Hostname": "4c6ea4639e01",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b82bfc83cf332d9cf3ebfdba9b0ed52aee93724540629211e2581f3b6df9f23f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:49:33.27369366Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:48:20.904516431Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:49:25.432624266Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:49:32.173381759Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:49:32.359686085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:49:33.016426414Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:49:33.27369366Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:fc2797c8c4ac6622ab6dfdb0c3e0fc26f1608f9e9c99587e261809f2c70f46d9",
                    "sha256:89cb198eb93d6113a5929ca1fb0a349e489d3e85650afc475e954e5ab4a83d14"
                ]
            }
        },
        "1.12.16-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c83d97735919c51a26dd4d9da17350b24bd5a4ae7b9d602dfee2889b32dfda67",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8c8833bbca8d7e0717d7550305859366b93bd184cd7d4b913e051664b7888335",
            "container_config": {
                "Hostname": "8c8833bbca8d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c83d97735919c51a26dd4d9da17350b24bd5a4ae7b9d602dfee2889b32dfda67",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-01T23:03:17.456487318Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:42:14.611862776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:642aef2e391d18e3999374d6068f29ccc5ad62b25a0d18c852a6b5534daa18f7 in / "
                },
                {
                    "created": "2020-02-01T16:42:17.103633842Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:50:06.040856429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:50:10.595293372Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:50:31.474116864Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:01:23.888198931Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:03:00.404186446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:03:11.822945727Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bf3a85d75658144c06ce986ba05e07ef08af4320089b74b1d41de3b0f340ea7e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2f77688eaf25d8ae58adc5164de0fc13d600705c2ebadc6e1138e5ce9ceadc41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a01df310bfeffc67480982cf6ad50c9b83f9aaf4ac855d5e581b95eb727bb24c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e6ebf5622203f2ceee138af16c765818bf65b74668d5e73c1da6491c3e890a88' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7c133932d1beae68a483dbac69bb0e1023fa08196ebee100594b79c0672ce67c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e93326caefb3945054f9c98dd7934892b69dcb46d343cd3582c777874f5d2716' ;; \t\t*) goRelArch='src'; goRelSha256='ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-01T23:03:16.388217827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:03:16.572073448Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:03:17.228745011Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-01T23:03:17.456487318Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce9ae4d85766f36c16f76335167b6ff66f01ec49ff1fd15b34d51ae44c2b827a",
                    "sha256:d5ca591fbd5c5eb90cdb08fe05704093261e850fd2e1cb13214387bd093f1317",
                    "sha256:b28011d3a4044088991efd1ac1c8f9e7b5d169c3229b142532ed89f597ad251c",
                    "sha256:91cc825677a7691dd2ceadaea5b90144d7578b19044d58f91bb5a6bc586f6a04",
                    "sha256:53df2c5f8b0d79e1336ffe66722cfd3438a02a86c845cd7f597efa00f1f2c336",
                    "sha256:963083a786ea5716cff464ce14d2abc4c4f87de29b0f5d2182c814c0579392e2",
                    "sha256:b97de0cbc626848fbc1aaf27c9a303eb201cf382125e6b35313d43d6c71bb484"
                ]
            }
        },
        "1.12.16-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:84358eb6571baea205bd9db60ece8567cbf40c7751a65951b4aae5f5b6e263fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0a363a222972384a20f13391e95de9e1fd54881449984cd849e62b2f77eb780",
            "container_config": {
                "Hostname": "c0a363a22297",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.16",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:84358eb6571baea205bd9db60ece8567cbf40c7751a65951b4aae5f5b6e263fa",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-01T23:03:40.495883104Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:43.10676531Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17af4834ca99365d5ecf14eb938572689bd3c3ad5fd8a88da12c4c3474975771 in / "
                },
                {
                    "created": "2020-02-01T16:43:45.448668694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:05.998032957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:10.073726234Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:00:32.841833549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:02:27.410645524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:03:22.864363004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.16",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:03:35.012288233Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bf3a85d75658144c06ce986ba05e07ef08af4320089b74b1d41de3b0f340ea7e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='2f77688eaf25d8ae58adc5164de0fc13d600705c2ebadc6e1138e5ce9ceadc41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a01df310bfeffc67480982cf6ad50c9b83f9aaf4ac855d5e581b95eb727bb24c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e6ebf5622203f2ceee138af16c765818bf65b74668d5e73c1da6491c3e890a88' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7c133932d1beae68a483dbac69bb0e1023fa08196ebee100594b79c0672ce67c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e93326caefb3945054f9c98dd7934892b69dcb46d343cd3582c777874f5d2716' ;; \t\t*) goRelArch='src'; goRelSha256='ce6e5ed85b4a54ffc01d55a5838ee313acb4a7f109a745440fecbead1d081df8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-01T23:03:39.402704895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:03:39.625552787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:03:40.288276701Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-01T23:03:40.495883104Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:243e9604e20f567f6e9429f240bb02d5ef5db2eb3f56f28b4ed33feea0727e4c",
                    "sha256:a4c9827bc1ab9b709f72fbebb77db0e5dee3f97330d5825e43b3d3bce003d5d2",
                    "sha256:891ccf47c6ae19f4440e245373355c4e0e8f07f7f531028112953f984b137f7a",
                    "sha256:b3b708bfc02280b6ee5084770f85aa5c9ee498d625fd35f5ad3a5a1a3e889876",
                    "sha256:4d4abc98dc73a30130742b13258b3234e4ae349b45d72621157f733ad39e0e24",
                    "sha256:04b6948dea5fdea358e1992e969a9e37e1624bb896c12b42bbe805bc9bfe4521",
                    "sha256:0ebd11a31a286e55f82d4a907334695bc557691bfa6170d51988a194d2af2120"
                ]
            }
        },
        "1.12.17-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b25c1770fc2f21971958b2d11cf9e0729847f8f297467699cdf4409fd76e00b",
            "container_config": {
                "Hostname": "2b25c1770fc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:50:43.321101489Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:16.809046514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:35.650055511Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:50:42.025817666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:42.257534817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:43.019747737Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:50:43.321101489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:7668e9eff8a0bbea13cf9f23cf91eb302ec514474582ffc9171babb470b4cc00",
                    "sha256:05fa336752f3afd2d9108d7ffa6d8a2614bb03cfce501c8348edeec1e770ff9a"
                ]
            }
        },
        "1.12.17-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4675442ebb1e3d06108703495645014aa7a7cf3a44d760663e66cee2f02e629",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ccead75c95d3c1aef98cef295b22325213cbaecff8fece6010c91cd5a5d51938",
            "container_config": {
                "Hostname": "ccead75c95d3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4675442ebb1e3d06108703495645014aa7a7cf3a44d760663e66cee2f02e629",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:52:12.828886845Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:50:47.928157903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:52:04.698421971Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:52:11.54240161Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:52:11.739369079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:52:12.564162082Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:52:12.828886845Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:d2eb934f6a32c9326edd58163799c4bf946b45d8c8993bc1ef0cd20ba7452417",
                    "sha256:45d6536bcca159db5ad13f3ad2fc17fc98be77ffffa76744bc3094ee7cc3827f"
                ]
            }
        },
        "1.12.17-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b25c1770fc2f21971958b2d11cf9e0729847f8f297467699cdf4409fd76e00b",
            "container_config": {
                "Hostname": "2b25c1770fc2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fefac70883f40f35eebd7a38b0e7fa29fdd3cb93771e0052751c9a6a34e61e48",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:50:43.321101489Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:49:16.809046514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:35.650055511Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:50:42.025817666Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:42.257534817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:50:43.019747737Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:50:43.321101489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:7668e9eff8a0bbea13cf9f23cf91eb302ec514474582ffc9171babb470b4cc00",
                    "sha256:05fa336752f3afd2d9108d7ffa6d8a2614bb03cfce501c8348edeec1e770ff9a"
                ]
            }
        },
        "1.12.17-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1b0606f808333b7cb73513cc62f2984293bde7eb4a419f7785116c55ee63fa9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "97cb5b96e87d0ca32bbd905629a0329deb06af8ffba705b1d1b5b702681ba81a",
            "container_config": {
                "Hostname": "97cb5b96e87d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1b0606f808333b7cb73513cc62f2984293bde7eb4a419f7785116c55ee63fa9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:45.840064528Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:42:14.611862776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:642aef2e391d18e3999374d6068f29ccc5ad62b25a0d18c852a6b5534daa18f7 in / "
                },
                {
                    "created": "2020-02-01T16:42:17.103633842Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:50:06.040856429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:50:10.595293372Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:50:31.474116864Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:01:23.888198931Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:21.643245079Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:39.632542228Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:44.568610235Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:44.803581789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:45.626637212Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:45.840064528Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce9ae4d85766f36c16f76335167b6ff66f01ec49ff1fd15b34d51ae44c2b827a",
                    "sha256:d5ca591fbd5c5eb90cdb08fe05704093261e850fd2e1cb13214387bd093f1317",
                    "sha256:b28011d3a4044088991efd1ac1c8f9e7b5d169c3229b142532ed89f597ad251c",
                    "sha256:91cc825677a7691dd2ceadaea5b90144d7578b19044d58f91bb5a6bc586f6a04",
                    "sha256:53df2c5f8b0d79e1336ffe66722cfd3438a02a86c845cd7f597efa00f1f2c336",
                    "sha256:03150ea331942f9c6442e6f0f31b3c63059f543bc25289e726ef2a76836166fc",
                    "sha256:2df708357b3be98e81d06e23d0ba03c5aa2fee5d6426cf87972b5edaf9795e75"
                ]
            }
        },
        "1.12.17-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b05883af486688f52c20875a4663b83ce723976529d6e42f5f0454ce9d392475",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8494b3c3718f470b96cdebb3f8ceda2c25efb1ee45e91b59b7dd099e479ac515",
            "container_config": {
                "Hostname": "8494b3c3718f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.17",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b05883af486688f52c20875a4663b83ce723976529d6e42f5f0454ce9d392475",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:49:11.578303836Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:43.10676531Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17af4834ca99365d5ecf14eb938572689bd3c3ad5fd8a88da12c4c3474975771 in / "
                },
                {
                    "created": "2020-02-01T16:43:45.448668694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:05.998032957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:10.073726234Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:00:32.841833549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:02:27.410645524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-14T00:48:51.252629312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.17",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:05.271529462Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a53dd476129d496047487bfd53d021dd17e0c96895865a0e7d0469ce3db8c8d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a883c806fccb3eddb26da4a1a1f8536de863aee6807ed6c99606261877af7b99' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9d0819cce1451abdb090071880fe8771f16a3bcee71d6f6906023d17799574e2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='e33fc10c0486b02a019f120996d77792d8f19aae8bfdda97350a622a65d6b824' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='dca4df132da7579c352bccd9d6f4ecb8d8d61893a84b0feffcee2bb4246114a3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='e50ffb6e0d7e7573ed9ca0f5228bdd43238a25ac34916de027036ff97322d236' ;; \t\t*) goRelArch='src'; goRelSha256='de878218c43aa3c3bad54c1c52d95e3b0e5d336e1285c647383e775541a28b25'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:49:10.406201563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:10.616469488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:49:11.313161751Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:49:11.578303836Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:243e9604e20f567f6e9429f240bb02d5ef5db2eb3f56f28b4ed33feea0727e4c",
                    "sha256:a4c9827bc1ab9b709f72fbebb77db0e5dee3f97330d5825e43b3d3bce003d5d2",
                    "sha256:891ccf47c6ae19f4440e245373355c4e0e8f07f7f531028112953f984b137f7a",
                    "sha256:b3b708bfc02280b6ee5084770f85aa5c9ee498d625fd35f5ad3a5a1a3e889876",
                    "sha256:4d4abc98dc73a30130742b13258b3234e4ae349b45d72621157f733ad39e0e24",
                    "sha256:9ab2e5413d1055621fbadda9b4849a285e5398c6bffc634755fd95d6d27d3743",
                    "sha256:665a810da2a0ce12837e7267f3737e161200aa25647896b95f509bf073a3c5fe"
                ]
            }
        },
        "1.12.2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:584188035376a6f132b0d592586ceb6aafee4fd62ed835ffe63ea37994c4e2ac",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "70adb0b9055f0fbe1b55b899c469e7a878dd5c7f1e11264b21c2607d99086358",
            "container_config": {
                "Hostname": "70adb0b9055f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:584188035376a6f132b0d592586ceb6aafee4fd62ed835ffe63ea37994c4e2ac",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:44:24.585079114Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:41:58.696751886Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:21.444690942Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:44:22.352277005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:22.842563879Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:24.21031963Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:44:24.585079114Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:dd36ad163ae13bafcc545454490f5ce9e46fe10eb6acc4d19d3c0113cb1ee334",
                    "sha256:a9ec40d2f39c8e90b242e99083034bb1d70706f97249204154b279ac96e21bc5"
                ]
            }
        },
        "1.12.2-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:584188035376a6f132b0d592586ceb6aafee4fd62ed835ffe63ea37994c4e2ac",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "70adb0b9055f0fbe1b55b899c469e7a878dd5c7f1e11264b21c2607d99086358",
            "container_config": {
                "Hostname": "70adb0b9055f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:584188035376a6f132b0d592586ceb6aafee4fd62ed835ffe63ea37994c4e2ac",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:44:24.585079114Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-08T03:35:46.020933297Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3f769e5ff31fbae6ea6b835fa878b05d6c6920ca4313aa63be7d057e29241d87 in / "
                },
                {
                    "created": "2019-03-08T03:35:46.197387109Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-08T04:05:55.61288132Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-03-08T04:05:56.348170498Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-06T11:41:58.696751886Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:21.444690942Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:44:22.352277005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:22.842563879Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:44:24.21031963Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:44:24.585079114Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e69aafc030dcb348e76de325d1222693104f2cc260a672fd3fe15d72f52af5d",
                    "sha256:4e3923cbe790b3aa8810de24301e8ea8f71fa5728d2e318c8d64ee5855501598",
                    "sha256:36347b708f9ea12954bda6dc1d931215d738043fa9b532ef55bca13bba3d3727",
                    "sha256:dd36ad163ae13bafcc545454490f5ce9e46fe10eb6acc4d19d3c0113cb1ee334",
                    "sha256:a9ec40d2f39c8e90b242e99083034bb1d70706f97249204154b279ac96e21bc5"
                ]
            }
        },
        "1.12.2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4059a30fcadcff95268b861770fde86fab227d382abb6cec358d165d512f49dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f84d6ee889d88916793fc4df181cfb1999edac28e2f4b8d6497c83202cf0f1fb",
            "container_config": {
                "Hostname": "f84d6ee889d8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4059a30fcadcff95268b861770fde86fab227d382abb6cec358d165d512f49dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-06T11:41:50.346140051Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-06T11:41:29.273331462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:41:47.469458441Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f28c1fde8f293cc5c83ae8de76373cf76ae9306909564f54e0edcf140ce8fe3f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='38d92116cd8c408e995972ff7fb0b6453c4f2214bde602d1772bd88f9d4d5c60' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='598558fe54bbdce8b676f81e37f514dd70b8fc1377086658ae6e836480e900eb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3005a7937ff2be7ea9badd416cc37dfe2ff589d3a311f1685de0a805e45455b6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='62be1d5f38e322edc21de0debd3051247faff59890c343a7f2173c15098dbd35' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a41b0b11f5e34c3cccd7619bddf79a6d4b94bcbd2160fefcdf25f0afe87cad0a' ;; \t\t*) goRelArch='src'; goRelSha256='af992580a4a609309c734d46fd4374fe3095961263e609d9b017e2dffc3b7b58'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-06T11:41:48.261481317Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:41:48.596143004Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-06T11:41:49.877461004Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-06T11:41:50.346140051Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:996922b4028ffc5841e31d6350715792714bae85e8d4079beda26646f44dcbcf",
                    "sha256:6a84aca8dad851adeaa580e67ff035423046b4cc8bf5b6657a8c0cc12aee3c2b"
                ]
            }
        },
        "1.12.3-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:50d73e81d347b19024bdd8448bc3923662d6cdc8138e65d72f1b460fb73396b4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b5d0bafd12bd82e1e4182986af612c1b04ed1387649f45e0d6c74a83e100d29",
            "container_config": {
                "Hostname": "2b5d0bafd12b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:50d73e81d347b19024bdd8448bc3923662d6cdc8138e65d72f1b460fb73396b4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:10:33.862936455Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:07:02.528798199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:10:30.175898813Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:10:31.418469374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:10:31.898843312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:10:33.437120125Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:10:33.862936455Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:41101237c92abb4035ea62c700ce298027e7283271384a063583bda6d708d76b",
                    "sha256:7438c95637d95c2e52d9e9ecd1aa0241b58ebe5d53645c2f6be3c8f669206126"
                ]
            }
        },
        "1.12.3-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:50d73e81d347b19024bdd8448bc3923662d6cdc8138e65d72f1b460fb73396b4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2b5d0bafd12bd82e1e4182986af612c1b04ed1387649f45e0d6c74a83e100d29",
            "container_config": {
                "Hostname": "2b5d0bafd12b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:50d73e81d347b19024bdd8448bc3923662d6cdc8138e65d72f1b460fb73396b4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-10T12:10:33.862936455Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-10T12:07:02.528798199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:10:30.175898813Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-10T12:10:31.418469374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:10:31.898843312Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T12:10:33.437120125Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-10T12:10:33.862936455Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:41101237c92abb4035ea62c700ce298027e7283271384a063583bda6d708d76b",
                    "sha256:7438c95637d95c2e52d9e9ecd1aa0241b58ebe5d53645c2f6be3c8f669206126"
                ]
            }
        },
        "1.12.3-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:105f6cddfa3dbc09ae5ada4fecc471b9e7323e87e192d509a3da0bc4f910a2a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e3a943ea7b9ed08a3d11c3d1f056d804fa43643aa6805a068d0ed74d39c3b765",
            "container_config": {
                "Hostname": "e3a943ea7b9e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:105f6cddfa3dbc09ae5ada4fecc471b9e7323e87e192d509a3da0bc4f910a2a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-09T11:41:47.499419816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-09T11:41:31.439789705Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:41:45.458569505Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3924819eed16e55114f02d25d03e77c916ec40b7fd15c8acb5838b63135b03df' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='efce59fac5ebc7302263ca1093fe2c3252c1b936f5b1ae08afc328eea0403c79' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4deb7f3b90d03f71f5cac3654e0e1f9cb46c45b85c5475510222b958e4ea2ed6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='67599ae0788ed88260531d4be4293cb8f5199e5c7e06d30c6bd95eb54f014be7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8bd04e742be8ed3f7f6fd2c78e2303be2ee70709cdc28758f101765a5e7d6dc1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='102fe607818ba21b9853ddfa3b1225b2af802010af3a032c6487144fbb7f3521' ;; \t\t*) goRelArch='src'; goRelSha256='5c507abe8818429d74ebb650a4155d36bc3f9a725e59e76f5d6aca9690be2373'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-09T11:41:46.050116877Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:41:46.272007565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-09T11:41:47.172871691Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-09T11:41:47.499419816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:ab2f7d4f013afee4584ab2e2edaf3de3e5f8303ae5ce55fb977db65d18cfe1b9",
                    "sha256:dec4995e3b34a527f3af11e1f321405bcb69d0001ae17222f46960e8500f5db0"
                ]
            }
        },
        "1.12.4-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:26ddb2de106a390b092e7ec979b840d9587529c24ca1ebbf069f6a786b5ecc83",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6e66a6bc7d098afcb9749e09c3c86ee4b95171c0102978ede2bd38ad5f1e8e9",
            "container_config": {
                "Hostname": "b6e66a6bc7d0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:26ddb2de106a390b092e7ec979b840d9587529c24ca1ebbf069f6a786b5ecc83",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:44:48.794305101Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-13T11:42:11.932183453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:44:45.768970137Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:44:46.810077951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:44:47.098000221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:44:48.556157387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:44:48.794305101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:6fe10fd073e91101d075a378dd0a643f13e7ef78b17c707dd242c459272b5758",
                    "sha256:ac1f849bcdebc9dc77b11a2d9a422d1da5d627a8d9ac595de32b56b5b65a8fae"
                ]
            }
        },
        "1.12.4-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:26ddb2de106a390b092e7ec979b840d9587529c24ca1ebbf069f6a786b5ecc83",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6e66a6bc7d098afcb9749e09c3c86ee4b95171c0102978ede2bd38ad5f1e8e9",
            "container_config": {
                "Hostname": "b6e66a6bc7d0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:26ddb2de106a390b092e7ec979b840d9587529c24ca1ebbf069f6a786b5ecc83",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:44:48.794305101Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-04-10T11:42:23.063666365Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ab106eb2cf4bf0e1ca7861a56dc24e44dd206fd3ae8d3587684324e5c11136f4 in / "
                },
                {
                    "created": "2019-04-10T11:42:23.390807938Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-10T11:42:36.22013342Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-04-10T11:42:38.219579371Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-04-13T11:42:11.932183453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:44:45.768970137Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:44:46.810077951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:44:47.098000221Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:44:48.556157387Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:44:48.794305101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7fcf52a3e45de1f7b77cf5533167044d99f3ab8c1f3d4afe690de36ad9b26846",
                    "sha256:55840c1d8b0fef2464e3bf6d41b50141819592b56d9b9aa6005e3c3f89d1272b",
                    "sha256:8ab066c15ab5fe4ae4a7b4610d3633dad537275b52298750fc0de6af644b456f",
                    "sha256:6fe10fd073e91101d075a378dd0a643f13e7ef78b17c707dd242c459272b5758",
                    "sha256:ac1f849bcdebc9dc77b11a2d9a422d1da5d627a8d9ac595de32b56b5b65a8fae"
                ]
            }
        },
        "1.12.4-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5415dd45acd1ebf6f73361ac3193365cbc5029aff52cfe0c68c2b9629a8d83ea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "093285907ef5bafd03c075967bbfb95afabc74de2bd5da7b4cf294ddda0b19f5",
            "container_config": {
                "Hostname": "093285907ef5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5415dd45acd1ebf6f73361ac3193365cbc5029aff52cfe0c68c2b9629a8d83ea",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-04-13T11:42:00.363202701Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-03-27T11:43:28.506587196Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7110876caa1efff30ec13a260b6ecdc3169bb586a858211431cf38aa2eaf6b40 in / "
                },
                {
                    "created": "2019-03-27T11:43:29.033848545Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T12:43:50.646935126Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T12:43:58.806923276Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-03-27T12:44:53.782017572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-27T17:32:14.131117661Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-13T11:41:40.536292606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:41:57.976754724Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='d7d1f1f88ddfe55840712dc1747f37a790cbcaa448f6c9cf51bbe10aa65442f5' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c43457b6d89016e9b79b92823003fd7858fb02aea22b335cfd204e0b5be71d92' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b7d7b4319b2d86a2ed20cef3b47aa23f0c97612b469178deecd021610f6917df' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='eba5c51f657c1b05d5930475d1723758cd86db74499125ab48f0f9d1863845f7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='51642f3cd6ef9af6c4a092c2929e4fb478f102fe949921bd77ecd6905952c216' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='0aab0f368c090da71f52531ebac977cc7396b692145acee557b3f9500b42467a' ;; \t\t*) goRelArch='src'; goRelSha256='4affc3e610cd8182c47abbc5b0c0e4e3c6a2b945b55aaa2ba952964ad9df1467'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-04-13T11:41:58.707629825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:41:59.03485446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-13T11:42:00.111496477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-04-13T11:42:00.363202701Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a3c05e228874d64da97381159591b4d3042a14f1ae4184d0c0212992f3e8475d",
                    "sha256:4fb3dd4e2b1c76f52d938ef6e3ad1b93eb7af2830e045313b016b093ad72b7fe",
                    "sha256:583555b76f443786d0f1a2c1cda80cb97832e06ff7c4ad6c67a30733b9612799",
                    "sha256:c16f559b553b98bab9248e6ec2c3717580bd7979ff27c5193ad7f7f6e42faec5",
                    "sha256:68b31f9b5a93ef00ef7e9adf40c8fae79e8f0bb1a6f59305b4a035f62408c60a",
                    "sha256:9499b359e0e0ff3ae0d7a80eddb8b2532cb358bf1f89c6e1a6fcfea01d8d5f2a",
                    "sha256:4e037d5a60cd8206c7d3707b327f4d5bd9fed0f3d372f452cdecf80b385b8a5e"
                ]
            }
        },
        "1.12.5-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7a0bc7cb1d3b9e389c6531a8ad6e59ca3ef81952ee94267e1fd06104d79a036",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4ccf375f927fbcb2b6238618b401fc44baf6f09b3a38e7e0bf61b2711a5fa4ce",
            "container_config": {
                "Hostname": "4ccf375f927f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7a0bc7cb1d3b9e389c6531a8ad6e59ca3ef81952ee94267e1fd06104d79a036",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T13:59:01.970415694Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:56:55.342651179Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:58:59.848853986Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T13:59:00.516619939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:59:00.71636305Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:59:01.673823048Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T13:59:01.970415694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:e4896edfbaa920e27920f1a1053d1e9c5838356c7ce14bbc5e28c123c72a2551",
                    "sha256:320e478ce95221848e7a5dc85c311bf28c4136f5bb3b6331840d5deb44a8db9b"
                ]
            }
        },
        "1.12.5-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7a0bc7cb1d3b9e389c6531a8ad6e59ca3ef81952ee94267e1fd06104d79a036",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4ccf375f927fbcb2b6238618b401fc44baf6f09b3a38e7e0bf61b2711a5fa4ce",
            "container_config": {
                "Hostname": "4ccf375f927f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7a0bc7cb1d3b9e389c6531a8ad6e59ca3ef81952ee94267e1fd06104d79a036",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-05-11T13:59:01.970415694Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-05-11T13:56:55.342651179Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:58:59.848853986Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-05-11T13:59:00.516619939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:59:00.71636305Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T13:59:01.673823048Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-05-11T13:59:01.970415694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:e4896edfbaa920e27920f1a1053d1e9c5838356c7ce14bbc5e28c123c72a2551",
                    "sha256:320e478ce95221848e7a5dc85c311bf28c4136f5bb3b6331840d5deb44a8db9b"
                ]
            }
        },
        "1.12.5-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:542d3b0d687698e23253ba0e1c9b0f965fb8c3544b4750c23bc7f36c05d61f4e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a94fc0cfbd9f861ab867ae20eb1b2aeccd2132d56258dd3dae3f85bb0a3fdc63",
            "container_config": {
                "Hostname": "a94fc0cfbd9f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:542d3b0d687698e23253ba0e1c9b0f965fb8c3544b4750c23bc7f36c05d61f4e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-11T04:07:40.544446816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:43:36.636332548Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:afcc920e9f12a9a8dcd8fc13d10697d5a80737bb1480544b3e85270be9be266a in / "
                },
                {
                    "created": "2019-06-10T23:43:38.619170431Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T01:45:11.355101413Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T01:45:18.601652558Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T01:45:46.66167408Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T04:07:28.717810775Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T04:07:29.063702088Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T04:07:38.851270099Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='aea86e3c73495f205929cfebba0d63f1382c8ac59be081b6351681415f4063cf' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='311f5e76c7cec1ec752474a61d837e474b8e750b8e3eed267911ab57c0e5da9a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ff09f34935cd189a4912f3f308ec83e4683c309304144eae9cf60ebc552e7cd8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='146605e13bf337ff3aacd941a816c5d97a8fef8b5817e07fcec4540632085980' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e88b2a2098bc79ad33912d1d27bc3282a7f3231b6f4672f306465bf46ff784ca' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='168d297ec910cb446d1aea878baeb85f1387209f9eb55dde68bddcd4c006dcbb' ;; \t\t*) goRelArch='src'; goRelSha256='2aa5f088cbb332e73fc3def546800616b38d3bfe6b8713b8a6404060f22503e8'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-11T04:07:39.348510786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T04:07:39.600671973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T04:07:40.294519111Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-11T04:07:40.544446816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c6fd90e80d4b434e488af57f1a1590f2f574e1e816da0f472896bb77183f4d5",
                    "sha256:440cc9a8a104b6901153c16e6ad6b301e0368f0b4af83469aaf02eeb40df9a48",
                    "sha256:2536c76e2e9bcb68e9a300b777370a8325f4763d83bc82c5c76e1d1da9cfcf9c",
                    "sha256:7bb48140e739f3409af923731a00f81b1ef1f97b3343a48bcc8b7b7e1ebb3ad5",
                    "sha256:0168edc1632d76deaf6c300b26ea3631156f2a524ebac65cba67d812aa86e2d0",
                    "sha256:1a5d5d6561c0fa2bdc7875167c4657581dcf7e5b29fdb1828a48ec011c39e66a",
                    "sha256:f6c4660f689319e7ae662b688c30953d13ce23ee9a16b455d0498fd790615aa7"
                ]
            }
        },
        "1.12.6-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fd32db8d626e3e04a03f1cf4c5e5df9904c42e508c36d2b1d9f753b05ba9f686",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4d00fc7b86c492361778f6045c9d36983af5e82a504055cafa868e01645dbcfa",
            "container_config": {
                "Hostname": "4d00fc7b86c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fd32db8d626e3e04a03f1cf4c5e5df9904c42e508c36d2b1d9f753b05ba9f686",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:43:29.46371459Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:41:48.246355621Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1ef73640a5f885504655c88e9b4086090c61ab5304de3f4613faa793293a285a in / "
                },
                {
                    "created": "2019-06-19T20:41:48.479418127Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:36.29806462Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:41:37.054897437Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:41:37.353994496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:43:27.588681649Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:43:28.267609747Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:43:28.513999933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:43:29.200310577Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:43:29.46371459Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d9d6429128aef2ef3a76cd73098bce0778ea68ee48ae28049c675ea10765173",
                    "sha256:5593d838133be8dc53f0536fb5498f28630421fc45d3ca5f74ffe918fdc68a4e",
                    "sha256:3235cf194ea7143d6ff70b37f3df42222e2abd8d34c1d5f5c9d7a3352541081d",
                    "sha256:3ae1d2ff3f16b30640d6a71d71f431d971b173894863364adad8844d8d3b0975",
                    "sha256:b63730f898efb01ea430f262b9cafb1bbe6e737cc3ebb7acc780fd512bc7e064"
                ]
            }
        },
        "1.12.6-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fd32db8d626e3e04a03f1cf4c5e5df9904c42e508c36d2b1d9f753b05ba9f686",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4d00fc7b86c492361778f6045c9d36983af5e82a504055cafa868e01645dbcfa",
            "container_config": {
                "Hostname": "4d00fc7b86c4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fd32db8d626e3e04a03f1cf4c5e5df9904c42e508c36d2b1d9f753b05ba9f686",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-20T20:43:29.46371459Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-19T20:41:48.246355621Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1ef73640a5f885504655c88e9b4086090c61ab5304de3f4613faa793293a285a in / "
                },
                {
                    "created": "2019-06-19T20:41:48.479418127Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:41:36.29806462Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-06-20T20:41:37.054897437Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-20T20:41:37.353994496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:43:27.588681649Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-20T20:43:28.267609747Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:43:28.513999933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-20T20:43:29.200310577Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-20T20:43:29.46371459Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d9d6429128aef2ef3a76cd73098bce0778ea68ee48ae28049c675ea10765173",
                    "sha256:5593d838133be8dc53f0536fb5498f28630421fc45d3ca5f74ffe918fdc68a4e",
                    "sha256:3235cf194ea7143d6ff70b37f3df42222e2abd8d34c1d5f5c9d7a3352541081d",
                    "sha256:3ae1d2ff3f16b30640d6a71d71f431d971b173894863364adad8844d8d3b0975",
                    "sha256:b63730f898efb01ea430f262b9cafb1bbe6e737cc3ebb7acc780fd512bc7e064"
                ]
            }
        },
        "1.12.6-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ac2f548eaf3fcea7cb9c7d2391d73f51095dc78f23a438e5b4629245081ddfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "67dfbb6e59865c6f0ff171ad903e4421772e04985511f4b792fa8d3aea274076",
            "container_config": {
                "Hostname": "67dfbb6e5986",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ac2f548eaf3fcea7cb9c7d2391d73f51095dc78f23a438e5b4629245081ddfb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:44:40.252679275Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-06-12T15:42:37.719412629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:44:37.902265261Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:44:38.643343568Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:44:38.875441256Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:44:39.991451662Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:44:40.252679275Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:ea207e5d8da3f9be7fa08591e931b8749e54bdf1748b8c0728843c69c5d003e4",
                    "sha256:b1525b2790156c6a108abf72a91b89e5019c0913d228bba7bf2d8615778a20fc"
                ]
            }
        },
        "1.12.6-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ffcf951c6a21d8a8954b717ccf57e6ce2b99d330205b229446beb065970cf4a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7d5dbe15fbab74d13c50dfcf235eeb208648f870bada47906226f7e8941fff1d",
            "container_config": {
                "Hostname": "7d5dbe15fbab",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ffcf951c6a21d8a8954b717ccf57e6ce2b99d330205b229446beb065970cf4a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-06-12T15:42:28.336129442Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-06-10T23:43:36.636332548Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:afcc920e9f12a9a8dcd8fc13d10697d5a80737bb1480544b3e85270be9be266a in / "
                },
                {
                    "created": "2019-06-10T23:43:38.619170431Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-11T01:45:11.355101413Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T01:45:18.601652558Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-06-11T01:45:46.66167408Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-11T04:07:28.717810775Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-12T15:41:50.279736539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.6",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:42:25.158456214Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='dbcf71a3c1ea53b8d54ef1b48c85a39a6c9a935d01fc8291ff2b92028e59913c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0708fbc125e7b782b44d450f3a3864859419b3691121ad401f1b9f00e488bddb' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8f4e3909c74b4f3f3956715f32419b28d32a4ad57dbd79f74b7a8a920b21a1a3' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='7aaf25164a9ab5e1005c15535ed16ee122df50ac192c2d79b7940315c2b74f2c' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='67eacb68c1e251c1428e588776c5a02e287a508e3d44f940d31d8ff5d57f0eef' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c14baa10b87a38e56f28a176fae8a839e9052b0e691bdc0461677d4bcedea9aa' ;; \t\t*) goRelArch='src'; goRelSha256='c96c5ccc7455638ae1a8b7498a030fe653731c8391c5f8e79590bce72f92b4ca'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-06-12T15:42:25.814353069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:42:26.064190692Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-12T15:42:28.032868167Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-06-12T15:42:28.336129442Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c6fd90e80d4b434e488af57f1a1590f2f574e1e816da0f472896bb77183f4d5",
                    "sha256:440cc9a8a104b6901153c16e6ad6b301e0368f0b4af83469aaf02eeb40df9a48",
                    "sha256:2536c76e2e9bcb68e9a300b777370a8325f4763d83bc82c5c76e1d1da9cfcf9c",
                    "sha256:7bb48140e739f3409af923731a00f81b1ef1f97b3343a48bcc8b7b7e1ebb3ad5",
                    "sha256:0168edc1632d76deaf6c300b26ea3631156f2a524ebac65cba67d812aa86e2d0",
                    "sha256:f5e9dcc3d25dc63e4b069b3a97fdfa8b0ea60e473eb4c3a5e564e20ceab254c3",
                    "sha256:dc9c4d98fc37375652913d1247823759248117524a5b9ce8ff79ce1553e901fb"
                ]
            }
        },
        "1.12.7-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b2175d53aeeb2ea0d112d6bdf695f32d69ff3080dc234d8167efda55cea4801",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb7c8182e29cf3914fa35cd91c838814a27d07b96bd6ccbfaa9dc30e0abaff04",
            "container_config": {
                "Hostname": "eb7c8182e29c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b2175d53aeeb2ea0d112d6bdf695f32d69ff3080dc234d8167efda55cea4801",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T23:00:42.835986639Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:42:03.609141709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e61dfaf44f65996214c6cd92da44431e76d5a8165fda16b2ac98840a10a64b5 in / "
                },
                {
                    "created": "2019-07-11T21:42:04.02489859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:56:11.218695107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:56:12.070128483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T22:58:29.909907889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:00:40.787086368Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T23:00:41.472168447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:00:41.729323249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:00:42.529528236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T23:00:42.835986639Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1305b268e0bd8801c4362c39910be2cbbf6f22615d23f7ede9671b737463635d",
                    "sha256:4bdb0c5caabd3fad9b301261163339f4ff825836daafa4176419e6412da69e53",
                    "sha256:5f07370ab8791eb86f26a0263ee981b8160dde6e682bd5d620d0aa70ba8c170b",
                    "sha256:049b9658be86720b135092707a1abac4b4a57b0a823f6d96f0a2c133af9cad07",
                    "sha256:0fad156f877c8b1044bce9b5abdcc5b80bfd228b280b8584b087e918247da679"
                ]
            }
        },
        "1.12.7-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b2175d53aeeb2ea0d112d6bdf695f32d69ff3080dc234d8167efda55cea4801",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb7c8182e29cf3914fa35cd91c838814a27d07b96bd6ccbfaa9dc30e0abaff04",
            "container_config": {
                "Hostname": "eb7c8182e29c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b2175d53aeeb2ea0d112d6bdf695f32d69ff3080dc234d8167efda55cea4801",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-11T23:00:42.835986639Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:42:03.609141709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e61dfaf44f65996214c6cd92da44431e76d5a8165fda16b2ac98840a10a64b5 in / "
                },
                {
                    "created": "2019-07-11T21:42:04.02489859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:56:11.218695107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:56:12.070128483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-11T22:58:29.909907889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:00:40.787086368Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-11T23:00:41.472168447Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:00:41.729323249Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T23:00:42.529528236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-11T23:00:42.835986639Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1305b268e0bd8801c4362c39910be2cbbf6f22615d23f7ede9671b737463635d",
                    "sha256:4bdb0c5caabd3fad9b301261163339f4ff825836daafa4176419e6412da69e53",
                    "sha256:5f07370ab8791eb86f26a0263ee981b8160dde6e682bd5d620d0aa70ba8c170b",
                    "sha256:049b9658be86720b135092707a1abac4b4a57b0a823f6d96f0a2c133af9cad07",
                    "sha256:0fad156f877c8b1044bce9b5abdcc5b80bfd228b280b8584b087e918247da679"
                ]
            }
        },
        "1.12.7-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89bcf63cc7f8afdd33ef5e70f2f216b496f9ac3367c5b74dee47a11ae168e884",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1cbd99d0afe488e8123ea7336d252a8d2c4ac363da880d4c51725c86dbd9111f",
            "container_config": {
                "Hostname": "1cbd99d0afe4",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:89bcf63cc7f8afdd33ef5e70f2f216b496f9ac3367c5b74dee47a11ae168e884",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-09T00:46:23.103199252Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-07-09T00:44:25.488285381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:46:20.981420063Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-09T00:46:21.636122823Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:46:21.872111586Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T00:46:22.832009938Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-09T00:46:23.103199252Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:8cf3637c84e7773b69372d9812abfa8084fa1360f64f35c4917969f5ba38d26e",
                    "sha256:ca50e536d9d7ae54a79b5d5e16c65ad62b518f7cf96dc1c5cd20312450cf5ae0"
                ]
            }
        },
        "1.12.7-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7c31ed03c5caa2b01ebf32a9fe5625036c6682c2585c9b06ed178a891025fad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2f966251e91948045d8e78d5c846a1f06a806ef0e8faf3c0e97032934407736b",
            "container_config": {
                "Hostname": "2f966251e919",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7c31ed03c5caa2b01ebf32a9fe5625036c6682c2585c9b06ed178a891025fad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-20T02:00:20.764839317Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:42:45.322904679Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:536d71672e18e6e6c5d314bc26d43ea8e8c5156bacc61c8723ffbf1b73c91968 in / "
                },
                {
                    "created": "2019-07-09T21:42:46.153654397Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:30:20.093538378Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:30:31.135592815Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:31:11.222131647Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:31:12.151260204Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-20T02:00:06.866179437Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:00:18.933835939Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='48edbe936e9eb74f259bfc4b621fafca4d4ec43156b4ee7bd0d979f257dcd60a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4da1f7198a8fa0c4067852656b6c10153a4eca5a26aca28ef02ae9f4a7939ba5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ae2424b7ff557a708be12d3141f25b645966489ca49af1ad10b4fbe4c97d4c41' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eda20600d90247efbfa70d116d80056e11192d62592240975b2a8c53caa5bf3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3374ac3d646555e50be790091b51849319cfcb176904048458c7f4252337fce8' ;; \t\t*) goRelArch='src'; goRelSha256='95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-20T02:00:19.464629301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:00:19.731818436Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-20T02:00:20.464540908Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-20T02:00:20.764839317Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6d3580dc0d352d17851e2baa5bb74f825d062d37efbf4679582b39285dc545a4",
                    "sha256:026b57c9615a2bef16c0ffe3e1b0278cce79611db0d646cd482640d2ed4e1fff",
                    "sha256:a67dfda94ba530dc10ef11296cbb53f69b8ec3c4634de9114e6b1db3da0db3cd",
                    "sha256:9a1782c823e13ce646484b574ebbd5e29300804a2825126c2ab33328206721b2",
                    "sha256:b7c7e566fee45926d2ae0f0ebfef8e01101c181b262a775147f03acfea2e70b1",
                    "sha256:2e5b9822d91c81c81457188154954e15b934526789408f76bdc45aefed372d73",
                    "sha256:dd4b32338bd9bbae0dc1bad3c8d6729951e7a38fbf906daa1762096f5f0c911c"
                ]
            }
        },
        "1.12.7-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f402c58e6022dd3fca98aed725172c31ec201a691fd38e84b7eaa262051c005",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2379fa67580d5409b435cfab5a72ab34e4e7cfa21d82cecf075f0c91f918eebf",
            "container_config": {
                "Hostname": "2379fa67580d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f402c58e6022dd3fca98aed725172c31ec201a691fd38e84b7eaa262051c005",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-07-10T02:32:05.096029656Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-09T21:46:01.441663162Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:160c4bb8ec56e2dd405448d806cd11fe91ab4f9d9de18bb4225a10f0dbdd827c in / "
                },
                {
                    "created": "2019-07-09T21:46:02.325936663Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-09T22:37:42.94339904Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-09T22:37:58.871420073Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-07-09T22:38:37.720191516Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:31:50.690526639Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-10T02:31:51.071720013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.7",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:32:02.955643826Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='66d83bfb5a9ede000e33c6579a91a29e6b101829ad41fffb5c5bb6c900e109d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='48edbe936e9eb74f259bfc4b621fafca4d4ec43156b4ee7bd0d979f257dcd60a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='4da1f7198a8fa0c4067852656b6c10153a4eca5a26aca28ef02ae9f4a7939ba5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ae2424b7ff557a708be12d3141f25b645966489ca49af1ad10b4fbe4c97d4c41' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eda20600d90247efbfa70d116d80056e11192d62592240975b2a8c53caa5bf3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='3374ac3d646555e50be790091b51849319cfcb176904048458c7f4252337fce8' ;; \t\t*) goRelArch='src'; goRelSha256='95e8447d6f04b8d6a62de1726defbb20ab203208ee167ed15f83d7978ce43b13'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-07-10T02:32:03.686748389Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:32:03.95415395Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-10T02:32:04.824664237Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-07-10T02:32:05.096029656Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22e7bd3d86b8511fb9665950661eee9ba7987bf8f562f92673db9428f1012b5f",
                    "sha256:ace8782861497e6437c058c87ac96a432e3195da1fafb04d05a27f5f82cfb259",
                    "sha256:94a99e7505bdd6fff57c1db26aba8e94ad80a675f822d0d4307d45b205bca7bf",
                    "sha256:7c98c40689bb7e378537071116d3943c4848dd0bb8b40007017983ac1a0b2689",
                    "sha256:352cd89307c7e424b87d04c5846d7fb6cb056d1497a9543dd1e8e8976f225752",
                    "sha256:3d9ab728846f93059ed3a136efbfc03a462a375290e4f268129cdcd149b41397",
                    "sha256:12b26418a522a98de494757b07e82b0603f6c5ac78d9fa301062fe025efeb6a2"
                ]
            }
        },
        "1.12.8-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d7a2540f6c9d900476be59d00199960de25a0094b146279d201093a8f9096e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e843c7cfd138f69fa58563faf3371ef7715d741578c579519c70d0db8a4ef99",
            "container_config": {
                "Hostname": "9e843c7cfd13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d7a2540f6c9d900476be59d00199960de25a0094b146279d201093a8f9096e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:35:00.749868496Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:42:03.609141709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e61dfaf44f65996214c6cd92da44431e76d5a8165fda16b2ac98840a10a64b5 in / "
                },
                {
                    "created": "2019-07-11T21:42:04.02489859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:56:11.218695107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:56:12.070128483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:32:26.887106957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:56.748776797Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:34:57.963328174Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:58.694213111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:35:00.190559861Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:35:00.749868496Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1305b268e0bd8801c4362c39910be2cbbf6f22615d23f7ede9671b737463635d",
                    "sha256:4bdb0c5caabd3fad9b301261163339f4ff825836daafa4176419e6412da69e53",
                    "sha256:5f07370ab8791eb86f26a0263ee981b8160dde6e682bd5d620d0aa70ba8c170b",
                    "sha256:838b1e3acf1588c39c017948be3f1dfb7e65880e129b35afbbff7583591bc0fb",
                    "sha256:811eadaf6430dfd6b9bfa2708068244281f361cf008f6ea24cbd1acb1a9590b1"
                ]
            }
        },
        "1.12.8-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d7a2540f6c9d900476be59d00199960de25a0094b146279d201093a8f9096e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9e843c7cfd138f69fa58563faf3371ef7715d741578c579519c70d0db8a4ef99",
            "container_config": {
                "Hostname": "9e843c7cfd13",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d7a2540f6c9d900476be59d00199960de25a0094b146279d201093a8f9096e6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:35:00.749868496Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-07-11T21:42:03.609141709Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0e61dfaf44f65996214c6cd92da44431e76d5a8165fda16b2ac98840a10a64b5 in / "
                },
                {
                    "created": "2019-07-11T21:42:04.02489859Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-11T22:56:11.218695107Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-07-11T22:56:12.070128483Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:32:26.887106957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:56.748776797Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:34:57.963328174Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:34:58.694213111Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:35:00.190559861Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:35:00.749868496Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1305b268e0bd8801c4362c39910be2cbbf6f22615d23f7ede9671b737463635d",
                    "sha256:4bdb0c5caabd3fad9b301261163339f4ff825836daafa4176419e6412da69e53",
                    "sha256:5f07370ab8791eb86f26a0263ee981b8160dde6e682bd5d620d0aa70ba8c170b",
                    "sha256:838b1e3acf1588c39c017948be3f1dfb7e65880e129b35afbbff7583591bc0fb",
                    "sha256:811eadaf6430dfd6b9bfa2708068244281f361cf008f6ea24cbd1acb1a9590b1"
                ]
            }
        },
        "1.12.8-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45f3b1506a2132808c8e1bf8593b5b275619747ac9ce6e8bbc4786b7121cb71e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5ce44f24268a9319ebbed6064f3b7e73d711c990e9a05673cc8177df8ee42ad6",
            "container_config": {
                "Hostname": "5ce44f24268a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45f3b1506a2132808c8e1bf8593b5b275619747ac9ce6e8bbc4786b7121cb71e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-13T22:37:48.646839622Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-13T22:35:15.880972393Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:37:44.784771796Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-13T22:37:45.972885983Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:37:46.56599167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-13T22:37:48.01748843Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-13T22:37:48.646839622Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:c41f7244dd5504bf4fbccdb3e89b08c3ce30ed35a01ea83e14f1e5697740f370",
                    "sha256:78f79f0076204e093b84a8979f9426a37613c965f1e5b967a0ccbfb60b8bec73"
                ]
            }
        },
        "1.12.8-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:578d21ca23129eb42cfe3a244a1803dfe54c251a85bddfcb913523a0a9ee7b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e719972ff642cbce87cb4a4c116e96879f90e1b2f9ba7733ebc9ffdcfe54179d",
            "container_config": {
                "Hostname": "e719972ff642",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:578d21ca23129eb42cfe3a244a1803dfe54c251a85bddfcb913523a0a9ee7b8e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:33:05.504312458Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:32:42.859847341Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:33:02.41266593Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bd26cd4962a362ed3c11835bca32c2e131c2ae050304f2c4df9fa6ded8db85d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b6b057e7b5c740894132ce30e70503d7d36988dcd61a00f0865d1e7d6dcc74ca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='15e9e0b5b414d1a0322896368c0050af6ab1cd82d050e93f8eceb38ef2626652' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='be164c4e04205c4fc713e81594bc2fdd4c94dff3d567ec8e0072223dd0778287' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='24a65f8a702ade1854f86ddf96eda554a8abd89c8a54ddc32788769419e90232' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='db78fc8f9610cb27ac35aab55cb11698f4daa2101acdf46f0ba64e1db16323e5' ;; \t\t*) goRelArch='src'; goRelSha256='11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:33:03.331722907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:33:03.661721405Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:33:05.091787969Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:33:05.504312458Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:7f05e650244240df71b6e09c096109a663aa179fb3f58908b177c1c07692e564",
                    "sha256:d77d8763fa3cd08a83036dcb5291c069133817f526b38606438aea89a627621c"
                ]
            }
        },
        "1.12.8-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d0ccdadbb1209a20aacd60d18678c13ac31fa0b8df80f27a90e16d63d4041e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "35eda353482b27fe1d12bd03b0ec2b634fe7466a617e09d70fdff79f9a8bddc9",
            "container_config": {
                "Hostname": "35eda353482b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3d0ccdadbb1209a20aacd60d18678c13ac31fa0b8df80f27a90e16d63d4041e8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:34:10.482404329Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:45:55.755870174Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:628950cdb60edf56519623bb5bceb8f913d0e4a57fb94d64bbeb5f99491a79c8 in / "
                },
                {
                    "created": "2019-08-14T00:45:56.535687841Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T03:02:33.075987011Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T03:02:43.563070285Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T03:03:35.533964572Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:33:50.515712646Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:33:51.070108281Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.8",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:07.378939239Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='bd26cd4962a362ed3c11835bca32c2e131c2ae050304f2c4df9fa6ded8db85d2' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b6b057e7b5c740894132ce30e70503d7d36988dcd61a00f0865d1e7d6dcc74ca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='15e9e0b5b414d1a0322896368c0050af6ab1cd82d050e93f8eceb38ef2626652' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='be164c4e04205c4fc713e81594bc2fdd4c94dff3d567ec8e0072223dd0778287' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='24a65f8a702ade1854f86ddf96eda554a8abd89c8a54ddc32788769419e90232' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='db78fc8f9610cb27ac35aab55cb11698f4daa2101acdf46f0ba64e1db16323e5' ;; \t\t*) goRelArch='src'; goRelSha256='11ad2e2e31ff63fcf8a2bdffbe9bfa2e1845653358daed593c8c2d03453c9898'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:34:08.184663017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:08.588236715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:34:09.992752551Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:34:10.482404329Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:53a17e96ea9649f943041fdc5c56c8a4898d8424215f1a1fefab3d82f8db264b",
                    "sha256:c270d0c8327fc2255bb5a28b9b2197c59043d5e7c0dc8b802f103356bc986ed7",
                    "sha256:dedaf50a60c0f650fc5b54cc1625f1a041633609c133c00f1595c4dcf336e340",
                    "sha256:ea6cd4652d5c3fc3a28501285762aa7d0d0971feb3dd45961f27183a2ab89a22",
                    "sha256:abaf085f2e558d02d9a160c0a90dfbcac487c08b01c6cdb5ab904f0539145b8c",
                    "sha256:2e8e755c7525c5d3eb50b0217fc9e0e97f913ca023e468636a1d08cfc071078e",
                    "sha256:d0fe82157b64980d0206f8bdde25a40c2b8342d8fe72251812529183d35f0d69"
                ]
            }
        },
        "1.12.9-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1c070d43d98ac99f7430366b56c863ecc988660ece6e17a0af98d9b7dbe7794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "db844588818faf0035a815bc3843fd339cc81ebdf424ce16520c5d8bcf8ceb4e",
            "container_config": {
                "Hostname": "db844588818f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1c070d43d98ac99f7430366b56c863ecc988660ece6e17a0af98d9b7dbe7794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:41:35.506132529Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:39:14.992412055Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:41:31.922306479Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:41:32.862344693Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:41:33.31866011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:41:34.973279372Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:41:35.506132529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:559abe8aaa74fd58401e84b083787dc398f369be36c76db541a20963b8f67c01",
                    "sha256:1e7c2629cb59d8eb7bc95a82960494359ab308326645fb9694933a9c1f8c01b4"
                ]
            }
        },
        "1.12.9-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1c070d43d98ac99f7430366b56c863ecc988660ece6e17a0af98d9b7dbe7794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "db844588818faf0035a815bc3843fd339cc81ebdf424ce16520c5d8bcf8ceb4e",
            "container_config": {
                "Hostname": "db844588818f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d1c070d43d98ac99f7430366b56c863ecc988660ece6e17a0af98d9b7dbe7794",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:41:35.506132529Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:39:14.992412055Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:41:31.922306479Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:41:32.862344693Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:41:33.31866011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:41:34.973279372Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:41:35.506132529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:559abe8aaa74fd58401e84b083787dc398f369be36c76db541a20963b8f67c01",
                    "sha256:1e7c2629cb59d8eb7bc95a82960494359ab308326645fb9694933a9c1f8c01b4"
                ]
            }
        },
        "1.12.9-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a2c935bbedca415da6c2fca442d2e5b5323ca74e6c801cdb8326b2af57e13bb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0730b1fbce42a09510e324095152f755ea8bcdf8fffb312a2e6322ceb8b12df2",
            "container_config": {
                "Hostname": "0730b1fbce42",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6a2c935bbedca415da6c2fca442d2e5b5323ca74e6c801cdb8326b2af57e13bb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-15T23:21:44.920169273Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-05-11T11:41:43.547058987Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6b519ed40566a3088c7bf57b3f1624dadc83f9e56839d5cde42489b54a0a1e90 in / "
                },
                {
                    "created": "2019-05-11T11:41:43.792819489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-11T12:14:30.121684424Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-05-11T12:14:31.006313862Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-15T23:19:48.728852481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:21:42.318609755Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-15T23:21:43.044411904Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:21:43.373851193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-15T23:21:44.497170266Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-15T23:21:44.920169273Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f16dbeb5fce3a6d2f7c74702e446352512e6439168532a42c8e7445d614c230c",
                    "sha256:21e494760bd96169566a371a745074cc4c53b0e1f24a7e1ce1680921fb53a56e",
                    "sha256:85d4d80a8d34a8058274d53832a3a47cc4640ecbd4a8749bbee9ba8104c9eff0",
                    "sha256:1caa031d1e50ca5e7d3a5bd550cdd9fd6c69fae25d2ee5d2d952b93b4bb3ef7d",
                    "sha256:b2a29775f05eedcecaa2e193c927b77032e64e8575ed318fbc8a8f4eb3fce797"
                ]
            }
        },
        "1.12.9-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57a2db9248e8f79d5571aa2d5a1954f7eef24f0cd39ce5857b02b5f6dbebb6d1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "217fa04088c37517eeb1040f794df4aa4ece2b03108c074fc46888d9dfe4d7f8",
            "container_config": {
                "Hostname": "217fa04088c3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57a2db9248e8f79d5571aa2d5a1954f7eef24f0cd39ce5857b02b5f6dbebb6d1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T12:10:39.799980769Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:42:05.518350884Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a01e47dfc1ed20e3b12d367472f2b0a48d7f7cbc6c8f48343ff38ce506f5296 in / "
                },
                {
                    "created": "2019-09-11T22:42:05.884407514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:32:28.290017643Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:32:44.952605269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:33:30.689681343Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:09:32.98209503Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:10:26.450174893Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:36.685257484Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0d9be0efa9cd296d6f8ab47de45356ba45cb82102bc5df2614f7af52e3fb5842' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3606dc6ce8b4a5faad81d7365714a86b3162df041a32f44568418c9efbd7f646' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c40824a3e6c948b8ecad8fe9095b620c488b3d8d6694bdd48084a4798db4799a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2e74c071c6a68446c9b00c1717ceeb59a826025b9202b3b0efed4f128e868b30' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2aac6de8e83b253b8413781a2f9a0733384d859cff1b89a2ad0d13814541c336' ;; \t\t*) goRelArch='src'; goRelSha256='ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T12:10:38.590703785Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:38.883875047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:39.564427151Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T12:10:39.799980769Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf2922ba26e0deb5e7eeade64930b53b189ee4e10a60ff0f6f00c39fa23bd7b4",
                    "sha256:a6cbdfd3a62e8cdb6f447f46f53dca0b12cbd1b0865e334d5c6990071f929b92",
                    "sha256:c0cfe2a74361c8958cde51474731f9b1fb3df3f6484f36a3416b4440c34ce06a",
                    "sha256:667a394e79a6e5b3e890a777f7c6da4ce12d8a7fd3b1ce2709da9c2054fd155f",
                    "sha256:15111c129c74bbc90fb8aba66238cf91732337503672e477240e540eb3e2e6a4",
                    "sha256:61fc99aedf9e30df69a26b0798945e74ad991c233bcf4ee6d6046ee5c0d0f2c4",
                    "sha256:a90ea633b9d01ad50e4a08b09f636f8eaaba9bac8b0441e6dabb34bad2790648"
                ]
            }
        },
        "1.12.9-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:926d255d131ce2b97875363037cfc5783a48923328cfe6462d41060783e0ab30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f99b3666b73740da9074ea540dd9819ad924a1b81c1e4eade30a7ef89bffb89b",
            "container_config": {
                "Hostname": "f99b3666b737",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:926d255d131ce2b97875363037cfc5783a48923328cfe6462d41060783e0ab30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T12:10:55.484242395Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:43:56.663795059Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c261012373b1f613abf90c8163f72247906770a6209fc775af35a131ba818f9 in / "
                },
                {
                    "created": "2019-09-11T22:43:57.070799294Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:38:06.204506653Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:38:13.119913646Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:38:39.37377303Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:10:04.751593003Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:10:47.333675581Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12.9",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:53.780101152Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='0d9be0efa9cd296d6f8ab47de45356ba45cb82102bc5df2614f7af52e3fb5842' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='3606dc6ce8b4a5faad81d7365714a86b3162df041a32f44568418c9efbd7f646' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c40824a3e6c948b8ecad8fe9095b620c488b3d8d6694bdd48084a4798db4799a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2e74c071c6a68446c9b00c1717ceeb59a826025b9202b3b0efed4f128e868b30' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2aac6de8e83b253b8413781a2f9a0733384d859cff1b89a2ad0d13814541c336' ;; \t\t*) goRelArch='src'; goRelSha256='ab0e56ed9c4732a653ed22e232652709afbf573e710f56a07f7fdeca578d62fc'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T12:10:54.292610413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:54.508111964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:55.208564916Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T12:10:55.484242395Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdab6afc8ca4cd89d54b2c294fb6752af4425d9a02af3ce8c01ebf12fcc244eb",
                    "sha256:b65d5ec1d824245622d72f459f02cb8d66de5dc1f5a89ea47692c99c1f3262f8",
                    "sha256:002d90bbe6663976e08b0f4d4d61f9e9a542bc164db809b2b74e97e57c4c1562",
                    "sha256:b95324c1fe8f45ecd462c9365825af2c95c82e6f0d64e4ca845ab5a27435c382",
                    "sha256:2cc46881bcd9b9effd34463b2c082c6636662bd08ab2ec5b73a77669270f0364",
                    "sha256:a3322d9ace402e0adaa2de6abcdbc45b733d8f648275d3aad2b8aaa6be5f2d55",
                    "sha256:7e08b501439fb8904524512706d9753055799e724003fb470dddea85b4f00908"
                ]
            }
        },
        "1.12beta1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3ee1bb4e96257e66cad7f77baf5723855a2f4dfe1bc36a1e68b95593014ed62",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "10dc3769cfd366013dc5aaf814ce107fd23d9bc9ef2f73aa7ddc44ccd1838c72",
            "container_config": {
                "Hostname": "10dc3769cfd3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3ee1bb4e96257e66cad7f77baf5723855a2f4dfe1bc36a1e68b95593014ed62",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:01:20.067166486Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T12:59:25.29242882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:01:18.372207166Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:01:18.974854477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:01:19.190986211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:01:19.873488736Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:01:20.067166486Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:24fb00de82e1068d72505e9b1bba5c58721791203b7e6d2c5618ac2d61087e0a",
                    "sha256:d4048d7eafbed29212820311dbb6f5b5775c772748cc2663f5284d89a8e97018"
                ]
            }
        },
        "1.12beta1-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3ee1bb4e96257e66cad7f77baf5723855a2f4dfe1bc36a1e68b95593014ed62",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "10dc3769cfd366013dc5aaf814ce107fd23d9bc9ef2f73aa7ddc44ccd1838c72",
            "container_config": {
                "Hostname": "10dc3769cfd3",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3ee1bb4e96257e66cad7f77baf5723855a2f4dfe1bc36a1e68b95593014ed62",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-21T13:01:20.067166486Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2018-12-21T12:59:25.29242882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:01:18.372207166Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-21T13:01:18.974854477Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:01:19.190986211Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T13:01:19.873488736Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-21T13:01:20.067166486Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:24fb00de82e1068d72505e9b1bba5c58721791203b7e6d2c5618ac2d61087e0a",
                    "sha256:d4048d7eafbed29212820311dbb6f5b5775c772748cc2663f5284d89a8e97018"
                ]
            }
        },
        "1.12beta1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22fd5874dd9ccdcf4706f18cbce7885b6c619f81ada3cba07c7bff105df274c3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b097047adda0bf69caad47066057642668069b38e0cadd65f1eb2084816d5f14",
            "container_config": {
                "Hostname": "b097047adda0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:22fd5874dd9ccdcf4706f18cbce7885b6c619f81ada3cba07c7bff105df274c3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2018-12-29T16:14:44.506558717Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-29T12:43:32.952303456Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:77b66e4dfb1b6be05fbe0809b73dba123a7c18a1f16751d165a43a9d6d7e8c42 in / "
                },
                {
                    "created": "2018-12-29T12:43:33.454240913Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T13:15:52.988051521Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T13:15:59.156797108Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2018-12-29T13:16:24.777750252Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T16:14:33.947365426Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-29T16:14:34.262770243Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta1",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T16:14:43.061699924Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='65bfd4a99925f1f85d712f4c1109977aa24ee4c6e198162bf8e819fdde19e875' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='e0ba7091227b42e98a9ed83f52e3821f7b3b836a16a5815ccf237bcaa590083a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='df79a288b2c569bd26e43ea3acc245b7eabae897b4783f7b4acffdd97ba0a01c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5c93266b9b9f6e4ac452517b073a54d2dbb4cbbae901bc7e2b5d34415adf658b' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8ae18d580913cc4cb67cdac36c058aad279419640f469931e44d6b7f0bbd9062' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='c575e5835a0ed3b19040497e24f7de6913eb73a42983e828f5dc2af4c9fcecf7' ;; \t\t*) goRelArch='src'; goRelSha256='639585de6bfb67865a85cd750d41ecc39968039dafb9d1fdb15361eb118d150a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2018-12-29T16:14:43.539024238Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T16:14:43.702959378Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-29T16:14:44.329039241Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2018-12-29T16:14:44.506558717Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2660d69c0ffd8f0ad0bcfa36c12a289d838270e9713cc5eecc9f6bded673cec8",
                    "sha256:203f3a4ccef08474f71a23ae876c25189aa5a0faf2d00169112b677792569735",
                    "sha256:75a669b7bd061c290fd6c81da4422e115de3ab051a4283ffc063814b92a3dc48",
                    "sha256:31bc121b5b6fffb9d000fed7595e58f907d4cc69a42aed8ea57b184dbb8bfad3",
                    "sha256:f9782b3e6d93673f4369c1d0aaf93092aa854eea039c5eee6d878d7da80f7f56",
                    "sha256:92f7cbd4992b2334a27de9d1959c461e421906d7d8d9c19b0936a052463b5c1d",
                    "sha256:f09b5a99645cb73e884d372069bd09f08c040215e3dd4b0332e6be21adfd481b"
                ]
            }
        },
        "1.12beta2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc8ffc134c4791693c19c98b5a2016fc30ed4a001abda806d57bc5906001dafb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5ba0ff9a78b90a24a491d479f939f90d2779e39f52805463c64d47faa4f1e7d",
            "container_config": {
                "Hostname": "a5ba0ff9a78b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc8ffc134c4791693c19c98b5a2016fc30ed4a001abda806d57bc5906001dafb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:51:17.239092293Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T12:49:39.133200859Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:51:15.618012993Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:51:16.21534703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:51:16.37518528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:51:17.047645404Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:51:17.239092293Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:151bc8f609633756e1e09a47dde384e35d87be98e2db3f12815bebff9ef7beab",
                    "sha256:345a6ad43632c5b6b3758e05ca332a35e3ca976ae346898f979cb445b96a74e7"
                ]
            }
        },
        "1.12beta2-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e7791f031b1730f89610ea98c47c22abd6e0f7dd70aeaef18f4ad0bc85394de4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0e5dc16a7e74a9024f30ec02f1f119552d6bb4aa6cd63d93206e745ce5a6a68a",
            "container_config": {
                "Hostname": "0e5dc16a7e74",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e7791f031b1730f89610ea98c47c22abd6e0f7dd70aeaef18f4ad0bc85394de4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-01-11T12:43:30.443332492Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-01-11T12:41:50.474867498Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-11T12:43:28.868465804Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-01-11T12:43:29.43902068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-11T12:43:29.625821825Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-11T12:43:30.267236742Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-01-11T12:43:30.443332492Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:197a09915937fdd2ce707a56d525332fc3d622ae81ef5970b036bfbadcfa6b00",
                    "sha256:b83ecb1a11bbbece4f46ab4ec161a64a5841fe7f134c42c58f897ec18ba0261e"
                ]
            }
        },
        "1.12beta2-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc8ffc134c4791693c19c98b5a2016fc30ed4a001abda806d57bc5906001dafb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a5ba0ff9a78b90a24a491d479f939f90d2779e39f52805463c64d47faa4f1e7d",
            "container_config": {
                "Hostname": "a5ba0ff9a78b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc8ffc134c4791693c19c98b5a2016fc30ed4a001abda806d57bc5906001dafb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T12:51:17.239092293Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-06T12:49:39.133200859Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:51:15.618012993Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T12:51:16.21534703Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:51:16.37518528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:51:17.047645404Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T12:51:17.239092293Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:151bc8f609633756e1e09a47dde384e35d87be98e2db3f12815bebff9ef7beab",
                    "sha256:345a6ad43632c5b6b3758e05ca332a35e3ca976ae346898f979cb445b96a74e7"
                ]
            }
        },
        "1.12beta2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9630eb9d0afd0e8f0dcdab60402ba9120e0908ec011fb3a288537a8e5f2aaead",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7f3c9145b8eb8afca8bb350583c0a8ec083cba1d07efa8db3f080bacc5568766",
            "container_config": {
                "Hostname": "7f3c9145b8eb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12beta2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9630eb9d0afd0e8f0dcdab60402ba9120e0908ec011fb3a288537a8e5f2aaead",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-06T21:43:01.055391642Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T12:43:08.313557111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8c452240b3657ec4cc6568239a4d933bc75fd958464a3950f67912097968fff8 in / "
                },
                {
                    "created": "2019-02-06T12:43:08.732890042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T15:27:50.46145522Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T15:27:54.717646277Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T15:28:21.159991728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:42:50.018026485Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:42:50.327062548Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12beta2",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:42:59.536577985Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9e4884b46a72e0558187a8af6e8733e039432df1b755f14b361f18b63fa5a63e' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d41674dda2e33a539929a980c7ba8d68c90c8aabcb138b65a2dc36704af02ace' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='77d80484e455ad65aa0778aa82391c02ded01a37ee65f7887167dc03a6ef3251' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='ffe0d1c92473b2fd653e399c1ddb11535b9666f22b6ae5653bd1fb4f84534c46' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='a1701e3c216c970a833248d6e5df5f2c27c6103e8e3bde34c5c3c25e839e87f9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='bb4ea794a8fa459ad596c03b08fba9de647c62369c74f5daf21a6bae8c855b11' ;; \t\t*) goRelArch='src'; goRelSha256='fd3f4e1860ac59d647c22a2c1589fcf4a96c02bbbfef1ca1ea44bc25cf62a490'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-06T21:43:00.026526298Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:00.198683922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T21:43:00.871291373Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-06T21:43:01.055391642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b999405f276ee6dd7eae11f1695f0caf65cf0a5c8396eda7277c729522b82e7",
                    "sha256:d4087f0b598285864381402b67787b7b472ffef34afcb30e5a33e9b22e5d7236",
                    "sha256:b53459201f5ee601fd8f00564ea9c19680d07860ab3b4ffba3bcbee5429a6676",
                    "sha256:7343b78f933a48ec3af11ee27bbe8e487703c0962e56aaa10d009cb83a841006",
                    "sha256:7cbcdd99ed08d3cd9343ae21e4bde979ac73ee1bbd1e8ecb0705149a802d66e6",
                    "sha256:fbf02a6d19da28b9a3e9217d3a4323dc7db4beeb4c1770160e80f6d0abf9de2f",
                    "sha256:b0319757fcd764e898e5a77cebea8ad738dfd77518796cb1da0f49ded01a4b51"
                ]
            }
        },
        "1.12rc1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56049d07c5eee0122d1392ffc0b44ad08f3c731d695cb4cccd30642b44a1a47f",
            "container_config": {
                "Hostname": "56049d07c5ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:43:36.230862048Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T12:41:48.099501035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:34.607149483Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:43:35.194078597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:35.358452608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:36.051752347Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:43:36.230862048Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:af6e62868ab4499f6805ca1fc125f3f800b566aeb244804b86254fa8cc3f5cdc",
                    "sha256:7ab36c0167f94f3b48736390ae6836b66332d3836d1093bf46c6633e458a8e41"
                ]
            }
        },
        "1.12rc1-alpine3.8": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a779865d00ac224a82cab333b06dfb8b1d486afe9300dd072bfeb0d235c835bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f3a3e788f8407e40c3c6f17fb8e169c048c7a236d795d0474b64e281f35d4d5c",
            "container_config": {
                "Hostname": "f3a3e788f840",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a779865d00ac224a82cab333b06dfb8b1d486afe9300dd072bfeb0d235c835bd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:45:17.895206661Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2018-12-21T12:42:37.552757382Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a22c7b9e0997dd22f616aaab8281f257d34f6f684cf60e256faed91dd22b7a5 in / "
                },
                {
                    "created": "2018-12-21T12:42:37.81724633Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2018-12-21T12:42:38.030974495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-21T12:59:24.251232842Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2018-12-21T12:59:25.111348645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T12:43:48.255560847Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:45:16.330548866Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:45:16.906792616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:45:17.062586223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:45:17.691523356Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:45:17.895206661Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:33a0561d59751a58e0ba594a78201447a4811b8c34242efd5e547cb334b546c6",
                    "sha256:3b4f4fd33688e429ca1d7d2871d325b378594887d5d0c6e749674a406c2f54d9",
                    "sha256:1c6c9f1805834604d435a4575f4424f297fdf6282f922a28182fc35c3cd87ecf",
                    "sha256:5f0e374fb0f82ac6757d9ff64edfb15919ed8a2aadd45f895e775ee54a895372",
                    "sha256:4baa9f55026e7f9fac09f28a8a7eced62dd4ab5076a70f0a30f31d763535575f",
                    "sha256:87e795c6ad66b9ff8a7afff1664323583bf12e00d10fb557ae083d13884639fc"
                ]
            }
        },
        "1.12rc1-alpine3.9": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56049d07c5eee0122d1392ffc0b44ad08f3c731d695cb4cccd30642b44a1a47f",
            "container_config": {
                "Hostname": "56049d07c5ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e9aea37d3fd6535df61ccdf91953dad7765a3254fe41ae5371fbc013163895d4",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:43:36.230862048Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-01-31T12:41:43.869941313Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fdc9dcc7d932bb46a3992371288a0f80814bfb29ae8c8f1d860b6aabf0e9f893 in / "
                },
                {
                    "created": "2019-01-31T12:41:44.113873465Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:a10c133d8d5e9af3a9a1610709d3ed2f85b1507f1ba5745ac12bb495974e3fe6 in /etc/localtime "
                },
                {
                    "created": "2019-01-31T12:41:44.322378527Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T12:49:37.936319407Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-02-06T12:49:38.935733655Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-02-13T12:41:48.099501035Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:34.607149483Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:43:35.194078597Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:35.358452608Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:43:36.051752347Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:43:36.230862048Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:027f4ef88e1667e8829f076da5112d75c0377a05bd2ad2d434e020f56d527c1d",
                    "sha256:0f1bfa58a125904df199735b0b5f504e27a6904742ce5c6c3fc9b4562fc9f4e6",
                    "sha256:822982d1478cbb3653d6a5206eebdd8d4eaa6b326ab759ccea97e7d72b324be5",
                    "sha256:b2a285f1e62ab22f7e68aebfa75f8ce93e25ce89f361b406372ed63f47fafb39",
                    "sha256:af6e62868ab4499f6805ca1fc125f3f800b566aeb244804b86254fa8cc3f5cdc",
                    "sha256:7ab36c0167f94f3b48736390ae6836b66332d3836d1093bf46c6633e458a8e41"
                ]
            }
        },
        "1.12rc1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ab694a6f671e00c589ae18937bb3bf5318a25d43f74a3010ff903b40628e320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "addb3c8424688f9dc60638442d9e1597d04532c75ead755ec1094a3d367095da",
            "container_config": {
                "Hostname": "addb3c842468",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.12rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ab694a6f671e00c589ae18937bb3bf5318a25d43f74a3010ff903b40628e320",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-02-13T12:41:44.769739698Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-02-06T12:43:08.313557111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8c452240b3657ec4cc6568239a4d933bc75fd958464a3950f67912097968fff8 in / "
                },
                {
                    "created": "2019-02-06T12:43:08.732890042Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-06T15:27:50.46145522Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T15:27:54.717646277Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-02-06T15:28:21.159991728Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T21:42:50.018026485Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-13T12:41:30.811647166Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.12rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:41:43.197779347Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='e5a03e1f2e065b17b2fbbd3429f18a6f51fe2848e0120586652b9f14ada72c9a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='62126e4ca72e2fea9856fe0ec1a0f28cf1b385fb362d32cb56413c39cab318f8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='654b90f75902d501e2201a7b438965132fd1242a102f54529e9ff7dbbdf0d4bb' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1d8615576655decbadeefcfaa6d5144b370dbea67fd4b426f58b573deedbd918' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='cb6c7ba83ee8211da1d13d6db148adfdd6b86a790d3974d0c5702d229ca1da40' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='40208d21fca8469c20054e67250f288ab62d68794690aa2c0324d67018ba99c2' ;; \t\t*) goRelArch='src'; goRelSha256='ed1d4f8e8a33f0d4a59a2f642584c7c6375fce2f8a4edaece73309cf2c89b8ee'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-02-13T12:41:43.703984104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:41:43.863641723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-13T12:41:44.595515855Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-02-13T12:41:44.769739698Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3b999405f276ee6dd7eae11f1695f0caf65cf0a5c8396eda7277c729522b82e7",
                    "sha256:d4087f0b598285864381402b67787b7b472ffef34afcb30e5a33e9b22e5d7236",
                    "sha256:b53459201f5ee601fd8f00564ea9c19680d07860ab3b4ffba3bcbee5429a6676",
                    "sha256:7343b78f933a48ec3af11ee27bbe8e487703c0962e56aaa10d009cb83a841006",
                    "sha256:7cbcdd99ed08d3cd9343ae21e4bde979ac73ee1bbd1e8ecb0705149a802d66e6",
                    "sha256:bb2cc37c292bace0df68b10da8ece1b1a67586bd654633114acdaf5856997bb8",
                    "sha256:6f30a502ae2bf59eca4c1538c7f654a99b85eca32c2b5a5fcb97bb96db17d01e"
                ]
            }
        },
        "1.13-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c46e632aa7945b718a4cfbb4049001227d4b98a6957a88a16b8789c351823ff2",
            "container_config": {
                "Hostname": "c46e632aa794",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:58:20.998068768Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:57:10.173818836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:14.229681914Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:58:19.99414637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.17789563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.786494698Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:58:20.998068768Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:9746430aeba85d6b41c52794367a90b459d91774c673ca74f2272d0c02ddb148",
                    "sha256:0901a79eefddf73bbb88ba240e278136ec73ac6b2b23f7a99631d2a3559f527d"
                ]
            }
        },
        "1.13-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae0ceffc041928c8e2b666b46ec7e42315ff5258e2150b542bf19b5addd376d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cbf17f715724c46fbfe161dfd4c39d4ce5352c7b059856e2f77e09de3d3b21bd",
            "container_config": {
                "Hostname": "cbf17f715724",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae0ceffc041928c8e2b666b46ec7e42315ff5258e2150b542bf19b5addd376d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:49:20.036283116Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:51:08.101038033Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53e1d2e5396547a2d7109e4b73078911bd069ae5d762f816d90e89ec9731ab13 in / "
                },
                {
                    "created": "2020-04-23T17:51:08.915641448Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:40.547847236Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:04:41.256116148Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-15T20:48:07.740265197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:49:13.74286581Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:49:18.980195813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:49:19.172518334Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:49:19.825442164Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:49:20.036283116Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:afc063b56c13993758345fefa00fb2f2cab439dd6e2eb6165ea6887f640ced74",
                    "sha256:0892e7e560092371540181338a01febbf6a8bb5ea9b0404cde5a470413b0dd8f",
                    "sha256:bfe4fe6bb8c3d6bdc14ca8d473cd64245187dfe96833ed8a15b6c8df7d8da758",
                    "sha256:4ba27a3205b993da47683f218faa8ea46f9692be9e08ff84a129d4200c6d652d",
                    "sha256:6ab92f52ea3e710029a8e07b69f2fc5df1c5237244e548d22316a64dd706a8b5"
                ]
            }
        },
        "1.13-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:632c762bbf86a2506b9b112defed548087850138a2c1ba32bb0e8905e5dfb37a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1edd4af0f7444b571c333b7640b006d1ae18c861fd511f8c8757b727e67a6d63",
            "container_config": {
                "Hostname": "1edd4af0f744",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:632c762bbf86a2506b9b112defed548087850138a2c1ba32bb0e8905e5dfb37a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:59:41.961962827Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:58:28.718057787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:59:35.287197308Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:59:40.870181745Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:59:41.0859615Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:59:41.758611341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:59:41.961962827Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:7bf91fcc1a9ee5ce9188e2e8fa728c0a248ef2598290cc75ca16ebfdd3eac69e",
                    "sha256:4312cb60949a024a746af5d9f367eb896a337c4c77c96529e73642b51d48fb77"
                ]
            }
        },
        "1.13-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c46e632aa7945b718a4cfbb4049001227d4b98a6957a88a16b8789c351823ff2",
            "container_config": {
                "Hostname": "c46e632aa794",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:58:20.998068768Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:57:10.173818836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:14.229681914Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:58:19.99414637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.17789563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.786494698Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:58:20.998068768Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:9746430aeba85d6b41c52794367a90b459d91774c673ca74f2272d0c02ddb148",
                    "sha256:0901a79eefddf73bbb88ba240e278136ec73ac6b2b23f7a99631d2a3559f527d"
                ]
            }
        },
        "1.13-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:699bf372f5fb4fef607006adce596c9f4d959728a23070d574e5564466b17ce9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ba1b4f3119ffa4c1f020fbccdcd3dbf4bd95e65aaa4471706eaa65eaa5dccc9a",
            "container_config": {
                "Hostname": "ba1b4f3119ff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:699bf372f5fb4fef607006adce596c9f4d959728a23070d574e5564466b17ce9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:57:05.373817749Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T01:17:02.15514438Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07519836baf21317676c799c0905c76bf767fe8caa1fa718c0dfe0a152577ee8 in / "
                },
                {
                    "created": "2020-08-04T01:17:04.687414181Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T02:22:15.47227481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T02:22:20.468868886Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T02:22:43.609561676Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T09:33:25.577089055Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T09:33:27.883883924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:43.285567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:59.687375607Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-06T19:57:04.333792753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:57:04.525472657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:57:05.162120233Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:57:05.373817749Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:17143058c85d8d7c96b85560c925be3c9630f1788530827b9232998be6ba3752",
                    "sha256:ce48a04479ae6911db6b6accd8761390d89c8a670e59b4d75285a489498db6f3",
                    "sha256:e107927fb0963b1322c92c15fde25d6c446c3e0272201b915ec92408da2e792e",
                    "sha256:b731a350796d8e20d95d7f1fb9c306f4f1bea4e2c126f5781587c20c9773ee47",
                    "sha256:844fc9aeba7a4f97f3e8a7c0febd973527ae241e41ffa991b214870cba34a915",
                    "sha256:b4d188ca18288ba7885f8145810350675fe6d5891539d693e99252ff0b2b79f2",
                    "sha256:1f605e576ac1657d2be1426787eccb8c87263df38a19366ad9b8c4aa8c4714a6"
                ]
            }
        },
        "1.13-rc-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b8c933bd50a6af8a4bb3ac201f01c4ddb6e5aa67ca624a126e833ca3b982b05",
            "container_config": {
                "Hostname": "3b8c933bd50a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:51:06.076155583Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:48:55.018542114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:03.229907771Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:51:04.201180036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:04.499041343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:05.729111391Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:51:06.076155583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:3150bc8fb861b66bf32a94934e10eb39c09c2d13d63fd4fcc8554e49fba3dff0",
                    "sha256:b9fb48ae42df35fe5bae66375c6364db4080f86cac1424e7fdf9c7e02720b2b2"
                ]
            }
        },
        "1.13-rc-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b8c933bd50a6af8a4bb3ac201f01c4ddb6e5aa67ca624a126e833ca3b982b05",
            "container_config": {
                "Hostname": "3b8c933bd50a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:51:06.076155583Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:48:55.018542114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:03.229907771Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:51:04.201180036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:04.499041343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:05.729111391Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:51:06.076155583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:3150bc8fb861b66bf32a94934e10eb39c09c2d13d63fd4fcc8554e49fba3dff0",
                    "sha256:b9fb48ae42df35fe5bae66375c6364db4080f86cac1424e7fdf9c7e02720b2b2"
                ]
            }
        },
        "1.13-rc-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:354d04c07e4d8d69406f1ec04a05b0d217bc6dacb2c6162d10ddf12d2bce7631",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "417a1010c3eef07256dbda4ab26aee2abbfe413e63df85bfe47c13eb95c53b1c",
            "container_config": {
                "Hostname": "417a1010c3ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:354d04c07e4d8d69406f1ec04a05b0d217bc6dacb2c6162d10ddf12d2bce7631",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:48:48.643903169Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-29T21:48:31.016300723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:48:45.59276862Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3cd4490021a5f1f25a7440edca03910e40a38e587b578cf52ab7143a81db1861' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='deebe2b723c818293046629344f09ead1610fba608aea038bcf25da70766f944' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='184c9fff6bba9da1cf23ba7f52561cc777ac7feaf73621b3824f4a30ffa4648d' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5f5d235b73672ee5d26917d3907f8f1966af60d4391477a5afd4300d070ca852' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7656da8bb13e450754d5df35c7d21dafb5847b00779dcc08f3c41eec7d817037' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6016103bab62f1fe6b8f90665888a23ae8c825a8e7db7a607877298148e593cf' ;; \t\t*) goRelArch='src'; goRelSha256='0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:48:46.431895911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:48:46.803016057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:48:48.253013678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:48:48.643903169Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:f51f43529b1512ce3a59ee40c0eb1f9a901d8eaa0fbe8d964970aee6c781bfbc",
                    "sha256:fe7c1e92bc6b7c690f6722a77c644c7b00b558922e151ddba7ffcd3d29fd757f"
                ]
            }
        },
        "1.13-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:27b0bd28053e29fa44789c1abe2ce91ea2144853789c85676b76ffdf05fb8fb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb1bdeacb2daf4534b2f30d0c15037c14e7271c0f3a217ac247fa71699c43b80",
            "container_config": {
                "Hostname": "fb1bdeacb2da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:27b0bd28053e29fa44789c1abe2ce91ea2144853789c85676b76ffdf05fb8fb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:46:58.203789358Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:44:05.164487785Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce4b8c76522cbe8599502985424901aee9d30d37296761d47dbcb9b0770f7aa2 in / "
                },
                {
                    "created": "2020-06-09T01:44:08.233927505Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:13:24.25262502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:13:28.631359651Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:13:54.156684337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:58:25.803725287Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:09:08.41560371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:34.944232479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:52.766790761Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-17T02:46:57.128465223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:57.319714203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:57.984603685Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:46:58.203789358Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2c98919d330c2fbdf952180eb94af6ab93836482a5e74dc238ec6060abe6a77",
                    "sha256:f05945093c2b7f0ea547a8e994d0ba3d3f92cde2872edb0be6a38215fdb23e71",
                    "sha256:a459d0c1c28b387f1bcbf08546ac4c4d1469ea0f5defebbe90b146c24c27bdc3",
                    "sha256:45473c26d94be3fc63a6649c5c0a5f43a513079c17f0e9298649274fdda388c8",
                    "sha256:bdf94b8a07de978153bb3f28946de7961e173deb38e9ca78d8d4cec19ad0514a",
                    "sha256:511033c3173ba046d9b6f03276b6a4a0dc2c11acebaa32a0078821465e2eec65",
                    "sha256:80225a72d9924380119130280fe1e1b34dad3a29dfc0e949d18d4c75215debec"
                ]
            }
        },
        "1.13.0-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71a8f1192b3410dcdc79acd70ee09786a30369815337698a7c930ede97df28b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3c37503648035ddf7db33b0d4ff0bd9bc8c34d5ae43f446ce9a88ec7a2fbf37",
            "container_config": {
                "Hostname": "b3c375036480",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71a8f1192b3410dcdc79acd70ee09786a30369815337698a7c930ede97df28b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-03T20:43:40.177559604Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-03T20:42:00.357171617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:43:38.147545137Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-03T20:43:38.866526791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:43:39.090489244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:43:39.907777255Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-03T20:43:40.177559604Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:a50be523186a5a480ff6610a1fbfcd04851da1a7b03afd8876dc04e53f1e4cb9",
                    "sha256:425fc89d928d8043f02f18ad00cb3c94785afb102c3da74a79827d18806b7023"
                ]
            }
        },
        "1.13.0-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71a8f1192b3410dcdc79acd70ee09786a30369815337698a7c930ede97df28b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b3c37503648035ddf7db33b0d4ff0bd9bc8c34d5ae43f446ce9a88ec7a2fbf37",
            "container_config": {
                "Hostname": "b3c375036480",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71a8f1192b3410dcdc79acd70ee09786a30369815337698a7c930ede97df28b1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-03T20:43:40.177559604Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-03T20:42:00.357171617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:43:38.147545137Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-03T20:43:38.866526791Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:43:39.090489244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-03T20:43:39.907777255Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-03T20:43:40.177559604Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:a50be523186a5a480ff6610a1fbfcd04851da1a7b03afd8876dc04e53f1e4cb9",
                    "sha256:425fc89d928d8043f02f18ad00cb3c94785afb102c3da74a79827d18806b7023"
                ]
            }
        },
        "1.13.0-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45843c699896013f5cd7d62b3055853b7bd2696281835844f461665db20496e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "e182467b948497bcfc9e30caaa2028ebf1b22734ed9194f60e533f2863af6b3b",
            "container_config": {
                "Hostname": "e182467b9484",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:45843c699896013f5cd7d62b3055853b7bd2696281835844f461665db20496e1",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T12:09:45.023837894Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:42:05.518350884Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1a01e47dfc1ed20e3b12d367472f2b0a48d7f7cbc6c8f48343ff38ce506f5296 in / "
                },
                {
                    "created": "2019-09-11T22:42:05.884407514Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:32:28.290017643Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:32:44.952605269Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:33:30.689681343Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:09:32.98209503Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:09:33.362722406Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:09:43.340810338Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='931906d67cae1222f501e7be26e0ee73ba89420be0c4591925901cb9a4e156f0' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e2a61328101eff3b9c1ba47ecfec5eb2fdc3eb35d8c27d505737ba98bfcb197b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='519b3e6ae4db011b93b60e6fabb055773ae6448355b6909a6befef87e02d98f5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='807b036bb058061b6090635e2a8612aaf301895dce70a773bbcd67fa1e57337c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='b7122795910b70b68e4118d0d34685a30925f4dd861c065cf20b699a7783807a' ;; \t\t*) goRelArch='src'; goRelSha256='3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T12:09:43.891898269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:09:44.100389456Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:09:44.756544519Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T12:09:45.023837894Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf2922ba26e0deb5e7eeade64930b53b189ee4e10a60ff0f6f00c39fa23bd7b4",
                    "sha256:a6cbdfd3a62e8cdb6f447f46f53dca0b12cbd1b0865e334d5c6990071f929b92",
                    "sha256:c0cfe2a74361c8958cde51474731f9b1fb3df3f6484f36a3416b4440c34ce06a",
                    "sha256:667a394e79a6e5b3e890a777f7c6da4ce12d8a7fd3b1ce2709da9c2054fd155f",
                    "sha256:15111c129c74bbc90fb8aba66238cf91732337503672e477240e540eb3e2e6a4",
                    "sha256:241e604d4a8aa913e66cdf79049463bbb480298c9a87604707e6316151437fbb",
                    "sha256:ad2bb41ff7501e0f00597749f6ff9b16b88fd3f53d725c3e99277f95ba8a7e0a"
                ]
            }
        },
        "1.13.0-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c5293a74fde0a3b8a35c188fcb86f78e5feadc140ace76357fae85db8d6e58c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2bf01791eb0650c761ed2ed677cdaeeb559f49be39772d788e270c72a90650a4",
            "container_config": {
                "Hostname": "2bf01791eb06",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c5293a74fde0a3b8a35c188fcb86f78e5feadc140ace76357fae85db8d6e58c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-12T12:10:15.305780394Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-09-11T22:43:56.663795059Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c261012373b1f613abf90c8163f72247906770a6209fc775af35a131ba818f9 in / "
                },
                {
                    "created": "2019-09-11T22:43:57.070799294Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T00:38:06.204506653Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T00:38:13.119913646Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-09-12T00:38:39.37377303Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:10:04.751593003Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-12T12:10:05.087825297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:11.295981644Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='68a2297eb099d1a76097905a2ce334e3155004ec08cdea85f24527be3c48e856' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='931906d67cae1222f501e7be26e0ee73ba89420be0c4591925901cb9a4e156f0' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='e2a61328101eff3b9c1ba47ecfec5eb2fdc3eb35d8c27d505737ba98bfcb197b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='519b3e6ae4db011b93b60e6fabb055773ae6448355b6909a6befef87e02d98f5' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='807b036bb058061b6090635e2a8612aaf301895dce70a773bbcd67fa1e57337c' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='b7122795910b70b68e4118d0d34685a30925f4dd861c065cf20b699a7783807a' ;; \t\t*) goRelArch='src'; goRelSha256='3fc0b8b6101d42efd7da1da3029c0a13f22079c0c37ef9730209d8ec665bf122'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-12T12:10:11.796318956Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:12.011949286Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-12T12:10:12.720468205Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-12T12:10:15.305780394Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:fdab6afc8ca4cd89d54b2c294fb6752af4425d9a02af3ce8c01ebf12fcc244eb",
                    "sha256:b65d5ec1d824245622d72f459f02cb8d66de5dc1f5a89ea47692c99c1f3262f8",
                    "sha256:002d90bbe6663976e08b0f4d4d61f9e9a542bc164db809b2b74e97e57c4c1562",
                    "sha256:b95324c1fe8f45ecd462c9365825af2c95c82e6f0d64e4ca845ab5a27435c382",
                    "sha256:2cc46881bcd9b9effd34463b2c082c6636662bd08ab2ec5b73a77669270f0364",
                    "sha256:96075d973bcc9691feecee157311f4a9d181f775259b650e40baa6818f919a42",
                    "sha256:70e5f08124ebdaa120471ff5dae5e6cc392086b188725f18325fd64e49e00615"
                ]
            }
        },
        "1.13.1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f6dd45c489e2987b08bda64cb383a216fa82210523123f4875339af626e09cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dca5f319ac2812290a185cc40a87e0c8d38ab082f06d36e208dd7493420b2b7a",
            "container_config": {
                "Hostname": "dca5f319ac28",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f6dd45c489e2987b08bda64cb383a216fa82210523123f4875339af626e09cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:51:24.468156844Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:48:16.910411939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:20.43891025Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:51:21.678568478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:22.171782981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:23.934053844Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:51:24.468156844Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:eb6c1ac3de0c2a480cdd1f8a4b0a000364eebfc409ca91fcea055227811056ce",
                    "sha256:57ebd2aba79e9ff2c1fcbd490f9f9029f344a03a16dd0977eb389ecac84f7bd7"
                ]
            }
        },
        "1.13.1-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f6dd45c489e2987b08bda64cb383a216fa82210523123f4875339af626e09cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dca5f319ac2812290a185cc40a87e0c8d38ab082f06d36e208dd7493420b2b7a",
            "container_config": {
                "Hostname": "dca5f319ac28",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f6dd45c489e2987b08bda64cb383a216fa82210523123f4875339af626e09cc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-09-25T22:51:24.468156844Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-09-25T22:48:16.910411939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:20.43891025Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-09-25T22:51:21.678568478Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:22.171782981Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-25T22:51:23.934053844Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-09-25T22:51:24.468156844Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:eb6c1ac3de0c2a480cdd1f8a4b0a000364eebfc409ca91fcea055227811056ce",
                    "sha256:57ebd2aba79e9ff2c1fcbd490f9f9029f344a03a16dd0977eb389ecac84f7bd7"
                ]
            }
        },
        "1.13.1-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:de1b72e197badd3de7621c290ac2a22970bfb693078330390021c757dfda01a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "18a3b6012d454aaff47f265095df0c375acf29c49588cd9b1cfe483bf08f3a0d",
            "container_config": {
                "Hostname": "18a3b6012d45",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:de1b72e197badd3de7621c290ac2a22970bfb693078330390021c757dfda01a3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:08:12.273206564Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:42:27.86238717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cacbc5a59bab479d85dfe3a5aec6e1ad9416d48e0e2f16b6033695dd2a83a853 in / "
                },
                {
                    "created": "2019-10-16T23:42:28.487112567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:21:11.804112644Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:21:30.131756863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:22:12.861490145Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.123257559Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.638239242Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:08:08.686852591Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75' ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:08:09.672336466Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:08:10.147151403Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:08:11.824304477Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:08:12.273206564Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2bafd7624292e54f259adf7a25e44eabebcbbca7c23e052842de5a2b6296578e",
                    "sha256:4e612e2c1ae811ad7c2fdc1f0fd227c4a912e08fed9f6b836e6c94a79a3273f8",
                    "sha256:f9628f754759f2335ca1c84b84581ca7de9555d83dc31000f650735ac7d7feae",
                    "sha256:c69edfccd2ef44e5e0adbbacf2b668852c7e9523c30ac480d847d118e525133e",
                    "sha256:e30f7cb1218539d9f6c4b1cfd1ca1ee5917628573d5fc7df515637583d8ac104",
                    "sha256:69fa8a091d68e28a192e3a475f10394180615b53c78bd87f2a8edae0f1eca32d",
                    "sha256:8b239d1e2fc6230155ceff841b888c6636ce040d6e09091f67c4404fe445a9f9"
                ]
            }
        },
        "1.13.1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8468dcef31534e4b398d2a4ac042f66521655a4f95894c8260df5f54fe08b226",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7b2567b6798d7f15e637ef036cc799ada7a05e144864b5e1ccedd7167dd928e7",
            "container_config": {
                "Hostname": "7b2567b6798d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8468dcef31534e4b398d2a4ac042f66521655a4f95894c8260df5f54fe08b226",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-17T17:09:24.576846832Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:44:51.462160111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17e092081465a34f8597d022a74168de001d3a2d1561a4c7c9ca44c5620c82b2 in / "
                },
                {
                    "created": "2019-10-16T23:44:52.084569481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:30:19.692374989Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:30:28.80288174Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:31:13.674433866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.356975662Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.942831279Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.1",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:09:21.805318378Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='94f874037b82ea5353f4061e543681a0e79657f787437974214629af8407d124' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='7c75d4002321ea4a066dfe13f6dd5168076e9a231317c5afd55e78b86f478e37' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8af8787b7c2a3c0eb3f20f872577fcb6c36098bf725c59c4923921443084c807' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='4bf7a961fda7ad892b8824002036de8c0f290df05df2e8f11252d1f8c77dcd8f' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='72422c68dbed013ee321a05dbb97d9c8d6b2c75f347de707138c2c748fc4aceb' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5f0859ae1037ad7af6cdb6d16f638de908fd9de044d463eeab92b9578d4c7c75' ;; \t\t*) goRelArch='src'; goRelSha256='81f154e69544b9fa92b1475ff5f11e64270260d46e7e36c34aafc8bc96209358'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-17T17:09:22.555311821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:09:22.980272411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T17:09:24.291297543Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-17T17:09:24.576846832Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:15f65c118fb66793954d9048e28391368c87e0a330a1ee03774bf579aaa7f62f",
                    "sha256:cc58db1e2d0fe1cb08f7a044d6cc20a02c8f33d60565ebbfd88b71b34dd936e6",
                    "sha256:26379916f58947f4e7200ea0ef9baba17783e51e64ea1f1e8ee00b2420ef913b",
                    "sha256:df960a00fac2058d18e3f35fe6cfd56e8c56b5d6cb7772547d8d9e688ec3fc52",
                    "sha256:0523ab0827194b6a72ab39b5bcc07506856a003e8d97e27348965ab2788114bd",
                    "sha256:341879d3bc7ebf1216d938e8e65a809d9943781a764e61c7877a38c85a680f9b",
                    "sha256:6a998988e145d59fa12b9b9865601ce66807f7a184f150787399727542db487d"
                ]
            }
        },
        "1.13.10-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36c6fbaa6725e5f2a33f372242e211e1e3ee6c092228cf84673f25edcf17621c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "703ea88fbd44abed15591586cabbb2d36f786915b015d5a34dd2435f655034b8",
            "container_config": {
                "Hostname": "703ea88fbd44",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36c6fbaa6725e5f2a33f372242e211e1e3ee6c092228cf84673f25edcf17621c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T20:04:22.071680389Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-23T20:03:06.216795373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:15.210349185Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T20:04:20.928662874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:21.120498099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:21.850495596Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T20:04:22.071680389Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:370cca9f678a3f9440bd1bee34b46437d6091022c38400012dfdf0d3883896fd",
                    "sha256:edf8f0d393026526d672ce675614c7d5409224a1192787646976a83267c0a5ae"
                ]
            }
        },
        "1.13.10-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c1ab3602e6684248be6c1ab06cfc9b014a1cbd2d38f4999d23c1035e416a6e2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5eab61058f10bd1e45b95c4e63d8757a5add319776b6f5b893e7f0148ce76a38",
            "container_config": {
                "Hostname": "5eab61058f10",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3c1ab3602e6684248be6c1ab06cfc9b014a1cbd2d38f4999d23c1035e416a6e2",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T20:06:03.099957529Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:51:08.101038033Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53e1d2e5396547a2d7109e4b73078911bd069ae5d762f816d90e89ec9731ab13 in / "
                },
                {
                    "created": "2020-04-23T17:51:08.915641448Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:40.547847236Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:04:41.256116148Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-23T20:04:41.44545732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:05:56.455883926Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T20:06:02.035867901Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:06:02.219993299Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:06:02.881200841Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T20:06:03.099957529Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:afc063b56c13993758345fefa00fb2f2cab439dd6e2eb6165ea6887f640ced74",
                    "sha256:0892e7e560092371540181338a01febbf6a8bb5ea9b0404cde5a470413b0dd8f",
                    "sha256:bfe4fe6bb8c3d6bdc14ca8d473cd64245187dfe96833ed8a15b6c8df7d8da758",
                    "sha256:4cf346939fa1c9b4b699ade4898711903c20ae05e9ff8b9abe49af2a536153b6",
                    "sha256:15c8512bd01a6930a99ab3576b47f2d230f5bf4aba0888abca9238bd3e8addea"
                ]
            }
        },
        "1.13.10-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36c6fbaa6725e5f2a33f372242e211e1e3ee6c092228cf84673f25edcf17621c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "703ea88fbd44abed15591586cabbb2d36f786915b015d5a34dd2435f655034b8",
            "container_config": {
                "Hostname": "703ea88fbd44",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:36c6fbaa6725e5f2a33f372242e211e1e3ee6c092228cf84673f25edcf17621c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T20:04:22.071680389Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-23T20:03:06.216795373Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:15.210349185Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T20:04:20.928662874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:21.120498099Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:21.850495596Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T20:04:22.071680389Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:370cca9f678a3f9440bd1bee34b46437d6091022c38400012dfdf0d3883896fd",
                    "sha256:edf8f0d393026526d672ce675614c7d5409224a1192787646976a83267c0a5ae"
                ]
            }
        },
        "1.13.10-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ba91f813373789b34bc47289a60a8ae33ba2cba9b8562241fd5f417ba6c814e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7c1056f8b7879d7121dbc36533fbb8a4cdf75fd9812407730510c74011323014",
            "container_config": {
                "Hostname": "7c1056f8b787",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ba91f813373789b34bc47289a60a8ae33ba2cba9b8562241fd5f417ba6c814e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T11:30:19.215598841Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:06:22.292433829Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3b65bac2545f5751eaa8e9967febbe18955f63efa32d5ca3f8bc209e1a8602de in / "
                },
                {
                    "created": "2020-05-14T23:06:24.721946582Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:00:29.135330057Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:00:35.879898781Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:01:02.494574787Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:28:57.674536143Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:29:59.116574558Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:30:13.639991355Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='8a4cbc9f2b95d114c38f6cbe94a45372d48c604b707db2057c787398dfbf8e7f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c581f11ed49eaf0954f62ffebc123f8c392fc536f01c5a44cb38185701101fc' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='f16f19947855b410e48f395ca488bd39223c7b35e8b69c7f15ec00201e20b572' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='233c9d43fe2fab27ee489efea08b84665aec5855cce95a81dba3846636de5fed' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6b9505388ecafa3cb04d5f51638276b25f7d80c5f70bd74ed72f8013f5006fd9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='41cb67266e809920363ff620e8cabce152ab54bebd6a337e9f903f5c1996ec35' ;; \t\t*) goRelArch='src'; goRelSha256='eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T11:30:18.076567801Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:30:18.280116697Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:30:18.997528634Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T11:30:19.215598841Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b079b8c43ab9505579edde539ef3416cf3c484cf71abbbd87858f8e9b79cd3a",
                    "sha256:69e7d998037f5a1554e7cd975b6e104e7e3beb1a6f6957bcc8c6138d99ef8d48",
                    "sha256:637cd757dab8bb7cf9f013a364aba905be8b83ffdd8b8ef74b45bbdc550a8f64",
                    "sha256:eb4eb8681fbd7e79b1881d8ac35e0f65dfbf8d67db8cfa04ff7688626691a63a",
                    "sha256:7e0e2184eac8976d7859e201906c8f2ceefd3e5c75a977432f66146c4fd2c4c8",
                    "sha256:255f66b828f39729015a5617358fe835a247b337c974d34aadf71987e1a89a3d",
                    "sha256:896839788fd72538d815273ee96a7a8055f933fd646bbf63c189cc43aa61f2a4"
                ]
            }
        },
        "1.13.10-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f52fa3d6b0deb0c291862e26cc531e1c60b2ebcbe6979e7e3fa7fffafad416f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "37030b2b8b6f49fa756d8e1535903dc14a0a37d144702c9e286b3acd409c3018",
            "container_config": {
                "Hostname": "37030b2b8b6f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f52fa3d6b0deb0c291862e26cc531e1c60b2ebcbe6979e7e3fa7fffafad416f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T11:30:44.2477319Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:08:23.832594882Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ad2f356c0ec407aa31085089417aaa9f72a5dc2757ed68a0adf7a432e4bdaa in / "
                },
                {
                    "created": "2020-05-14T23:08:26.272186305Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:03:55.424873895Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:04:00.565234266Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:04:25.928481957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:29:32.67618571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:30:25.984902566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:30:38.960239163Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='8a4cbc9f2b95d114c38f6cbe94a45372d48c604b707db2057c787398dfbf8e7f' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='3c581f11ed49eaf0954f62ffebc123f8c392fc536f01c5a44cb38185701101fc' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='f16f19947855b410e48f395ca488bd39223c7b35e8b69c7f15ec00201e20b572' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='233c9d43fe2fab27ee489efea08b84665aec5855cce95a81dba3846636de5fed' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6b9505388ecafa3cb04d5f51638276b25f7d80c5f70bd74ed72f8013f5006fd9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='41cb67266e809920363ff620e8cabce152ab54bebd6a337e9f903f5c1996ec35' ;; \t\t*) goRelArch='src'; goRelSha256='eb9ccc8bf59ed068e7eff73e154e4f5ee7eec0a47a610fb864e3332a2fdc8b8c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T11:30:43.151835585Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:30:43.355883476Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:30:44.044456904Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T11:30:44.2477319Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3c9e1a3f2b42b10ebd6303060cf96efa299ccdd76994ee0d2942123931e65e07",
                    "sha256:fab6a7f271c8ca9af745a3543f3ca5e5fa1e8a1fa5a470fac3a935b2fd14d25e",
                    "sha256:5a7d9d59991e55c6f9913a37f2a22180882b17f33180985fe2bea54ad7892ba4",
                    "sha256:2d27741078a3875ed31155374d8ca6e8c494e2d62334178798656721b3183848",
                    "sha256:26371ba90a650ae711c6e688fd3cbdede90e86e34b68dc0047a92ef2f79acb92",
                    "sha256:6a6930a3fcd0182ad6bf09ca43a5ea7d1f49a4ae678d66eb6c3f6e021f629138",
                    "sha256:06d6710775e318e15e540bb60faf63bcdcc068f9c614c71c469610114e2a569d"
                ]
            }
        },
        "1.13.11-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bfd168f12c1d909556eda7e04e09aa4dc2b2cfab8febd51d4192a38ff429d22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5f19909fe40b7b412d5af11649730eae5fdfed81f97705dde422c8896f5526f",
            "container_config": {
                "Hostname": "c5f19909fe40",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bfd168f12c1d909556eda7e04e09aa4dc2b2cfab8febd51d4192a38ff429d22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:48:01.915821619Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-15T20:46:49.339930283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:47:55.349305048Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:48:00.872607033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:48:01.071970695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:48:01.684093297Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:48:01.915821619Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:d4bf8862453800d9a32e4a1d735d90cb342ed3060ddb08071579943db258008e",
                    "sha256:1821a84dfb4a755a75a476bb43c62161a5881c8a404113c90d7dad1412f86068"
                ]
            }
        },
        "1.13.11-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae0ceffc041928c8e2b666b46ec7e42315ff5258e2150b542bf19b5addd376d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cbf17f715724c46fbfe161dfd4c39d4ce5352c7b059856e2f77e09de3d3b21bd",
            "container_config": {
                "Hostname": "cbf17f715724",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ae0ceffc041928c8e2b666b46ec7e42315ff5258e2150b542bf19b5addd376d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:49:20.036283116Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:51:08.101038033Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:53e1d2e5396547a2d7109e4b73078911bd069ae5d762f816d90e89ec9731ab13 in / "
                },
                {
                    "created": "2020-04-23T17:51:08.915641448Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:04:40.547847236Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:04:41.256116148Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-15T20:48:07.740265197Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:49:13.74286581Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:49:18.980195813Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:49:19.172518334Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:49:19.825442164Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:49:20.036283116Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:afc063b56c13993758345fefa00fb2f2cab439dd6e2eb6165ea6887f640ced74",
                    "sha256:0892e7e560092371540181338a01febbf6a8bb5ea9b0404cde5a470413b0dd8f",
                    "sha256:bfe4fe6bb8c3d6bdc14ca8d473cd64245187dfe96833ed8a15b6c8df7d8da758",
                    "sha256:4ba27a3205b993da47683f218faa8ea46f9692be9e08ff84a129d4200c6d652d",
                    "sha256:6ab92f52ea3e710029a8e07b69f2fc5df1c5237244e548d22316a64dd706a8b5"
                ]
            }
        },
        "1.13.11-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bfd168f12c1d909556eda7e04e09aa4dc2b2cfab8febd51d4192a38ff429d22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c5f19909fe40b7b412d5af11649730eae5fdfed81f97705dde422c8896f5526f",
            "container_config": {
                "Hostname": "c5f19909fe40",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6bfd168f12c1d909556eda7e04e09aa4dc2b2cfab8febd51d4192a38ff429d22",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:48:01.915821619Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-15T20:46:49.339930283Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:47:55.349305048Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:48:00.872607033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:48:01.071970695Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:48:01.684093297Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:48:01.915821619Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:d4bf8862453800d9a32e4a1d735d90cb342ed3060ddb08071579943db258008e",
                    "sha256:1821a84dfb4a755a75a476bb43c62161a5881c8a404113c90d7dad1412f86068"
                ]
            }
        },
        "1.13.11-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:815b9d7d0241211a41bdaa31866e5fa65e39c92ba77ff09562a71b5aeefca9c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0e8dc1e2145feb00b330d1a4d3124ce0d383dee5a95ecbcde71feeaf09e923fb",
            "container_config": {
                "Hostname": "0e8dc1e2145f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:815b9d7d0241211a41bdaa31866e5fa65e39c92ba77ff09562a71b5aeefca9c6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:46:25.05200311Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:06:22.292433829Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3b65bac2545f5751eaa8e9967febbe18955f63efa32d5ca3f8bc209e1a8602de in / "
                },
                {
                    "created": "2020-05-14T23:06:24.721946582Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:00:29.135330057Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:00:35.879898781Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:01:02.494574787Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:28:57.674536143Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T20:46:02.328103468Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:46:19.809938641Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a4d71ca9e02923fa96669a4b5faf78ee8331b18e7209b09dd87fe763b4838ada' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f762f3acdaf2bb8d32041110022104aa430d96c39a8fc9cf3d4ab74faa607fca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6c81c0ce79be2bd3ac5ea69c709ea9bd588069632ded4ac39d58dadf4d2f93e6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c61ea511a4e82e9a7d31684d33c7b8bbb275e4110490f9a320c8026b76cac4ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d9697e5bcf3a3ac0ba1ff299bb72ffd4957b9893a19a1e65adce683144d795e3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='076f31fb29aa5129151aaf850593b16b4391157870a15a3f0199554a99db0b9b' ;; \t\t*) goRelArch='src'; goRelSha256='89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:46:24.009208282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:46:24.204361326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:46:24.840642019Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:46:25.05200311Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b079b8c43ab9505579edde539ef3416cf3c484cf71abbbd87858f8e9b79cd3a",
                    "sha256:69e7d998037f5a1554e7cd975b6e104e7e3beb1a6f6957bcc8c6138d99ef8d48",
                    "sha256:637cd757dab8bb7cf9f013a364aba905be8b83ffdd8b8ef74b45bbdc550a8f64",
                    "sha256:eb4eb8681fbd7e79b1881d8ac35e0f65dfbf8d67db8cfa04ff7688626691a63a",
                    "sha256:7e0e2184eac8976d7859e201906c8f2ceefd3e5c75a977432f66146c4fd2c4c8",
                    "sha256:6588a545a0ce8008c9eaaf8f39b643fe39cad2fd19595f628c0711feb84e9e0f",
                    "sha256:03ed1cb96095c5eee6854749f5d52c43e158bec1e9ffa33bb97442b904fcbea2"
                ]
            }
        },
        "1.13.11-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:43ea72229247d6cc332419deb0163844204883f2cc848529e0d9bce62fac8f68",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c0ec76feca9e1351ab10495ff4ed7292cdd63ba0304065ce4c306584a0605855",
            "container_config": {
                "Hostname": "c0ec76feca9e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:43ea72229247d6cc332419deb0163844204883f2cc848529e0d9bce62fac8f68",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:46:43.428301112Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:08:23.832594882Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ad2f356c0ec407aa31085089417aaa9f72a5dc2757ed68a0adf7a432e4bdaa in / "
                },
                {
                    "created": "2020-05-14T23:08:26.272186305Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:03:55.424873895Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:04:00.565234266Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:04:25.928481957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:29:32.67618571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T20:46:29.556053337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:46:38.311730081Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a4d71ca9e02923fa96669a4b5faf78ee8331b18e7209b09dd87fe763b4838ada' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='f762f3acdaf2bb8d32041110022104aa430d96c39a8fc9cf3d4ab74faa607fca' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='6c81c0ce79be2bd3ac5ea69c709ea9bd588069632ded4ac39d58dadf4d2f93e6' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c61ea511a4e82e9a7d31684d33c7b8bbb275e4110490f9a320c8026b76cac4ee' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='d9697e5bcf3a3ac0ba1ff299bb72ffd4957b9893a19a1e65adce683144d795e3' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='076f31fb29aa5129151aaf850593b16b4391157870a15a3f0199554a99db0b9b' ;; \t\t*) goRelArch='src'; goRelSha256='89ed1abce25ad003521c125d6583c93c1280de200ad221f961085200a6c00679'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:46:42.396216064Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:46:42.58777678Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:46:43.211944938Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:46:43.428301112Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3c9e1a3f2b42b10ebd6303060cf96efa299ccdd76994ee0d2942123931e65e07",
                    "sha256:fab6a7f271c8ca9af745a3543f3ca5e5fa1e8a1fa5a470fac3a935b2fd14d25e",
                    "sha256:5a7d9d59991e55c6f9913a37f2a22180882b17f33180985fe2bea54ad7892ba4",
                    "sha256:2d27741078a3875ed31155374d8ca6e8c494e2d62334178798656721b3183848",
                    "sha256:26371ba90a650ae711c6e688fd3cbdede90e86e34b68dc0047a92ef2f79acb92",
                    "sha256:ca2ad078d750897eb9b010becb4862c8acf3493f90deca1da3745e62654f92f4",
                    "sha256:083837df8cc325602aa7ebc994b22fabc9c27622c2967ba90b713d5e4eb1b714"
                ]
            }
        },
        "1.13.12-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a99d5e18419eae8e3f75b6129fcefdfaedcdced0de3533bd3770c85919f864f5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25acbec95f1fea24940cccccf2eb7db3c85dc082b7172749c185eaa520a2deac",
            "container_config": {
                "Hostname": "25acbec95f1f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a99d5e18419eae8e3f75b6129fcefdfaedcdced0de3533bd3770c85919f864f5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:58:31.085597864Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:57:18.836335601Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:58:23.842498778Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:58:29.852938454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:58:30.088908383Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:58:30.842369194Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:58:31.085597864Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:7f9e4aef0e94d3e6c122384f1e4684a158b2a08cb8be1768567f07ed372269fd",
                    "sha256:703e071bd2dc3e103d52a9008e11fe0816fc55b5e6d553e38afcfeb5bad78c17"
                ]
            }
        },
        "1.13.12-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:750d9a68574f53e2a344c1f5da90947b11c3d433ee1f235119fa2f7477031272",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "428dd7baf4077c840eeb3d6809c8ebfa1e5ef6057792b33a237b39ae162217c3",
            "container_config": {
                "Hostname": "428dd7baf407",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:750d9a68574f53e2a344c1f5da90947b11c3d433ee1f235119fa2f7477031272",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:59:57.143475933Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:58:37.875877215Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:59:50.719134979Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:59:56.111972935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:59:56.304156367Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:59:56.944308762Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:59:57.143475933Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:95442bf6729fe6849781ef03933fdc14a4d6e696f2cbd232e7dec0a00fca3c09",
                    "sha256:090ead4659b0f2f52a7bf31182e530adea52438861f1f616b0edeee470405059"
                ]
            }
        },
        "1.13.12-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a99d5e18419eae8e3f75b6129fcefdfaedcdced0de3533bd3770c85919f864f5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25acbec95f1fea24940cccccf2eb7db3c85dc082b7172749c185eaa520a2deac",
            "container_config": {
                "Hostname": "25acbec95f1f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a99d5e18419eae8e3f75b6129fcefdfaedcdced0de3533bd3770c85919f864f5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:58:31.085597864Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:57:18.836335601Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:58:23.842498778Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:58:29.852938454Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:58:30.088908383Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:58:30.842369194Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:58:31.085597864Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:7f9e4aef0e94d3e6c122384f1e4684a158b2a08cb8be1768567f07ed372269fd",
                    "sha256:703e071bd2dc3e103d52a9008e11fe0816fc55b5e6d553e38afcfeb5bad78c17"
                ]
            }
        },
        "1.13.12-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af74c86258a6a338f047db1c8d4b36cde735680ef2e06abfade22d4768828074",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0a777d14ebfbaf581c01f1f07e9ff5f623f036e83f1c08b0e14dac0b2ee687dd",
            "container_config": {
                "Hostname": "0a777d14ebfb",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af74c86258a6a338f047db1c8d4b36cde735680ef2e06abfade22d4768828074",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:10:45.199162014Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:42:21.08472675Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:525b5566f1fb9dfef74a4f49170a50bba0f0ed22a8bd627a8f802803236f1db8 in / "
                },
                {
                    "created": "2020-06-09T01:42:23.658237375Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:09:36.069422795Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:09:41.099901305Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:10:05.066539803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:56:53.64793887Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:07:08.503590269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:10:05.749088071Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:10:29.514299324Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9cacc6653563771b458c13056265aa0c21b8a23ca9408278484e4efde4160618' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='552db731a120d341a1756c6ce0b1029cb5f5c756c09de9f45273893268d19c23' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='7a8b4e7841d978c95dae8ef53e19811ee2d5c595a1c5ec7afed74bb8f71588b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='625d9cdb25ba55e1afba9490c79c55767117fa272e067f81643d22268d51308a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='97d762a62eae2e1f4d89ce09a89407a63e12c22d5c0fb952e409b323927cd38e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8dd2d50666176cbe5cab7557081acb0f380cef2240e18d05db7faffc03d8f356' ;; \t\t*) goRelArch='src'; goRelSha256='17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:10:42.477209131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:10:42.950998189Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:10:44.591976016Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:10:45.199162014Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e34c495c7e305fb4084eb3ba0c9aede80263b09cb748a12b4b0cdd27afd419a4",
                    "sha256:95ba3060bee106074deeaa6efb3fe93c3e12559842f1275e6b0515dd41c03eb5",
                    "sha256:ead0fd0b574dc475cbe24805ef1b16800d5f99e18f9eb85a0174d13fbb0c831d",
                    "sha256:c9bb55ccccfca5057272739a7e89933275b0b58e399582a220a7a34034ca1c76",
                    "sha256:70a787b6331f00e08799596e0c46885646be01f3e7a9bbc2e1236af629f91f0d",
                    "sha256:9dc638587db9aaecea9dc11773e5c9c456130073888faa1eeea35ed573275eab",
                    "sha256:38ba2aa7ba086b9a111739e0d4da7871aca031eb474eb7e50c9aa59bea05ce92"
                ]
            }
        },
        "1.13.12-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00898bed05fe4dfa2db66ab672ceb20a026e9a64fe561ee4e30950a51fd0172e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25966da0ef1ceb4fb5c4964ffbcb7f47e3755c1549a3840991daaf2e9ead78fd",
            "container_config": {
                "Hostname": "25966da0ef1c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00898bed05fe4dfa2db66ab672ceb20a026e9a64fe561ee4e30950a51fd0172e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-23T21:11:29.248498343Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:44:05.164487785Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce4b8c76522cbe8599502985424901aee9d30d37296761d47dbcb9b0770f7aa2 in / "
                },
                {
                    "created": "2020-06-09T01:44:08.233927505Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:13:24.25262502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:13:28.631359651Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:13:54.156684337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:58:25.803725287Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:09:08.41560371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:10:54.801720474Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:11:14.722983702Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='9cacc6653563771b458c13056265aa0c21b8a23ca9408278484e4efde4160618' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='552db731a120d341a1756c6ce0b1029cb5f5c756c09de9f45273893268d19c23' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='7a8b4e7841d978c95dae8ef53e19811ee2d5c595a1c5ec7afed74bb8f71588b8' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='625d9cdb25ba55e1afba9490c79c55767117fa272e067f81643d22268d51308a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='97d762a62eae2e1f4d89ce09a89407a63e12c22d5c0fb952e409b323927cd38e' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8dd2d50666176cbe5cab7557081acb0f380cef2240e18d05db7faffc03d8f356' ;; \t\t*) goRelArch='src'; goRelSha256='17ba2c4de4d78793a21cc659d9907f4356cd9c8de8b7d0899cdedcef712eba34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-06-23T21:11:26.881119503Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:11:27.359788836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T21:11:28.784986149Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-23T21:11:29.248498343Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2c98919d330c2fbdf952180eb94af6ab93836482a5e74dc238ec6060abe6a77",
                    "sha256:f05945093c2b7f0ea547a8e994d0ba3d3f92cde2872edb0be6a38215fdb23e71",
                    "sha256:a459d0c1c28b387f1bcbf08546ac4c4d1469ea0f5defebbe90b146c24c27bdc3",
                    "sha256:45473c26d94be3fc63a6649c5c0a5f43a513079c17f0e9298649274fdda388c8",
                    "sha256:bdf94b8a07de978153bb3f28946de7961e173deb38e9ca78d8d4cec19ad0514a",
                    "sha256:57a5d0f7bed029a1d0e7734a008ea9fa65ed85859173f77eb4037b0e652e75af",
                    "sha256:b9b4e686615a7f9256d4df8c1ef9ee49d4d28d3cca7ea41961bd19239b325b5d"
                ]
            }
        },
        "1.13.13-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b01342f8342ae848f48c26243214a08dc7e5aabff902b558abde9c40b790455",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f281a36bd285e46939bd3682a798f312d613765c4840f367e19d7d895c11b63b",
            "container_config": {
                "Hostname": "f281a36bd285",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b01342f8342ae848f48c26243214a08dc7e5aabff902b558abde9c40b790455",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:48:14.839560383Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:46:54.899739558Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:48:08.375488311Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:48:13.784031895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:48:13.976015672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:48:14.612658195Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:48:14.839560383Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:9e3d1fcae938e5a8495ecc3711cfefb8576265bbadc3793a405cb4d6415c63ea",
                    "sha256:974ebd903b477ce73a977ab00d39c6f210c3b528aee0194440e50587e1421648"
                ]
            }
        },
        "1.13.13-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77623ed4fb2e225e690aeb3d52cf0ed979f28cb7ee7d9605f0de6fe99955788c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8b69cf35274b74272bd328f3303f3d3f0b7237ab0f0807fecb208c9bd179861d",
            "container_config": {
                "Hostname": "8b69cf35274b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:77623ed4fb2e225e690aeb3d52cf0ed979f28cb7ee7d9605f0de6fe99955788c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:49:57.639754907Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:48:27.824304938Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:51.223584667Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:49:56.54457899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:56.745621568Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:49:57.441457452Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:49:57.639754907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:fcca8da36116670ff613c4f8efe8ff8699b42b7d84cbbc366707bececa1ef0dd",
                    "sha256:f4e6411a3d61b8b751d7e9e3ba03d05678400560f6f2b2a9fcecfb093815201a"
                ]
            }
        },
        "1.13.13-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b01342f8342ae848f48c26243214a08dc7e5aabff902b558abde9c40b790455",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f281a36bd285e46939bd3682a798f312d613765c4840f367e19d7d895c11b63b",
            "container_config": {
                "Hostname": "f281a36bd285",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b01342f8342ae848f48c26243214a08dc7e5aabff902b558abde9c40b790455",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:48:14.839560383Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-14T18:46:54.899739558Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:48:08.375488311Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-14T18:48:13.784031895Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:48:13.976015672Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:48:14.612658195Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:48:14.839560383Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:9e3d1fcae938e5a8495ecc3711cfefb8576265bbadc3793a405cb4d6415c63ea",
                    "sha256:974ebd903b477ce73a977ab00d39c6f210c3b528aee0194440e50587e1421648"
                ]
            }
        },
        "1.13.13-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b8e1458201cce8a0550c92de83236eb3fc9df3978f774078f0277901b33c178",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2440ee6f0ee27d10c4c65a772656cc27e709e71172516a636287165b5dff644b",
            "container_config": {
                "Hostname": "2440ee6f0ee2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b8e1458201cce8a0550c92de83236eb3fc9df3978f774078f0277901b33c178",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:46:21.365747427Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:42:21.08472675Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:525b5566f1fb9dfef74a4f49170a50bba0f0ed22a8bd627a8f802803236f1db8 in / "
                },
                {
                    "created": "2020-06-09T01:42:23.658237375Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:09:36.069422795Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:09:41.099901305Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:10:05.066539803Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:56:53.64793887Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:07:08.503590269Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:01.400326201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:15.545736387Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b8573c2335bebef53e819ab8d323456dc2b94838bebdbd8cc6623bb8a6d77b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='621081207d4d8549d33e2bc0623e50195152f40f3132327efecaa372f080af55' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='999fcd9090b164062e166523086a54f4152549c41f627ff5ccad3c3ec2da0657' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='efcadf5d927558429ce1156e12943639e0f33d4b5b75919683ec2529ffb8c3e1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f816b5ac28322af6692fb61d6e12b11697c4927eec42226ebcf8ef32cee5bf9b' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='333a437e579f7a8e8188c6431eb13f31517d72310b6583d1df69022e09965ce8' ;; \t\t*) goRelArch='src'; goRelSha256='ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T18:46:20.240267917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:20.423790193Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:21.137495997Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:46:21.365747427Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e34c495c7e305fb4084eb3ba0c9aede80263b09cb748a12b4b0cdd27afd419a4",
                    "sha256:95ba3060bee106074deeaa6efb3fe93c3e12559842f1275e6b0515dd41c03eb5",
                    "sha256:ead0fd0b574dc475cbe24805ef1b16800d5f99e18f9eb85a0174d13fbb0c831d",
                    "sha256:c9bb55ccccfca5057272739a7e89933275b0b58e399582a220a7a34034ca1c76",
                    "sha256:70a787b6331f00e08799596e0c46885646be01f3e7a9bbc2e1236af629f91f0d",
                    "sha256:bc99ff4ebe176fca3c4d9c3122ac7127b09e2b4aedf65e3f223316c5c20ae51b",
                    "sha256:0ab40a4c8c5a57182981e000115936901bd9dec5b1552528c3083035663becc3"
                ]
            }
        },
        "1.13.13-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1e5025778ecbf9cc7629130852ec248e37022cc4021fa7da96d6912ae0b65079",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b4091fd41787f91f3e858054a4569a172ab1378380f5c51ed4d46b54484e236b",
            "container_config": {
                "Hostname": "b4091fd41787",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1e5025778ecbf9cc7629130852ec248e37022cc4021fa7da96d6912ae0b65079",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-14T18:46:48.581190126Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:44:05.164487785Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce4b8c76522cbe8599502985424901aee9d30d37296761d47dbcb9b0770f7aa2 in / "
                },
                {
                    "created": "2020-06-09T01:44:08.233927505Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:13:24.25262502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:13:28.631359651Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:13:54.156684337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:58:25.803725287Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:09:08.41560371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:28.268302048Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:42.881723885Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b8573c2335bebef53e819ab8d323456dc2b94838bebdbd8cc6623bb8a6d77b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='621081207d4d8549d33e2bc0623e50195152f40f3132327efecaa372f080af55' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='999fcd9090b164062e166523086a54f4152549c41f627ff5ccad3c3ec2da0657' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='efcadf5d927558429ce1156e12943639e0f33d4b5b75919683ec2529ffb8c3e1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='f816b5ac28322af6692fb61d6e12b11697c4927eec42226ebcf8ef32cee5bf9b' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='333a437e579f7a8e8188c6431eb13f31517d72310b6583d1df69022e09965ce8' ;; \t\t*) goRelArch='src'; goRelSha256='ab7e44461e734ce1fd5f4f82c74c6d236e947194d868514d48a2b1ea73d25137'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-14T18:46:47.340653388Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:47.57799698Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-14T18:46:48.308740323Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-14T18:46:48.581190126Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2c98919d330c2fbdf952180eb94af6ab93836482a5e74dc238ec6060abe6a77",
                    "sha256:f05945093c2b7f0ea547a8e994d0ba3d3f92cde2872edb0be6a38215fdb23e71",
                    "sha256:a459d0c1c28b387f1bcbf08546ac4c4d1469ea0f5defebbe90b146c24c27bdc3",
                    "sha256:45473c26d94be3fc63a6649c5c0a5f43a513079c17f0e9298649274fdda388c8",
                    "sha256:bdf94b8a07de978153bb3f28946de7961e173deb38e9ca78d8d4cec19ad0514a",
                    "sha256:9a91440c655f234fb22407ee873ba609aa32fd6f752e600098b375b839a5b2c0",
                    "sha256:6abff730a6f0c5dbdd41ba9440d5953fd0fcfcf53d5350bf945e8785684b83c3"
                ]
            }
        },
        "1.13.14-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:85001206e4108c04d068a630e0999aa38ed5186c8fbde9a1e348e035b72bbf1d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c2d2074d1d16b4afa30c5f9cd5e51ad5b3ccb6dd1fd19aa0ac4633bdaf696ba",
            "container_config": {
                "Hostname": "0c2d2074d1d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:85001206e4108c04d068a630e0999aa38ed5186c8fbde9a1e348e035b72bbf1d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:48:25.092023305Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T02:47:05.775813001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:48:18.459291008Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T02:48:24.043926033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:48:24.228005982Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:48:24.896288173Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:48:25.092023305Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:309d8dd6167e10f8e27621043e017e6bfa209481b92739e87c257ba8989bb496",
                    "sha256:f8e196b3f5a53f00a93c7706a0bfd873a3569cd838f2113f629823bb7a410df5"
                ]
            }
        },
        "1.13.14-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e3b456b907a9e8dbb917f589b3a462f62615cfc6fa78d56012e01f92ad44c7f6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "35cb6ad474987e7943149b8f011d968fe97d8aaaf9a6bea21de3505761c6d86d",
            "container_config": {
                "Hostname": "35cb6ad47498",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e3b456b907a9e8dbb917f589b3a462f62615cfc6fa78d56012e01f92ad44c7f6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:49:57.561407172Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T02:48:37.968288707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:49:51.014887857Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T02:49:56.512104751Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:49:56.684731874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:49:57.331434603Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:49:57.561407172Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:fdfa29442b1054fe545063af715f11e5a70b63fb82452de99354d718ff3c6aab",
                    "sha256:be641831492fed3b5238392813007f94c98e230541778a404c01de6d29cf99ef"
                ]
            }
        },
        "1.13.14-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:85001206e4108c04d068a630e0999aa38ed5186c8fbde9a1e348e035b72bbf1d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0c2d2074d1d16b4afa30c5f9cd5e51ad5b3ccb6dd1fd19aa0ac4633bdaf696ba",
            "container_config": {
                "Hostname": "0c2d2074d1d1",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:85001206e4108c04d068a630e0999aa38ed5186c8fbde9a1e348e035b72bbf1d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:48:25.092023305Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-07-17T02:47:05.775813001Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:48:18.459291008Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-07-17T02:48:24.043926033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:48:24.228005982Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:48:24.896288173Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:48:25.092023305Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:309d8dd6167e10f8e27621043e017e6bfa209481b92739e87c257ba8989bb496",
                    "sha256:f8e196b3f5a53f00a93c7706a0bfd873a3569cd838f2113f629823bb7a410df5"
                ]
            }
        },
        "1.13.14-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da1c72f9a2f99d7886eca03498fe7473e0d7a06f97161ba9d45748f22523da3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c965b6cb9a7c4fc69dcdd7480c7b616bf749ccfe665ed66cf4d8858b7c5157bb",
            "container_config": {
                "Hostname": "c965b6cb9a7c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da1c72f9a2f99d7886eca03498fe7473e0d7a06f97161ba9d45748f22523da3c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-04T09:34:45.13003523Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T01:17:02.15514438Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07519836baf21317676c799c0905c76bf767fe8caa1fa718c0dfe0a152577ee8 in / "
                },
                {
                    "created": "2020-08-04T01:17:04.687414181Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T02:22:15.47227481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T02:22:20.468868886Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T02:22:43.609561676Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T09:33:25.577089055Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T09:33:27.883883924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T09:34:27.92226424Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T09:34:39.468224316Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-04T09:34:43.97831647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T09:34:44.182244429Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T09:34:44.891384605Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-04T09:34:45.13003523Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:17143058c85d8d7c96b85560c925be3c9630f1788530827b9232998be6ba3752",
                    "sha256:ce48a04479ae6911db6b6accd8761390d89c8a670e59b4d75285a489498db6f3",
                    "sha256:e107927fb0963b1322c92c15fde25d6c446c3e0272201b915ec92408da2e792e",
                    "sha256:b731a350796d8e20d95d7f1fb9c306f4f1bea4e2c126f5781587c20c9773ee47",
                    "sha256:844fc9aeba7a4f97f3e8a7c0febd973527ae241e41ffa991b214870cba34a915",
                    "sha256:96287f3c972bf31916a068ab583eb86b6a5e45d8a67a9152f329dac902987418",
                    "sha256:aded9a515deca403ce10097ff9d45bfbc448b0b1778aaa2c4b5fa1121c7ef9d1"
                ]
            }
        },
        "1.13.14-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:27b0bd28053e29fa44789c1abe2ce91ea2144853789c85676b76ffdf05fb8fb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "fb1bdeacb2daf4534b2f30d0c15037c14e7271c0f3a217ac247fa71699c43b80",
            "container_config": {
                "Hostname": "fb1bdeacb2da",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:27b0bd28053e29fa44789c1abe2ce91ea2144853789c85676b76ffdf05fb8fb8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:46:58.203789358Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:44:05.164487785Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce4b8c76522cbe8599502985424901aee9d30d37296761d47dbcb9b0770f7aa2 in / "
                },
                {
                    "created": "2020-06-09T01:44:08.233927505Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:13:24.25262502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:13:28.631359651Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:13:54.156684337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:58:25.803725287Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:09:08.41560371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:34.944232479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:52.766790761Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='32617db984b18308f2b00279c763bff060d2739229cb8037217a49c9e691b46a' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='1a238daa3cd00611145d66a5577ea57bf90266443d1a2bef076ca74302a02c48' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='ee5f84e3bc0548e4963344a887f684458bec1e5a822d0d413d1c6925b784a16e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='537bb1769827852673ab96ce5f7676c162bba3d5394e6828733b53b4c9449c11' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='c91a424a4738993d2e77bb0f134ad6c5af1aa5b785f5a3a8a642d50a36de7471' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='8c4cf33742a1374644cbade2db39bbeebf50bb044b2409c48bdf0526f96fcce5' ;; \t\t*) goRelArch='src'; goRelSha256='197333e97290e9ea8796f738d61019dcba1c377c2f3961fd6a114918ecc7ab06'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-17T02:46:57.128465223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:57.319714203Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:46:57.984603685Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:46:58.203789358Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2c98919d330c2fbdf952180eb94af6ab93836482a5e74dc238ec6060abe6a77",
                    "sha256:f05945093c2b7f0ea547a8e994d0ba3d3f92cde2872edb0be6a38215fdb23e71",
                    "sha256:a459d0c1c28b387f1bcbf08546ac4c4d1469ea0f5defebbe90b146c24c27bdc3",
                    "sha256:45473c26d94be3fc63a6649c5c0a5f43a513079c17f0e9298649274fdda388c8",
                    "sha256:bdf94b8a07de978153bb3f28946de7961e173deb38e9ca78d8d4cec19ad0514a",
                    "sha256:511033c3173ba046d9b6f03276b6a4a0dc2c11acebaa32a0078821465e2eec65",
                    "sha256:80225a72d9924380119130280fe1e1b34dad3a29dfc0e949d18d4c75215debec"
                ]
            }
        },
        "1.13.15-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c46e632aa7945b718a4cfbb4049001227d4b98a6957a88a16b8789c351823ff2",
            "container_config": {
                "Hostname": "c46e632aa794",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:58:20.998068768Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:57:10.173818836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:14.229681914Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:58:19.99414637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.17789563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.786494698Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:58:20.998068768Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:9746430aeba85d6b41c52794367a90b459d91774c673ca74f2272d0c02ddb148",
                    "sha256:0901a79eefddf73bbb88ba240e278136ec73ac6b2b23f7a99631d2a3559f527d"
                ]
            }
        },
        "1.13.15-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:632c762bbf86a2506b9b112defed548087850138a2c1ba32bb0e8905e5dfb37a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1edd4af0f7444b571c333b7640b006d1ae18c861fd511f8c8757b727e67a6d63",
            "container_config": {
                "Hostname": "1edd4af0f744",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:632c762bbf86a2506b9b112defed548087850138a2c1ba32bb0e8905e5dfb37a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:59:41.961962827Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:58:28.718057787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:59:35.287197308Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:59:40.870181745Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:59:41.0859615Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:59:41.758611341Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:59:41.961962827Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:7bf91fcc1a9ee5ce9188e2e8fa728c0a248ef2598290cc75ca16ebfdd3eac69e",
                    "sha256:4312cb60949a024a746af5d9f367eb896a337c4c77c96529e73642b51d48fb77"
                ]
            }
        },
        "1.13.15-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c46e632aa7945b718a4cfbb4049001227d4b98a6957a88a16b8789c351823ff2",
            "container_config": {
                "Hostname": "c46e632aa794",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c7a2e37fd1b6eb581616ff6f14993efd6dbb36534a66327672a4305d1883eb80",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:58:20.998068768Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-06T19:57:10.173818836Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:14.229681914Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-08-06T19:58:19.99414637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.17789563Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:58:20.786494698Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:58:20.998068768Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:9746430aeba85d6b41c52794367a90b459d91774c673ca74f2272d0c02ddb148",
                    "sha256:0901a79eefddf73bbb88ba240e278136ec73ac6b2b23f7a99631d2a3559f527d"
                ]
            }
        },
        "1.13.15-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:699bf372f5fb4fef607006adce596c9f4d959728a23070d574e5564466b17ce9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ba1b4f3119ffa4c1f020fbccdcd3dbf4bd95e65aaa4471706eaa65eaa5dccc9a",
            "container_config": {
                "Hostname": "ba1b4f3119ff",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:699bf372f5fb4fef607006adce596c9f4d959728a23070d574e5564466b17ce9",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-08-06T19:57:05.373817749Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-08-04T01:17:02.15514438Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:07519836baf21317676c799c0905c76bf767fe8caa1fa718c0dfe0a152577ee8 in / "
                },
                {
                    "created": "2020-08-04T01:17:04.687414181Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-04T02:22:15.47227481Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T02:22:20.468868886Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-08-04T02:22:43.609561676Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T09:33:25.577089055Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-08-04T09:33:27.883883924Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:43.285567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.15",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:56:59.687375607Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='01cc3ddf6273900eba3e2bf311238828b7168b822bb57a9ccab4d7aa2acd6028' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='c58eacae1745769e77328aec08e0e3b4da1b4e99e1153046b1b00ae0b3338d42' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5c59e3f0aeaf6e939790152a8bfabb91d70c9787afb7aee06aef9bd4411c551' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='1a63e97b6f1a673966d6a4f4f7f9c724fdd68bdeac11425bf8a39c7a24ddc0a7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='bee55510a87bd366381df0be4736fd5cc89523228f9ca20eb1687f59e80ca029' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6c370800d470ae116a9521f5439b3fa6271f06a6d4c2a18913c8c6226d78fe4b' ;; \t\t*) goRelArch='src'; goRelSha256='5fb43171046cf8784325e67913d55f88a683435071eef8e9da1aa8a1588fcf5d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-08-06T19:57:04.333792753Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:57:04.525472657Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-06T19:57:05.162120233Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-08-06T19:57:05.373817749Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:17143058c85d8d7c96b85560c925be3c9630f1788530827b9232998be6ba3752",
                    "sha256:ce48a04479ae6911db6b6accd8761390d89c8a670e59b4d75285a489498db6f3",
                    "sha256:e107927fb0963b1322c92c15fde25d6c446c3e0272201b915ec92408da2e792e",
                    "sha256:b731a350796d8e20d95d7f1fb9c306f4f1bea4e2c126f5781587c20c9773ee47",
                    "sha256:844fc9aeba7a4f97f3e8a7c0febd973527ae241e41ffa991b214870cba34a915",
                    "sha256:b4d188ca18288ba7885f8145810350675fe6d5891539d693e99252ff0b2b79f2",
                    "sha256:1f605e576ac1657d2be1426787eccb8c87263df38a19366ad9b8c4aa8c4714a6"
                ]
            }
        },
        "1.13.2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ed4e9cb4c254d973dc3b611d526d02d50c868ae264847951d5c2e7bcb69db30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c28d882fc3267f5a2a1934fb0f575f1f42d244ebc956c74e2af4501a7e6b97f2",
            "container_config": {
                "Hostname": "c28d882fc326",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ed4e9cb4c254d973dc3b611d526d02d50c868ae264847951d5c2e7bcb69db30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:24:25.891568816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:22:04.9230337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:24:23.176938568Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:24:23.99522458Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:24:24.266372349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:24:25.53523628Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:24:25.891568816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:f4fde60cd769567b278d048e41fd63de26403934af138759acc1d4422312b012",
                    "sha256:de772d928b4847f17595ae246db72e9ca379a9f726dcc86424a4f90e91ca3df1"
                ]
            }
        },
        "1.13.2-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ed4e9cb4c254d973dc3b611d526d02d50c868ae264847951d5c2e7bcb69db30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c28d882fc3267f5a2a1934fb0f575f1f42d244ebc956c74e2af4501a7e6b97f2",
            "container_config": {
                "Hostname": "c28d882fc326",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ed4e9cb4c254d973dc3b611d526d02d50c868ae264847951d5c2e7bcb69db30",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:24:25.891568816Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:22:04.9230337Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:24:23.176938568Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:24:23.99522458Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:24:24.266372349Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:24:25.53523628Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:24:25.891568816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:f4fde60cd769567b278d048e41fd63de26403934af138759acc1d4422312b012",
                    "sha256:de772d928b4847f17595ae246db72e9ca379a9f726dcc86424a4f90e91ca3df1"
                ]
            }
        },
        "1.13.2-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a66dc6debd35f194873435f9615284291fd14bcbb5d0aa7e0efec0bdda8af31e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "180f99829b5255c92b3e17e4d351ae9e7db0c2c4ac7ef4e1bca1ab6a0e91f08e",
            "container_config": {
                "Hostname": "180f99829b52",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a66dc6debd35f194873435f9615284291fd14bcbb5d0aa7e0efec0bdda8af31e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:16:03.13774215Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:42:27.86238717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cacbc5a59bab479d85dfe3a5aec6e1ad9416d48e0e2f16b6033695dd2a83a853 in / "
                },
                {
                    "created": "2019-10-16T23:42:28.487112567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:21:11.804112644Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:21:30.131756863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:22:12.861490145Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.123257559Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T23:15:40.060899033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:16:00.723246031Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='293b41a6ccd735eebcfb4094b6931bfd187595555cecf3e4386e9e119220c0b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2e90b5d08a177be14938a905f7b91e9b17052318b5ea0e6d7c0a83af252421' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a2d27f341d6b7968f9da229990aa9ab7a6d4bd1c722945be11576a09eb538482' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='468f116889631405da0c89b1765985e8bbeddbf8642c2a552a81f0bfbe58ab55' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ffcc3651fce34fc6418e33836d5417c0e6b713fda99033259e67538fa802900a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='dbed59db3e4f57df7c86120be37bdbf3516891214174b771cff40d81ba8577e2' ;; \t\t*) goRelArch='src'; goRelSha256='1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:16:01.461347713Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:16:01.779304411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:16:02.846319698Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:16:03.13774215Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2bafd7624292e54f259adf7a25e44eabebcbbca7c23e052842de5a2b6296578e",
                    "sha256:4e612e2c1ae811ad7c2fdc1f0fd227c4a912e08fed9f6b836e6c94a79a3273f8",
                    "sha256:f9628f754759f2335ca1c84b84581ca7de9555d83dc31000f650735ac7d7feae",
                    "sha256:c69edfccd2ef44e5e0adbbacf2b668852c7e9523c30ac480d847d118e525133e",
                    "sha256:e30f7cb1218539d9f6c4b1cfd1ca1ee5917628573d5fc7df515637583d8ac104",
                    "sha256:4e4ddb9e47a5172813a7cd4bb2f833ce4f294884c247899610c51d304a2ac1d0",
                    "sha256:1e15e034877724f080dfb27c746ca2dc56441d70a4680ad9316a8ef5bed088b2"
                ]
            }
        },
        "1.13.2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a834291f5d813a0c74af2475cf2e5e01c696327d439ad780baa668c9dab9bf41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f99ac299386e4e711a6ed437546268f090c24f2a02cfccc784b501dad46e937c",
            "container_config": {
                "Hostname": "f99ac299386e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a834291f5d813a0c74af2475cf2e5e01c696327d439ad780baa668c9dab9bf41",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T23:16:26.526246788Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:44:51.462160111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17e092081465a34f8597d022a74168de001d3a2d1561a4c7c9ca44c5620c82b2 in / "
                },
                {
                    "created": "2019-10-16T23:44:52.084569481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:30:19.692374989Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:30:28.80288174Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:31:13.674433866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.356975662Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T23:16:10.160257901Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.2",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:16:24.1482129Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='293b41a6ccd735eebcfb4094b6931bfd187595555cecf3e4386e9e119220c0b7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='6f2e90b5d08a177be14938a905f7b91e9b17052318b5ea0e6d7c0a83af252421' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a2d27f341d6b7968f9da229990aa9ab7a6d4bd1c722945be11576a09eb538482' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='468f116889631405da0c89b1765985e8bbeddbf8642c2a552a81f0bfbe58ab55' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='ffcc3651fce34fc6418e33836d5417c0e6b713fda99033259e67538fa802900a' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='dbed59db3e4f57df7c86120be37bdbf3516891214174b771cff40d81ba8577e2' ;; \t\t*) goRelArch='src'; goRelSha256='1ea68e01472e4276526902b8817abd65cf84ed921977266f0c11968d5e915f44'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T23:16:24.660023186Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:16:24.938515905Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T23:16:26.140453904Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T23:16:26.526246788Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:15f65c118fb66793954d9048e28391368c87e0a330a1ee03774bf579aaa7f62f",
                    "sha256:cc58db1e2d0fe1cb08f7a044d6cc20a02c8f33d60565ebbfd88b71b34dd936e6",
                    "sha256:26379916f58947f4e7200ea0ef9baba17783e51e64ea1f1e8ee00b2420ef913b",
                    "sha256:df960a00fac2058d18e3f35fe6cfd56e8c56b5d6cb7772547d8d9e688ec3fc52",
                    "sha256:0523ab0827194b6a72ab39b5bcc07506856a003e8d97e27348965ab2788114bd",
                    "sha256:303d3bb89012e3b5a19818646a18a4a8d961315ee9ac27463a92fb2dd3c276f1",
                    "sha256:e1e85725965860905252b521b23ffab3426284a6e117bffb7d738dcd36786868"
                ]
            }
        },
        "1.13.3-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94fca6931e26b0c8bf6dbad4613f616759b4a2ccc7d166c494f089dfd6434966",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "38e53ca07a5bb9942ea4fc965613d4e6a670f621d3cf6617916b0912048db0b2",
            "container_config": {
                "Hostname": "38e53ca07a5b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94fca6931e26b0c8bf6dbad4613f616759b4a2ccc7d166c494f089dfd6434966",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:27:30.56528187Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:24:46.645011068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:27:26.54019814Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:27:27.705653686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:27:28.448898743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:27:30.130924623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:27:30.56528187Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:501eda7fbb6ad047c4a5f51212c66a75e8ac45fd459df1d12cd44500f4ca3115",
                    "sha256:c25c56d3157a9b6e41b121acd53b86c9aab3e3e60f8eec16f055118ab5c11391"
                ]
            }
        },
        "1.13.3-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94fca6931e26b0c8bf6dbad4613f616759b4a2ccc7d166c494f089dfd6434966",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "38e53ca07a5bb9942ea4fc965613d4e6a670f621d3cf6617916b0912048db0b2",
            "container_config": {
                "Hostname": "38e53ca07a5b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94fca6931e26b0c8bf6dbad4613f616759b4a2ccc7d166c494f089dfd6434966",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-21T17:27:30.56528187Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-10-21T17:24:46.645011068Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:27:26.54019814Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-21T17:27:27.705653686Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:27:28.448898743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:27:30.130924623Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-21T17:27:30.56528187Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:501eda7fbb6ad047c4a5f51212c66a75e8ac45fd459df1d12cd44500f4ca3115",
                    "sha256:c25c56d3157a9b6e41b121acd53b86c9aab3e3e60f8eec16f055118ab5c11391"
                ]
            }
        },
        "1.13.3-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dfc4b13f632ed00fea9e48d50ee3f7b35aaeb6111e7a04da1284e2f88555752a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9578f55f4b4610ea0a23ba6c2d30a6f777b70a4afe47668794c0506eea67b74c",
            "container_config": {
                "Hostname": "9578f55f4b46",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dfc4b13f632ed00fea9e48d50ee3f7b35aaeb6111e7a04da1284e2f88555752a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:41:57.783525874Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:42:27.86238717Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cacbc5a59bab479d85dfe3a5aec6e1ad9416d48e0e2f16b6033695dd2a83a853 in / "
                },
                {
                    "created": "2019-10-16T23:42:28.487112567Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:21:11.804112644Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:21:30.131756863Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:22:12.861490145Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:07:47.123257559Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:41:33.45467027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:41:54.653680121Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f15d6aa4098cd53ec5cb48d1a1e554d062b2263a03985d50c2568757d966dc6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9fa65ae42665baff53802091b49b83af6f2e397986b6cbea2ae30e2c7ee0f2f2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c68ebb127924ee753d05fcd4cc893e3409a6754e8884bb04e5248e9b5849f6ba' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2373b60d7f7b4825b1d0ec195079833a3dac72ddd55b207ee22b0032b1a658d9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='9241ce5bf362b7066c90da5abc4c85ec7b4054637e1a8a01b8cc83281e228b7e' ;; \t\t*) goRelArch='src'; goRelSha256='4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:41:55.568143746Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:41:56.067144123Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:41:57.402948433Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:41:57.783525874Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2bafd7624292e54f259adf7a25e44eabebcbbca7c23e052842de5a2b6296578e",
                    "sha256:4e612e2c1ae811ad7c2fdc1f0fd227c4a912e08fed9f6b836e6c94a79a3273f8",
                    "sha256:f9628f754759f2335ca1c84b84581ca7de9555d83dc31000f650735ac7d7feae",
                    "sha256:c69edfccd2ef44e5e0adbbacf2b668852c7e9523c30ac480d847d118e525133e",
                    "sha256:e30f7cb1218539d9f6c4b1cfd1ca1ee5917628573d5fc7df515637583d8ac104",
                    "sha256:d112d02b85bc00de74feba1569637cbcf39e0ec4c87244585177b5208ad0333a",
                    "sha256:23b795d84b5947688461a8b6de31d13bbaaa5801e1b01d53c3883bea4cf2ba4b"
                ]
            }
        },
        "1.13.3-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d909ebc86fea2724197fd7f4960461fb8ef7c45d5ab63f1223a00650783a200b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ddf7be0e35a2cd9e84f6731980dfed1950d775cf85390ed0b97764008204d31b",
            "container_config": {
                "Hostname": "ddf7be0e35a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d909ebc86fea2724197fd7f4960461fb8ef7c45d5ab63f1223a00650783a200b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-10-18T04:42:33.828615422Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-16T23:44:51.462160111Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17e092081465a34f8597d022a74168de001d3a2d1561a4c7c9ca44c5620c82b2 in / "
                },
                {
                    "created": "2019-10-16T23:44:52.084569481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-17T00:30:19.692374989Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T00:30:28.80288174Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-10-17T00:31:13.674433866Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-17T17:08:58.356975662Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T04:42:04.216342807Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.3",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:42:21.040147621Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0804bf02020dceaa8a7d7275ee79f7a142f1996bfd0c39216ccb405f93f994c0' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f15d6aa4098cd53ec5cb48d1a1e554d062b2263a03985d50c2568757d966dc6' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='9fa65ae42665baff53802091b49b83af6f2e397986b6cbea2ae30e2c7ee0f2f2' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='c68ebb127924ee753d05fcd4cc893e3409a6754e8884bb04e5248e9b5849f6ba' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='2373b60d7f7b4825b1d0ec195079833a3dac72ddd55b207ee22b0032b1a658d9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='9241ce5bf362b7066c90da5abc4c85ec7b4054637e1a8a01b8cc83281e228b7e' ;; \t\t*) goRelArch='src'; goRelSha256='4f7123044375d5c404280737fbd2d0b17064b66182a65919ffe20ffe8620e3df'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-10-18T04:42:25.396631077Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:42:30.62645617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-18T04:42:33.475129638Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-10-18T04:42:33.828615422Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:15f65c118fb66793954d9048e28391368c87e0a330a1ee03774bf579aaa7f62f",
                    "sha256:cc58db1e2d0fe1cb08f7a044d6cc20a02c8f33d60565ebbfd88b71b34dd936e6",
                    "sha256:26379916f58947f4e7200ea0ef9baba17783e51e64ea1f1e8ee00b2420ef913b",
                    "sha256:df960a00fac2058d18e3f35fe6cfd56e8c56b5d6cb7772547d8d9e688ec3fc52",
                    "sha256:0523ab0827194b6a72ab39b5bcc07506856a003e8d97e27348965ab2788114bd",
                    "sha256:aeb97cbb267f7edec759deda7c13e270e7eeb6d5f87bccc6d5988d1ec33ed6b3",
                    "sha256:fbcdd2989ccc896666138c32fb714ac117245310079e98658259bf0ab7eb844b"
                ]
            }
        },
        "1.13.4-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4edc3726f70360bbeead6931ebd0ca517c5c663fd2bf586fb8589a66e26b257a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cbc4819a437500ce25b736d5fb2832d4ed62d22da254c5bc9212fabb708b1cc4",
            "container_config": {
                "Hostname": "cbc4819a4375",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4edc3726f70360bbeead6931ebd0ca517c5c663fd2bf586fb8589a66e26b257a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:45:42.724702542Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:42:41.702518096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:45:39.518935963Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:45:40.413892412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:45:40.814557414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:45:42.270277339Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:45:42.724702542Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:becf669df6acc4bce3ab394ebc9f8b6e9d00e3acc129ab2897e785669a00e61d",
                    "sha256:522e13bf44f96c0d72f378534e03d76f7fd0a1cdc5caa553c46b522b401061d1"
                ]
            }
        },
        "1.13.4-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4edc3726f70360bbeead6931ebd0ca517c5c663fd2bf586fb8589a66e26b257a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cbc4819a437500ce25b736d5fb2832d4ed62d22da254c5bc9212fabb708b1cc4",
            "container_config": {
                "Hostname": "cbc4819a4375",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4edc3726f70360bbeead6931ebd0ca517c5c663fd2bf586fb8589a66e26b257a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-01T20:45:42.724702542Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-11-01T20:42:41.702518096Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:45:39.518935963Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-01T20:45:40.413892412Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:45:40.814557414Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-01T20:45:42.270277339Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-01T20:45:42.724702542Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:becf669df6acc4bce3ab394ebc9f8b6e9d00e3acc129ab2897e785669a00e61d",
                    "sha256:522e13bf44f96c0d72f378534e03d76f7fd0a1cdc5caa553c46b522b401061d1"
                ]
            }
        },
        "1.13.4-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1933cde10ca1678a9916809b34c95c3d85b09028af2ef52bc22cda39e902e473",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1896739d5da9e99b01d36843619b553dd362981e2928ac489f7c12f7901b54de",
            "container_config": {
                "Hostname": "1896739d5da9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1933cde10ca1678a9916809b34c95c3d85b09028af2ef52bc22cda39e902e473",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-22T20:29:41.715698881Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T10:40:18.797308824Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:72d4939c469faaa7a7e3a81ea946b8effcfef763585a28c0da719de4acc60c40 in / "
                },
                {
                    "created": "2019-11-22T10:40:19.171630686Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T11:27:16.538356672Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T11:27:22.781241693Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T11:27:45.351953106Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:29:25.621214128Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:29:25.943962812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:29:40.22483711Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f76e6353c9ae2dcad1731b7239531eb8be2fe171f29f2a9c5040945a930fd41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8b8d99eb07206f082468fb4d0ec962a819ae45d54065fc1ed6e2c502e774aaf0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='497934398ca57c7c207ce3388f099823923b4c7b74394d6ed64cd2d3751aecb8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='815bf3c7100e73cfac50c4a07c8eeb4b0458a49ffa0e13a74a6cf7ad8e2a6499' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='efc6947e8eb0a6409f4c8ba62b00ae4e54404064bc221df1b73364a95945a350' ;; \t\t*) goRelArch='src'; goRelSha256='95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-22T20:29:40.697304591Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:29:40.899623187Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:29:41.488699125Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-22T20:29:41.715698881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2b11243fe5ceb53fe290d580c7bc8e62cf019bc5b73407a82f939ece1eb9890",
                    "sha256:41c88cf715b718d56bd005973250eb1d04e18f03e922800e7d52584c21e61645",
                    "sha256:f836f09848e465408849732aaadfe8fe74c4c31c5844001af48f8d0bbd766489",
                    "sha256:0b99d819dcdba975f84b7fed96694104cd1ea46615a5862c1ae88a3a3a515d5f",
                    "sha256:9a84cbfeaaa9584163f407ef17ec432cc766893180a82decc8957abcf3f5218b",
                    "sha256:e62ef971e8511e20d5ef065d792d978faded85864a616879307bdd252be69623",
                    "sha256:cfcbfcf15245f98e4db0c46fefbff9d994cb59a38b59e40a379d466b6e2f21a9"
                ]
            }
        },
        "1.13.4-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:15c90da4c7e7357f2d1eac8d5dfdb9a5390491860dbc3962e6f337b60677d4d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d8cb6aedfc4ce48784db00869922cfedecfd225f068073998d9d3a59ef756146",
            "container_config": {
                "Hostname": "d8cb6aedfc4c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:15c90da4c7e7357f2d1eac8d5dfdb9a5390491860dbc3962e6f337b60677d4d3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-11-22T20:30:07.883316476Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-11-22T10:41:54.933127776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7355df331b8f4a8c39f396e0530ee4fc04847b5d3c3b9f7e17e2c81026fce911 in / "
                },
                {
                    "created": "2019-11-22T10:41:55.287755419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T11:32:27.457248316Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T11:32:40.707152815Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-11-22T11:33:12.697812399Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:30:00.839212587Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-22T20:30:01.131399884Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.4",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:06.443734552Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='692d17071736f74be04a72a06dab9cac1cd759377bd85316e52b2227604c004c' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f76e6353c9ae2dcad1731b7239531eb8be2fe171f29f2a9c5040945a930fd41' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8b8d99eb07206f082468fb4d0ec962a819ae45d54065fc1ed6e2c502e774aaf0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='497934398ca57c7c207ce3388f099823923b4c7b74394d6ed64cd2d3751aecb8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='815bf3c7100e73cfac50c4a07c8eeb4b0458a49ffa0e13a74a6cf7ad8e2a6499' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='efc6947e8eb0a6409f4c8ba62b00ae4e54404064bc221df1b73364a95945a350' ;; \t\t*) goRelArch='src'; goRelSha256='95dbeab442ee2746b9acf0934c8e2fc26414a0565c008631b04addb8c02e7624'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-11-22T20:30:06.871476248Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:07.063706153Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-22T20:30:07.667780877Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-11-22T20:30:07.883316476Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5c63b5727a9ddd765f23dd8fd46145bc6176d30ed3d58f583274ba176dc88aaf",
                    "sha256:282e212ad5cca52dc0123e069f885d3556f18230a9f46e1b415e0b0d217271f9",
                    "sha256:79e94e00dd175a967ed006683e6939b9c16581ea1d615725e6c47306dfc4ae8d",
                    "sha256:951fbdded31f49012c036901038e16ac02bf9cdcf882a9d4da3fb9775c258de7",
                    "sha256:acb458e8a3cb6d411b3f40547bdd1ca3524f4ccdd554b053e2bdae29f86b857b",
                    "sha256:f2b8a87959f0f22b16541f9b484da6e91480281103c91494c696cc8f105e52dc",
                    "sha256:e2d92a1d5cc2c2903899f9f76bd06774cd8fc3047802e64c17c6d4db6450fdcf"
                ]
            }
        },
        "1.13.5-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f19d05b5420ef84e71d4980a2cd8e3daa71598f15ecb7879073f27d663284cb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7276a85efaa733478912194c995fc894b7fd99a2885f60cbc089753efe3e0f06",
            "container_config": {
                "Hostname": "7276a85efaa7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f19d05b5420ef84e71d4980a2cd8e3daa71598f15ecb7879073f27d663284cb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T20:44:03.111229782Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:16:56.189275974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d26fbcd308b78da175af74382b16ee1f7a3370ab9d618b306d604d292e72c560 in / "
                },
                {
                    "created": "2019-12-24T20:16:56.355325006Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:41:30.46265509Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T20:41:31.075585725Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T20:42:55.959415717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:44:01.530506804Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T20:44:02.083160976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:44:02.279243463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:44:02.893719001Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T20:44:03.111229782Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6a030c795c6591c986bbe6e8a01c2b982da718204caebfaa14f0f9d3a03317b7",
                    "sha256:79fad325804996350ccf6789b2da9324955355362d53a1c7ff9703a3eaea5ba7",
                    "sha256:a32d56e92799badec4038cb61467e2c15ae7bcc117e5675fc8ddf5a7644810f5",
                    "sha256:e99b7414cb0eb1adf96fbdf3eb2e76a620ed5342d45c3c0818d6f319aab57ba3",
                    "sha256:c365e1986a51f5d91521e9e9d2a54c51272d33f75d2371dfc11b6780b81e80ec"
                ]
            }
        },
        "1.13.5-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e292201b0f2acb307fb463db7702f9ddb41726db6a30353aa8d940b7d7072cac",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "005df0114c959ee18a313015ea580af635f7c82848da1ebaa31d33452a89f6d6",
            "container_config": {
                "Hostname": "005df0114c95",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e292201b0f2acb307fb463db7702f9ddb41726db6a30353aa8d940b7d7072cac",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T20:45:20.091115112Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-05T22:42:04.755238185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:45:18.558170327Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T20:45:19.071326462Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:45:19.271406232Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:45:19.865546271Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T20:45:20.091115112Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:3ff3ecd8db41371bca37f32a8b4508b3cacee4cde89d50aaa165140cfb86b47e",
                    "sha256:bf466771f2ecd3732b8fb8d2a1f57508242dd04b15090d2eb8ed0e80a44a4851"
                ]
            }
        },
        "1.13.5-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f19d05b5420ef84e71d4980a2cd8e3daa71598f15ecb7879073f27d663284cb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7276a85efaa733478912194c995fc894b7fd99a2885f60cbc089753efe3e0f06",
            "container_config": {
                "Hostname": "7276a85efaa7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f19d05b5420ef84e71d4980a2cd8e3daa71598f15ecb7879073f27d663284cb3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-26T20:44:03.111229782Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-24T20:16:56.189275974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d26fbcd308b78da175af74382b16ee1f7a3370ab9d618b306d604d292e72c560 in / "
                },
                {
                    "created": "2019-12-24T20:16:56.355325006Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:41:30.46265509Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-12-26T20:41:31.075585725Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-26T20:42:55.959415717Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:44:01.530506804Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-26T20:44:02.083160976Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:44:02.279243463Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-26T20:44:02.893719001Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-26T20:44:03.111229782Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6a030c795c6591c986bbe6e8a01c2b982da718204caebfaa14f0f9d3a03317b7",
                    "sha256:79fad325804996350ccf6789b2da9324955355362d53a1c7ff9703a3eaea5ba7",
                    "sha256:a32d56e92799badec4038cb61467e2c15ae7bcc117e5675fc8ddf5a7644810f5",
                    "sha256:e99b7414cb0eb1adf96fbdf3eb2e76a620ed5342d45c3c0818d6f319aab57ba3",
                    "sha256:c365e1986a51f5d91521e9e9d2a54c51272d33f75d2371dfc11b6780b81e80ec"
                ]
            }
        },
        "1.13.5-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ce0d69bebd0b7e169704666a99453938721c4fa027bc36216b01b25f4bdb604",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "25d2a6583be0836c8c7c5f9673d3b0a64c9fe28aad6f8d5f814f51678ac5f4e9",
            "container_config": {
                "Hostname": "25d2a6583be0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9ce0d69bebd0b7e169704666a99453938721c4fa027bc36216b01b25f4bdb604",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-28T10:50:13.215013828Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:41:51.448418567Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aeaf0b11195b2ba7eb7890ce128ad93c114a8e183a516cf2e4ea42da324c57ea in / "
                },
                {
                    "created": "2019-12-28T04:41:51.77543716Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:44:59.979522854Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:45:05.253202199Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:45:27.952034372Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:49:43.660688744Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:03.876725782Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:50:11.723610232Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='26259f61d52ee2297b1e8feef3a0fc82144b666a2b95512402c31cc49713c133' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='227b718923e20c846460bbecddde9cb86bad73acc5fb6f8e1a96b81b5c84668b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3b830fa25f79ab08b476f02c84ea4125f41296b074017b492ac1ff748cf1c7c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='292814a5ea42a6fc43e1d1ea61c01334e53959e7ab34de86eb5f6efa9742afb6' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cfbb2959f243880abd1e2efd85d798b8d7ae4a502ab87c4b722c1bd3541e5dc3' ;; \t\t*) goRelArch='src'; goRelSha256='27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-28T10:50:12.159162889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:50:12.362770943Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:50:13.003896204Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-28T10:50:13.215013828Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1ad0b6e3fe44c5d336ef75ed8a3c6399a49c3ed32cda107fed894183c5ef0f1",
                    "sha256:251413c0d9b02cf2c76e474a09eae20840935c9d1c2ce1681a30c9ebd072a71d",
                    "sha256:c8a16eeb22dfe451df0d9131b0ff675f8095c5532ac8a57b803b33722f39ec72",
                    "sha256:7c64b9a51d6f731d4065e4f8c8bc96983d31464a8caad874d492c9c34ec8d31a",
                    "sha256:32acb696159feadd5f8daecf0078ef6525d31523347f2ec8ae8ebc7a56d62f9b",
                    "sha256:3b047641af6022d526e29b85b361949b74c4654ead0d0dd62ba81b715eeb6c09",
                    "sha256:542ea0a6e2f05441759027312bebee880887a24f96d03c8a4b9d27812007d66c"
                ]
            }
        },
        "1.13.5-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f458007a1e95b22e519b785398eecdeef4ebc2da6398ee05a02646cea1d49143",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "59183becb51dc6cebf5f245090fb39451869a2bfb7687d4d5fc9dad2f7fd661e",
            "container_config": {
                "Hostname": "59183becb51d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.5",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f458007a1e95b22e519b785398eecdeef4ebc2da6398ee05a02646cea1d49143",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-28T10:50:41.753143819Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:08.420821807Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b85ece7344f0ad0749b115e76a51a3b9f322e23bcc8c692cd2edff403ba8840e in / "
                },
                {
                    "created": "2019-12-28T04:43:08.755615599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:49:54.012144205Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:49:58.424750405Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:50:21.113770749Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:31.236268529Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:31.543183074Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.5",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:50:39.614340673Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='512103d7ad296467814a6e3f635631bd35574cab3369a97a323c9a585ccaa569' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='26259f61d52ee2297b1e8feef3a0fc82144b666a2b95512402c31cc49713c133' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='227b718923e20c846460bbecddde9cb86bad73acc5fb6f8e1a96b81b5c84668b' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='3b830fa25f79ab08b476f02c84ea4125f41296b074017b492ac1ff748cf1c7c9' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='292814a5ea42a6fc43e1d1ea61c01334e53959e7ab34de86eb5f6efa9742afb6' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cfbb2959f243880abd1e2efd85d798b8d7ae4a502ab87c4b722c1bd3541e5dc3' ;; \t\t*) goRelArch='src'; goRelSha256='27d356e2a0b30d9983b60a788cf225da5f914066b37a6b4f69d457ba55a626ff'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-28T10:50:40.058826396Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:50:40.279090835Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T10:50:40.915130074Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-28T10:50:41.753143819Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f116422eb3ff59132287fd5828a299aefd95c8c9b0ef02de8ed2e075c48b45e2",
                    "sha256:b840da31b0f5899cfacfc590e8f040c3a0a38577a1a65a86951fbd65236b7649",
                    "sha256:7b4ff82da31dcaba42d8808b727906de79fa85a1fe5d4c9ca15703610167039c",
                    "sha256:cab219d2260261bde2a4398d2eff2cbd42252c4c5b6f2ad3d2907985dbd90e9c",
                    "sha256:212e2bb92872453134062c14e7f3c9c3bf6dafa65f97a23dbd23c2bfb7352ddc",
                    "sha256:4cbe631bd0d0c20356b0c7f1d73bec1b7a8ec88cab0200e013db32ee5683bc37",
                    "sha256:98ed12108576152130d327c4dfd467957ddd4edbdc696896473ad56192dee529"
                ]
            }
        },
        "1.13.6-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da41f5fea48b86cb742b7bec434c0790df88c4dd7d8c30db0d469a8e092bd004",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6e1f6aec52b54866e52fb6969d7130ad535e73d3ddfceb01bbb5bff434fd005b",
            "container_config": {
                "Hostname": "6e1f6aec52b5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da41f5fea48b86cb742b7bec434c0790df88c4dd7d8c30db0d469a8e092bd004",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T01:45:26.249465923Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T01:44:18.50620598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:45:24.602983503Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T01:45:25.139808722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:45:25.434569198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:45:26.01411236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T01:45:26.249465923Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:d0cd78f847e664a8cb553819ba5cbadb540ed130681e037bed68c090124c5616",
                    "sha256:49c021ae8644e14f4062955dc574b2662604c88eabdfc90591cd6cab59ea62db"
                ]
            }
        },
        "1.13.6-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3dd9df854a1eb2b812a4b58fff4010f0bc73dfbefb7cd345d9c27111bc2d18b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cb98ddf0c65734365fd98859063c5223883c6bb6a7e8728ec7b95366eac07b00",
            "container_config": {
                "Hostname": "cb98ddf0c657",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d3dd9df854a1eb2b812a4b58fff4010f0bc73dfbefb7cd345d9c27111bc2d18b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-23T19:22:24.151412834Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-23T19:21:18.258405675Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:22:22.604623033Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-23T19:22:23.145899469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:22:23.339113727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:22:23.922505969Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-23T19:22:24.151412834Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:6285f814cb3ff7926aee65777b8eed8c508a4991d1577d6003012ba218134570",
                    "sha256:1e2b74f025da41a67331ce9be064237a2457ac354da79278879e1a69b6f9ba3e"
                ]
            }
        },
        "1.13.6-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da41f5fea48b86cb742b7bec434c0790df88c4dd7d8c30db0d469a8e092bd004",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6e1f6aec52b54866e52fb6969d7130ad535e73d3ddfceb01bbb5bff434fd005b",
            "container_config": {
                "Hostname": "6e1f6aec52b5",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da41f5fea48b86cb742b7bec434c0790df88c4dd7d8c30db0d469a8e092bd004",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-18T01:45:26.249465923Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-18T01:44:18.50620598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:45:24.602983503Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-18T01:45:25.139808722Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:45:25.434569198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:45:26.01411236Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-18T01:45:26.249465923Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:d0cd78f847e664a8cb553819ba5cbadb540ed130681e037bed68c090124c5616",
                    "sha256:49c021ae8644e14f4062955dc574b2662604c88eabdfc90591cd6cab59ea62db"
                ]
            }
        },
        "1.13.6-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d2ee1d84681c39851fb7c748edbeb3c2313b6469c7d4807a2dd93db682b5b598",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6003d37c66e6b290a44f9211a9595d33032d63072774ba816e6b9626a33f4dc2",
            "container_config": {
                "Hostname": "6003d37c66e6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d2ee1d84681c39851fb7c748edbeb3c2313b6469c7d4807a2dd93db682b5b598",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:44:09.063562696Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:41:51.448418567Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:aeaf0b11195b2ba7eb7890ce128ad93c114a8e183a516cf2e4ea42da324c57ea in / "
                },
                {
                    "created": "2019-12-28T04:41:51.77543716Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:44:59.979522854Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:45:05.253202199Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:45:27.952034372Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:49:43.660688744Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:43:56.279368011Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:44:07.508295391Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a1bc06deb070155c4f67c579f896a45eeda5a8fa54f35ba233304074c4abbbbd' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='37a1a83e363dcf146a67fa839d170fd1afb13009585fdd493d0a3370fbe6f785' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0a18125c4ed80f9c3045cf92384670907c4796b43ed63c4307210fe93e5bbca5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='27feb013106da784f09e560720aa41ab395c67f7eed4c4a0fce04bc6e3d01c7d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='26a977a8af5dc50a562f0a57b58dded5fa3bacfe77722cf8a84ea54ca54728dd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5cd9900a1fa0f0cac657930b648381cad9b8c5e2bbc77caf86a6fb5cedad0017' ;; \t\t*) goRelArch='src'; goRelSha256='aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:44:07.975670632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:44:08.193111667Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:44:08.836216947Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:44:09.063562696Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1ad0b6e3fe44c5d336ef75ed8a3c6399a49c3ed32cda107fed894183c5ef0f1",
                    "sha256:251413c0d9b02cf2c76e474a09eae20840935c9d1c2ce1681a30c9ebd072a71d",
                    "sha256:c8a16eeb22dfe451df0d9131b0ff675f8095c5532ac8a57b803b33722f39ec72",
                    "sha256:7c64b9a51d6f731d4065e4f8c8bc96983d31464a8caad874d492c9c34ec8d31a",
                    "sha256:32acb696159feadd5f8daecf0078ef6525d31523347f2ec8ae8ebc7a56d62f9b",
                    "sha256:99805ad775b4ce4a62307dc2157559c9f2e464c9cbefd02acf7afc033bb367cf",
                    "sha256:796cc811ddf3993083b5c01b9d69b7cbe08768d360c2c80f4abaea8c69b3ece4"
                ]
            }
        },
        "1.13.6-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c430c21e0d938cfcb2f053ea6d3aa6b09fc9d3cd68d15e65a24ef84d562598f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1f9ee297e2117e61c8bf23c40d159a2636c720ff2dc08df02a60ccdbf353cbbb",
            "container_config": {
                "Hostname": "1f9ee297e211",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c430c21e0d938cfcb2f053ea6d3aa6b09fc9d3cd68d15e65a24ef84d562598f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-09T23:44:23.731545669Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-12-28T04:43:08.420821807Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b85ece7344f0ad0749b115e76a51a3b9f322e23bcc8c692cd2edff403ba8840e in / "
                },
                {
                    "created": "2019-12-28T04:43:08.755615599Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-28T05:49:54.012144205Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T05:49:58.424750405Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-12-28T05:50:21.113770749Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-12-28T10:50:31.236268529Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-09T23:44:14.111623549Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:44:22.247046709Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='a1bc06deb070155c4f67c579f896a45eeda5a8fa54f35ba233304074c4abbbbd' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='37a1a83e363dcf146a67fa839d170fd1afb13009585fdd493d0a3370fbe6f785' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='0a18125c4ed80f9c3045cf92384670907c4796b43ed63c4307210fe93e5bbca5' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='27feb013106da784f09e560720aa41ab395c67f7eed4c4a0fce04bc6e3d01c7d' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='26a977a8af5dc50a562f0a57b58dded5fa3bacfe77722cf8a84ea54ca54728dd' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='5cd9900a1fa0f0cac657930b648381cad9b8c5e2bbc77caf86a6fb5cedad0017' ;; \t\t*) goRelArch='src'; goRelSha256='aae5be954bdc40bcf8006eb77e8d8a5dde412722bc8effcdaf9772620d06420c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-09T23:44:22.699634314Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:44:22.887692536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-09T23:44:23.519804668Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-09T23:44:23.731545669Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f116422eb3ff59132287fd5828a299aefd95c8c9b0ef02de8ed2e075c48b45e2",
                    "sha256:b840da31b0f5899cfacfc590e8f040c3a0a38577a1a65a86951fbd65236b7649",
                    "sha256:7b4ff82da31dcaba42d8808b727906de79fa85a1fe5d4c9ca15703610167039c",
                    "sha256:cab219d2260261bde2a4398d2eff2cbd42252c4c5b6f2ad3d2907985dbd90e9c",
                    "sha256:212e2bb92872453134062c14e7f3c9c3bf6dafa65f97a23dbd23c2bfb7352ddc",
                    "sha256:1f303bf8413c42a673bccf1233a2b7c9d06586ff4df012dbc2f1afb765bcd403",
                    "sha256:f233a6b0a20998142380603b317e3d4ed09f61a021f300b89a2346f5cfc18e7c"
                ]
            }
        },
        "1.13.7-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f455e4b0ce3078940cecd8dc7122b1fd4c20d28a6dd73b74434d36a9c822f0a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f3d92cc8a129ba83d5d31ee5d8d25309db40f7e54dab47ff25e10f44e1900038",
            "container_config": {
                "Hostname": "f3d92cc8a129",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f455e4b0ce3078940cecd8dc7122b1fd4c20d28a6dd73b74434d36a9c822f0a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:45:30.22449206Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:44:18.959489616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:23.424763801Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:45:29.155954238Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:29.401241443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:30.020116Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:45:30.22449206Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:ff45e9fa7d729780f7ef320d8890de647ef966bcd58e6e9336bcc9d553d7b39f",
                    "sha256:574fe7c29480f1ca1e343741b8b8785f33dd8ce2d35503906882fcf2a5177864"
                ]
            }
        },
        "1.13.7-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7dba3c7d56affdcf330c3c89ee3fb89001edb512e43d770d6717646350e1e481",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "499f637d1079fa45df646853a507771f19d454e9ea4486ba49c2b141c3524a22",
            "container_config": {
                "Hostname": "499f637d1079",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7dba3c7d56affdcf330c3c89ee3fb89001edb512e43d770d6717646350e1e481",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:47:06.331625443Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:45:37.658672789Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:46:59.726802111Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:47:05.316638552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:47:05.496271618Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:47:06.113272482Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:47:06.331625443Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:1470e8243ba9978b5474d7fae39b0e1953ccc3335dd0ab2b1c699a4a4ef278aa",
                    "sha256:fd804328e4bf18975da17e21f2f21c0c1abf6d854b2d12178b3298e430786285"
                ]
            }
        },
        "1.13.7-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f455e4b0ce3078940cecd8dc7122b1fd4c20d28a6dd73b74434d36a9c822f0a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f3d92cc8a129ba83d5d31ee5d8d25309db40f7e54dab47ff25e10f44e1900038",
            "container_config": {
                "Hostname": "f3d92cc8a129",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f455e4b0ce3078940cecd8dc7122b1fd4c20d28a6dd73b74434d36a9c822f0a6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-01-28T21:45:30.22449206Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-01-28T21:44:18.959489616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:23.424763801Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-01-28T21:45:29.155954238Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:29.401241443Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-28T21:45:30.020116Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-01-28T21:45:30.22449206Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:ff45e9fa7d729780f7ef320d8890de647ef966bcd58e6e9336bcc9d553d7b39f",
                    "sha256:574fe7c29480f1ca1e343741b8b8785f33dd8ce2d35503906882fcf2a5177864"
                ]
            }
        },
        "1.13.7-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ca636fa861b52e2b23c1a73fd8fb6e85a12a39e94e0305816164529cb83623d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ab92e5c1530f2bb7e4fc2d41452e684997ef7de86aeb435120be281d1d0b5762",
            "container_config": {
                "Hostname": "ab92e5c1530f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ca636fa861b52e2b23c1a73fd8fb6e85a12a39e94e0305816164529cb83623d6",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-01T23:02:14.08469287Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:42:14.611862776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:642aef2e391d18e3999374d6068f29ccc5ad62b25a0d18c852a6b5534daa18f7 in / "
                },
                {
                    "created": "2020-02-01T16:42:17.103633842Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:50:06.040856429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:50:10.595293372Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:50:31.474116864Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:01:23.888198931Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:01:53.004254939Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:02:08.744475833Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3dd4bd781a0271b33168e627f7f43886b4c5d1c794a4015abf34e99c6526ca3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ff8b870222d82c38a0108810706811dcbd1fcdbddc877789184a0f903cbdf11a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8717de6c662ada01b7bf318f5025c046b57f8c10cd39a88268bdc171cc7e4eab' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='93e82683f32d9fe7fda9b686415aeee599a92c4e450b69519bb53e1d62144a85' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fe0aeb41e87fd901845c9598f17f1aae90dca25d2d2744e9664c173fbf7f784' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d405e515029d19131bae2820310681c31b665178998335ecc4494e8de01dfeb' ;; \t\t*) goRelArch='src'; goRelSha256='e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-01T23:02:13.01192892Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:02:13.220658821Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:02:13.86818923Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-01T23:02:14.08469287Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce9ae4d85766f36c16f76335167b6ff66f01ec49ff1fd15b34d51ae44c2b827a",
                    "sha256:d5ca591fbd5c5eb90cdb08fe05704093261e850fd2e1cb13214387bd093f1317",
                    "sha256:b28011d3a4044088991efd1ac1c8f9e7b5d169c3229b142532ed89f597ad251c",
                    "sha256:91cc825677a7691dd2ceadaea5b90144d7578b19044d58f91bb5a6bc586f6a04",
                    "sha256:53df2c5f8b0d79e1336ffe66722cfd3438a02a86c845cd7f597efa00f1f2c336",
                    "sha256:be666c8fdab90f09933c43305f859ad4fb6af35cfedf066e782110b5d4bc42ed",
                    "sha256:44ca46c2f19c18b64b661e0073a4f2e8d2a162cfd7098e889ed4bfff5685dd15"
                ]
            }
        },
        "1.13.7-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66a66402ff7df6cc6b6d49d4cb338e4585bfeda87b70d8a667c961ab95d09abd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b1bbc1c9b4a25c8acd7bbf49c10b735514fb94968e0ac47e9879b912919300a9",
            "container_config": {
                "Hostname": "b1bbc1c9b4a2",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.7",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66a66402ff7df6cc6b6d49d4cb338e4585bfeda87b70d8a667c961ab95d09abd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-01T23:02:46.2717922Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:43.10676531Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17af4834ca99365d5ecf14eb938572689bd3c3ad5fd8a88da12c4c3474975771 in / "
                },
                {
                    "created": "2020-02-01T16:43:45.448668694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:05.998032957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:10.073726234Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:00:32.841833549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:02:27.410645524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:02:30.029257422Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.7",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:02:40.962421173Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='b3dd4bd781a0271b33168e627f7f43886b4c5d1c794a4015abf34e99c6526ca3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='ff8b870222d82c38a0108810706811dcbd1fcdbddc877789184a0f903cbdf11a' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='8717de6c662ada01b7bf318f5025c046b57f8c10cd39a88268bdc171cc7e4eab' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='93e82683f32d9fe7fda9b686415aeee599a92c4e450b69519bb53e1d62144a85' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8fe0aeb41e87fd901845c9598f17f1aae90dca25d2d2744e9664c173fbf7f784' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='7d405e515029d19131bae2820310681c31b665178998335ecc4494e8de01dfeb' ;; \t\t*) goRelArch='src'; goRelSha256='e4ad42cc5f5c19521fbbbde3680995f2546110b5c6aa2b48c3754ff7af9b41f4'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-01T23:02:45.183891803Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:02:45.363979294Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T23:02:46.04444555Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-01T23:02:46.2717922Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:243e9604e20f567f6e9429f240bb02d5ef5db2eb3f56f28b4ed33feea0727e4c",
                    "sha256:a4c9827bc1ab9b709f72fbebb77db0e5dee3f97330d5825e43b3d3bce003d5d2",
                    "sha256:891ccf47c6ae19f4440e245373355c4e0e8f07f7f531028112953f984b137f7a",
                    "sha256:b3b708bfc02280b6ee5084770f85aa5c9ee498d625fd35f5ad3a5a1a3e889876",
                    "sha256:4d4abc98dc73a30130742b13258b3234e4ae349b45d72621157f733ad39e0e24",
                    "sha256:d2edd701c16e4d59b7818377a3e5e4abf946be436892ddeb79c9a21a5a8790e8",
                    "sha256:dd3be9d88e2e0cffbef98944cd37352d7c3414e26bf37c6a32ea34460fc7baac"
                ]
            }
        },
        "1.13.8-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47b00231c1f10f9e2a12c19cf52bbe77d7e33c9c84a7d6dfeeaec8b2ff8d9256",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1f91eb69479db1ba4a3638883d71ca2152d70183da40aa1cf7a3e30f7219e845",
            "container_config": {
                "Hostname": "1f91eb69479d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47b00231c1f10f9e2a12c19cf52bbe77d7e33c9c84a7d6dfeeaec8b2ff8d9256",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:46:08.203963375Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:44:33.492574504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:57.689884807Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:46:06.553177954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:46:06.76027707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:46:07.801751329Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:46:08.203963375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:04fa8d2fc74645e991a49cf4cca98be7a4d919a4d5f35cd52915f5dcafa50a24",
                    "sha256:e1f168b262049db45d882117e1ae93fd7c5d3010dca1676de125f612c7003635"
                ]
            }
        },
        "1.13.8-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39a4d7fde2cb00feeb49464c5b596f1a85593c82adb3bf6752d213da1a748045",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "864990cac112ff8c154132dd6a19e7f0d88e07c1d45080f94802e6af1754df1b",
            "container_config": {
                "Hostname": "864990cac112",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:39a4d7fde2cb00feeb49464c5b596f1a85593c82adb3bf6752d213da1a748045",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:48:08.232457881Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:46:20.203032728Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:00.878716461Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:48:07.041763351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:07.241000054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:48:08.009859113Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:48:08.232457881Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:cb07a8561aaa480e8efc61f9c3504b0ec789650e9964dc831d9999848ee1a794",
                    "sha256:9273e0c269c0ce0221c8b3c1d6d8b584709134e055f20f8e9520b03ffc9ce149"
                ]
            }
        },
        "1.13.8-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47b00231c1f10f9e2a12c19cf52bbe77d7e33c9c84a7d6dfeeaec8b2ff8d9256",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1f91eb69479db1ba4a3638883d71ca2152d70183da40aa1cf7a3e30f7219e845",
            "container_config": {
                "Hostname": "1f91eb69479d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47b00231c1f10f9e2a12c19cf52bbe77d7e33c9c84a7d6dfeeaec8b2ff8d9256",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-14T00:46:08.203963375Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-14T00:44:33.492574504Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:45:57.689884807Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-14T00:46:06.553177954Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:46:06.76027707Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-14T00:46:07.801751329Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-14T00:46:08.203963375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:04fa8d2fc74645e991a49cf4cca98be7a4d919a4d5f35cd52915f5dcafa50a24",
                    "sha256:e1f168b262049db45d882117e1ae93fd7c5d3010dca1676de125f612c7003635"
                ]
            }
        },
        "1.13.8-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ac115af596de43f18debc3a24ccca94efd7053c077379f9b8521a1798efad98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "617b35666220f5eb1ea32570cfede04b934b7ef2b930c87d2b3d11780583c511",
            "container_config": {
                "Hostname": "617b35666220",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2ac115af596de43f18debc3a24ccca94efd7053c077379f9b8521a1798efad98",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T09:23:06.794436777Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:42:32.257773653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80536bfff518f6b425ad359b86a124f79ccdc82deb3e648f1746a7c87a1fcad0 in / "
                },
                {
                    "created": "2020-02-26T00:42:35.544508974Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T04:33:17.233898937Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T04:33:27.620419326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T04:34:09.671385438Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:20:40.842685722Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:22:38.087571871Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:22:56.71631762Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0567734d558aef19112f2b2873caa0c600f1b4a5827930eb5a7f35235219e9d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='75f590d8e048a97cbf8b09837b15b3e6b44e1374718a96a5c3a994843ef44a4d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b46c0235054d0eb69a295a2634aec8a11c7ae19b3dc53556a626b89dc1f8cdb0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2305c1c46b3eaf574c7b03cfa6b167c199a2b52da85872317438c90074fdb46e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4c987b3969d33a93880a218064d2330d7f55c9b58698e78db6b56012058e91a9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='994f961df0d7bdbfa6f7eed604539acf9159444dabdff3ce8e938d095d85f756' ;; \t\t*) goRelArch='src'; goRelSha256='b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T09:23:05.138446469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:23:05.343763688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:23:06.529052798Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T09:23:06.794436777Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3e25cc4fc2c8e969f3b00469b01d6b892eb1e04da5cf389318a7838350caa5",
                    "sha256:6ffa584e32a8d3689ab0823c3c4dca8cbbf8c977b139b605a77bf7328827d83a",
                    "sha256:a32eccb1db9c1fe7efc307dd547d7ba6e573a9f994d185d1fa091c24f01ae2b6",
                    "sha256:ee91d071fe9e86d8a1a8ed728e12a81e424b46928d34e9a0b564bdada9e11e32",
                    "sha256:84f8b73ebe3a5afb208130d4db97f70cab59b65e6be5df9103b483504a31706c",
                    "sha256:bc2606ef13602468041c29fe0790dadd402d7a7f931d7711a4dfd11de58ff983",
                    "sha256:7e4f437a6a707a6c2e7a5ec773cf5a8090d23dca4b27d14bf1e8eb9536839515"
                ]
            }
        },
        "1.13.8-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc9a6fd43724c884f407c539631a6b8ba98b6e5ddb4779d871b921e128cdf687",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a47af5ba277932ac39f73e351fc423a67cae2f3ae39027d8aad5cb876107ce22",
            "container_config": {
                "Hostname": "a47af5ba2779",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.8",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cc9a6fd43724c884f407c539631a6b8ba98b6e5ddb4779d871b921e128cdf687",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T09:23:49.120196056Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:44:30.450033951Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb76ab55808bcd0567a32c3d7328d5c1719147f0f723a4aa574872eb8f12b4d4 in / "
                },
                {
                    "created": "2020-02-26T00:44:38.118026916Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T04:42:02.964127679Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T04:42:11.754608285Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T04:42:56.824979668Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:21:51.052397289Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:23:12.515111052Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.8",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:23:34.218924106Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0567734d558aef19112f2b2873caa0c600f1b4a5827930eb5a7f35235219e9d8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='75f590d8e048a97cbf8b09837b15b3e6b44e1374718a96a5c3a994843ef44a4d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b46c0235054d0eb69a295a2634aec8a11c7ae19b3dc53556a626b89dc1f8cdb0' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='2305c1c46b3eaf574c7b03cfa6b167c199a2b52da85872317438c90074fdb46e' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='4c987b3969d33a93880a218064d2330d7f55c9b58698e78db6b56012058e91a9' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='994f961df0d7bdbfa6f7eed604539acf9159444dabdff3ce8e938d095d85f756' ;; \t\t*) goRelArch='src'; goRelSha256='b13bf04633d4d8cf53226ebeaace8d4d2fd07ae6fa676d0844a688339debec34'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T09:23:46.751097516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:23:47.293704198Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:23:48.555338642Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T09:23:49.120196056Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9ce87416f5c7931d1ebd36a90c0084238bd2e8ad8f47c0a7d1ab4e8b02b3c4d3",
                    "sha256:52329abf3b2351f1d67d735636602c3663c9bf8f41cdeeb032ad1b6bbdfbe86c",
                    "sha256:1cc70914746d8e68786d05286820b671517e0f8af328c8055617fcf77df46383",
                    "sha256:41dd9912a575bdbf7a98896d4a06afb4d62f8a0e8523526d90730d9a160b6815",
                    "sha256:23bc7a4d81c4e2ab63264e354f6120456b3da3db8b2d95ee6c6a6ee119a4e8f2",
                    "sha256:41472d6a76b523565635e191ce7b9584c3e1c783e3e43a0ac8f4cd4ccc3530a2",
                    "sha256:8df3305153860806326d6d83e7b63d971e33ef2263741da6c649db9cfa39bcec"
                ]
            }
        },
        "1.13.9-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2628b469ac24832add5eae143a11f45fb923eba2dba436a83be6da3470238a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bd4932fe3254bef9d2ef3d592557fa616cdd4b59ba1f3b87ec95a6bc69e1d214",
            "container_config": {
                "Hostname": "bd4932fe3254",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2628b469ac24832add5eae143a11f45fb923eba2dba436a83be6da3470238a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:30:00.411671081Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:41:34.632373097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b6d4ad8fd0ec7f66e6d54b8cd8937ba7821b44096806af78692b4cab6d087a9c in / "
                },
                {
                    "created": "2020-03-23T21:41:34.907606923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:27:08.606437525Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:27:09.292117273Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:28:46.277309907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:29:53.557061407Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:29:59.285914015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:29:59.504240775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:30:00.184915354Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:30:00.411671081Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0f4d46f0129c70cb7700c3aa1c05ffce8ce8d603208f2194478580c5d7ce11b",
                    "sha256:b1d2fe86e433b99f9802102b6bf69a35f9de60db164c89976b0e4c684be100e4",
                    "sha256:902002e1d0e380a1cf26f6a7cd3b5c5f4214ea34481d26ce366f820d39463113",
                    "sha256:e5d5fa933088fe69d7d89992e9624b6f4e8b419cf2081f40ac300d38a4fb3f2a",
                    "sha256:297745b8f6bbb922efcda99941c22e473ca4a2795e04256e5de9b9f497687793"
                ]
            }
        },
        "1.13.9-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81061d56830301f11d09cc96f4781be1546de1d3e7b3bfbdc456a31bda7da3f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ff03db469b67425f17b9c4e2d90e474023076efe34cf3e517d95304a6d088dcb",
            "container_config": {
                "Hostname": "ff03db469b67",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81061d56830301f11d09cc96f4781be1546de1d3e7b3bfbdc456a31bda7da3f8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-19T23:48:02.876009082Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-23T16:52:43.963761645Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:922e12714922ae035a33d6ceb8d2683ad3e454deca21ad02b699db908443342b in / "
                },
                {
                    "created": "2020-01-23T16:52:44.133430205Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T19:21:17.404842808Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-23T19:21:18.021299645Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-19T23:46:45.730298643Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-19T23:47:56.419782688Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-19T23:48:01.825226134Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-19T23:48:02.008516893Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-19T23:48:02.668306934Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-19T23:48:02.876009082Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24d233ea33d3d925fbf8ffb3a5668ac82bc5b5ae01471f826a9c22ef5686352a",
                    "sha256:47b3b89dfcd12208dfaef6e285f94ba2c3cb41a4f5858126567274508d382de9",
                    "sha256:bd905a79b966c126776832bc27e50078f0dc69083d6c2f98ef193e2f964f8f6c",
                    "sha256:4c01aaec222c28dc694b23d628f1058182963ab741e2ae166b95cb2fe0916677",
                    "sha256:c68ebbc7aead2e30a58bc5bcbdbfac1c6d911559cf367704318361b018c244be"
                ]
            }
        },
        "1.13.9-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2628b469ac24832add5eae143a11f45fb923eba2dba436a83be6da3470238a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bd4932fe3254bef9d2ef3d592557fa616cdd4b59ba1f3b87ec95a6bc69e1d214",
            "container_config": {
                "Hostname": "bd4932fe3254",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b2628b469ac24832add5eae143a11f45fb923eba2dba436a83be6da3470238a8",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:30:00.411671081Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:41:34.632373097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b6d4ad8fd0ec7f66e6d54b8cd8937ba7821b44096806af78692b4cab6d087a9c in / "
                },
                {
                    "created": "2020-03-23T21:41:34.907606923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:27:08.606437525Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:27:09.292117273Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:28:46.277309907Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:29:53.557061407Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:29:59.285914015Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:29:59.504240775Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:30:00.184915354Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:30:00.411671081Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0f4d46f0129c70cb7700c3aa1c05ffce8ce8d603208f2194478580c5d7ce11b",
                    "sha256:b1d2fe86e433b99f9802102b6bf69a35f9de60db164c89976b0e4c684be100e4",
                    "sha256:902002e1d0e380a1cf26f6a7cd3b5c5f4214ea34481d26ce366f820d39463113",
                    "sha256:e5d5fa933088fe69d7d89992e9624b6f4e8b419cf2081f40ac300d38a4fb3f2a",
                    "sha256:297745b8f6bbb922efcda99941c22e473ca4a2795e04256e5de9b9f497687793"
                ]
            }
        },
        "1.13.9-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:400f5057befeb3cac25bdb846acd66d92d3158910df7cc49ff63c3ee127b8045",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bdc1948ebc51f7d1bedebf84355e9040e63cb199314638f5b8fe75823dcac0a8",
            "container_config": {
                "Hostname": "bdc1948ebc51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:400f5057befeb3cac25bdb846acd66d92d3158910df7cc49ff63c3ee127b8045",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T12:54:14.931880893Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:08:46.885962174Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2690e2e8794d163493c5a6daa8b6503432365b11e48372e175d855c28ec64db in / "
                },
                {
                    "created": "2020-03-31T01:08:49.400746498Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T02:20:52.281246381Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T02:20:56.994347014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T02:21:16.256910175Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:52:47.435459291Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:53:58.300092223Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:54:09.533388623Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f4ad8180dd0aaf7d7cda7e2b0a2bf27e84131320896d376549a7d849ecf237d7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a3c2941a1fde8692514ece7e2180a0e3ca70609f52756a66bc0ab68c63572361' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b53cb466d7986e5e17a3d4c196bc95df08a35968eced5efd7e128387a246c46e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2744aa2ddc68d888e9f65c2cbe4c8b527b139688ce232ead90dc2961f8d51a8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='90beb01962202f332be0a7c8dad2db3d30242759ba863db3f36c45d241940efc' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a40949aaf55912b06df8fda511c33fde3e52d377706bdc095332652c1ad225e3' ;; \t\t*) goRelArch='src'; goRelSha256='34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T12:54:13.904259739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:54:14.079982293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:54:14.71224296Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T12:54:14.931880893Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d249d6f732be16f3f72e3f0f6a99d69d62895e05febef24b3c590cacc2ce542",
                    "sha256:0ce183a1415e54d923834305fb9a4cca6cad2b0d21ee96d3925e0dda0643b288",
                    "sha256:f7a95c4a418a903b77aac73248fb095707e7e0ebe6afa32f390bdc0daaf0900a",
                    "sha256:8f4ce99d3013b2f598d16d5d053de935111793329298dbd6fdf638f15189cc92",
                    "sha256:c4e3e61478205a94dfe291a005b8d656340e3d91d3cb348a8b5dbc24e10a995c",
                    "sha256:997c5e75f016465a2f8462dd82ff33db7db9b2993c9d825bec64439268d09cb1",
                    "sha256:c34e13e9fccafe28e8a80b0df4cde6ffaaf2c588820797719fe33dbfe263b556"
                ]
            }
        },
        "1.13.9-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ea2318db8b90524c5844c19f7c7197d8278c56e9d9cc7d5701c2876dfdf5303",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "45811ef1737e07867ced9dea4c8bac597d1260da021bc4114a1e02840dd4ffbf",
            "container_config": {
                "Hostname": "45811ef1737e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13.9",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1ea2318db8b90524c5844c19f7c7197d8278c56e9d9cc7d5701c2876dfdf5303",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T12:54:39.5079203Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:10:18.996226031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b10f5f6f8f327b6ad71def930275eb5f518828e8eb19f79d20712e112ca35df in / "
                },
                {
                    "created": "2020-03-31T01:10:21.344125618Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T02:24:57.640101108Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T02:25:02.522008105Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T02:25:22.467216066Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:53:26.998777737Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:54:20.636308033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13.9",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:54:34.090456328Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='f4ad8180dd0aaf7d7cda7e2b0a2bf27e84131320896d376549a7d849ecf237d7' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='a3c2941a1fde8692514ece7e2180a0e3ca70609f52756a66bc0ab68c63572361' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='b53cb466d7986e5e17a3d4c196bc95df08a35968eced5efd7e128387a246c46e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='a2744aa2ddc68d888e9f65c2cbe4c8b527b139688ce232ead90dc2961f8d51a8' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='90beb01962202f332be0a7c8dad2db3d30242759ba863db3f36c45d241940efc' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='a40949aaf55912b06df8fda511c33fde3e52d377706bdc095332652c1ad225e3' ;; \t\t*) goRelArch='src'; goRelSha256='34bb19d806e0bc4ad8f508ae24bade5e9fedfa53d09be63b488a9314d2d4f31d'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T12:54:38.440014341Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:54:38.631980105Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:54:39.280492642Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T12:54:39.5079203Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:87c56165b82275d16ef75940e8f62b285b561fddef987a8ad8571bd0b7a1da85",
                    "sha256:5b69dbe76ce19d555d290d6b8189541d1413a7f6c50c7a5dc0f55c0747bf17d0",
                    "sha256:4c444ff691139a409c5f07ac1c488e1a4fdfac4d8376b00950e6ba412a2a5e86",
                    "sha256:d3832f28183e7d4a58760432da5efbce463ce07c897aec725a85c821b17a94a7",
                    "sha256:aabad7bb6c28fb753993110a52f3d07d08e08aa45725c30004e3a57140935bba",
                    "sha256:9d97947dcca6557ff45e645cc7a670486231d3424887e80c300bbceacb0d06fb",
                    "sha256:5ae8de67a3eb61c8fa549627e523cf9b6ffd0a2cae9a542a6e8c4855f5dc6c92"
                ]
            }
        },
        "1.13beta1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79fab78f322caed8fd39c4c96633d9f12ee82fc2979d6722908911c9e907ac90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "12f1cd084b893802b90fb9f5de5cfe4abbd8982bd790e3d5d2a5d26f7f7ce0b5",
            "container_config": {
                "Hostname": "12f1cd084b89",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79fab78f322caed8fd39c4c96633d9f12ee82fc2979d6722908911c9e907ac90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:38:39.237594041Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:36:12.021420881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:38:34.424958424Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:38:35.507274933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:38:35.977943417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:38:38.637081796Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:38:39.237594041Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:c310eaa3fb05feba0ddec650ae00eb7cd5b2fde19493815c0af95a3c11a23d2e",
                    "sha256:7435ea73ed4f0e843a00e4793cc49fa323925b6064c23fb2ab1c5c8f658a2cf0"
                ]
            }
        },
        "1.13beta1-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79fab78f322caed8fd39c4c96633d9f12ee82fc2979d6722908911c9e907ac90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "12f1cd084b893802b90fb9f5de5cfe4abbd8982bd790e3d5d2a5d26f7f7ce0b5",
            "container_config": {
                "Hostname": "12f1cd084b89",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:79fab78f322caed8fd39c4c96633d9f12ee82fc2979d6722908911c9e907ac90",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-20T21:38:39.237594041Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-20T21:36:12.021420881Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:38:34.424958424Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-20T21:38:35.507274933Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:38:35.977943417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:38:38.637081796Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-20T21:38:39.237594041Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:c310eaa3fb05feba0ddec650ae00eb7cd5b2fde19493815c0af95a3c11a23d2e",
                    "sha256:7435ea73ed4f0e843a00e4793cc49fa323925b6064c23fb2ab1c5c8f658a2cf0"
                ]
            }
        },
        "1.13beta1-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f4537deb1efcf4abb0aba9fca8e18332c01ddd2988937da530439d9f65b7d01",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "ea771a0ead0f13c01f5be532461ed73a6f7bb8de710d544882a5bd0068ad4c37",
            "container_config": {
                "Hostname": "ea771a0ead0f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2f4537deb1efcf4abb0aba9fca8e18332c01ddd2988937da530439d9f65b7d01",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-14T21:32:22.373742489Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:59.335825108Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:32:19.424204735Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='dbd131c92f381a5bc5ca1f0cfd942cb8be7d537007b6f412b5be41ff38a7d0d9' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='77993f1dce5b4d080cbd06a4553e5e1c6caa7ad6817ea3c62254b89d6f079504' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='298a325d8eeba561a26312a9cdc821a96873c10fca7f48a7f98bbd8848bd8bd4' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='38039e4f7b6eea8f55e91d90607150d5d397f9063c06445c45009dd1e6dba8cc' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='0f3c5c7b7956911ed8d1fc4e9dbeb2584d0be695c5c15b528422e3bb2d5989f0' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='877065ac7d1729e5de1bbfe1e712788bf9dee5613a5502cf0ba76e65c2521b26' ;; \t\t*) goRelArch='src'; goRelSha256='e8a7c504cd6775b8a6af101158b8871455918c9a61162f0180f7a9f118dc4102'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-14T21:32:20.15902131Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:32:20.584487354Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T21:32:21.956835132Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-14T21:32:22.373742489Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:5fc3aab1135928ce268cda403ae36ed549277ffab0afd3a6e256145fc00128df",
                    "sha256:149111dfeeb6c580b06f0f9b4ea792712b99daa8b8f7f3f89f4e8f962aabaced"
                ]
            }
        },
        "1.13rc1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3405ff3d8e0c2270417b7253f298538700289b87f89247d58ff3a21f483f79a5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bd931c1baf66e082843c782bded8b60566e4628dae36b02fa02576b6348c8a43",
            "container_config": {
                "Hostname": "bd931c1baf66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3405ff3d8e0c2270417b7253f298538700289b87f89247d58ff3a21f483f79a5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:08:39.722354415Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-21T22:06:17.264052684Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:08:36.571023238Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:08:37.496605055Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:08:37.946424932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:08:39.270668111Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:08:39.722354415Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:0ab675793bd3ca336e19c465a3fe0f32843ffe0600ded32379c2209fb935f47d",
                    "sha256:6a0ce9747fa5a21f59231ef2578e603df162ec2e775717aa2e8521447b62a95c"
                ]
            }
        },
        "1.13rc1-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3405ff3d8e0c2270417b7253f298538700289b87f89247d58ff3a21f483f79a5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bd931c1baf66e082843c782bded8b60566e4628dae36b02fa02576b6348c8a43",
            "container_config": {
                "Hostname": "bd931c1baf66",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3405ff3d8e0c2270417b7253f298538700289b87f89247d58ff3a21f483f79a5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:08:39.722354415Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-21T22:06:17.264052684Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:08:36.571023238Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:08:37.496605055Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:08:37.946424932Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:08:39.270668111Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:08:39.722354415Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:0ab675793bd3ca336e19c465a3fe0f32843ffe0600ded32379c2209fb935f47d",
                    "sha256:6a0ce9747fa5a21f59231ef2578e603df162ec2e775717aa2e8521447b62a95c"
                ]
            }
        },
        "1.13rc1-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ff27ce558044926e68c00fa7b53cb4ade19dffd7dd8b991d98b8526b867e7bb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "d58aadff4316a7eb8aa3ddf7d793fcc8432ba8d70543e1d4807b3354b50cd68c",
            "container_config": {
                "Hostname": "d58aadff4316",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3ff27ce558044926e68c00fa7b53cb4ade19dffd7dd8b991d98b8526b867e7bb",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-21T22:06:08.153706547Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-21T22:05:41.980819493Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc1",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:06:04.288124811Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='0b45d086aefcfb9d0ebe7fc9ffbe470e45f9c104a6a97ea275512152cdbfead1' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='d0118038c68276179523dfffba3ad49662842b8e4e37b5801d753c731241d745' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='be16145c9fa218340766b19edd175b109adab826155add2fd504430a751aaa19' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='98368195013a6140573835db93038a7977c61cabff53618a785659edb9378bb1' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='e351c396262b3c411459e08a2ff9bec9d720760bd8811fd1f59262d02f9f504f' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2fd64292498fb70074ff4560da4a7e444d3325c219a6987f4b2186d231244921' ;; \t\t*) goRelArch='src'; goRelSha256='dc5c1f4501daf486f69ca9a795202b289824c303291bf26c42a5b6c1770ba3a9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-21T22:06:05.189653735Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:06:05.674549062Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-21T22:06:07.480906235Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-21T22:06:08.153706547Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:be12fab42f94d89d47712ea8b1eabe16074c633f0a28dbe662a19cb988e13dd6",
                    "sha256:6e45d450dfeec512645234c162ae7cac38a5fe064f493595f744a83c85e49423"
                ]
            }
        },
        "1.13rc2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b8c933bd50a6af8a4bb3ac201f01c4ddb6e5aa67ca624a126e833ca3b982b05",
            "container_config": {
                "Hostname": "3b8c933bd50a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:51:06.076155583Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:48:55.018542114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:03.229907771Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:51:04.201180036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:04.499041343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:05.729111391Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:51:06.076155583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:3150bc8fb861b66bf32a94934e10eb39c09c2d13d63fd4fcc8554e49fba3dff0",
                    "sha256:b9fb48ae42df35fe5bae66375c6364db4080f86cac1424e7fdf9c7e02720b2b2"
                ]
            }
        },
        "1.13rc2-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b8c933bd50a6af8a4bb3ac201f01c4ddb6e5aa67ca624a126e833ca3b982b05",
            "container_config": {
                "Hostname": "3b8c933bd50a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:585d8f1ca1a5900921566fa454a12a0f11b83e3ac8a91193cafd0e5787c9f43f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:51:06.076155583Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-20T20:42:38.446118503Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:413f55aefacb48a73d92bdf838f20fb33ffc2ed9ba404511b2428085c2366f38 in / "
                },
                {
                    "created": "2019-08-20T20:42:39.000085166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-20T21:36:10.108588638Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-08-20T21:36:11.535517291Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-08-29T21:48:55.018542114Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:03.229907771Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:51:04.201180036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:04.499041343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:51:05.729111391Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:51:06.076155583Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:863564441dbdea90bd871ae83f7caf81d6788eecd91cba32c0a67d0f72d12cf1",
                    "sha256:974f842c39b15e23c7594572a81e1d476099050aa9be08692eea6b751ae5b898",
                    "sha256:9b7e21c657ca443fc1070d44335c3b9acb4bfbac2f4f5de3c00dbc5111eaa0ed",
                    "sha256:3150bc8fb861b66bf32a94934e10eb39c09c2d13d63fd4fcc8554e49fba3dff0",
                    "sha256:b9fb48ae42df35fe5bae66375c6364db4080f86cac1424e7fdf9c7e02720b2b2"
                ]
            }
        },
        "1.13rc2-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:354d04c07e4d8d69406f1ec04a05b0d217bc6dacb2c6162d10ddf12d2bce7631",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "417a1010c3eef07256dbda4ab26aee2abbfe413e63df85bfe47c13eb95c53b1c",
            "container_config": {
                "Hostname": "417a1010c3ee",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.13rc2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:354d04c07e4d8d69406f1ec04a05b0d217bc6dacb2c6162d10ddf12d2bce7631",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-08-29T21:48:48.643903169Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-08-14T00:42:55.064057797Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5161b24251b2c6b1dbfb77c5025f701e0b8d901d4f8ae3954395e5a02939e16a in / "
                },
                {
                    "created": "2019-08-14T00:42:55.789996141Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-14T02:52:22.389078406Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T02:52:37.30407658Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2019-08-14T02:53:26.742233036Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-14T21:31:58.429963357Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-08-29T21:48:31.016300723Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.13rc2",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:48:45.59276862Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='3cd4490021a5f1f25a7440edca03910e40a38e587b578cf52ab7143a81db1861' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='deebe2b723c818293046629344f09ead1610fba608aea038bcf25da70766f944' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='184c9fff6bba9da1cf23ba7f52561cc777ac7feaf73621b3824f4a30ffa4648d' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='5f5d235b73672ee5d26917d3907f8f1966af60d4391477a5afd4300d070ca852' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='7656da8bb13e450754d5df35c7d21dafb5847b00779dcc08f3c41eec7d817037' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='6016103bab62f1fe6b8f90665888a23ae8c825a8e7db7a607877298148e593cf' ;; \t\t*) goRelArch='src'; goRelSha256='0c7387b3be32718282a39faa3020ff30365ef70e64fa71e10017a986587b7fe9'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-08-29T21:48:46.431895911Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:48:46.803016057Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-29T21:48:48.253013678Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-08-29T21:48:48.643903169Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95b0ef43e5452d2e26e1b0a00b69e65c328c6936bcc22e1a4b0713cb1bfedec7",
                    "sha256:21afc39cbe682b08df1d4d783b8f8e4cec8d4308fb298b42f63c5f972cc40e85",
                    "sha256:3c5d43c879098a8e39063601e4bfeeafa7af7e4f59fe3a4df8960e0d2b73413b",
                    "sha256:ad58c3a77c5613e444e113a46323d1520e920a60c4e5d2f415f44490d5da2d8b",
                    "sha256:ccfb47d28cf54b75284c7c48187f71981bd985b6bfd3303a137cdf8cea68c69c",
                    "sha256:f51f43529b1512ce3a59ee40c0eb1f9a901d8eaa0fbe8d964970aee6c781bfbc",
                    "sha256:fe7c1e92bc6b7c690f6722a77c644c7b00b558922e151ddba7ffcd3d29fd757f"
                ]
            }
        },
        "1.14-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f678f2cacc4e2ecdfab3a3f877b22f63d4b9272564dd5193f23fceeeabcdbd2e",
            "container_config": {
                "Hostname": "f678f2cacc4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:36:08.680373694Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:41:35.430599176Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d97e6c37df0fb8306b072d9c0a32f68f5aff583ba849303926644deacfa25eb9 in / "
                },
                {
                    "created": "2021-01-28T23:41:36.719586322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:17:42.51420302Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:17:43.550157403Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:17:43.86599661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:32:48.064806272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:35:57.359239493Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:36:06.065439516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:06.54021567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:08.244443293Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:36:08.680373694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4c57e0e551aef82c82daeb7ea21994acdbf049b3cd6e792799a206cedab6c53",
                    "sha256:81540e5fce8fd8128788bfb8e8a43b8df08e7601f420299d15474d441dddf3f3",
                    "sha256:e20072b65071622e5c949d6c030e672e0226c415b20b77a416faca9c28759736",
                    "sha256:4ee04ee76227174192b466d02c702db51225d476f18ce229b195bee512abac0f",
                    "sha256:999e22bdc690f573c901a87b7717d0064a5c7b3bf421da2394d09c8bb887ed6f"
                ]
            }
        },
        "1.14-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2494e1e24a83fd2539c6fa4974bba1e12ca19b9abbbf35b86e667dda46571840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "81dc98ccd516ac6ae8bfdc26ac1180972e1754262dd8621bbed12aeb3be6c881",
            "container_config": {
                "Hostname": "81dc98ccd516",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2494e1e24a83fd2539c6fa4974bba1e12ca19b9abbbf35b86e667dda46571840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:41:14.916150753Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:44.154871066Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e0a7f4c5f520dabbf66a5d4312ceeb614fc5073fca7a248eb070cd99f4b75ff in / "
                },
                {
                    "created": "2020-12-16T23:41:44.861349603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:56.851268616Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:37:58.382924679Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:37:59.125153668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:39:02.674797816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:41:05.549276753Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:41:12.998178085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:41:13.35109727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:41:14.554227974Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:41:14.916150753Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3873f4a6530144f795fad16ef70f83463b35ad0d36dd0c0f323541d93204444",
                    "sha256:b24b9ddba964d7043b664936b593b3e38e7cc25c734b5b405b380ee907e72b76",
                    "sha256:cea2bc22a3cee8fccc1f6f55370f1911d0eac068b36e132505987b7e507f9059",
                    "sha256:153b2a8bb2ea33acc5837490047df4aaa9230456f319faace7525ce8fc96083b",
                    "sha256:9f9f57ecbfad9db32dc221efdfc92f53c5a01679c792aba1dce6bef649ca3126"
                ]
            }
        },
        "1.14-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:3b5224824d638a6e28156ca23a798b422ca3052ec7f4d9fe6e2c6b888ab0c780",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "496cf0ce0b895086bf9016e13c0432efd3bb6b8fd208720fca0fc06328af7f66",
            "container_config": {
                "Hostname": "496cf0ce0b89",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3b5224824d638a6e28156ca23a798b422ca3052ec7f4d9fe6e2c6b888ab0c780",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:38:54.520972925Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:37.206913925Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ad3856d165e8760af85574a8ffa75ca44b7e1b97b64d1d6d4608445efa4b860 in / "
                },
                {
                    "created": "2020-12-16T23:41:37.976250939Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:33:00.176135947Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:33:01.972036124Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:33:02.461302917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:26.906988527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:38:41.298087974Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:38:52.094897545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:38:52.69139445Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:38:54.078590221Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:38:54.520972925Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1498886f9a6173beaafc4fee55074d6c389ce2f70d1a4b0ee866e4ab45a41ad",
                    "sha256:7e2aff220bd4b74d68b2bf965171847582fee1ae2684eb58678cb753899a638f",
                    "sha256:80badda80958439bdd77c136da2fd784716c79c33d9e5764fefe5aeaeb0afc54",
                    "sha256:d58c6ae456112f99bc8aa3fdf132e98f8be24e07e1b1d6b2019fd2955e746567",
                    "sha256:06da8de51146b7daf5f8310f9ff9644c4c10075b14568195083f3a735f356024"
                ]
            }
        },
        "1.14-alpine3.13": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f678f2cacc4e2ecdfab3a3f877b22f63d4b9272564dd5193f23fceeeabcdbd2e",
            "container_config": {
                "Hostname": "f678f2cacc4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:36:08.680373694Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:41:35.430599176Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d97e6c37df0fb8306b072d9c0a32f68f5aff583ba849303926644deacfa25eb9 in / "
                },
                {
                    "created": "2021-01-28T23:41:36.719586322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:17:42.51420302Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:17:43.550157403Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:17:43.86599661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:32:48.064806272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:35:57.359239493Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:36:06.065439516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:06.54021567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:08.244443293Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:36:08.680373694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4c57e0e551aef82c82daeb7ea21994acdbf049b3cd6e792799a206cedab6c53",
                    "sha256:81540e5fce8fd8128788bfb8e8a43b8df08e7601f420299d15474d441dddf3f3",
                    "sha256:e20072b65071622e5c949d6c030e672e0226c415b20b77a416faca9c28759736",
                    "sha256:4ee04ee76227174192b466d02c702db51225d476f18ce229b195bee512abac0f",
                    "sha256:999e22bdc690f573c901a87b7717d0064a5c7b3bf421da2394d09c8bb887ed6f"
                ]
            }
        },
        "1.14-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6bda67697bdb8d53809e21efc5fb438b6ae602e136865d2879643f9ad4bf73ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8303f1c5b9dcd9af0fcd98c551544d836ab670d07125f743ef7068fddd052860",
            "container_config": {
                "Hostname": "8303f1c5b9dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6bda67697bdb8d53809e21efc5fb438b6ae602e136865d2879643f9ad4bf73ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T11:32:27.586054969Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T02:41:56.658500626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f390b371893461fffed2fb48d65b6c930137539a82b9c5329410cef322a5a9ea in / "
                },
                {
                    "created": "2021-02-09T02:41:59.181814728Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T03:05:21.318914732Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T03:05:26.318422765Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T03:05:45.172464144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T11:30:58.134881276Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T11:31:00.5585486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:10.384044019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:22.09196705Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T11:32:26.549899479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:26.730291146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:27.342402454Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T11:32:27.586054969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6db30d6be074a73dd573e72c2aa1229f6345266b7c35e66aee51122892d1669",
                    "sha256:cc0cfb67b5c4c5002cd0c7721c6a4edf5977cf73749881a66f44deb7272a3e14",
                    "sha256:6c818348fc4fe384988416863a8cfa5ac64d5e0e71a46bd0f0eaf22b78ad93a2",
                    "sha256:736b7b7498ccbb1608f8a7bb2116b1dfbb165489f9cca1e65c7340b96da597ed",
                    "sha256:2bce62cc6b18707344338b136468973932d74f12c2a22e594f559de39a210e0b",
                    "sha256:563f9274965c96902f6a17495a7ef99bb471ae7cfd744b5a221a7b2dd5f9d283",
                    "sha256:dcbd1ce7c55f91a572769bc89a29f809c70f5aafbd371967c4da22d36c6c65b2"
                ]
            }
        },
        "1.14-rc-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3497e4bcaadc2288b26b2cb21a629fe34d00050df2322c6382d57010bb124be",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "acdf73aa338a1af7c2e7268316578007f45cd21a57d5498c2acb505af896643f",
            "container_config": {
                "Hostname": "acdf73aa338a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3497e4bcaadc2288b26b2cb21a629fe34d00050df2322c6382d57010bb124be",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-05T23:56:22.904082623Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-05T23:54:59.3570018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:56:15.909398121Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-05T23:56:21.836786726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:56:22.020738423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:56:22.680597931Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-05T23:56:22.904082623Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:a8572dd3c87d12dcb26436da9fa469b03c123d7ae97d419e710d03d6b46f008a",
                    "sha256:e3905258bffc6f04d9b0b99c443220e6e3e20bf0048f2ef19a9c2b49000896cf"
                ]
            }
        },
        "1.14-rc-alpine3.10": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19ae6610e359000d096ffac10a83dc8ccf62aaed133d38c11d4164fdf8554145",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "83cf1226affce92b7810495d68bb8ada51e76ca0adf7e2ed14c32a2721fec09c",
            "container_config": {
                "Hostname": "83cf1226affc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14beta1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19ae6610e359000d096ffac10a83dc8ccf62aaed133d38c11d4164fdf8554145",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2019-12-18T00:43:05.016194832Z",
            "docker_version": "18.06.1-ce",
            "history": [
                {
                    "created": "2019-10-21T16:47:28.389108862Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49020543846e4f93b34d71c0e4234ade7bd6dde3f45cb73784aa73ce0522c8bc in / "
                },
                {
                    "created": "2019-10-21T16:47:29.199720047Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-21T17:22:03.127591817Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2019-10-21T17:22:04.501462221Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2019-12-18T00:41:55.167543626Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14beta1",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T00:43:03.012476273Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo 'af952217fcb408180006f29e77f1c3b871192fba7f99abd5aa421cf2f0358fea *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2019-12-18T00:43:03.580245296Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T00:43:03.803734284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-18T00:43:04.780667129Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2019-12-18T00:43:05.016194832Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0a2d800493738e3bf1ae4cec4e0382d37d8b7064185c452e6d7dda4ab5eb7ead",
                    "sha256:605f3261c6aca9c8a33b213184e6b9d8a9a890b2a1f13f64f35a81ee7defe2d1",
                    "sha256:21241f062857b02e85ed8d06b65ca91e7f5e7c0d6a74df7ca042a28eef6be942",
                    "sha256:60f65de30672c4d26cc48936aa91671c82e60d92b4c8f033d67602b1da3daf33",
                    "sha256:30712f074f330ab654efd4385d233092306e645950562906d3bf1701821c3fba"
                ]
            }
        },
        "1.14-rc-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3497e4bcaadc2288b26b2cb21a629fe34d00050df2322c6382d57010bb124be",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "acdf73aa338a1af7c2e7268316578007f45cd21a57d5498c2acb505af896643f",
            "container_config": {
                "Hostname": "acdf73aa338a",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b3497e4bcaadc2288b26b2cb21a629fe34d00050df2322c6382d57010bb124be",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-05T23:56:22.904082623Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-05T23:54:59.3570018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:56:15.909398121Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-05T23:56:21.836786726Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:56:22.020738423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:56:22.680597931Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-05T23:56:22.904082623Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:a8572dd3c87d12dcb26436da9fa469b03c123d7ae97d419e710d03d6b46f008a",
                    "sha256:e3905258bffc6f04d9b0b99c443220e6e3e20bf0048f2ef19a9c2b49000896cf"
                ]
            }
        },
        "1.14-rc-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:997f9e2c4ef275b77603bd0d7c54e0e3693cfab321c87da19f2546527cf3c614",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "edb30f4172a8131cbc839bcfca9fc986ef39026f6f23b92e7e2bb906342d1c88",
            "container_config": {
                "Hostname": "edb30f4172a8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:997f9e2c4ef275b77603bd0d7c54e0e3693cfab321c87da19f2546527cf3c614",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-05T23:54:54.257347255Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:42:14.611862776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:642aef2e391d18e3999374d6068f29ccc5ad62b25a0d18c852a6b5534daa18f7 in / "
                },
                {
                    "created": "2020-02-01T16:42:17.103633842Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T17:50:06.040856429Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T17:50:10.595293372Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T17:50:31.474116864Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:01:23.888198931Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-05T23:54:25.265068136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:54:47.887628953Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-05T23:54:53.170787542Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:54:53.364862952Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-05T23:54:54.03237324Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-05T23:54:54.257347255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce9ae4d85766f36c16f76335167b6ff66f01ec49ff1fd15b34d51ae44c2b827a",
                    "sha256:d5ca591fbd5c5eb90cdb08fe05704093261e850fd2e1cb13214387bd093f1317",
                    "sha256:b28011d3a4044088991efd1ac1c8f9e7b5d169c3229b142532ed89f597ad251c",
                    "sha256:91cc825677a7691dd2ceadaea5b90144d7578b19044d58f91bb5a6bc586f6a04",
                    "sha256:53df2c5f8b0d79e1336ffe66722cfd3438a02a86c845cd7f597efa00f1f2c336",
                    "sha256:b0049267ab2e864c011d0b4e02bc12276ab0dcef59eabe79173a2b8f6c58ccb0",
                    "sha256:96bdf8ccd0c631998ef7e581e8f70539697f5c271ba7317bcf7790a144e8831f"
                ]
            }
        },
        "1.14-rc-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:996404cf64bfd3c5cbe62519e9bc7cf9303c54296759620894c46f4e652ab438",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b52769a49f072b071a9842ae9af2d44b40c804f985da153669e67a58091d5872",
            "container_config": {
                "Hostname": "b52769a49f07",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14rc1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:996404cf64bfd3c5cbe62519e9bc7cf9303c54296759620894c46f4e652ab438",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-10T23:46:48.86350716Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-01T16:43:43.10676531Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:17af4834ca99365d5ecf14eb938572689bd3c3ad5fd8a88da12c4c3474975771 in / "
                },
                {
                    "created": "2020-02-01T16:43:45.448668694Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-01T18:00:05.998032957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T18:00:10.073726234Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-01T18:00:32.841833549Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-01T23:02:27.410645524Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-10T23:46:30.805214888Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14rc1",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-10T23:46:43.01508647Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='69398d41e5f6b87cdf3969aae665be4dfd3cc2ef36a61ab47a261f96130ed788' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='bfe041f7d2a62f895f2d11703a29bdd31a48cca9a3c36418d59680bc1cbb8a6d' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a5509448b06f02f5198fe8bbf5af88ab483af9c46f231c3f308748016fbc32c9' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='831087aa0eba8b6dfa221036d00641613996ac66d7c635f1e34c53d5f0922623' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='fe1bf34d2b117d785f2fb33151c44ca8bc2188678c9e903fa0ad30573547b412' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='2302fa0e30144a969cb1879eed8aeb9a82c2b520fcda8aebbb20a539ad427c25' ;; \t\t*) goRelArch='src'; goRelSha256='76188ea84e95baa502d058c9598020c7654d6adaf40b82cabcf57c68df19963a'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-10T23:46:47.724071533Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-10T23:46:47.901017511Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-10T23:46:48.624384933Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-10T23:46:48.86350716Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:243e9604e20f567f6e9429f240bb02d5ef5db2eb3f56f28b4ed33feea0727e4c",
                    "sha256:a4c9827bc1ab9b709f72fbebb77db0e5dee3f97330d5825e43b3d3bce003d5d2",
                    "sha256:891ccf47c6ae19f4440e245373355c4e0e8f07f7f531028112953f984b137f7a",
                    "sha256:b3b708bfc02280b6ee5084770f85aa5c9ee498d625fd35f5ad3a5a1a3e889876",
                    "sha256:4d4abc98dc73a30130742b13258b3234e4ae349b45d72621157f733ad39e0e24",
                    "sha256:e0cbc60208d1ab20557be516878983ee83616830f7b4c43577ee20ffcd3876b4",
                    "sha256:e8c4f86edd353d77453dd85b3dd9c2d757d75324b108d64432c4b8a24285e900"
                ]
            }
        },
        "1.14-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a3982157e3747f171feed6179fbf8536b9d9b1ffb1a9e193883c2560facc3645",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "74ae8a26911eb65345cf8718850e9c227cd83f0609cb84cb2b20ad81b6f369ad",
            "container_config": {
                "Hostname": "74ae8a26911e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.6",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a3982157e3747f171feed6179fbf8536b9d9b1ffb1a9e193883c2560facc3645",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-07-17T02:42:39.571725612Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-06-09T01:44:05.164487785Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ce4b8c76522cbe8599502985424901aee9d30d37296761d47dbcb9b0770f7aa2 in / "
                },
                {
                    "created": "2020-06-09T01:44:08.233927505Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-09T02:13:24.25262502Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T02:13:28.631359651Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-06-09T02:13:54.156684337Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-09T11:58:25.803725287Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-23T21:09:08.41560371Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:19.708983092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.6",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:33.870036293Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='5c566ddc2e0bcfc25c26a5dc44a440fcc0177f7350c1f01952b34d5989a0d287' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='cab39cc0fdf9731476a339af9d7bcd8fc661bfa323abb1ce9d1633fb31daeb07' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='291bccfd7d7f1915599bbcc90e49d9fccfcb0004b7c62a2f5cdf0f96a09d6a3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='17b2c4e26bd3a82a0a44499ae2d36e3f2155d0fe2f6b9a14ac6b7c5afac3ca6a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='8eb4c84e7b6aa9edb966c467dd6764d131a57d27afbd87cc8f6d10535df9e898' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='cb1f2d001ce15e51f7c4bd43f15045ea23d49268010bb981110242a532138749' ;; \t\t*) goRelArch='src'; goRelSha256='73fc9d781815d411928eccb92bf20d5b4264797be69410eac854babe44c94c09'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-07-17T02:42:38.403882732Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:38.609723095Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-17T02:42:39.344369434Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-07-17T02:42:39.571725612Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f2c98919d330c2fbdf952180eb94af6ab93836482a5e74dc238ec6060abe6a77",
                    "sha256:f05945093c2b7f0ea547a8e994d0ba3d3f92cde2872edb0be6a38215fdb23e71",
                    "sha256:a459d0c1c28b387f1bcbf08546ac4c4d1469ea0f5defebbe90b146c24c27bdc3",
                    "sha256:45473c26d94be3fc63a6649c5c0a5f43a513079c17f0e9298649274fdda388c8",
                    "sha256:bdf94b8a07de978153bb3f28946de7961e173deb38e9ca78d8d4cec19ad0514a",
                    "sha256:c2687e6ce43c53a35d516172c965b83c8c82574f42c91958de502ea81204ba3f",
                    "sha256:a2a56959d142c62018d79928c717e21ca7dcb0eada2c95bb5dfb65c005cd9a23"
                ]
            }
        },
        "1.14.0-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc53087a4d3988f62037c73dd10e49c44794ceb243b54ecaee1283d0636da94a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6683a3ce58109cbb9de8a9efdfda8a9798eb78f3734a29bcec308150b46496c",
            "container_config": {
                "Hostname": "b6683a3ce581",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc53087a4d3988f62037c73dd10e49c44794ceb243b54ecaee1283d0636da94a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T01:05:28.85340301Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-26T01:03:32.975421606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:05:10.771968828Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T01:05:26.430004364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:05:26.86879922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:05:28.226457215Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T01:05:28.85340301Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:7f79029d0213bf55c1084debc5d3fe6f14d8f425e123e96ccaafb454f92c9407",
                    "sha256:1a0c8faff1e655e80908ac323a794f9aa3d9107829086cb225606ca1469342ed"
                ]
            }
        },
        "1.14.0-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc53087a4d3988f62037c73dd10e49c44794ceb243b54ecaee1283d0636da94a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b6683a3ce58109cbb9de8a9efdfda8a9798eb78f3734a29bcec308150b46496c",
            "container_config": {
                "Hostname": "b6683a3ce581",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dc53087a4d3988f62037c73dd10e49c44794ceb243b54ecaee1283d0636da94a",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T01:05:28.85340301Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-01-18T01:41:33.506572707Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a6f8b7d4ba199527053ef1ac710b5e318135cb6903cb9ad6fae4fe42e6ad0bf7 in / "
                },
                {
                    "created": "2020-01-18T01:41:33.681579391Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-18T01:42:23.944267168Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-01-18T01:42:24.593501857Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-02-26T01:03:32.975421606Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:05:10.771968828Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T01:05:26.430004364Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:05:26.86879922Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T01:05:28.226457215Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T01:05:28.85340301Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1f106b41b4d67dc533fc0172011dcee125a19ab22080bc960f7b9461a5e33253",
                    "sha256:7d88b6f75109e6614eac27404d8b2d7021eb8f2c2a4cf02babc9e4605150769b",
                    "sha256:34d40e3cd82812a4ae62f31b9c4b5bcc60773bc8138aec4dd9d17c00eb9f0791",
                    "sha256:7f79029d0213bf55c1084debc5d3fe6f14d8f425e123e96ccaafb454f92c9407",
                    "sha256:1a0c8faff1e655e80908ac323a794f9aa3d9107829086cb225606ca1469342ed"
                ]
            }
        },
        "1.14.0-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:896b9e7816b6c691a24058b56e2607ba0d83635280a459731d869cf3c7e9ee93",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "a6d17ecc2019000d7f181b3ad1d30d1904796207d274157b8d6d8d88ac8134db",
            "container_config": {
                "Hostname": "a6d17ecc2019",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:896b9e7816b6c691a24058b56e2607ba0d83635280a459731d869cf3c7e9ee93",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T09:21:22.790424409Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:42:32.257773653Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:80536bfff518f6b425ad359b86a124f79ccdc82deb3e648f1746a7c87a1fcad0 in / "
                },
                {
                    "created": "2020-02-26T00:42:35.544508974Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T04:33:17.233898937Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T04:33:27.620419326Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T04:34:09.671385438Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:20:40.842685722Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:20:47.602851724Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:21:09.579437223Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='08df79b46b0adf498ea9f320a0f23d6ec59e9003660b4c9c1ce8e5e2c6f823ca' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b5e682176d7ad3944404619a39b585453a740a2f82683e789f4279ec285b7ecd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cd813387f770c07819912f8ff4b9796a4e317dee92548b7226a19e60ac79eb27' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cdcdab6c8d1f2dcea3bbec793352ef84db167a2eb6c60ff69e5cf94dca575f9a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b896b5eba616d27fd3bb8218de6bef557cb62221e42f73c84ae4b89cdb602dec' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='22e67470fe872c893face196f02323a11ffe89999260c136b9c50f06619e0243' ;; \t\t*) goRelArch='src'; goRelSha256='6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T09:21:20.469755864Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:21:20.930057702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:21:22.379896583Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T09:21:22.790424409Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8d3e25cc4fc2c8e969f3b00469b01d6b892eb1e04da5cf389318a7838350caa5",
                    "sha256:6ffa584e32a8d3689ab0823c3c4dca8cbbf8c977b139b605a77bf7328827d83a",
                    "sha256:a32eccb1db9c1fe7efc307dd547d7ba6e573a9f994d185d1fa091c24f01ae2b6",
                    "sha256:ee91d071fe9e86d8a1a8ed728e12a81e424b46928d34e9a0b564bdada9e11e32",
                    "sha256:84f8b73ebe3a5afb208130d4db97f70cab59b65e6be5df9103b483504a31706c",
                    "sha256:1d8e9adad18ddd7e0a806eafefd8d34759a7e553349c638aecc6e0d8f4a5d52f",
                    "sha256:c11311db053745857f92b44980447489901b31245cfc7a9803903542509f4703"
                ]
            }
        },
        "1.14.0-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d437fbf779e4fbcb4274cb7773dfb9c8c54fdf2702d1416e10bc54d42d18f001",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "065e5eb50bc7d253829460e51fe247641af8fac06703057855c4e51c533da093",
            "container_config": {
                "Hostname": "065e5eb50bc7",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d437fbf779e4fbcb4274cb7773dfb9c8c54fdf2702d1416e10bc54d42d18f001",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-02-26T09:22:25.479517748Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-02-26T00:44:30.450033951Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bb76ab55808bcd0567a32c3d7328d5c1719147f0f723a4aa574872eb8f12b4d4 in / "
                },
                {
                    "created": "2020-02-26T00:44:38.118026916Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T04:42:02.964127679Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T04:42:11.754608285Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-02-26T04:42:56.824979668Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:21:51.052397289Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-26T09:21:55.128584332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:22:15.155079673Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='08df79b46b0adf498ea9f320a0f23d6ec59e9003660b4c9c1ce8e5e2c6f823ca' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b5e682176d7ad3944404619a39b585453a740a2f82683e789f4279ec285b7ecd' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='cd813387f770c07819912f8ff4b9796a4e317dee92548b7226a19e60ac79eb27' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cdcdab6c8d1f2dcea3bbec793352ef84db167a2eb6c60ff69e5cf94dca575f9a' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='b896b5eba616d27fd3bb8218de6bef557cb62221e42f73c84ae4b89cdb602dec' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='22e67470fe872c893face196f02323a11ffe89999260c136b9c50f06619e0243' ;; \t\t*) goRelArch='src'; goRelSha256='6d643e46ad565058c7a39dac01144172ef9bd476521f42148be59249e4b74389'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-02-26T09:22:23.705003396Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:22:24.035966156Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T09:22:24.961026321Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-02-26T09:22:25.479517748Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9ce87416f5c7931d1ebd36a90c0084238bd2e8ad8f47c0a7d1ab4e8b02b3c4d3",
                    "sha256:52329abf3b2351f1d67d735636602c3663c9bf8f41cdeeb032ad1b6bbdfbe86c",
                    "sha256:1cc70914746d8e68786d05286820b671517e0f8af328c8055617fcf77df46383",
                    "sha256:41dd9912a575bdbf7a98896d4a06afb4d62f8a0e8523526d90730d9a160b6815",
                    "sha256:23bc7a4d81c4e2ab63264e354f6120456b3da3db8b2d95ee6c6a6ee119a4e8f2",
                    "sha256:aaa9c4b7d02f0c2444ef7256eb99092375ac7a596fb918d7fd8fd5e59c8e7ed5",
                    "sha256:f02482f410ff19159eb4ca58a31fc3955bbfd95bda87e9283e0b5b8ec16dc01b"
                ]
            }
        },
        "1.14.1-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:784a2324aa37758272e8223fa4d7412076f09c35074a10a19a8f6fbb95000319",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4facdb7e812c4bcf531020c40e0d49968d558a0d6f94d201766542e5aa85c367",
            "container_config": {
                "Hostname": "4facdb7e812c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:784a2324aa37758272e8223fa4d7412076f09c35074a10a19a8f6fbb95000319",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:28:28.15247119Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:41:34.632373097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b6d4ad8fd0ec7f66e6d54b8cd8937ba7821b44096806af78692b4cab6d087a9c in / "
                },
                {
                    "created": "2020-03-23T21:41:34.907606923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:27:08.606437525Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:27:09.292117273Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:27:09.468323034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:28:21.290446938Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:28:27.024293617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:28:27.244043041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:28:27.945448481Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:28:28.15247119Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0f4d46f0129c70cb7700c3aa1c05ffce8ce8d603208f2194478580c5d7ce11b",
                    "sha256:b1d2fe86e433b99f9802102b6bf69a35f9de60db164c89976b0e4c684be100e4",
                    "sha256:902002e1d0e380a1cf26f6a7cd3b5c5f4214ea34481d26ce366f820d39463113",
                    "sha256:c5f25525de85ce4bb9100846f712c8524cba489f48aa51f07960ee25d94ffc49",
                    "sha256:3351a555db85b50d9abde23e52c7701d2fe87c6bb1d7f4000af5f09e9ae6a81f"
                ]
            }
        },
        "1.14.1-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:784a2324aa37758272e8223fa4d7412076f09c35074a10a19a8f6fbb95000319",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4facdb7e812c4bcf531020c40e0d49968d558a0d6f94d201766542e5aa85c367",
            "container_config": {
                "Hostname": "4facdb7e812c",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:784a2324aa37758272e8223fa4d7412076f09c35074a10a19a8f6fbb95000319",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-23T23:28:28.15247119Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-23T21:41:34.632373097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b6d4ad8fd0ec7f66e6d54b8cd8937ba7821b44096806af78692b4cab6d087a9c in / "
                },
                {
                    "created": "2020-03-23T21:41:34.907606923Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:27:08.606437525Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-03-23T23:27:09.292117273Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-03-23T23:27:09.468323034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:28:21.290446938Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-23T23:28:27.024293617Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:28:27.244043041Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-23T23:28:27.945448481Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-23T23:28:28.15247119Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0f4d46f0129c70cb7700c3aa1c05ffce8ce8d603208f2194478580c5d7ce11b",
                    "sha256:b1d2fe86e433b99f9802102b6bf69a35f9de60db164c89976b0e4c684be100e4",
                    "sha256:902002e1d0e380a1cf26f6a7cd3b5c5f4214ea34481d26ce366f820d39463113",
                    "sha256:c5f25525de85ce4bb9100846f712c8524cba489f48aa51f07960ee25d94ffc49",
                    "sha256:3351a555db85b50d9abde23e52c7701d2fe87c6bb1d7f4000af5f09e9ae6a81f"
                ]
            }
        },
        "1.14.1-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04ee634206ec07f2ac3d74469e2e5adb460bea6219c951da0bdaa4ffc6592519",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b5c328bd8d998e406dd64ed748bf0202f0acf98813fdac9a819ab3f5180c0309",
            "container_config": {
                "Hostname": "b5c328bd8d99",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04ee634206ec07f2ac3d74469e2e5adb460bea6219c951da0bdaa4ffc6592519",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T12:53:12.175580726Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:08:46.885962174Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2690e2e8794d163493c5a6daa8b6503432365b11e48372e175d855c28ec64db in / "
                },
                {
                    "created": "2020-03-31T01:08:49.400746498Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T02:20:52.281246381Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T02:20:56.994347014Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T02:21:16.256910175Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:52:47.435459291Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:52:49.768211453Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:53:06.743351182Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226' ;; \t\t*) goRelArch='src'; goRelSha256='2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T12:53:11.076095359Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:53:11.252035647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:53:11.968071517Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T12:53:12.175580726Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d249d6f732be16f3f72e3f0f6a99d69d62895e05febef24b3c590cacc2ce542",
                    "sha256:0ce183a1415e54d923834305fb9a4cca6cad2b0d21ee96d3925e0dda0643b288",
                    "sha256:f7a95c4a418a903b77aac73248fb095707e7e0ebe6afa32f390bdc0daaf0900a",
                    "sha256:8f4ce99d3013b2f598d16d5d053de935111793329298dbd6fdf638f15189cc92",
                    "sha256:c4e3e61478205a94dfe291a005b8d656340e3d91d3cb348a8b5dbc24e10a995c",
                    "sha256:5ff52726a3012b1548d14774b90e590dfd02ef33a0726b1665730fd7116d72cf",
                    "sha256:e159f75227915d2b5c5954114fa9bdeb51ea4f783d3a9a99a07498c640cd3a29"
                ]
            }
        },
        "1.14.1-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a61a942c67f619fe4bfd094525f36866d088a90747aaeafe1343ec33ecdd3634",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "41da335e4778ba7483024b78c15d7de30ad62d5549a3f1453468a0252e9c5e16",
            "container_config": {
                "Hostname": "41da335e4778",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.1",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a61a942c67f619fe4bfd094525f36866d088a90747aaeafe1343ec33ecdd3634",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-03-31T12:53:47.487815272Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-03-31T01:10:18.996226031Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b10f5f6f8f327b6ad71def930275eb5f518828e8eb19f79d20712e112ca35df in / "
                },
                {
                    "created": "2020-03-31T01:10:21.344125618Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T02:24:57.640101108Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T02:25:02.522008105Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-03-31T02:25:22.467216066Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:53:26.998777737Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-03-31T12:53:28.896144291Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.1",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:53:41.848740314Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='2f49eb17ce8b48c680cdb166ffd7389702c0dec6effa090c324804a5cac8a7f8' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='04f10e345dae0d7c6c32ffd6356b47f2d4d0e8a0cb757f4ef48ead6c5bef206f' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='5d8f2c202f35481617e24e63cca30c6afb1ec2585006c4a6ecf16c5f4928ab3c' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='92d465accdebbe2d0749b2f90c22ecb1fd2492435144923f88ce410cd56b6546' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='6559201d452ee2782dfd684d59c05e3ecf789dc40a7ec0ad9ae2dd9f489c0fe1' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='af009bd6e7729c441fec78af427743fefbf11f919c562e01b37836d835f74226' ;; \t\t*) goRelArch='src'; goRelSha256='2ad2572115b0d1b4cb4c138e6b3a31cee6294cb48af75ee86bec3dca04507676'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-03-31T12:53:46.484306265Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:53:46.667797417Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-31T12:53:47.276792896Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-03-31T12:53:47.487815272Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:87c56165b82275d16ef75940e8f62b285b561fddef987a8ad8571bd0b7a1da85",
                    "sha256:5b69dbe76ce19d555d290d6b8189541d1413a7f6c50c7a5dc0f55c0747bf17d0",
                    "sha256:4c444ff691139a409c5f07ac1c488e1a4fdfac4d8376b00950e6ba412a2a5e86",
                    "sha256:d3832f28183e7d4a58760432da5efbce463ce07c897aec725a85c821b17a94a7",
                    "sha256:aabad7bb6c28fb753993110a52f3d07d08e08aa45725c30004e3a57140935bba",
                    "sha256:ef03a0f4845196ce25ad8db673d3a0a6e13c7f47e19fbe218e5f4bdb1905125c",
                    "sha256:1ee2826261115adad8c84575b3c6a22689505c5922ac23c5ae2ab9d835466932"
                ]
            }
        },
        "1.14.10-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d40b108fd29691e6c3ce81948894ebe60fc75d6a542af738c4d2a41322559420",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b9a92c1528fabb1e1f565e971165109b1b17b464344cb5ee67f802dd50f87de4",
            "container_config": {
                "Hostname": "b9a92c1528fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d40b108fd29691e6c3ce81948894ebe60fc75d6a542af738c4d2a41322559420",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-22T02:57:59.292349326Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:59:08.543755547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e07d6f40b1afc3d3eff230bc89e84704eb762706a373a60c6bea6a45b2287464 in / "
                },
                {
                    "created": "2020-10-22T01:59:09.346930893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:53:28.884575445Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T02:53:30.705879373Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T02:53:31.210886556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:55:51.336485158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:57:44.396513154Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-22T02:57:56.899210552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:57:57.318288777Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:57:58.832088633Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-22T02:57:59.292349326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eb94f170b954481460395c32263bccc3893d05ae1459471da850f9540af3a2c6",
                    "sha256:f88983be42e6fa1019f1374e446ed014ff449d762672a7fa1dbe34508d45d9c9",
                    "sha256:d66b933e48585ced4cca07d6445a6475beb9e79d4566093420dd87b5374f67e7",
                    "sha256:e899c3f76e99cecb4d0fb7a718ce5b950118ac3110ac6cbf87ec333ad76705dc",
                    "sha256:189899c99054c4216692d08a3ae42df2fe54771df6284e5d4010b2187cff71f5"
                ]
            }
        },
        "1.14.10-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f007d22a0b45f832619fc29c184f77309437eaa9e65a1be53474b9c7e1234bd7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7c41f4ce590e45b10b004a3c6554b718cc987347d1019b1fbb0b1a1ff9b30c6c",
            "container_config": {
                "Hostname": "7c41f4ce590e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f007d22a0b45f832619fc29c184f77309437eaa9e65a1be53474b9c7e1234bd7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T01:47:28.354344799Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-31T23:59:26.895425094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:45:54.114191104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:47:22.483337321Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-15T01:47:27.255467345Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:47:27.470979964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:47:28.131829078Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T01:47:28.354344799Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:45384ed3d7a8144237850e6632587df2672cf46b44fbb5f4d6e8e31327ec2b27",
                    "sha256:4ff798065904ec33eb265eafd70a3c2af01b845d6533da05ce60c7b717e7b083"
                ]
            }
        },
        "1.14.10-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:d40b108fd29691e6c3ce81948894ebe60fc75d6a542af738c4d2a41322559420",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "b9a92c1528fabb1e1f565e971165109b1b17b464344cb5ee67f802dd50f87de4",
            "container_config": {
                "Hostname": "b9a92c1528fa",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:d40b108fd29691e6c3ce81948894ebe60fc75d6a542af738c4d2a41322559420",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-22T02:57:59.292349326Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:59:08.543755547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e07d6f40b1afc3d3eff230bc89e84704eb762706a373a60c6bea6a45b2287464 in / "
                },
                {
                    "created": "2020-10-22T01:59:09.346930893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:53:28.884575445Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T02:53:30.705879373Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T02:53:31.210886556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:55:51.336485158Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:57:44.396513154Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-10-22T02:57:56.899210552Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:57:57.318288777Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:57:58.832088633Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-22T02:57:59.292349326Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eb94f170b954481460395c32263bccc3893d05ae1459471da850f9540af3a2c6",
                    "sha256:f88983be42e6fa1019f1374e446ed014ff449d762672a7fa1dbe34508d45d9c9",
                    "sha256:d66b933e48585ced4cca07d6445a6475beb9e79d4566093420dd87b5374f67e7",
                    "sha256:e899c3f76e99cecb4d0fb7a718ce5b950118ac3110ac6cbf87ec333ad76705dc",
                    "sha256:189899c99054c4216692d08a3ae42df2fe54771df6284e5d4010b2187cff71f5"
                ]
            }
        },
        "1.14.10-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ca76083f03e9a97a504a149c4e8acdc7fe3fc44cd3b3b0e0dc0c75a012ee9f3d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "7a0c97b1131fc6dc10de4aca8d8775eb0d7b0dd9893be7078ad523bf1cbe3eb8",
            "container_config": {
                "Hostname": "7a0c97b1131f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.10",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ca76083f03e9a97a504a149c4e8acdc7fe3fc44cd3b3b0e0dc0c75a012ee9f3d",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-10-15T01:44:15.685480202Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-10-13T01:42:06.595171649Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cc8968c8733f7fb6fb644b948e4a21999440d079560afbb2acb9d666de3886ec in / "
                },
                {
                    "created": "2020-10-13T01:42:09.102921924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T02:06:05.163319983Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T02:06:09.986275597Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T02:06:29.419735835Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T11:49:13.374411047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T11:49:16.08709626Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:43:54.378131054Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.10",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:10.06338982Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-amd64.tar.gz'; \t\t\tsha256='66eb6858f375731ba07b0b33f5c813b141a81253e7e74071eec3ae85e9b37098'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-armv6l.tar.gz'; \t\t\tsha256='b601dbb186d786488470d73d4637c2144896bf6f499a4122bdd30f4e8dd79e70'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-arm64.tar.gz'; \t\t\tsha256='30700f7a9df3148df81013bd38715acd09ca5203b8e0aafa8b985306d5e9882e'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-386.tar.gz'; \t\t\tsha256='0e8e955cc80d2d7046312d16d800be82aa8ce9c5165b936348851923a75b4484'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-ppc64le.tar.gz'; \t\t\tsha256='ed5f7ab928ad8414598626740feac5918f7a915da943f21b41a81ad5c1dfa940'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.linux-s390x.tar.gz'; \t\t\tsha256='0bd8b4ad9f4c5a766013cff898770cc1af63910ab680799c78b264d934cf8aab'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.10.src.tar.gz'; \t\t\tsha256='b37699a7e3eab0f90412b3969a90fd072023ecf61e0b86369da532810a95d665'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-10-15T01:44:14.458857903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:14.670178167Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-15T01:44:15.434682703Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-10-15T01:44:15.685480202Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f7fd2e7cc552f051d1214be8615afb42799477e2ed469bee35af5fe00e9b89fe",
                    "sha256:31ff2f4e62997c3cb932043dc34c9e56c0f5ea03655b065a310d305df9e4ad37",
                    "sha256:a327cf9e77ac215a54770fa2d7f9654a71d79a32361c969a21eae76d32bdee01",
                    "sha256:2bca670ade99756e654f6cd9d349a845de3c5eb62d6154cc630e8d79a96608f1",
                    "sha256:d7a469b8bd11de2e013b8178bf6baff1cfa1414ebb7fa4753037defc2982232e",
                    "sha256:d4edcfe552300bacaa137563d5600d00bfa95159f79ca0d37a6d1b21436630fd",
                    "sha256:c3b0c4cb9dfac40a4a55676ae96ad0103ff6305411140775722ec8b21858d243"
                ]
            }
        },
        "1.14.11-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:dda6723346ac625d3a8486795762de8ec22a9264f379f331d1eb10b731b6bef5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dce1c8d23f4b833361d727ace1dbbd5f43bb08394de2bdcd24727cf1b68a953e",
            "container_config": {
                "Hostname": "dce1c8d23f4b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dda6723346ac625d3a8486795762de8ec22a9264f379f331d1eb10b731b6bef5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:30:15.517348966Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:59:08.543755547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e07d6f40b1afc3d3eff230bc89e84704eb762706a373a60c6bea6a45b2287464 in / "
                },
                {
                    "created": "2020-10-22T01:59:09.346930893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:53:28.884575445Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T02:53:30.705879373Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T02:53:31.210886556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:27:26.623071903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:00.326278236Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:30:13.177075072Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:13.628836645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:14.92601738Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:30:15.517348966Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eb94f170b954481460395c32263bccc3893d05ae1459471da850f9540af3a2c6",
                    "sha256:f88983be42e6fa1019f1374e446ed014ff449d762672a7fa1dbe34508d45d9c9",
                    "sha256:d66b933e48585ced4cca07d6445a6475beb9e79d4566093420dd87b5374f67e7",
                    "sha256:c8c0d78faa3018406c7d20e518ed438565fe75883d0c58731b539be8ee5e8f4a",
                    "sha256:cff1176fed0582d69736fccf9d783e3159fd286be543f5bc92ce18d3dafdeca5"
                ]
            }
        },
        "1.14.11-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f932a1976191d3e24902d85606a0523b3a1aa03c4554cdafcbf3c6c368a991e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "c665680cf48f55aad16e0e1547adc252e0f2564fe37fd0ee9534b0b42d95ba51",
            "container_config": {
                "Hostname": "c665680cf48f",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f932a1976191d3e24902d85606a0523b3a1aa03c4554cdafcbf3c6c368a991e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:32:59.814726478Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-31T23:59:26.895425094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:32.633898492Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:32:42.739266303Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:32:57.218614946Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:32:57.726510381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:32:59.319860723Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:32:59.814726478Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:9b96f404101df2bd38fda132c51cc7ce833f7c371c612255c095c49cb3aff815",
                    "sha256:e367483ce92a1790f8ad6c42d8e22bc8db427f79e7091a831d62fef697e9c71d"
                ]
            }
        },
        "1.14.11-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:dda6723346ac625d3a8486795762de8ec22a9264f379f331d1eb10b731b6bef5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dce1c8d23f4b833361d727ace1dbbd5f43bb08394de2bdcd24727cf1b68a953e",
            "container_config": {
                "Hostname": "dce1c8d23f4b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:dda6723346ac625d3a8486795762de8ec22a9264f379f331d1eb10b731b6bef5",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:30:15.517348966Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:59:08.543755547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e07d6f40b1afc3d3eff230bc89e84704eb762706a373a60c6bea6a45b2287464 in / "
                },
                {
                    "created": "2020-10-22T01:59:09.346930893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:53:28.884575445Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T02:53:30.705879373Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T02:53:31.210886556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:27:26.623071903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:00.326278236Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:30:13.177075072Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:13.628836645Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:30:14.92601738Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:30:15.517348966Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eb94f170b954481460395c32263bccc3893d05ae1459471da850f9540af3a2c6",
                    "sha256:f88983be42e6fa1019f1374e446ed014ff449d762672a7fa1dbe34508d45d9c9",
                    "sha256:d66b933e48585ced4cca07d6445a6475beb9e79d4566093420dd87b5374f67e7",
                    "sha256:c8c0d78faa3018406c7d20e518ed438565fe75883d0c58731b539be8ee5e8f4a",
                    "sha256:cff1176fed0582d69736fccf9d783e3159fd286be543f5bc92ce18d3dafdeca5"
                ]
            }
        },
        "1.14.11-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4ccc2e48e601cce8418b12e78505ffdccd19a53e7927c89391067d03bdf87c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "de4900500fa6ae27e8eea6bde32c2668c54724b282f512fe088d4b25db7fd809",
            "container_config": {
                "Hostname": "de4900500fa6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.11",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4ccc2e48e601cce8418b12e78505ffdccd19a53e7927c89391067d03bdf87c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-06T19:27:12.140250349Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-13T01:42:06.595171649Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cc8968c8733f7fb6fb644b948e4a21999440d079560afbb2acb9d666de3886ec in / "
                },
                {
                    "created": "2020-10-13T01:42:09.102921924Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-13T02:06:05.163319983Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T02:06:09.986275597Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-10-13T02:06:29.419735835Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T11:49:13.374411047Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-13T11:49:16.08709626Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:26:19.107814224Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.11",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:26:54.308280274Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-amd64.tar.gz'; \t\t\tsha256='ef150041e1af0890ecdd98ebdd6c759096884052a584c09ce50b2b5bb9bab2cd'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-armv6l.tar.gz'; \t\t\tsha256='14ecce9dc6d9225d5686ff6c517c27d1d9189d7967b78a596d5f4325516fd093'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-arm64.tar.gz'; \t\t\tsha256='6a2dc3c8d41683cf5dbb695d58556ec187fea7ae1afd913e25fc0750ab9c162c'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-386.tar.gz'; \t\t\tsha256='3789de3f29cccb31004885f72065e947a5020cdc33ecd94db0b5f20d319c49f0'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-ppc64le.tar.gz'; \t\t\tsha256='e9c5edcbba0b7cb46ef4a00891ceb1f64f84d0849071638027194a52943a7c95'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.linux-s390x.tar.gz'; \t\t\tsha256='e5eb70a16d19ee9d25420d1eafd1e4710bc6197c162a95a32217e49e1bd6055c'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.11.src.tar.gz'; \t\t\tsha256='1871f3d29b0cf1ebb739c9b134c9bc559282bd3625856e5f12f5aea29ab70f16'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-06T19:27:08.94753758Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:27:09.795155568Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-06T19:27:11.516662788Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-06T19:27:12.140250349Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f7fd2e7cc552f051d1214be8615afb42799477e2ed469bee35af5fe00e9b89fe",
                    "sha256:31ff2f4e62997c3cb932043dc34c9e56c0f5ea03655b065a310d305df9e4ad37",
                    "sha256:a327cf9e77ac215a54770fa2d7f9654a71d79a32361c969a21eae76d32bdee01",
                    "sha256:2bca670ade99756e654f6cd9d349a845de3c5eb62d6154cc630e8d79a96608f1",
                    "sha256:d7a469b8bd11de2e013b8178bf6baff1cfa1414ebb7fa4753037defc2982232e",
                    "sha256:f4c971442b60bb1891b0ab07a2da4edbdec618eb916c11a892632d14d740ca95",
                    "sha256:efe793bbf1ee1d05c561d498f2e088c2c7d3d4d77d2a9a43864c19ff0ae750fb"
                ]
            }
        },
        "1.14.12-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:1998ccdcb275e912c25c057709feb8919a00bfbb5c1311d8c33f6e4a0cd876fc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9adf2fcad65123e5fea4ff49c56a1b54b55db61448eaf6568e5cd7f0254fddc9",
            "container_config": {
                "Hostname": "9adf2fcad651",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1998ccdcb275e912c25c057709feb8919a00bfbb5c1311d8c33f6e4a0cd876fc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T21:48:05.870703985Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:59:08.543755547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e07d6f40b1afc3d3eff230bc89e84704eb762706a373a60c6bea6a45b2287464 in / "
                },
                {
                    "created": "2020-10-22T01:59:09.346930893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:53:28.884575445Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T02:53:30.705879373Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T02:53:31.210886556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:39.978303365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:47:51.43388446Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T21:48:03.62305662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:48:04.108933343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:48:05.229276765Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T21:48:05.870703985Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eb94f170b954481460395c32263bccc3893d05ae1459471da850f9540af3a2c6",
                    "sha256:f88983be42e6fa1019f1374e446ed014ff449d762672a7fa1dbe34508d45d9c9",
                    "sha256:d66b933e48585ced4cca07d6445a6475beb9e79d4566093420dd87b5374f67e7",
                    "sha256:e74c0f40eaa34bd27ed37d9cbfd3681cc14befea5a42e51c19ea29507232ba7d",
                    "sha256:a7b3ca09785fbc4e1b2bb72d4712f3221f1346341abebdb44f3f63d29659bca7"
                ]
            }
        },
        "1.14.12-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2469c94f243a61ad8d34d3e72de9ed645b810187163d7d7ffde505a9d544a36f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3eef5d6afbd6cddd43cdc187a4a170b22b5244cb0748ac1609d2ba0feead0983",
            "container_config": {
                "Hostname": "3eef5d6afbd6",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2469c94f243a61ad8d34d3e72de9ed645b810187163d7d7ffde505a9d544a36f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T21:50:26.105679297Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-08-31T23:59:26.895425094Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:48:15.386784301Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:50:10.229238814Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T21:50:24.123991116Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:50:24.507853358Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:50:25.643414603Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T21:50:26.105679297Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:92738636264645c55bf79a51a9e4b967a4f3bc338e1a93c83caae5a5524e751f",
                    "sha256:a57b6545ab6ffeaa591647deb27c491c49069822ac0af12697be819bcf316cb6"
                ]
            }
        },
        "1.14.12-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:1998ccdcb275e912c25c057709feb8919a00bfbb5c1311d8c33f6e4a0cd876fc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "9adf2fcad65123e5fea4ff49c56a1b54b55db61448eaf6568e5cd7f0254fddc9",
            "container_config": {
                "Hostname": "9adf2fcad651",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:1998ccdcb275e912c25c057709feb8919a00bfbb5c1311d8c33f6e4a0cd876fc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-12T21:48:05.870703985Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-10-22T01:59:08.543755547Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e07d6f40b1afc3d3eff230bc89e84704eb762706a373a60c6bea6a45b2287464 in / "
                },
                {
                    "created": "2020-10-22T01:59:09.346930893Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-22T02:53:28.884575445Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-10-22T02:53:30.705879373Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-10-22T02:53:31.210886556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:45:39.978303365Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:47:51.43388446Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-11-12T21:48:03.62305662Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:48:04.108933343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T21:48:05.229276765Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-12T21:48:05.870703985Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:eb94f170b954481460395c32263bccc3893d05ae1459471da850f9540af3a2c6",
                    "sha256:f88983be42e6fa1019f1374e446ed014ff449d762672a7fa1dbe34508d45d9c9",
                    "sha256:d66b933e48585ced4cca07d6445a6475beb9e79d4566093420dd87b5374f67e7",
                    "sha256:e74c0f40eaa34bd27ed37d9cbfd3681cc14befea5a42e51c19ea29507232ba7d",
                    "sha256:a7b3ca09785fbc4e1b2bb72d4712f3221f1346341abebdb44f3f63d29659bca7"
                ]
            }
        },
        "1.14.12-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:83b612b82b9e85c10734aa4983f6cc6054903e1aa68b57b94a6d125441f7dad7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "cccff6ed17212e03770da0db148674c049cfa6fa040581cc3ad57ddc6b877bf8",
            "container_config": {
                "Hostname": "cccff6ed1721",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.12",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:83b612b82b9e85c10734aa4983f6cc6054903e1aa68b57b94a6d125441f7dad7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-11-18T18:09:16.396798815Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-11-17T20:17:56.969589003Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:dfb1d2f775a9c4493397d0ca05aa6486393c6dad4f0fb5f48ffd209397301bdb in / "
                },
                {
                    "created": "2020-11-17T20:18:05.757199132Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-17T21:32:00.774098209Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-17T21:32:13.58098049Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-11-17T21:32:58.197757575Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T18:07:37.872085539Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-18T18:07:42.338362458Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T18:08:37.234133306Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.12",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T18:09:04.92682565Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-amd64.tar.gz'; \t\t\tsha256='fb26f951c88c0685d7df393611189c58e6eabd3c17bdaef37df11355ab8db9d3'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-armv6l.tar.gz'; \t\t\tsha256='548d0d93884d4c30684125a19ea169acf6195cf0fe467efb325adb595fffeacf'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-arm64.tar.gz'; \t\t\tsha256='833c762bf205ae5caaca246d5c2205ae919bad7484f7c38db72941937e28fa24'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-386.tar.gz'; \t\t\tsha256='80d1aa5c2a22cf57da97c71bbb3ee96f2600f15212f0fe8d6e07c7fc2744cf82'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-ppc64le.tar.gz'; \t\t\tsha256='7c51a32851ae8331e1bc9ebc439a71f430053bd3c8e739a72df4354a377982e8'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.linux-s390x.tar.gz'; \t\t\tsha256='e0d3cd0112edcd820d4860c2b95d7b32ef8900ca7f7207f15cc7675de7efe7cf'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.12.src.tar.gz'; \t\t\tsha256='b34f4b7ad799eab4c1a52bdef253602ce957125a512f5a1b28dce43c6841b971'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2020-11-18T18:09:13.632820392Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T18:09:14.114915092Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-18T18:09:15.823691184Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-11-18T18:09:16.396798815Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7dc682072d6ff0e771c6f0cc35c130ac94631fdc83c1a16d324fa6438846b80b",
                    "sha256:542f637e8728f2dcc30240ceaf296936fd976993deeb6bcf4aae479da7d9dcaa",
                    "sha256:e11f55371cb15b54349a9c4187db5646f63d1ec9c462ea6c231327aeee58b529",
                    "sha256:693fb9a35e92efb852f5681e1cd068b2ea3512a66a85855e40e5e473f082ae1e",
                    "sha256:d0309d3725f64bfd9affa7362c681d636470eb54b359e8dc100ce99587fb560e",
                    "sha256:3d5a641810e5b78cb73a8f51f4d16a3f05d93cceb3585b663ac57fb7e34bb404",
                    "sha256:60127cf91fe9bc89233c3073df81e8415a6de90f617737528dc574264abfcd91"
                ]
            }
        },
        "1.14.13-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:6f1fd1fc28c2abf4755dc3c9ac987054be223e86081e2dd3beb97df75a9ad35b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4aa05dfcaf33cf177ca5f6b6a0f1e56e7c39fd24faca274a8ae25356d2bb2967",
            "container_config": {
                "Hostname": "4aa05dfcaf33",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6f1fd1fc28c2abf4755dc3c9ac987054be223e86081e2dd3beb97df75a9ad35b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-19T22:49:57.514503087Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-15T01:51:34.849129405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ba807ca8ed73ca14224dd26a883f2399031fa32430f035cc5ae97b5e6db0ca7 in / "
                },
                {
                    "created": "2021-01-15T01:51:35.703671549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:41:50.354113756Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-19T22:41:52.241969135Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-19T22:41:52.587457931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:44.102766076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:49:42.369528929Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-19T22:49:55.227220415Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:49:55.643382172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:49:56.923152196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-19T22:49:57.514503087Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0f4b125a21332fd9d253d49d05956353c481ec67035d56bece997b518a82f84",
                    "sha256:7223e8a283e32a0ec1117f9448537fba0d4d3332abedb321cbaa8bb6827af41c",
                    "sha256:ca5f1a50e962aea178c22038549e5073d037aa71bced4048eb0a058f5f12e283",
                    "sha256:eb3b8127d68ada0adf31eec81abb3695a82c722c7a3882b77d12705ca06b87fc",
                    "sha256:36c5bf466e171891bb148fd4e6005a3abeb6a6e4249ebbfb4361a2a955c8f0f7"
                ]
            }
        },
        "1.14.13-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:8def6a096e9f790e2f9e68e207d05c90f4b38031854d0f3bc656dcb756a0b6c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "18c93274202dc508f6c14ccd52c2e11ea1e251cbb33951373fd702b163d7cf67",
            "container_config": {
                "Hostname": "18c93274202d",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:8def6a096e9f790e2f9e68e207d05c90f4b38031854d0f3bc656dcb756a0b6c7",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-17T01:40:27.539386738Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:44.154871066Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e0a7f4c5f520dabbf66a5d4312ceeb614fc5073fca7a248eb070cd99f4b75ff in / "
                },
                {
                    "created": "2020-12-16T23:41:44.861349603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:56.851268616Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:37:58.382924679Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:37:59.125153668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:59.705595739Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:40:10.090752599Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-12-17T01:40:24.787351851Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:40:25.433937524Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:40:26.918860576Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-12-17T01:40:27.539386738Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3873f4a6530144f795fad16ef70f83463b35ad0d36dd0c0f323541d93204444",
                    "sha256:b24b9ddba964d7043b664936b593b3e38e7cc25c734b5b405b380ee907e72b76",
                    "sha256:cea2bc22a3cee8fccc1f6f55370f1911d0eac068b36e132505987b7e507f9059",
                    "sha256:ac4d5ca0e974c637720d01eeeeed64ebdafaebb806adf9586eba30d6258106c2",
                    "sha256:5a92c7dea70cabf9529d35fd16059960687ec8b646a14fe91ffb26ca7c78aec7"
                ]
            }
        },
        "1.14.13-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:6d986e3200e3887c5ac1a959647772c85912d6e2325d62e2a84339383024392c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "2a450bc07db0a16ab9695e174a8d83a430e47723d7b9c1ffe7a9fea9f0f2aa6b",
            "container_config": {
                "Hostname": "2a450bc07db0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6d986e3200e3887c5ac1a959647772c85912d6e2325d62e2a84339383024392c",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-12-17T01:37:38.119545896Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:37.206913925Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ad3856d165e8760af85574a8ffa75ca44b7e1b97b64d1d6d4608445efa4b860 in / "
                },
                {
                    "created": "2020-12-16T23:41:37.976250939Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:33:00.176135947Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:33:01.972036124Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:33:02.461302917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:35:21.677253067Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:19.15869999Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2020-12-17T01:37:34.651431632Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:35.29210804Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:37.254694266Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-12-17T01:37:38.119545896Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1498886f9a6173beaafc4fee55074d6c389ce2f70d1a4b0ee866e4ab45a41ad",
                    "sha256:7e2aff220bd4b74d68b2bf965171847582fee1ae2684eb58678cb753899a638f",
                    "sha256:80badda80958439bdd77c136da2fd784716c79c33d9e5764fefe5aeaeb0afc54",
                    "sha256:ed8c1fed9001f0cd9e49b9349200bb2bfc3f63c56ca7cdbf8b3d7480b324802f",
                    "sha256:166ac4924260ae703ad8165256711783f8226b707452fcffec7487d42ee6c0a5"
                ]
            }
        },
        "1.14.13-alpine3.13": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:6f1fd1fc28c2abf4755dc3c9ac987054be223e86081e2dd3beb97df75a9ad35b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "4aa05dfcaf33cf177ca5f6b6a0f1e56e7c39fd24faca274a8ae25356d2bb2967",
            "container_config": {
                "Hostname": "4aa05dfcaf33",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6f1fd1fc28c2abf4755dc3c9ac987054be223e86081e2dd3beb97df75a9ad35b",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-19T22:49:57.514503087Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-15T01:51:34.849129405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ba807ca8ed73ca14224dd26a883f2399031fa32430f035cc5ae97b5e6db0ca7 in / "
                },
                {
                    "created": "2021-01-15T01:51:35.703671549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:41:50.354113756Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-19T22:41:52.241969135Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-19T22:41:52.587457931Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:47:44.102766076Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:49:42.369528929Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-19T22:49:55.227220415Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:49:55.643382172Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-19T22:49:56.923152196Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-19T22:49:57.514503087Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b0f4b125a21332fd9d253d49d05956353c481ec67035d56bece997b518a82f84",
                    "sha256:7223e8a283e32a0ec1117f9448537fba0d4d3332abedb321cbaa8bb6827af41c",
                    "sha256:ca5f1a50e962aea178c22038549e5073d037aa71bced4048eb0a058f5f12e283",
                    "sha256:eb3b8127d68ada0adf31eec81abb3695a82c722c7a3882b77d12705ca06b87fc",
                    "sha256:36c5bf466e171891bb148fd4e6005a3abeb6a6e4249ebbfb4361a2a955c8f0f7"
                ]
            }
        },
        "1.14.13-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:88dbcfa557d69b79942c4f4598df94fc3ade1cf740708ebfc15e0070ed89f35e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "3b7da5a9a0eda07072d63e6bf4ca7279e3e2d8127d8063c1914ca203e3c63bd7",
            "container_config": {
                "Hostname": "3b7da5a9a0ed",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.13",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:88dbcfa557d69b79942c4f4598df94fc3ade1cf740708ebfc15e0070ed89f35e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-12T15:14:28.601812283Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:42:07.223374888Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d0e79f65f07030b440bfbb8e3fac979eddeed967c5e47ac30b5c2aa5e0144b1 in / "
                },
                {
                    "created": "2021-01-12T00:42:09.950747348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T02:10:09.548808005Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T02:10:15.150428068Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T02:10:43.098720038Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T15:12:16.721579113Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T15:12:19.05883584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T15:13:47.116558496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.13",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T15:14:22.600900158Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-amd64.tar.gz'; \t\t\tsha256='bfea0c8d7b70c1ad99b0266b321608db57df75820e8f4333efa448a43da01992'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-armv6l.tar.gz'; \t\t\tsha256='cee8785fad978693c7b68ea635e76412a0a44917c3d58efa82b2edbf538a2868'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-arm64.tar.gz'; \t\t\tsha256='445b719ebf46d8825360dabad65226db154ca8053de60609bc20f80a17452cbb'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-386.tar.gz'; \t\t\tsha256='a168c7e03e305d33a5651acb5bfdbfb5141053a0d98f06af3e1e5081167af963'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-ppc64le.tar.gz'; \t\t\tsha256='1bd057adc1004b22e530ac738ccb077b56f89e84209df9bb755aacb37668c547'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.linux-s390x.tar.gz'; \t\t\tsha256='263a9bef1b8d695cc459b83fd7c4cee06f7e435adec0d0c948309b0655d0770e'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.13.src.tar.gz'; \t\t\tsha256='ba1d244c6b5c0ed04aa0d7856d06aceb89ed31b895de6ff783efb1cc8ab6b177'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-12T15:14:27.458104459Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T15:14:27.64248771Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T15:14:28.402640872Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-12T15:14:28.601812283Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:56a6bd33f74d7aa787a40d68376840ddbb38ed40dbe86bf7163f6c33e3ca9e99",
                    "sha256:43ec2c16cfce25c61dc1220cdc3b6b9719c2a661f6565036289283882c50fb7e",
                    "sha256:8accd3b2ee76c5c4ef2137e625e219c905e6ee084a2b5232f82c4792ed1bda88",
                    "sha256:1171d9f914ea040146de0a14fdf2e8de77ad3f7b0c3b870997b6a8ab95b61358",
                    "sha256:90bbc0f83ce95be8df7c9ee8ea8a33e642f2a66137d854d3f3538a69e31cb0d9",
                    "sha256:0f557d12e3c8a2d83591050fc5f3f1c2c6d109269212f3f172028bb7293daa18",
                    "sha256:38ea9733f21470b8675de6bdc4f06753cb2f56c4b63f4361c0a2700be60bc28a"
                ]
            }
        },
        "1.14.14-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:80e4cb997e718aaf2d03ecf32d760d61a03887246090903bcbb749b6f426fc03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a7401cf5e65621e7658261ce4ef30f5ae49b501cfced8eb26ad1ce1cbce7928",
            "container_config": {
                "Hostname": "6a7401cf5e65",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:80e4cb997e718aaf2d03ecf32d760d61a03887246090903bcbb749b6f426fc03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-29T00:24:06.68740658Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:41:35.430599176Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d97e6c37df0fb8306b072d9c0a32f68f5aff583ba849303926644deacfa25eb9 in / "
                },
                {
                    "created": "2021-01-28T23:41:36.719586322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:17:42.51420302Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:17:43.550157403Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:17:43.86599661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:22:06.255451873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:23:50.149415095Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-29T00:24:04.307358413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:24:04.682794765Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:24:06.191181972Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-29T00:24:06.68740658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4c57e0e551aef82c82daeb7ea21994acdbf049b3cd6e792799a206cedab6c53",
                    "sha256:81540e5fce8fd8128788bfb8e8a43b8df08e7601f420299d15474d441dddf3f3",
                    "sha256:e20072b65071622e5c949d6c030e672e0226c415b20b77a416faca9c28759736",
                    "sha256:9348d5beed4a374a9e4e1bd59e08880e893b077f3f0d30fa8e6b41f038351bdb",
                    "sha256:5223de9b2ac947841ef455cd3f82d90caa25c5c3cb7a0042a300d0702a7135bc"
                ]
            }
        },
        "1.14.14-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:5850c5e8c6eb04d38c6b65bca2e93cd766c64a7c5185d61362ce10f0ff32f820",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "5d2af2403ce8d3da992f286ab3cfbbd00978168b420daeb46b15421695d0dfe7",
            "container_config": {
                "Hostname": "5d2af2403ce8",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:5850c5e8c6eb04d38c6b65bca2e93cd766c64a7c5185d61362ce10f0ff32f820",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:32:23.683661586Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:44.154871066Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e0a7f4c5f520dabbf66a5d4312ceeb614fc5073fca7a248eb070cd99f4b75ff in / "
                },
                {
                    "created": "2020-12-16T23:41:44.861349603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:56.851268616Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:37:58.382924679Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:37:59.125153668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:29:11.71700187Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:32:07.598967426Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:32:21.04438494Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:32:21.496595381Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:32:23.099274745Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:32:23.683661586Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3873f4a6530144f795fad16ef70f83463b35ad0d36dd0c0f323541d93204444",
                    "sha256:b24b9ddba964d7043b664936b593b3e38e7cc25c734b5b405b380ee907e72b76",
                    "sha256:cea2bc22a3cee8fccc1f6f55370f1911d0eac068b36e132505987b7e507f9059",
                    "sha256:bde94391d320fe940a71f36ab56b125dd15eba6a637c63a2057a9d74834fe661",
                    "sha256:38cde2c65ec4fa7901327cecde20f208f6612f6b3b7ac36e584afbb6d0f8bdc8"
                ]
            }
        },
        "1.14.14-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2305be1fba261e8f839fa59c4f419d148b1b81c24ee596109010310989d0555e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "56e66158b7ec710033517039008d5a3be14f065b8878795c1fa979d44b5805c0",
            "container_config": {
                "Hostname": "56e66158b7ec",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2305be1fba261e8f839fa59c4f419d148b1b81c24ee596109010310989d0555e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:28:54.480628542Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:37.206913925Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ad3856d165e8760af85574a8ffa75ca44b7e1b97b64d1d6d4608445efa4b860 in / "
                },
                {
                    "created": "2020-12-16T23:41:37.976250939Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:33:00.176135947Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:33:01.972036124Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:33:02.461302917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:26:36.805647872Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:40.219879003Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:28:51.648648743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:52.19313205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:28:53.592423603Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:28:54.480628542Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1498886f9a6173beaafc4fee55074d6c389ce2f70d1a4b0ee866e4ab45a41ad",
                    "sha256:7e2aff220bd4b74d68b2bf965171847582fee1ae2684eb58678cb753899a638f",
                    "sha256:80badda80958439bdd77c136da2fd784716c79c33d9e5764fefe5aeaeb0afc54",
                    "sha256:bfa05ae60ad0bf607f61a94a5cc1901bc9fa8c0e3bf00d561cda87cc43f2f504",
                    "sha256:b87e1b3a4b020538849c98b27a4446e56e0b0a21247827d7bac2356907ea3d79"
                ]
            }
        },
        "1.14.14-alpine3.13": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:80e4cb997e718aaf2d03ecf32d760d61a03887246090903bcbb749b6f426fc03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6a7401cf5e65621e7658261ce4ef30f5ae49b501cfced8eb26ad1ce1cbce7928",
            "container_config": {
                "Hostname": "6a7401cf5e65",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:80e4cb997e718aaf2d03ecf32d760d61a03887246090903bcbb749b6f426fc03",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-29T00:24:06.68740658Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:41:35.430599176Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d97e6c37df0fb8306b072d9c0a32f68f5aff583ba849303926644deacfa25eb9 in / "
                },
                {
                    "created": "2021-01-28T23:41:36.719586322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:17:42.51420302Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:17:43.550157403Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:17:43.86599661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:22:06.255451873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:23:50.149415095Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-01-29T00:24:04.307358413Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:24:04.682794765Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:24:06.191181972Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-29T00:24:06.68740658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4c57e0e551aef82c82daeb7ea21994acdbf049b3cd6e792799a206cedab6c53",
                    "sha256:81540e5fce8fd8128788bfb8e8a43b8df08e7601f420299d15474d441dddf3f3",
                    "sha256:e20072b65071622e5c949d6c030e672e0226c415b20b77a416faca9c28759736",
                    "sha256:9348d5beed4a374a9e4e1bd59e08880e893b077f3f0d30fa8e6b41f038351bdb",
                    "sha256:5223de9b2ac947841ef455cd3f82d90caa25c5c3cb7a0042a300d0702a7135bc"
                ]
            }
        },
        "1.14.14-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9b4a2481a070f6afc9ce590a66eb35af49a2d73f29d16374f2fd2476bbe0da67",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "6516b3210415c5cdc00b284b4cf6d29b26957957e8592b16c62bd3a9181d148f",
            "container_config": {
                "Hostname": "6516b3210415",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.14",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:9b4a2481a070f6afc9ce590a66eb35af49a2d73f29d16374f2fd2476bbe0da67",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-01-20T00:23:20.528239082Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-12T00:42:07.223374888Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d0e79f65f07030b440bfbb8e3fac979eddeed967c5e47ac30b5c2aa5e0144b1 in / "
                },
                {
                    "created": "2021-01-12T00:42:09.950747348Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-12T02:10:09.548808005Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T02:10:15.150428068Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-01-12T02:10:43.098720038Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T15:12:16.721579113Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-12T15:12:19.05883584Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:22:34.1888322Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.14",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:06.553989706Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-amd64.tar.gz'; \t\t\tsha256='6f1354c9040d65d1622b451f43c324c1e5197aa9242d00c5a117d0e2625f3e0d'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-armv6l.tar.gz'; \t\t\tsha256='e4d614c23b77a367becaeac3032cf4911793363a33efa299d29440be3d66234b'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-arm64.tar.gz'; \t\t\tsha256='511d764197121f212d130724afb9c296f0cb4a22424e5ae956a5cc043b0f4a29'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-386.tar.gz'; \t\t\tsha256='b08e088ba99134035782c71aeaf139f36d2306eb88eddc22c1278b8b446f157e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-ppc64le.tar.gz'; \t\t\tsha256='f24eddfac754b48d9c28a459f0e4fc5af8f037dac0e9b3159b9bb98b6b1ab88c'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.linux-s390x.tar.gz'; \t\t\tsha256='fcd84558e80257d3c308342964c10c1de8bd1c031c579bb02c5c07bf86fd86d7'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.14.src.tar.gz'; \t\t\tsha256='6204bf32f58fae0853f47f1bd0c51d9e0ac11f1ffb406bed07a0a8b016c8a76f'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-01-20T00:23:17.092190579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:17.558235244Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T00:23:19.805771425Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-01-20T00:23:20.528239082Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:56a6bd33f74d7aa787a40d68376840ddbb38ed40dbe86bf7163f6c33e3ca9e99",
                    "sha256:43ec2c16cfce25c61dc1220cdc3b6b9719c2a661f6565036289283882c50fb7e",
                    "sha256:8accd3b2ee76c5c4ef2137e625e219c905e6ee084a2b5232f82c4792ed1bda88",
                    "sha256:1171d9f914ea040146de0a14fdf2e8de77ad3f7b0c3b870997b6a8ab95b61358",
                    "sha256:90bbc0f83ce95be8df7c9ee8ea8a33e642f2a66137d854d3f3538a69e31cb0d9",
                    "sha256:8474e40ca0a927031516d078e748fb05d9248f002d75f7c0b9bcc28b79a51d3f",
                    "sha256:8a48900184b07001d320e16e2406cab643272c833dad777a803f9c645892662d"
                ]
            }
        },
        "1.14.15-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f678f2cacc4e2ecdfab3a3f877b22f63d4b9272564dd5193f23fceeeabcdbd2e",
            "container_config": {
                "Hostname": "f678f2cacc4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:36:08.680373694Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:41:35.430599176Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d97e6c37df0fb8306b072d9c0a32f68f5aff583ba849303926644deacfa25eb9 in / "
                },
                {
                    "created": "2021-01-28T23:41:36.719586322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:17:42.51420302Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:17:43.550157403Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:17:43.86599661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:32:48.064806272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:35:57.359239493Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:36:06.065439516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:06.54021567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:08.244443293Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:36:08.680373694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4c57e0e551aef82c82daeb7ea21994acdbf049b3cd6e792799a206cedab6c53",
                    "sha256:81540e5fce8fd8128788bfb8e8a43b8df08e7601f420299d15474d441dddf3f3",
                    "sha256:e20072b65071622e5c949d6c030e672e0226c415b20b77a416faca9c28759736",
                    "sha256:4ee04ee76227174192b466d02c702db51225d476f18ce229b195bee512abac0f",
                    "sha256:999e22bdc690f573c901a87b7717d0064a5c7b3bf421da2394d09c8bb887ed6f"
                ]
            }
        },
        "1.14.15-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2494e1e24a83fd2539c6fa4974bba1e12ca19b9abbbf35b86e667dda46571840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "81dc98ccd516ac6ae8bfdc26ac1180972e1754262dd8621bbed12aeb3be6c881",
            "container_config": {
                "Hostname": "81dc98ccd516",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2494e1e24a83fd2539c6fa4974bba1e12ca19b9abbbf35b86e667dda46571840",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:41:14.916150753Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:44.154871066Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e0a7f4c5f520dabbf66a5d4312ceeb614fc5073fca7a248eb070cd99f4b75ff in / "
                },
                {
                    "created": "2020-12-16T23:41:44.861349603Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:37:56.851268616Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:37:58.382924679Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:37:59.125153668Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:39:02.674797816Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:41:05.549276753Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:41:12.998178085Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:41:13.35109727Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:41:14.554227974Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:41:14.916150753Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3873f4a6530144f795fad16ef70f83463b35ad0d36dd0c0f323541d93204444",
                    "sha256:b24b9ddba964d7043b664936b593b3e38e7cc25c734b5b405b380ee907e72b76",
                    "sha256:cea2bc22a3cee8fccc1f6f55370f1911d0eac068b36e132505987b7e507f9059",
                    "sha256:153b2a8bb2ea33acc5837490047df4aaa9230456f319faace7525ce8fc96083b",
                    "sha256:9f9f57ecbfad9db32dc221efdfc92f53c5a01679c792aba1dce6bef649ca3126"
                ]
            }
        },
        "1.14.15-alpine3.12": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:3b5224824d638a6e28156ca23a798b422ca3052ec7f4d9fe6e2c6b888ab0c780",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "496cf0ce0b895086bf9016e13c0432efd3bb6b8fd208720fca0fc06328af7f66",
            "container_config": {
                "Hostname": "496cf0ce0b89",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:3b5224824d638a6e28156ca23a798b422ca3052ec7f4d9fe6e2c6b888ab0c780",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:38:54.520972925Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2020-12-16T23:41:37.206913925Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ad3856d165e8760af85574a8ffa75ca44b7e1b97b64d1d6d4608445efa4b860 in / "
                },
                {
                    "created": "2020-12-16T23:41:37.976250939Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-17T01:33:00.176135947Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-12-17T01:33:01.972036124Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-12-17T01:33:02.461302917Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:26.906988527Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:38:41.298087974Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:38:52.094897545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:38:52.69139445Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:38:54.078590221Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:38:54.520972925Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f1498886f9a6173beaafc4fee55074d6c389ce2f70d1a4b0ee866e4ab45a41ad",
                    "sha256:7e2aff220bd4b74d68b2bf965171847582fee1ae2684eb58678cb753899a638f",
                    "sha256:80badda80958439bdd77c136da2fd784716c79c33d9e5764fefe5aeaeb0afc54",
                    "sha256:d58c6ae456112f99bc8aa3fdf132e98f8be24e07e1b1d6b2019fd2955e746567",
                    "sha256:06da8de51146b7daf5f8310f9ff9644c4c10075b14568195083f3a735f356024"
                ]
            }
        },
        "1.14.15-alpine3.13": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "f678f2cacc4e2ecdfab3a3f877b22f63d4b9272564dd5193f23fceeeabcdbd2e",
            "container_config": {
                "Hostname": "f678f2cacc4e",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:2e6c1a3f75b72de3945553879f6752bed5a916e841f1954c61ab40e7ca89456f",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-05T08:36:08.680373694Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-01-28T23:41:35.430599176Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d97e6c37df0fb8306b072d9c0a32f68f5aff583ba849303926644deacfa25eb9 in / "
                },
                {
                    "created": "2021-01-28T23:41:36.719586322Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-29T00:17:42.51420302Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2021-01-29T00:17:43.550157403Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2021-01-29T00:17:43.86599661Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:32:48.064806272Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:35:57.359239493Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tgnupg \t\tgo \t\tmusl-dev \t\topenssl \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \teval \"$goEnv\"; \t[ -n \"$GOOS\" ]; \t[ -n \"$GOARCH\" ]; \t( \t\tcd /usr/local/go/src; \t\t./make.bash; \t); \t\tapk del --no-network .build-deps; \t\tgo install std; \t\trm -rf \t\t/usr/local/go/pkg/*/cmd \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t\t/usr/local/go/pkg/tool/*/api \t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t/usr/local/go/src/cmd/dist/dist \t; \t\tgo version"
                },
                {
                    "created": "2021-02-05T08:36:06.065439516Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:06.54021567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-05T08:36:08.244443293Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-05T08:36:08.680373694Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4c57e0e551aef82c82daeb7ea21994acdbf049b3cd6e792799a206cedab6c53",
                    "sha256:81540e5fce8fd8128788bfb8e8a43b8df08e7601f420299d15474d441dddf3f3",
                    "sha256:e20072b65071622e5c949d6c030e672e0226c415b20b77a416faca9c28759736",
                    "sha256:4ee04ee76227174192b466d02c702db51225d476f18ce229b195bee512abac0f",
                    "sha256:999e22bdc690f573c901a87b7717d0064a5c7b3bf421da2394d09c8bb887ed6f"
                ]
            }
        },
        "1.14.15-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6bda67697bdb8d53809e21efc5fb438b6ae602e136865d2879643f9ad4bf73ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "8303f1c5b9dcd9af0fcd98c551544d836ab670d07125f743ef7068fddd052860",
            "container_config": {
                "Hostname": "8303f1c5b9dc",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.15",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "Image": "sha256:6bda67697bdb8d53809e21efc5fb438b6ae602e136865d2879643f9ad4bf73ad",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2021-02-09T11:32:27.586054969Z",
            "docker_version": "19.03.12",
            "history": [
                {
                    "created": "2021-02-09T02:41:56.658500626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f390b371893461fffed2fb48d65b6c930137539a82b9c5329410cef322a5a9ea in / "
                },
                {
                    "created": "2021-02-09T02:41:59.181814728Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T03:05:21.318914732Z",
                    "created_by": "/bin/sh -c set -eux; \tapt-get update; \tapt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t; \trm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T03:05:26.318422765Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2021-02-09T03:05:45.172464144Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T11:30:58.134881276Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-02-09T11:31:00.5585486Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:10.384044019Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.15",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:22.09196705Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\t'amd64') \t\t\tarch='linux-amd64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-amd64.tar.gz'; \t\t\tsha256='c64a57b374a81f7cf1408d2c410a28c6f142414f1ffa9d1062de1d653b0ae0d6'; \t\t\t;; \t\t'armhf') \t\t\tarch='linux-armv6l'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-armv6l.tar.gz'; \t\t\tsha256='a63960d9b9c14954e299ffe060c0574ffb91ab810837da5941853b664d0652da'; \t\t\t;; \t\t'arm64') \t\t\tarch='linux-arm64'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-arm64.tar.gz'; \t\t\tsha256='4d964166a189c22032521c63935437c304bb7f01673b196898cff525897a1c27'; \t\t\t;; \t\t'i386') \t\t\tarch='linux-386'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-386.tar.gz'; \t\t\tsha256='cab962eaf954378bbb5b24f703baf3b471e9690a109082dd688593fbb6f9008e'; \t\t\t;; \t\t'ppc64el') \t\t\tarch='linux-ppc64le'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-ppc64le.tar.gz'; \t\t\tsha256='64d82004270bcd00948dbed9f1a123ef844ceb7633e6a87a5ca7ef8bdf59cfc1'; \t\t\t;; \t\t's390x') \t\t\tarch='linux-s390x'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.linux-s390x.tar.gz'; \t\t\tsha256='8e121c947ec531628d37ad0292623f22c8f9fecac6067192b5cce34b36cedd79'; \t\t\t;; \t\t*) \t\t\tarch='src'; \t\t\turl='https://storage.googleapis.com/golang/go1.14.15.src.tar.gz'; \t\t\tsha256='7ed13b2209e54a451835997f78035530b331c5b6943cdcd68a3d815fdc009149'; \t\t\techo >&2; \t\t\techo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; \t\t\techo >&2; \t\t\t;; \tesac; \t\twget -O go.tgz.asc \"$url.asc\" --progress=dot:giga; \twget -O go.tgz \"$url\" --progress=dot:giga; \techo \"$sha256 *go.tgz\" | sha256sum --strict --check -; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC EC91 7721 F63B D38B 4796'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$arch\" = 'src' ]; then \t\tsavedAptMark=\"$(apt-mark showmanual)\"; \t\tapt-get update; \t\tapt-get install -y --no-install-recommends golang-go; \t\t\t\tgoEnv=\"$(go env | sed -rn -e '/^GO(OS|ARCH|ARM|386)=/s//export \\0/p')\"; \t\teval \"$goEnv\"; \t\t[ -n \"$GOOS\" ]; \t\t[ -n \"$GOARCH\" ]; \t\t( \t\t\tcd /usr/local/go/src; \t\t\t./make.bash; \t\t); \t\t\t\tapt-mark auto '.*' > /dev/null; \t\tapt-mark manual $savedAptMark > /dev/null; \t\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \t\trm -rf /var/lib/apt/lists/*; \t\t\t\tgo install std; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t; \tfi; \t\tgo version"
                },
                {
                    "created": "2021-02-09T11:32:26.549899479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:26.730291146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-09T11:32:27.342402454Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2021-02-09T11:32:27.586054969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a6db30d6be074a73dd573e72c2aa1229f6345266b7c35e66aee51122892d1669",
                    "sha256:cc0cfb67b5c4c5002cd0c7721c6a4edf5977cf73749881a66f44deb7272a3e14",
                    "sha256:6c818348fc4fe384988416863a8cfa5ac64d5e0e71a46bd0f0eaf22b78ad93a2",
                    "sha256:736b7b7498ccbb1608f8a7bb2116b1dfbb165489f9cca1e65c7340b96da597ed",
                    "sha256:2bce62cc6b18707344338b136468973932d74f12c2a22e594f559de39a210e0b",
                    "sha256:563f9274965c96902f6a17495a7ef99bb471ae7cfd744b5a221a7b2dd5f9d283",
                    "sha256:dcbd1ce7c55f91a572769bc89a29f809c70f5aafbd371967c4da22d36c6c65b2"
                ]
            }
        },
        "1.14.2-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e68b70767ec285f59f7ac2de95c0bb0f1813575d9fabfe0db326a9453a33afc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1afe359920e9b0ec4e74582b9a877f0b1a32391602325d0b876a2f1030873a70",
            "container_config": {
                "Hostname": "1afe359920e9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e68b70767ec285f59f7ac2de95c0bb0f1813575d9fabfe0db326a9453a33afc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T20:02:39.180297708Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-23T20:01:11.704561756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:02:31.784710389Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T20:02:38.023414817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:02:38.272820229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:02:38.933452065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T20:02:39.180297708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:52e56942fd245f2d1370a10253203397e98d59a340b03aba04df4935194ddf8f",
                    "sha256:1b8eb2eef78b4e6ee6158098f3e1cc16570482201c692dce3ff8b506be65bf0c"
                ]
            }
        },
        "1.14.2-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e68b70767ec285f59f7ac2de95c0bb0f1813575d9fabfe0db326a9453a33afc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "1afe359920e9b0ec4e74582b9a877f0b1a32391602325d0b876a2f1030873a70",
            "container_config": {
                "Hostname": "1afe359920e9",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e68b70767ec285f59f7ac2de95c0bb0f1813575d9fabfe0db326a9453a33afc3",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-04-23T20:02:39.180297708Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-04-23T20:01:11.704561756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:02:31.784710389Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-04-23T20:02:38.023414817Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:02:38.272820229Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:02:38.933452065Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-04-23T20:02:39.180297708Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:52e56942fd245f2d1370a10253203397e98d59a340b03aba04df4935194ddf8f",
                    "sha256:1b8eb2eef78b4e6ee6158098f3e1cc16570482201c692dce3ff8b506be65bf0c"
                ]
            }
        },
        "1.14.2-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1553f4216b7d8e4d1073e148eda0d7623f89f5081f5d02e0e3a3485dcde33ca0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "726066c4b8fda8c06f8c12fce1c74562015fe34ace64bcea5390a7b4a12b2d85",
            "container_config": {
                "Hostname": "726066c4b8fd",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1553f4216b7d8e4d1073e148eda0d7623f89f5081f5d02e0e3a3485dcde33ca0",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T11:29:15.464404902Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:06:22.292433829Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3b65bac2545f5751eaa8e9967febbe18955f63efa32d5ca3f8bc209e1a8602de in / "
                },
                {
                    "created": "2020-05-14T23:06:24.721946582Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:00:29.135330057Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:00:35.879898781Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:01:02.494574787Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:28:57.674536143Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:28:59.979967285Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:29:09.721734969Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6272d6e940ecb71ea5636ddb5fab3933e087c1356173c61f4a803895e947ebb3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='eb4550ba741506c2a4057ea4d3a5ad7ed5a887de67c7232f1e4795464361c83c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='bb6d22fe5806352c3d0826676654e09b6e41eb1af52e8d506d3fa85adf7f8d88' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cab5f51e6ffb616c6ee963c3d0650ca4e3c4108307c44f2baf233fcb8ff098f6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='48c22268c81ced9084a43bbe2c1596d3e636b5560b30a32434a7f15e561de160' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='501cc919648c9d85b901963303c5061ea6814c80f0d35fda9e62980d3ff58cf4' ;; \t\t*) goRelArch='src'; goRelSha256='98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T11:29:14.245449629Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:29:14.466561297Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:29:15.209737059Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T11:29:15.464404902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b079b8c43ab9505579edde539ef3416cf3c484cf71abbbd87858f8e9b79cd3a",
                    "sha256:69e7d998037f5a1554e7cd975b6e104e7e3beb1a6f6957bcc8c6138d99ef8d48",
                    "sha256:637cd757dab8bb7cf9f013a364aba905be8b83ffdd8b8ef74b45bbdc550a8f64",
                    "sha256:eb4eb8681fbd7e79b1881d8ac35e0f65dfbf8d67db8cfa04ff7688626691a63a",
                    "sha256:7e0e2184eac8976d7859e201906c8f2ceefd3e5c75a977432f66146c4fd2c4c8",
                    "sha256:5fff43e2e8cc6d392a72d6e871484be2a78ea5dc70ca4fc4d6aad9d81aecbcff",
                    "sha256:dd482eb676b6b312d17b621b1d0119d1796ca77b74554f01901b12394e2fc691"
                ]
            }
        },
        "1.14.2-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67e98258368534baa72bcbe58c649292973cb3334454049b13a674ae49a2f969",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "eb981ffde54b8a18e0b377e848ebe88c00873eafa0484e55a4a1864c460b7e61",
            "container_config": {
                "Hostname": "eb981ffde54b",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.2",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:67e98258368534baa72bcbe58c649292973cb3334454049b13a674ae49a2f969",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T11:29:49.635746244Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:08:23.832594882Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ad2f356c0ec407aa31085089417aaa9f72a5dc2757ed68a0adf7a432e4bdaa in / "
                },
                {
                    "created": "2020-05-14T23:08:26.272186305Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:03:55.424873895Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:04:00.565234266Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:04:25.928481957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:29:32.67618571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:29:34.673168064Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.2",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:29:44.1698366Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='6272d6e940ecb71ea5636ddb5fab3933e087c1356173c61f4a803895e947ebb3' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='eb4550ba741506c2a4057ea4d3a5ad7ed5a887de67c7232f1e4795464361c83c' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='bb6d22fe5806352c3d0826676654e09b6e41eb1af52e8d506d3fa85adf7f8d88' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='cab5f51e6ffb616c6ee963c3d0650ca4e3c4108307c44f2baf233fcb8ff098f6' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='48c22268c81ced9084a43bbe2c1596d3e636b5560b30a32434a7f15e561de160' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='501cc919648c9d85b901963303c5061ea6814c80f0d35fda9e62980d3ff58cf4' ;; \t\t*) goRelArch='src'; goRelSha256='98de84e69726a66da7b4e58eac41b99cbe274d7e8906eeb8a5b7eb0aadee7f7c'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T11:29:48.516197647Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:29:48.716234214Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T11:29:49.396576173Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T11:29:49.635746244Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3c9e1a3f2b42b10ebd6303060cf96efa299ccdd76994ee0d2942123931e65e07",
                    "sha256:fab6a7f271c8ca9af745a3543f3ca5e5fa1e8a1fa5a470fac3a935b2fd14d25e",
                    "sha256:5a7d9d59991e55c6f9913a37f2a22180882b17f33180985fe2bea54ad7892ba4",
                    "sha256:2d27741078a3875ed31155374d8ca6e8c494e2d62334178798656721b3183848",
                    "sha256:26371ba90a650ae711c6e688fd3cbdede90e86e34b68dc0047a92ef2f79acb92",
                    "sha256:195b981205de160b86697a3ff9e434b8e48cea61d84cce191898c86de9a08759",
                    "sha256:7c6054e01a54813a37746348381776d486bcebd789db2abe2ff669d0157b95b0"
                ]
            }
        },
        "1.14.3-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf55baae85510c8510eb7caf541264165f114ac4351c5207ad9768c692a696dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dca19230cc088a28f8abdfc4c7293a537488e3571935810ca949b07068cf551b",
            "container_config": {
                "Hostname": "dca19230cc08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf55baae85510c8510eb7caf541264165f114ac4351c5207ad9768c692a696dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:45:57.739972388Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-15T20:44:43.056142846Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:45:51.47429976Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:45:56.736064488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:45:56.916006428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:45:57.536382992Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:45:57.739972388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:535166d1374f40591861efcecd6c6bedb742e2cf7f0844a64397d0fc603b34a4",
                    "sha256:282e48b2b89548db9cdd35316979c77073d5c1a7d64d4e4597d867f2bb737e3b"
                ]
            }
        },
        "1.14.3-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf55baae85510c8510eb7caf541264165f114ac4351c5207ad9768c692a696dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "dca19230cc088a28f8abdfc4c7293a537488e3571935810ca949b07068cf551b",
            "container_config": {
                "Hostname": "dca19230cc08",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf55baae85510c8510eb7caf541264165f114ac4351c5207ad9768c692a696dd",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:45:57.739972388Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-05-15T20:44:43.056142846Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:45:51.47429976Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:45:56.736064488Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:45:56.916006428Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:45:57.536382992Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:45:57.739972388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:535166d1374f40591861efcecd6c6bedb742e2cf7f0844a64397d0fc603b34a4",
                    "sha256:282e48b2b89548db9cdd35316979c77073d5c1a7d64d4e4597d867f2bb737e3b"
                ]
            }
        },
        "1.14.3-buster": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:14f62fa5b16032e52eb7e658c321482fa3181295fc1fca933bdd37674078f4bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "bec494f5a8ad38b19ca83a4a59dbffdc6450c32071ca36c253b2746581fa95ff",
            "container_config": {
                "Hostname": "bec494f5a8ad",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:14f62fa5b16032e52eb7e658c321482fa3181295fc1fca933bdd37674078f4bc",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:44:14.379767452Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:06:22.292433829Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3b65bac2545f5751eaa8e9967febbe18955f63efa32d5ca3f8bc209e1a8602de in / "
                },
                {
                    "created": "2020-05-14T23:06:24.721946582Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:00:29.135330057Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:00:35.879898781Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:01:02.494574787Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:28:57.674536143Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T20:43:56.400659055Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:44:08.512590763Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1c39eac4ae95781b066c144c58e45d6859652247f7515f0d2cba7be7d57d2226' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b1c3a648c3c8877b98dfba1996dec604c8fb8899db07994b2dfd47b0063367c8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7a593e2ee079d83a1943edcd1c9ed2dae7529666fce04de8c142fb61c7cdd3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='46f8c744788103e8aeceb12c7d71eb16a58fe43e7e4711055fa9ef4bae50bff7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='329359e2b72839696e78b6c0a96fd939e28e7435d852f31107f68037dd5f7442' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='1aad312fc7fa85d663e8226237cc7519b2599b88a213098abc10de8e84d6cfab' ;; \t\t*) goRelArch='src'; goRelSha256='93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:44:13.255732082Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:44:13.452510554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:44:14.156075146Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:44:14.379767452Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7b079b8c43ab9505579edde539ef3416cf3c484cf71abbbd87858f8e9b79cd3a",
                    "sha256:69e7d998037f5a1554e7cd975b6e104e7e3beb1a6f6957bcc8c6138d99ef8d48",
                    "sha256:637cd757dab8bb7cf9f013a364aba905be8b83ffdd8b8ef74b45bbdc550a8f64",
                    "sha256:eb4eb8681fbd7e79b1881d8ac35e0f65dfbf8d67db8cfa04ff7688626691a63a",
                    "sha256:7e0e2184eac8976d7859e201906c8f2ceefd3e5c75a977432f66146c4fd2c4c8",
                    "sha256:661099b888f109ace69dc1813676890e4d26c260665b6dd1809f47ace43abdc4",
                    "sha256:070e46cf9ef0e689c4682edbf19dde6a98ac8988396c33463da5d888ae36ec9b"
                ]
            }
        },
        "1.14.3-stretch": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c901a775e04a4048d2c33c2e9c8fd7f51842e29ae6923ac2833b1edf77f6745",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "0d1f2dc88bba358d08f0c46a2a55ed7975f4efa1deda2fff471c92bb7f7b8ce5",
            "container_config": {
                "Hostname": "0d1f2dc88bba",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.3",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c901a775e04a4048d2c33c2e9c8fd7f51842e29ae6923ac2833b1edf77f6745",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-05-15T20:44:37.707373967Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-14T23:08:23.832594882Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:32ad2f356c0ec407aa31085089417aaa9f72a5dc2757ed68a0adf7a432e4bdaa in / "
                },
                {
                    "created": "2020-05-14T23:08:26.272186305Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T05:03:55.424873895Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\tnetbase \t\twget \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T05:04:00.565234266Z",
                    "created_by": "/bin/sh -c set -ex; \tif ! command -v gpg > /dev/null; then \t\tapt-get update; \t\tapt-get install -y --no-install-recommends \t\t\tgnupg \t\t\tdirmngr \t\t; \t\trm -rf /var/lib/apt/lists/*; \tfi"
                },
                {
                    "created": "2020-05-15T05:04:25.928481957Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\t\t\tprocps \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T11:29:32.67618571Z",
                    "created_by": "/bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tg++ \t\tgcc \t\tlibc6-dev \t\tmake \t\tpkg-config \t&& rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-05-15T20:44:19.936182974Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.3",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:44:32.249787829Z",
                    "created_by": "/bin/sh -c set -eux; \t\tdpkgArch=\"$(dpkg --print-architecture)\"; \tcase \"${dpkgArch##*-}\" in \t\tamd64) goRelArch='linux-amd64'; goRelSha256='1c39eac4ae95781b066c144c58e45d6859652247f7515f0d2cba7be7d57d2226' ;; \t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='b1c3a648c3c8877b98dfba1996dec604c8fb8899db07994b2dfd47b0063367c8' ;; \t\tarm64) goRelArch='linux-arm64'; goRelSha256='a7a593e2ee079d83a1943edcd1c9ed2dae7529666fce04de8c142fb61c7cdd3e' ;; \t\ti386) goRelArch='linux-386'; goRelSha256='46f8c744788103e8aeceb12c7d71eb16a58fe43e7e4711055fa9ef4bae50bff7' ;; \t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='329359e2b72839696e78b6c0a96fd939e28e7435d852f31107f68037dd5f7442' ;; \t\ts390x) goRelArch='linux-s390x'; goRelSha256='1aad312fc7fa85d663e8226237cc7519b2599b88a213098abc10de8e84d6cfab' ;; \t\t*) goRelArch='src'; goRelSha256='93023778d4d1797b7bc6a53e86c3a9b150c923953225f8a48a2d5fabc971af56'; \t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \tesac; \t\turl=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \twget -O go.tgz \"$url\"; \techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ \"$goRelArch\" = 'src' ]; then \t\techo >&2; \t\techo >&2 'error: UNIMPLEMENTED'; \t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \t\techo >&2; \t\texit 1; \tfi; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-05-15T20:44:36.640311598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:44:36.823478693Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-15T20:44:37.476406723Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-05-15T20:44:37.707373967Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3c9e1a3f2b42b10ebd6303060cf96efa299ccdd76994ee0d2942123931e65e07",
                    "sha256:fab6a7f271c8ca9af745a3543f3ca5e5fa1e8a1fa5a470fac3a935b2fd14d25e",
                    "sha256:5a7d9d59991e55c6f9913a37f2a22180882b17f33180985fe2bea54ad7892ba4",
                    "sha256:2d27741078a3875ed31155374d8ca6e8c494e2d62334178798656721b3183848",
                    "sha256:26371ba90a650ae711c6e688fd3cbdede90e86e34b68dc0047a92ef2f79acb92",
                    "sha256:79a7f66aefdc58f02fcb812563bdc25f1dcf38b498d886afeb196bd40e37e691",
                    "sha256:3901017391485a31e0375e1aead3fc4e2896df07a8392a3d3431faabbd793148"
                ]
            }
        },
        "1.14.4-alpine": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2605d5fcbe8d9429afc754eef75574137dd261c7cbe2c57b654000d347130bbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "21566cf53b519fb00db7a5a66132e43041f75ae79eae9144d3398287351e6917",
            "container_config": {
                "Hostname": "21566cf53b51",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2605d5fcbe8d9429afc754eef75574137dd261c7cbe2c57b654000d347130bbf",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:54:39.115567983Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-05-29T21:41:39.076444178Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9799ce3b2f782a28e10b1846cd9b3db827fa99c9bc601feb268456195856814e in / "
                },
                {
                    "created": "2020-05-29T21:41:39.369705865Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:53:15.961644567Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-06-02T01:53:16.616615896Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:53:16.812624756Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:54:32.440406091Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:54:38.051428282Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:54:38.239824786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:54:38.896285269Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:54:39.115567983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d3fde5edeb9763b0dffc319974d4a900a292d08cc11d5820803ca36a37bd6001",
                    "sha256:331ccff531aa8131a09cdcce45507e82dc64cef34676a067cfb82ff63ad805e6",
                    "sha256:8629ac4cab7bea286a2eb08d177c069682c88e9355eff708954347cc8ae6fb4d",
                    "sha256:fbc29f9b622f66726524ee5858d9b3d066acdd493c627c168adf44302e8d7326",
                    "sha256:6ac2b44077dd2b9d640f42b87a90e85b7f60013d9418a8f20e9e433e6fdba967"
                ]
            }
        },
        "1.14.4-alpine3.11": {
            "architecture": "s390x",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d50e734cbca9333eb957ecdd7e1d9f6ef733a734d8a818b576bc63071949178e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": null
            },
            "container": "be27a0ed57a0d0ac4c7cb29a5b7f56c0d2f064248c4e58f3937f01db7decc3dc",
            "container_config": {
                "Hostname": "be27a0ed57a0",
                "Domainname": "",
                "User": "",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GOLANG_VERSION=1.14.4",
                    "GOPATH=/go"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "#(nop) WORKDIR /go"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d50e734cbca9333eb957ecdd7e1d9f6ef733a734d8a818b576bc63071949178e",
                "Volumes": null,
                "WorkingDir": "/go",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {}
            },
            "created": "2020-06-02T01:56:07.240741867Z",
            "docker_version": "18.09.7",
            "history": [
                {
                    "created": "2020-04-23T17:50:57.093551364Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a59a30c2fd43c9f3b820751a6f5a54688c14440a1ddace1ab255475f46e6ba2d in / "
                },
                {
                    "created": "2020-04-23T17:50:58.063586518Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-23T20:01:10.568375218Z",
                    "created_by": "/bin/sh -c apk add --no-cache \t\tca-certificates"
                },
                {
                    "created": "2020-04-23T20:01:11.420086574Z",
                    "created_by": "/bin/sh -c [ ! -e /etc/nsswitch.conf ] && echo 'hosts: files dns' > /etc/nsswitch.conf"
                },
                {
                    "created": "2020-06-02T01:54:47.784412528Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOLANG_VERSION=1.14.4",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:56:00.404838106Z",
                    "created_by": "/bin/sh -c set -eux; \tapk add --no-cache --virtual .build-deps \t\tbash \t\tgcc \t\tmusl-dev \t\topenssl \t\tgo \t; \texport \t\tGOROOT_BOOTSTRAP=\"$(go env GOROOT)\" \t\tGOOS=\"$(go env GOOS)\" \t\tGOARCH=\"$(go env GOARCH)\" \t\tGOHOSTOS=\"$(go env GOHOSTOS)\" \t\tGOHOSTARCH=\"$(go env GOHOSTARCH)\" \t; \tapkArch=\"$(apk --print-arch)\"; \tcase \"$apkArch\" in \t\tarmhf) export GOARM='6' ;; \t\tarmv7) export GOARM='7' ;; \t\tx86) export GO386='387' ;; \tesac; \t\twget -O go.tgz \"https://golang.org/dl/go$GOLANG_VERSION.src.tar.gz\"; \techo '7011af3bbc2ac108d1b82ea8abb87b2e63f78844f0259be20cde4d42c5c40584 *go.tgz' | sha256sum -c -; \ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tcd /usr/local/go/src; \t./make.bash; \t\trm -rf \t\t/usr/local/go/pkg/bootstrap \t\t/usr/local/go/pkg/obj \t; \tapk del .build-deps; \t\texport PATH=\"/usr/local/go/bin:$PATH\"; \tgo version"
                },
                {
                    "created": "2020-06-02T01:56:06.076125159Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GOPATH=/go",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:56:06.279302997Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-02T01:56:07.001161898Z",
                    "created_by": "/bin/sh -c mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\""
                },
                {
                    "created": "2020-06-02T01:56:07.240741867Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /go",
                    "empty_layer": true
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e4c6cd60a9b6ee894e3c0240ac8e5298d1df17e1c8d28f8bec07694e8e6ef3d",
                    "sha256:13319da202dfd335ab5746e552c254429d7f489ce3ae73e0d64608f995517506",
                    "sha256:307d0f46d0eb86410cd1aa1a5ab03a0e1c0211027b5c877372c982c69a00e0c0",
                    "sha256:3f86ca749e2cbfb08b245fd0ec7b884802dafd66a6de35b17b7382ed3a372477",
                    "sha256:59fadbc7b025a7e7208d7cd7500409d418ddf1dadba4f9b9f76f8b58d5f9fc90"
                ]
            }
        }
    }
}