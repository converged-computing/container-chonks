{
    "manifests": {
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8014,
                "digest": "sha256:458375a6bbf1a5bf11e924f5b43c0ffcf04791fb3de111f6b95faadc1f3327e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 319383191,
                    "digest": "sha256:6512a880ce97a902489dea9b748587e6710f46211a2ac1ea8e7a74ecfbc71153"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:428daaf6aeae2d5f3e75eb8d98c4f9d33bdd96412a9aa26bc59daffe3f1d6b69"
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8034,
                "digest": "sha256:568025f0d79dead73d80a2f41254616cb5c63f1799404e3c8baf05d051c871a0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 319549007,
                    "digest": "sha256:6970fe936fcf00ccaeffc99d0019e277bda8256a0a4358d04038d8055b8b1de5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:dd8db7d63708c5e610a0c1a9d19901d360d06c5afcb31348ef749b2ae2e8b7a9"
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8032,
                "digest": "sha256:22050c25ae0d13d39f5c3c04e44d121f4cd7bb18e75ccaadbf00d9fa5b7d897b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 319571430,
                    "digest": "sha256:00effdfbfd9c5224dfee8ab16819052f995904a84e68e1279cd9675f537fd589"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1979,
                    "digest": "sha256:00e9b9c99993879ed09bc7bb6419f22144bb1e0787452730a1e752423a0f9f0a"
                }
            ]
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8034,
                "digest": "sha256:784791ce99269a7e39a64c869a649b3218aa83e29989e48d10f6d85bf72afabd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 319545432,
                    "digest": "sha256:c7dc07978d31ddd20bdd2c45b87ec835995065fa3a0bd394c664810ea74e3a5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:b1eef8667514db05c1d01d253a93e240625d0dab797a90f69ad4e46f897de5d3"
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8143,
                "digest": "sha256:ee58db131636175cf65ae0c56e5c53d0f8175c682a852ce1fb2e7f70034663a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32174695,
                    "digest": "sha256:84ed7d2f608f8a65d944b40132a0333069302d24e9e51a6d6b338888e8fd0a6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:be2bf1c4a48dae92d5a1b8aa319c8767fa491316fb80da52de80378264599a16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:a5bdc630309340a3154f37e17c00a61c28c476107656e8d6744d2ba9af980058"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:e9055237d68d011bb90d49096b637b3b6c5c7251f52e0f2a2a44148aec1181dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227288377,
                    "digest": "sha256:d81a1923a6df4df5a756c109b38cf87377ee768cbb10ee8ed674a90617ccb476"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:0e5f61ae06a03c0e88b00bbfef157ca3bc8faa2dd47d225a1391e1e3498b291e"
                }
            ]
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8144,
                "digest": "sha256:771bd50b909cefadebefd428a5b0a230a6cbc9e537225970e3c676453e1e5e3d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32174695,
                    "digest": "sha256:84ed7d2f608f8a65d944b40132a0333069302d24e9e51a6d6b338888e8fd0a6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:be2bf1c4a48dae92d5a1b8aa319c8767fa491316fb80da52de80378264599a16"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 509,
                    "digest": "sha256:a5bdc630309340a3154f37e17c00a61c28c476107656e8d6744d2ba9af980058"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:e9055237d68d011bb90d49096b637b3b6c5c7251f52e0f2a2a44148aec1181dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227276349,
                    "digest": "sha256:8386c6cbb8b927276b348a3d1bb48fa0a2d599e32534c48fbe92e086e565346d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:4415cfb44fcb45812c4b9c2ac09b80c0103e57b4e622adfd54256bf110edc511"
                }
            ]
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8141,
                "digest": "sha256:5f86112db00b9377ce13d20bb19d35bcfaa53a528691bc789dbd1726a113aea5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32291019,
                    "digest": "sha256:38e2e6cd5626f31cea1a0a5751a9a7e6564c589a3388dcf84f00d4bb98146844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:705054bc3f5bd722eb8f026532447fac897c521d8906eb36e79a60d0fb0606fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 517,
                    "digest": "sha256:c7051e0695642c5bf01467a4a64106cabfa20e57fee91b31ee73f7308bccf5bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:7308e914506c09fa6d2242368545f55462e024f785e21b21b3e90403081a9336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 227376721,
                    "digest": "sha256:4a19bbac78f988f05a4ece37a39c2d11f800af22947184158c16d913b0dee786"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:cef717926c8b7e4306ef22db4b02887405e8619030657937367a18e728dec9a6"
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8142,
                "digest": "sha256:de1a0713eeda1cf4c6bce74bfc1893fe60afb5ff98e7d548534b9d2eb6cfcb20"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32291019,
                    "digest": "sha256:38e2e6cd5626f31cea1a0a5751a9a7e6564c589a3388dcf84f00d4bb98146844"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:705054bc3f5bd722eb8f026532447fac897c521d8906eb36e79a60d0fb0606fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 517,
                    "digest": "sha256:c7051e0695642c5bf01467a4a64106cabfa20e57fee91b31ee73f7308bccf5bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:7308e914506c09fa6d2242368545f55462e024f785e21b21b3e90403081a9336"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230401362,
                    "digest": "sha256:937c12031647235f1426a11971855d4669da4a8adbdd5c1d0742253dc6da907c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:5ab219a8d72d48f9fd5c8085ead2fcf9c56a139154c7d66673d6c5e4e82f2ff3"
                }
            ]
        },
        "1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8142,
                "digest": "sha256:3d06d9a68935d81d83bdc6667bc348e91c3cfced57b0c040e8788257d01bfdea"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230402661,
                    "digest": "sha256:c8708bcd69e7552736d5d48a8b6b6b832f14d99bf4a21916c34e6fa1cfd99cd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:dfd63bcad8bebdc44c866c3569c01f18b26c5b30795fc503bc482c744a7dace1"
                }
            ]
        },
        "1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8250,
                "digest": "sha256:be2289122f84ae76b076476bd8e11340bba4e3eddaac427b84733a32b0beaf39"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32374324,
                    "digest": "sha256:6cf436f81810f067c6d4ffca6793eae7cb6d38456715b0707d8a5a2d1acccf12"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:987088a85b9606eb474a365eb210db765ff0d011ee099a6e3de5087435c6f966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 516,
                    "digest": "sha256:b4624b3efe0617e59ed3998407eafdbe1cb6451346a6cabd066b6e253f50efb1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:d42beb8ded595df5627ad4ef31bf528a6fdbfbd11d82f9023152738d6b05a7fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231092892,
                    "digest": "sha256:dfee93360ba4c0bde7b5fc34848b7a6e9dcf9eb64a5a94af280a1cb5c2cf0871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:edfef67517bc77299a410db1a59a3da5ca5b08cc74de42bb1c7d461eb79ebf3a"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8247,
                "digest": "sha256:dfeae22246e65a97798765b3f6c5e557d286d036bd46ac1de60d6b523fdb4432"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32466573,
                    "digest": "sha256:898c46f3b1a1f39827ed135f020c32e2038c87ae0690a8fe73d94e5df9e6a2d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:63366dfa0a5076458e37ebae948bc7823bab256ca27e09ab94d298e37df4c2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545,
                    "digest": "sha256:041d4cd74a929bc4b66ee955ab5b229de098fa389d1a1fb9565e536d8878e15f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6e1bee0f8701f0ae53a5129dc82115967ae36faa30d7701b195dfc6ec317a51d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228330141,
                    "digest": "sha256:e05ebbabbfbdfa7c31bc194db90e81f924137e9eb0fb8245d607225e30877ec4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:87638b2f3afbf1199d4fb8fd95870b04d4416cb23fa70943d5da625d2357b53b"
                }
            ]
        },
        "1.13.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8269,
                "digest": "sha256:63d2180a5b15c26f4db442d8242855c3e8c2a44fb7700fd23e91f3d254f52d74"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32466573,
                    "digest": "sha256:898c46f3b1a1f39827ed135f020c32e2038c87ae0690a8fe73d94e5df9e6a2d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:63366dfa0a5076458e37ebae948bc7823bab256ca27e09ab94d298e37df4c2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545,
                    "digest": "sha256:041d4cd74a929bc4b66ee955ab5b229de098fa389d1a1fb9565e536d8878e15f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6e1bee0f8701f0ae53a5129dc82115967ae36faa30d7701b195dfc6ec317a51d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228984895,
                    "digest": "sha256:92ee87172112bc64d64dc9963baf729966094710f4a9fbf28b93dc22f801aeab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:78bc3d6c9aa796d5170ea7e62da98b55144cff29500c5f89eca5e45c4949e6da"
                }
            ]
        },
        "1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8271,
                "digest": "sha256:81aa264bf28478c875983ef1150932a8593c7d6ee5c4b385e7eb86231120961c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32466573,
                    "digest": "sha256:898c46f3b1a1f39827ed135f020c32e2038c87ae0690a8fe73d94e5df9e6a2d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:63366dfa0a5076458e37ebae948bc7823bab256ca27e09ab94d298e37df4c2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545,
                    "digest": "sha256:041d4cd74a929bc4b66ee955ab5b229de098fa389d1a1fb9565e536d8878e15f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6e1bee0f8701f0ae53a5129dc82115967ae36faa30d7701b195dfc6ec317a51d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229003972,
                    "digest": "sha256:a8a1258d5aaa4ee2fb52fde4d1e531c36cb6e52ba8d6ff272fffcb64e840947d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:c78a7aa8ed3edd52ef3f2c75dadaae97a73e174654e2826d0fe672582b7afe7e"
                }
            ]
        },
        "1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8271,
                "digest": "sha256:dca1afb65414d952e68ccc1c2c02a3ce8f9d5bcc2c938d0478df00080a23df7f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32466573,
                    "digest": "sha256:898c46f3b1a1f39827ed135f020c32e2038c87ae0690a8fe73d94e5df9e6a2d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:63366dfa0a5076458e37ebae948bc7823bab256ca27e09ab94d298e37df4c2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545,
                    "digest": "sha256:041d4cd74a929bc4b66ee955ab5b229de098fa389d1a1fb9565e536d8878e15f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6e1bee0f8701f0ae53a5129dc82115967ae36faa30d7701b195dfc6ec317a51d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229000129,
                    "digest": "sha256:26b4abf11ad580734affc5c24851a08f0776cad5ef450a44d13f76a54c1a38d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:f99d21dc340c72db1d30511f881e6dcde275b5ffa34a3c1dd37d890713255e6e"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8270,
                "digest": "sha256:c85fc4a8b0cadfcc33ad4d8df5c4f06af3571147bd6e2a8c0f958e099751bd31"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32466573,
                    "digest": "sha256:898c46f3b1a1f39827ed135f020c32e2038c87ae0690a8fe73d94e5df9e6a2d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:63366dfa0a5076458e37ebae948bc7823bab256ca27e09ab94d298e37df4c2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545,
                    "digest": "sha256:041d4cd74a929bc4b66ee955ab5b229de098fa389d1a1fb9565e536d8878e15f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6e1bee0f8701f0ae53a5129dc82115967ae36faa30d7701b195dfc6ec317a51d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228654708,
                    "digest": "sha256:1298933ed509bdd44904e405726484a3ad4ec6eed433ddfa793576a93b3b6278"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:16e16419da071d4cf59e37fd52e901314a0f36e55f317edf209f4a6f3bdd33c6"
                }
            ]
        },
        "1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8271,
                "digest": "sha256:e49c84395cf86a8f968e7eb4556caeffcee23ed1d8c9d3f1744cf8e57a9c7149"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32466573,
                    "digest": "sha256:898c46f3b1a1f39827ed135f020c32e2038c87ae0690a8fe73d94e5df9e6a2d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:63366dfa0a5076458e37ebae948bc7823bab256ca27e09ab94d298e37df4c2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 545,
                    "digest": "sha256:041d4cd74a929bc4b66ee955ab5b229de098fa389d1a1fb9565e536d8878e15f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6e1bee0f8701f0ae53a5129dc82115967ae36faa30d7701b195dfc6ec317a51d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228654810,
                    "digest": "sha256:9f6dc0e930684179997ed9dfb7e460535eaa3f65e47a0f45b306f6156f33c60a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:992d7650f0658f3d142badd44f8854a48ac7a213aef1cb731ea5dfdbc9eaf7de"
                }
            ]
        },
        "1.14.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8162,
                "digest": "sha256:263e6c17cadd41d8cd8fe4b2e168cb15b49f0fd2d237512d7f7058cd50fae73b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37206102,
                    "digest": "sha256:f476d66f540886e2bb4d9c8cc8c0f8915bca7d387e536957796ea6c2f8e7dfff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:8882c27f669ef315fc231f272965cd5ee8507c0f376855d6f9c012aae0224797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 547,
                    "digest": "sha256:d9af21273955749bb8250c7a883fcce21647b54f5a685d237bc6b920a2ebad1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f5029279ec1223b70f2cbb2682ab360e1837a2ea59a8d7ff64b38e9eab5fb8c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229756405,
                    "digest": "sha256:c423cc54eea88db8c231107b0a5dd716af7f7c66af407d61aef9b8645a48e3c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1978,
                    "digest": "sha256:d88be80a129e7b38fe972f7ba4a947a7e2fb10e12d43016860c18e471ecd892f"
                }
            ]
        },
        "1.14.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8163,
                "digest": "sha256:d5c09ab985ee5cc804fb051d3e1fb170b5d7d1600e2c3d301204d607dc1ab61a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37206102,
                    "digest": "sha256:f476d66f540886e2bb4d9c8cc8c0f8915bca7d387e536957796ea6c2f8e7dfff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:8882c27f669ef315fc231f272965cd5ee8507c0f376855d6f9c012aae0224797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 547,
                    "digest": "sha256:d9af21273955749bb8250c7a883fcce21647b54f5a685d237bc6b920a2ebad1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f5029279ec1223b70f2cbb2682ab360e1837a2ea59a8d7ff64b38e9eab5fb8c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236890133,
                    "digest": "sha256:9781dbb2a42811357bd0dd77f0c64b60034ea65a62efe92e8b5b77e0f62dca58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:9af5e7ba9868ece8b228f19a9f783c76fdf788f662cb2041f051e7efe68daca0"
                }
            ]
        },
        "1.15.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8163,
                "digest": "sha256:b9070721e3f8a26bc2fbd2e3195c6aea68cdfe57fa1471e79efc42a5315daa96"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 37206102,
                    "digest": "sha256:f476d66f540886e2bb4d9c8cc8c0f8915bca7d387e536957796ea6c2f8e7dfff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:8882c27f669ef315fc231f272965cd5ee8507c0f376855d6f9c012aae0224797"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 547,
                    "digest": "sha256:d9af21273955749bb8250c7a883fcce21647b54f5a685d237bc6b920a2ebad1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f5029279ec1223b70f2cbb2682ab360e1837a2ea59a8d7ff64b38e9eab5fb8c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236904534,
                    "digest": "sha256:bd25557dcb3bc04a3901716014d00385c1abadb74fc565b1eb15b2aaa3783885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:77f8a87e7fcb7eae16475b72929bca52511f53f55f8c158dc859d8f27360d0fb"
                }
            ]
        },
        "1.15.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8108,
                "digest": "sha256:609ea8ad2fc128252075d1c3c5935284b7ee1932dc760e46d0892b0b6a2431bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28855068,
                    "digest": "sha256:6abc03819f3e00a67ed5adc1132cfec041d5f7ec3c29d5416ba0433877547b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:05731e63f21105725a5c062a725b33a54ad8c697f9c810870c6aa3e3cd9fb6a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:0bd67c50d6beeb55108476f72bea3b4b29a9f48832d6e045ec66b7ac4bf712a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236306294,
                    "digest": "sha256:8ce2e25dbc3be73e76a622b0e8ac000e9ce29a006dae71a2b45e3cf51f210d56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:d05c361e7809d6662e87502bdc18713a3633c9764eacd712916ec6eb9f1d16a4"
                }
            ]
        },
        "1.15.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8109,
                "digest": "sha256:93e55b995aeacc6683fee333b4fef4ed134492f6d51741aa3f483110af96234a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28855068,
                    "digest": "sha256:6abc03819f3e00a67ed5adc1132cfec041d5f7ec3c29d5416ba0433877547b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:05731e63f21105725a5c062a725b33a54ad8c697f9c810870c6aa3e3cd9fb6a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:0bd67c50d6beeb55108476f72bea3b4b29a9f48832d6e045ec66b7ac4bf712a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236307277,
                    "digest": "sha256:95497ec13dc6bd2bd61e84541cf41b84492d893f9ac97e2593ad61dd0cfd3663"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:c922840f50c7523a06d2cff57a3af79dcb89a1bf7609fd234bd705ce1b8c72f0"
                }
            ]
        },
        "1.16.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8087,
                "digest": "sha256:899ac249ad58731d44456ced3905a16a26e37ab0d59262b520c7d078b8dfc4a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28855068,
                    "digest": "sha256:6abc03819f3e00a67ed5adc1132cfec041d5f7ec3c29d5416ba0433877547b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:05731e63f21105725a5c062a725b33a54ad8c697f9c810870c6aa3e3cd9fb6a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:0bd67c50d6beeb55108476f72bea3b4b29a9f48832d6e045ec66b7ac4bf712a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236539235,
                    "digest": "sha256:8d660371b677bf107cc06ed3810e69a01d8c850c38dac1d95d14ae8f8a6a4a2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:cc8003991f96cfbd08122378637569484ea84e29023d2e9c2309fc8de2576ac5"
                }
            ]
        },
        "1.16.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8088,
                "digest": "sha256:f42293433871594fda81269c47acdf34b5fd27f2d4e3cc903d41251513633dd9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28855068,
                    "digest": "sha256:6abc03819f3e00a67ed5adc1132cfec041d5f7ec3c29d5416ba0433877547b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:05731e63f21105725a5c062a725b33a54ad8c697f9c810870c6aa3e3cd9fb6a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:0bd67c50d6beeb55108476f72bea3b4b29a9f48832d6e045ec66b7ac4bf712a0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 237683592,
                    "digest": "sha256:0104a8efc2f0602ff5c5e0cfa0821b3969b947988884a689da2420d502aab505"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1972,
                    "digest": "sha256:1a8c8e7738e1e79f39a34465c62514d175dae874692af2c99322996d994d693c"
                }
            ]
        },
        "1.17.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:491d38df244046bc1b8f38bcac25eeb1064079298cf77381707c1d1f6932e778"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26684508,
                    "digest": "sha256:5b7339215d1d5f8e68622d584a224f60339f5bef41dbd74330d081e912f0cddd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35352,
                    "digest": "sha256:14ca88e9f6723ce82bc14b241cda8634f6d19677184691d086662641ab96fe68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:a31c3b1caad473a474d574283741f880e37c708cc06ee620d3e93fa602125ee0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b054a26005b7f3b032577f811421fab5ec3b42ce45a4012dfa00cf6ed6191b0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235616501,
                    "digest": "sha256:b9da4c95cfe0072bb29f9631079d7915f9092f7eb84d954359258978311336a6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:8ce0439fd88508ceaed62db216600a354f2a0b710d52f640369a12b56e00c0c4"
                }
            ]
        },
        "1.17.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:b355659d6831569fe1f954b9844d01cb0a788a9923a2546c0edb7a415bf3b5ce"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26684508,
                    "digest": "sha256:5b7339215d1d5f8e68622d584a224f60339f5bef41dbd74330d081e912f0cddd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35352,
                    "digest": "sha256:14ca88e9f6723ce82bc14b241cda8634f6d19677184691d086662641ab96fe68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:a31c3b1caad473a474d574283741f880e37c708cc06ee620d3e93fa602125ee0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b054a26005b7f3b032577f811421fab5ec3b42ce45a4012dfa00cf6ed6191b0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235616893,
                    "digest": "sha256:1ba5755092974e6807c4915a201909700e5e1e13f83a750ce2a0e7b6d57eaa58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:4b8cec254e7f765b3d8fcd83b47a59f31c8086ba42c3e2ff985db211a11d4ad7"
                }
            ]
        },
        "1.17.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8148,
                "digest": "sha256:afc3f8b6c086924e2ca053e4aa0a039c34869cfbd0c142e648f9a7d306c576bc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26686680,
                    "digest": "sha256:7413c47ba209e555018c4be91101d017737f24b0c9d1f65339b97a4da98acb2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35372,
                    "digest": "sha256:0fe7e7cbb2e88617d969efeeb3bd3125f7d309335c736a0525233ec2dc06aee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:1d425c98234572d4221a1ac173162c4279f9fdde4726ec22ad3c399f59bb7503"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:344da5c95cecd0f55238ce59b8469ee301056001ece2b769e9691b80f94f9f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234981426,
                    "digest": "sha256:b64627e41f5c2319f3e60d9cc2797da031269dbcfc51744bbed5df26a783e687"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:d727bd52a81e25b73caba487e0d60d3020efd92cd6ad77314be223f245a6cf9e"
                }
            ]
        },
        "1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:7014c2c38f5bd44715dc03ae44baff9b66555c82c5431065f7573c3228785476"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26686680,
                    "digest": "sha256:7413c47ba209e555018c4be91101d017737f24b0c9d1f65339b97a4da98acb2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35372,
                    "digest": "sha256:0fe7e7cbb2e88617d969efeeb3bd3125f7d309335c736a0525233ec2dc06aee1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:1d425c98234572d4221a1ac173162c4279f9fdde4726ec22ad3c399f59bb7503"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:344da5c95cecd0f55238ce59b8469ee301056001ece2b769e9691b80f94f9f37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235018771,
                    "digest": "sha256:eeb2c00a4a2754586c40f72f2754c74dce1d7462360dc362ac31af048a93554f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:296287cc51b03fc0db211ffc9b95965fd895033a1fd657efada7cd5847f9f6ae"
                }
            ]
        },
        "1.18.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:8a3bcd6b06c3a2b3a83f4c1b2c736d834c580cdcc34ac0722c88322881697efa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26687415,
                    "digest": "sha256:35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35366,
                    "digest": "sha256:251f5509d51d9e4119d4ffb70d4820f8e2d7dc72ad15df3ebd7cd755539e40fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:8e829fe70a46e3ac4334823560e98b257234c23629f19f05460e21a453091e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6001e1789921cf851f6fb2e5fe05be70f482fe9c2286f66892fe5a3bc404569c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235057962,
                    "digest": "sha256:daa9ebafb4ec1ee3429fe5a54784e9dc76b5076aa8b0c07dbd488130e68ac390"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:dc8697c66ba45691433bfe769758b0fa1cc5da6e3f9ae2c6fb398da379890c3c"
                }
            ]
        },
        "1.18.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:eb682ea78750cb3772794080cd3b54fd8a80ef23833fa45946bc10fcf8afa1e1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26687415,
                    "digest": "sha256:35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35366,
                    "digest": "sha256:251f5509d51d9e4119d4ffb70d4820f8e2d7dc72ad15df3ebd7cd755539e40fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:8e829fe70a46e3ac4334823560e98b257234c23629f19f05460e21a453091e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6001e1789921cf851f6fb2e5fe05be70f482fe9c2286f66892fe5a3bc404569c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235071998,
                    "digest": "sha256:57fc52ecd44cf17d81aeb2ecbbf7f4e8976f8b486c4123c12bfc29d763fc4b21"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:08ff1dc8ab024dc56aff0150088d2b2f291edb608fb5d9a4ebc7492558355706"
                }
            ]
        },
        "1.18.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8149,
                "digest": "sha256:75bc46108f9ea5fa78f1dacb790ae7ddc7a7cd8d44128423a035f4d6db47368b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26687415,
                    "digest": "sha256:35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35366,
                    "digest": "sha256:251f5509d51d9e4119d4ffb70d4820f8e2d7dc72ad15df3ebd7cd755539e40fd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:8e829fe70a46e3ac4334823560e98b257234c23629f19f05460e21a453091e6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:6001e1789921cf851f6fb2e5fe05be70f482fe9c2286f66892fe5a3bc404569c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235147393,
                    "digest": "sha256:9990fad012ac2e6903b8f1490caf2d3f8551304175eac2d9ae2b10f2d61ee024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:65dabf53cf3a013b9951d0f5eb803f0a8f879acbb0c8ab9d04b6f4dec8412cf2"
                }
            ]
        },
        "1.18.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8149,
                "digest": "sha256:a6c7d4230a4b395125dc186c33e337c55d02f3ca20e8082bf6f8771acddeece7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26683298,
                    "digest": "sha256:5667fdb72017d1fb364744ca1abf7b6f3bbe9c98c3786f294a461c2866db69ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35355,
                    "digest": "sha256:d83811f270d56d34a208f721f3dbf1b9242d1900ad8981fc7071339681998a31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:ee671aafb583e2321880e275c94d49a49185006730e871435cd851f42d2a775d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:7fc152dfb3a6b5c9a436b49ff6cd72ed7eb5f1fd349128b50ee04c3c5c2355fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235098829,
                    "digest": "sha256:faf789fc66282da74f1ce3daae60b166918937072a9a35526f61995bc985ed22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:9271a9e8ea80d7cb059c988467cacab986ddef92940345688a7e407198650322"
                }
            ]
        },
        "1.18.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8152,
                "digest": "sha256:1c5ac83e7033601e158236d2f311fe75c694f743ffb53b21069a013ed19e8326"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26683298,
                    "digest": "sha256:5667fdb72017d1fb364744ca1abf7b6f3bbe9c98c3786f294a461c2866db69ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35355,
                    "digest": "sha256:d83811f270d56d34a208f721f3dbf1b9242d1900ad8981fc7071339681998a31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:ee671aafb583e2321880e275c94d49a49185006730e871435cd851f42d2a775d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:7fc152dfb3a6b5c9a436b49ff6cd72ed7eb5f1fd349128b50ee04c3c5c2355fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236196509,
                    "digest": "sha256:46d5d45ab927f7e9a57cf624bac91939cc7143c523dae132f075d8240f8e02e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:57a9a0e67df3a81f76cc0979d170d1a1e2bdf6c1c4cf30f91353116ee7b0b026"
                }
            ]
        },
        "1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:acf0d49f304469082cd3044e1794a76dbf05583d83effe75b11c4426d9a9aa38"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26683298,
                    "digest": "sha256:5667fdb72017d1fb364744ca1abf7b6f3bbe9c98c3786f294a461c2866db69ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35355,
                    "digest": "sha256:d83811f270d56d34a208f721f3dbf1b9242d1900ad8981fc7071339681998a31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:ee671aafb583e2321880e275c94d49a49185006730e871435cd851f42d2a775d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:7fc152dfb3a6b5c9a436b49ff6cd72ed7eb5f1fd349128b50ee04c3c5c2355fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236194195,
                    "digest": "sha256:a5a4d91ebe0b7d7d50218485ce361d4868c6842faffcafeb5bf3d395994a6fb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1979,
                    "digest": "sha256:6020e3a6a61a40280d19f9610c11868131dec45c6e616e457a496438eb959f81"
                }
            ]
        },
        "1.19.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8152,
                "digest": "sha256:8768aa2b6cc4da47104927a0bfc50fc07be660a3bdde54903f0aec6834beccb3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26683298,
                    "digest": "sha256:5667fdb72017d1fb364744ca1abf7b6f3bbe9c98c3786f294a461c2866db69ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35355,
                    "digest": "sha256:d83811f270d56d34a208f721f3dbf1b9242d1900ad8981fc7071339681998a31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:ee671aafb583e2321880e275c94d49a49185006730e871435cd851f42d2a775d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:7fc152dfb3a6b5c9a436b49ff6cd72ed7eb5f1fd349128b50ee04c3c5c2355fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236206143,
                    "digest": "sha256:57ccc2d36b8269d90db84a621cfd59ae66726c20ae69f4709a0dc86e52fe8627"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:ec941947f4aa5ba4e23e36e0ddc10cdfdec8865e99044cc13cb77499a47119d6"
                }
            ]
        },
        "1.19.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:e21e980a105260f835e796a72275142c36b03898f78d0098913b0e2e601ee91b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26687648,
                    "digest": "sha256:22e816666fd6516bccd19765947232debc14a5baf2418b2202fd67b3807b6b91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35373,
                    "digest": "sha256:079b6d2a1e53c648abc48222c63809de745146c2ee8322a1b9e93703318290d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:11048ebae90883c19c9b20f003d5dd2f5bbf5b48556dabf06c8ea5c871c8debe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:c58094023a2e61ef9388e283026c5d6a4b6ff6d10d4f626e866d38f061e79bb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236232737,
                    "digest": "sha256:785191e8988e51da1f787da80f128f7b7f6408652597f6ec57d059c70c79a448"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:a2d44a402afd49b3ae84674afddeec05cf97d2af3e035199572cb55e1a09cc7f"
                }
            ]
        },
        "1.19.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:89565583846d597d6fa31b8473b4c8c680896885d3af9ef0f05e4dbaf1028ab3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26687648,
                    "digest": "sha256:22e816666fd6516bccd19765947232debc14a5baf2418b2202fd67b3807b6b91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35373,
                    "digest": "sha256:079b6d2a1e53c648abc48222c63809de745146c2ee8322a1b9e93703318290d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:11048ebae90883c19c9b20f003d5dd2f5bbf5b48556dabf06c8ea5c871c8debe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:c58094023a2e61ef9388e283026c5d6a4b6ff6d10d4f626e866d38f061e79bb9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236227708,
                    "digest": "sha256:56d1329a17f44909a2b56368dde93965fbef0d481071f801621092d031a234c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:404ca68901c3b0703702b25c62c313210d0d72ac49f4b99421e5ecc7d4ac2b6a"
                }
            ]
        },
        "1.20.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8152,
                "digest": "sha256:903337539c336ec12443dde791bfdd6bbcb803a734d7fed85a00e9f27fb7de84"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236256997,
                    "digest": "sha256:95b28d493dff2d56db090608897deef3e17abbdbaace82d9d59c8b1bbf699f1a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:9bebe5dd836faa1d554f7115be08564215958798ef17a9aea3b7ab81ec1ef8bd"
                }
            ]
        },
        "1.20.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:f77956cb54def46d61d8a663ff7d98539e02d3369409ce2494f87f2b1d7200fc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236258862,
                    "digest": "sha256:a7628f5ca61204a2587a967c7038c1f41054b703327194a2d0168b79210d1798"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:92d26282b0913243dd75b0548fa448b9c42162aa12b13a08fb345a58633ff82f"
                }
            ]
        },
        "1.20.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:e012575f4d2ee79f799c80bfd5a506083c9e879a4b336da5d8b6af1b169efd3f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236256477,
                    "digest": "sha256:f7c7c5d3c10a1e9935edf379e0c6eaae98cb16dc92b598212051813e1b107ed2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:49b65a4fef2f3cbf8a97ff1a96e9c318f06358d5348ebdcd265f1e55536ac078"
                }
            ]
        },
        "1.20.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8152,
                "digest": "sha256:540230669154e2ba7cbc2de5e104b6b9483957897050d962bc674f04b6c26852"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236255424,
                    "digest": "sha256:8bad1a400376ce2df86073908479200c169990975419af13acc17d0d49f6ce7b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:a14de52ed007595c6fd979d64ef5d32cd082c3db975e1e736000a56ee9f6999e"
                }
            ]
        },
        "1.20.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8152,
                "digest": "sha256:fbab6cd739f6e487ae2c4ae5f0914c8ffd4f469ab77cd85b0c570d5b1a02cac6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236200478,
                    "digest": "sha256:c541288b743204e9aaa921aa173de245fbe53e813253b0cb7fd49aff6cec0834"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1972,
                    "digest": "sha256:6000a326808315c4088b8fc170f4cf10af452299c5e4a17ae445ba7a66a1fe19"
                }
            ]
        },
        "1.20.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:04539d5b3de6570a35cbd5e5a539fd3455ae49e9ad9360128bd84eb25c2253ec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 236116706,
                    "digest": "sha256:eb0419a0ff096407929cb9888ca72298bd43d120a58e5a5ff3ff2caec9d791c5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:b50c3c7eaad58c2afd320f3db815826e8522d3765edd1d0748910c567fa0b8a4"
                }
            ]
        },
        "1.21.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:6023c521816aaeb57477097b965326de9ae9afd85ea14813450c953c2a4511f5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688847,
                    "digest": "sha256:7ddbc47eeb70dc7f08e410a6667948b87ff3883024eb41478b44ef9a81bf400c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35362,
                    "digest": "sha256:c1bbdc448b7263673926b8fe2e88491e5083a8b4b06ddfabf311f2fc5f27e2ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:8c3b70e3904492c753652606df4726430426f42ea56e06ea924d6fea7ae162a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:45d437916d5781043432f2d72608049dcf74ddbd27daa01a25fa63c8f1b9adc4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234803435,
                    "digest": "sha256:a263bece525554112440767f24c98e43338d1613af79bd830576c3cb2d46442a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1972,
                    "digest": "sha256:2657206ce38e2168fb9d9f615afbe767de196a7b3badb021149b41754663cbba"
                }
            ]
        },
        "1.21.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8149,
                "digest": "sha256:b1d75221fdc5365491765fa6ba893aeb0d8e9e6828d513f173e73400408f01a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26690191,
                    "digest": "sha256:5c939e3a4d1097af8d3292ad3a41d3caa846f6333b91f2dd22b972bc2d19c5b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35366,
                    "digest": "sha256:c63719cdbe7ae254b453dba06fb446f583b503f2a2c15becc83f8c5bc7a705e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:19a861ea6baff71b05cd577478984c3e62cf0177bf74468d0aca551f5fcb891c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:651c9d2d6c4f37c56a221259e033e7e2353b698139c2ff950623ca28d64a9837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235373564,
                    "digest": "sha256:63c0d23b32769b1db16d86b6bd24c98797c329f5be9ebfbaaf77a07366e301d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1972,
                    "digest": "sha256:9093eea0069281cf3abe2aaa4362f6a7dde882723fdd1a0f0e79d4d0dda1decb"
                }
            ]
        },
        "1.22.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8156,
                "digest": "sha256:5bddcd25e6f0d9db12e298412e15e7d4fa1d36e72866bbc39e5e495bf5e09e7f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26690191,
                    "digest": "sha256:5c939e3a4d1097af8d3292ad3a41d3caa846f6333b91f2dd22b972bc2d19c5b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35366,
                    "digest": "sha256:c63719cdbe7ae254b453dba06fb446f583b503f2a2c15becc83f8c5bc7a705e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:19a861ea6baff71b05cd577478984c3e62cf0177bf74468d0aca551f5fcb891c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:651c9d2d6c4f37c56a221259e033e7e2353b698139c2ff950623ca28d64a9837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235363580,
                    "digest": "sha256:349aa76d7a96d01a9f1ed9b9c14bc5b2bd41273309674c7c12b8a798275b8d4f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:b41643c5d5224216231be76211cac076ec3f3f968ec81c0b427232c7381a81b9"
                }
            ]
        },
        "1.22.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8155,
                "digest": "sha256:3e8ac128ea3ba3828ad9a3b82555f6eb4368c9f6d894c87ac7b53405f2c90bef"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26690191,
                    "digest": "sha256:5c939e3a4d1097af8d3292ad3a41d3caa846f6333b91f2dd22b972bc2d19c5b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35366,
                    "digest": "sha256:c63719cdbe7ae254b453dba06fb446f583b503f2a2c15becc83f8c5bc7a705e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:19a861ea6baff71b05cd577478984c3e62cf0177bf74468d0aca551f5fcb891c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:651c9d2d6c4f37c56a221259e033e7e2353b698139c2ff950623ca28d64a9837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235348515,
                    "digest": "sha256:aebec43a669e94d2c62e62d6958240121d17fad80c68a85f3823b26be112e48c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:ff9b95732e079f16ca7e6e0786a7f79e6aa3648a367bf7143f8b0f1707a46322"
                }
            ]
        },
        "1.22.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:d3063ba023a8ab40657dfdfeb269d983ffffc557c33ca86515e82faf1d8cf24a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26692096,
                    "digest": "sha256:423ae2b273f4c17ceee9e8482fa8d071d90c7d052ae208e1fe4963fceb3d6954"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35365,
                    "digest": "sha256:de83a2304fa1f7c4a13708a0d15b9704f5945c2be5cbb2b3ed9b2ccb718d0b3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:f9a83bce3af0648efaa60b9bb28225b09136d2d35d0bed25ac764297076dec1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:b6b53be908de2c0c78070fff0a9f04835211b3156c4e73785747af365e71a0d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235376201,
                    "digest": "sha256:ae9961b57296555d73845486ef77b937a336832952f55cf55c5f41d16389a5ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:4b0eff631e9e404e5f12b0c8f9bc49c62170ed8e141032155a7c23b737af6c9c"
                }
            ]
        },
        "1.22.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:d0ed12ea2a0d2ac3b037ea42d25d1a7786356c79b2199e130d7315b5ebba2def"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26692096,
                    "digest": "sha256:423ae2b273f4c17ceee9e8482fa8d071d90c7d052ae208e1fe4963fceb3d6954"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35365,
                    "digest": "sha256:de83a2304fa1f7c4a13708a0d15b9704f5945c2be5cbb2b3ed9b2ccb718d0b3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:f9a83bce3af0648efaa60b9bb28225b09136d2d35d0bed25ac764297076dec1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:b6b53be908de2c0c78070fff0a9f04835211b3156c4e73785747af365e71a0d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 235386127,
                    "digest": "sha256:c376614062d19d24ab482eacd4957fcf63a5edd84ee5438bb5cf4ab7b5cce2a3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:61d7687ca7164021a6a7adf316d890b421ac6f87726feebbe5d9fd7814c12fad"
                }
            ]
        },
        "1.23.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8157,
                "digest": "sha256:f6d9e14132a7805e316c048f0af5019c83000b9790f1aa4598853f47179acf31"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26692096,
                    "digest": "sha256:423ae2b273f4c17ceee9e8482fa8d071d90c7d052ae208e1fe4963fceb3d6954"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35365,
                    "digest": "sha256:de83a2304fa1f7c4a13708a0d15b9704f5945c2be5cbb2b3ed9b2ccb718d0b3d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:f9a83bce3af0648efaa60b9bb28225b09136d2d35d0bed25ac764297076dec1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:b6b53be908de2c0c78070fff0a9f04835211b3156c4e73785747af365e71a0d7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234335251,
                    "digest": "sha256:76ecac76dd47474c4cd7e5ebc95ccd18cf5802dc3f4e42e6b2c078c4ee62d4a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:ab93f2419fc53a0adde988e08412e3af5657eb5241f78e84f6491affad3e592c"
                }
            ]
        },
        "1.24.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8158,
                "digest": "sha256:dc121e8dfe4c475beaccff533353c93809e65106c7eefd19ae214c3c7ebc6d25"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26690587,
                    "digest": "sha256:5bed26d33875e6da1d9ff9a1054c5fef3bbeb22ee979e14b72acf72528de007b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35372,
                    "digest": "sha256:f11b29a9c7306674a9479158c1b4259938af11b97359d9ac02030cc1095e9ed1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:930bda195c84cf132344bf38edcad255317382f910503fef234a9ce3bff0f4dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:78bf9a5ad49e4ae42a83f4995ade4efc096f78fd38299cf05bc041e8cdda2a36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234349530,
                    "digest": "sha256:74910b33353f432f6e6264d18de932bf0a49c61b41bdf07bdfe403b646fb5e25"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:edbce8559a8fef49e0e4a10f9efc65d8cd5a1c09730aa0d7cc0027e1a34d2efb"
                }
            ]
        },
        "1.24.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8157,
                "digest": "sha256:c71af961007f4a88d4b5b03db6551b4ec3dd84517f358726e085f6034fe3d548"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26690587,
                    "digest": "sha256:5bed26d33875e6da1d9ff9a1054c5fef3bbeb22ee979e14b72acf72528de007b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35372,
                    "digest": "sha256:f11b29a9c7306674a9479158c1b4259938af11b97359d9ac02030cc1095e9ed1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:930bda195c84cf132344bf38edcad255317382f910503fef234a9ce3bff0f4dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:78bf9a5ad49e4ae42a83f4995ade4efc096f78fd38299cf05bc041e8cdda2a36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 234348098,
                    "digest": "sha256:48aeede27de5abf908cb3db2795ef53b29cef94eb517fcb16492381977400032"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:7727114a1d81c1081733cc0a75726ec53ecf21a53124d45d5cc57f6f2ca6b3ca"
                }
            ]
        },
        "1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8157,
                "digest": "sha256:71cd6ebf56bfb45997b72e6a32d4774caab34adb355250dfa831b502e6cfc8e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26689802,
                    "digest": "sha256:23884877105a7ff84a910895cd044061a4561385ff6c36480ee080b76ec0e771"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35367,
                    "digest": "sha256:bc38caa0f5b94141276220daaf428892096e4afd24b05668cd188311e00a635f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:2910811b6c4227c2f42aaea9a3dd5f53b1d469f67e2cf7e601f631b119b61ff7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:36505266dcc64eeb1010bd2112e6f73981e1a8246e4f6d4e287763b57f101b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233722983,
                    "digest": "sha256:2194f86f6d0ead15b573f0503086745dcb6d21c26b938ec844aad1a7c4032a9d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:ee098ba364589a10314fe94dbc289c4cf81347b01683fd12dcf4fe3ff94ac6c6"
                }
            ]
        },
        "1.25.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:3e62729a43eb389da1ec4198b279c8d62f988a3e0be6b98919b10250468c3142"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26689802,
                    "digest": "sha256:23884877105a7ff84a910895cd044061a4561385ff6c36480ee080b76ec0e771"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35367,
                    "digest": "sha256:bc38caa0f5b94141276220daaf428892096e4afd24b05668cd188311e00a635f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:2910811b6c4227c2f42aaea9a3dd5f53b1d469f67e2cf7e601f631b119b61ff7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:36505266dcc64eeb1010bd2112e6f73981e1a8246e4f6d4e287763b57f101b0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233694296,
                    "digest": "sha256:ca3a23d4c5a17c4e5415f7ad8e89f89f79f9b1a5bb68a077671bc709e07611e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:4b7065e2a2aa79db456fc98f7e03019ce2d96f0b10411355b83825c003ed420c"
                }
            ]
        },
        "1.26.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8157,
                "digest": "sha256:502963c636abf51f38f6956781ebd4626d055e2467e6194a904536b12e6a9042"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26688718,
                    "digest": "sha256:d7c3167c320d7a820935f54cf4290890ea19567da496ecf774e8773b35d5f065"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35369,
                    "digest": "sha256:131f805ec7fd68d45a887e2ef82de61de0247b4eb934ab03b7c933650e854baa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:322ed380e680a77f30528ba013e3a802a7b44948a0609c7d1d732dd46a9a310d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:6ac240b130982ad1c3ba3188abbf18ba4e54bdd9e504ce2d5c2eff6d3e86b8dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233718328,
                    "digest": "sha256:edd1d70deb78a39994ffa0f3801ef45d1c00da134611644791d329f515b8ddd6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:59b9495493dba335e202632a525fd0bd2f1eafd163f5cff8af509899bc4b5125"
                }
            ]
        },
        "1.27.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:b906b3194ae6b2d0011aee7675c6e121e8ae4545c04a98604501949eeaace38e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26696193,
                    "digest": "sha256:a1125296b23d78a3585a7910d649fbf0cc56284f9d2066e3243e8bc18f90b308"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35365,
                    "digest": "sha256:3c742a4a0f38c95e690ad2dad8909c0cb232911418ac94a73da2a28becc7b734"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:4c5ea3b329965bf7239f4e4f484915a444ec6d78b532ae12525934d4f6f7ac9a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:1b4be91ead68299f53759fd80c135e0dde0eb797e91eb8fbc5a708a506e0c433"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239062800,
                    "digest": "sha256:d29ca20f760ec2a4fc9239b2062c32019dc099e9f2824d2215a6be19c3a302f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:59987baeed7f715004bf79c28e55620262f26e7b37c2affe72bdd2dc91117335"
                }
            ]
        },
        "1.28.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8160,
                "digest": "sha256:86b84ebe8514065173bc2cb16df4c4712b976a52be1db5b3791f7a494d439995"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26697127,
                    "digest": "sha256:7595c8c21622ea8a8b9778972e26dbbe063f7a1c4b0a28a80a34ebb3d343b586"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 35364,
                    "digest": "sha256:d13af8ca898f36af68711cb67c345f65046a78ccd802453f4b129adf9205b1f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:70799171ddba93a611490ba3557d782714b3f4da8963d49ac8726786ba8274a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:b6c12202c5ef07dc9eb8f9d9e71407064684ed70f8c4040b62679b7d30200840"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233754397,
                    "digest": "sha256:c8ea292135a30ea726c59a5e371e9dfa81791d9a4d6fe7ad7314aa881eef5e2f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:40b1f9f347c97a6f97e0a7870eb3883ae644b21af85df7d89707759cde557482"
                }
            ]
        },
        "1.29.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8105,
                "digest": "sha256:36fde8073de6396cb0f131af840b74802fff3c43e923dd8db4ae92b93e1afeb8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26699608,
                    "digest": "sha256:5d9821c948472065b3c166b4abc08367160961c9ac4639eb0023670ab4845a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:a610eae58dfceafc0725cb0472249020f75bcc796468615798ee394cbaf86120"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:a40e0eb9f1408cd0bee02979b33f05689110bc9caba370388d94f73b46a6379a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233787387,
                    "digest": "sha256:3508dc765e77eae5507905976716a29a5801c435fce641363a51f6fe06184a7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:fea94bf5433ed65dd49d2ba9da329e3b429fbe7267f2a4f4a1212c1fcbf903db"
                }
            ]
        },
        "1.29.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8105,
                "digest": "sha256:37de23c6e1a9ae16b3ef8a5f899170f8f3f2d12e52c18547f6c7d90ffaff400b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26699608,
                    "digest": "sha256:5d9821c948472065b3c166b4abc08367160961c9ac4639eb0023670ab4845a6a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:a610eae58dfceafc0725cb0472249020f75bcc796468615798ee394cbaf86120"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:a40e0eb9f1408cd0bee02979b33f05689110bc9caba370388d94f73b46a6379a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233802891,
                    "digest": "sha256:a502b6dd0e555c7d375fe4d79003bc218549bed3ca451d0f21139e645d24391a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:c778919d2eb9797c348dbd59116f6b3d99a269e1ee5760d99622a732fdf641ce"
                }
            ]
        },
        "1.30.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8105,
                "digest": "sha256:7896141cd789f802babf67d0adf50c21bc9bf3778b2972456295331c787184d3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26701612,
                    "digest": "sha256:171857c49d0f5e2ebf623e6cb36a8bcad585ed0c2aa99c87a055df034c1e5848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:419640447d267f068d2f84a093cb13a56ce77e130877f5b8bdb4294f4a90a84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61e52f862619ab016d3bcfbd78e5c7aaaa1989b4c295e6dbcacddd2d7b93e1f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233813764,
                    "digest": "sha256:39d3933cd9d4d876399b79bc11591d5eef70bbf46b552579d2028e998a962ecf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:7a649bc20dbfd609d85657c11ee8eb458fd5697978d63f31734d8d6c6f26c2bf"
                }
            ]
        },
        "1.31.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8101,
                "digest": "sha256:d991f6d8f55b2bcba73b01b93c483d581305291ead7e903746bf29f28ba1f71a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26701612,
                    "digest": "sha256:171857c49d0f5e2ebf623e6cb36a8bcad585ed0c2aa99c87a055df034c1e5848"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:419640447d267f068d2f84a093cb13a56ce77e130877f5b8bdb4294f4a90a84f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:61e52f862619ab016d3bcfbd78e5c7aaaa1989b4c295e6dbcacddd2d7b93e1f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 241111884,
                    "digest": "sha256:55bbca4507786c0294798248a4f54c6dcf07d6effdf01465916e9be4caf1b28c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:0e0328d193361f53f333847222f53dd6f6c75d6807fb7623643e5c7a798a4fde"
                }
            ]
        },
        "1.32.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8087,
                "digest": "sha256:22e6fddaa7e6c2cf6e06915970581188e5c2ef9f002ffde3b66a8c29c6a3e1cc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708056,
                    "digest": "sha256:f22ccc0b8772d8e1bcb40f137b373686bc27427a70c0e41dd22b38016e09e7e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:3cf8fb62ba5ffb221a2edb2208741346eb4d2d99a174138e4afbb69ce1fd9966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:e80c964ece6a3edf0db1cfc72ae0e6f0699fb776bbfcc92b708fbb945b0b9547"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 233864417,
                    "digest": "sha256:8c9485d3e3eb3f78b5fa1e398563386bc7c20ed74d1fddf91f0fafa08e6c089c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:1a0530b6dc7432034491e8db82bec765d559eb4d2fa3cf0ceea494ccbd2831b2"
                }
            ]
        },
        "1.32.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8416,
                "digest": "sha256:b6bed721d9724af1ca74160691e7c0e89a734270001e6ace285071b6f862c5c8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708056,
                    "digest": "sha256:f22ccc0b8772d8e1bcb40f137b373686bc27427a70c0e41dd22b38016e09e7e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:3cf8fb62ba5ffb221a2edb2208741346eb4d2d99a174138e4afbb69ce1fd9966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:e80c964ece6a3edf0db1cfc72ae0e6f0699fb776bbfcc92b708fbb945b0b9547"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 239978780,
                    "digest": "sha256:3a65164432e930e8bfa029931e35bef01f83862dd4fbd7158272469d5584fbdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:37a5c743c274a08f028e1b4f05f3be51e47d1b00ed296c5b0118bab83a890ebf"
                }
            ]
        },
        "1.33.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8657,
                "digest": "sha256:730069e6e0235597bd263546bdea5424655ce7ad88fa4d664634e63063047496"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708056,
                    "digest": "sha256:f22ccc0b8772d8e1bcb40f137b373686bc27427a70c0e41dd22b38016e09e7e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:3cf8fb62ba5ffb221a2edb2208741346eb4d2d99a174138e4afbb69ce1fd9966"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:e80c964ece6a3edf0db1cfc72ae0e6f0699fb776bbfcc92b708fbb945b0b9547"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248770354,
                    "digest": "sha256:6186dcf675e6dc539eebfc9b73fa61f874aad241aba39040ed3e01045af0984a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:ffd677aaa4d2a5e7f26e916ecabe391387f80daff881118cd687ecf59110a1c0"
                }
            ]
        },
        "1.33.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8655,
                "digest": "sha256:fd8be294b9384a86e6bdc04200d0dbf0c8e6970d840d73195e01ab36cf479095"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26709716,
                    "digest": "sha256:d519e2592276828ca171d85e0532899cd4f98c70f5c697b45fa2e126e9f9fe49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d22d2dfcfa9cd230ed3c47defec2670d45081598c721dd85cafc34ea459f970e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b3afe92c540b778c64ca316d1e679d55d2d2e812e450f516a808ee591f0c3f77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243548262,
                    "digest": "sha256:42badb4467e3046182a5950974203bbe52fedd2b45d7b8c537666e2478b4bd44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1948,
                    "digest": "sha256:7e30409ad302a35eeceb80e01e1f8048a1273febadf10b8280974d12e192e2f4"
                }
            ]
        },
        "1.34.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8656,
                "digest": "sha256:3c7a653d8141035a448ddfafa24cdb4aa6aa2738426eb04397b92fa57963da5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26709716,
                    "digest": "sha256:d519e2592276828ca171d85e0532899cd4f98c70f5c697b45fa2e126e9f9fe49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d22d2dfcfa9cd230ed3c47defec2670d45081598c721dd85cafc34ea459f970e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b3afe92c540b778c64ca316d1e679d55d2d2e812e450f516a808ee591f0c3f77"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243593912,
                    "digest": "sha256:5bc3b1db3e1e44a640f9a245418f70214fbfc457afa6ffea9c91b66d966332f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:2d815a36b7c3c8be72e16f77def19c3b6cf14b4f9afdc9153a4216a33881f085"
                }
            ]
        },
        "1.35.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8656,
                "digest": "sha256:250ca93db55cf969296517d58e848d51aa85bc411963625315351e9212eb4ada"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710781,
                    "digest": "sha256:6e0aa5e7af40303f56126b1469d1f37525b3a55a788836a6c9b773f6ce8bc446"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:d47239a868b3375462d644f2ffb1b20114623fac03109d2950bdf0d57ab487d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189,
                    "digest": "sha256:49cbb10cca8504e3dbd65eb5db3c1dd0cd27070154386f819c5936de321c14b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243626169,
                    "digest": "sha256:ee75268802a81510d248088860268e95e6104a33e595654728e22812fab778c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1947,
                    "digest": "sha256:b2375ba7ff2d529b8c41109bce7793011603cb72048cc7cf9cc6868f87e24a7c"
                }
            ]
        },
        "1.35.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8887,
                "digest": "sha256:6795c5be344239c453633522f90382bbaaede6cd55129cb05019c99655fde774"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26696304,
                    "digest": "sha256:4bbfd2c87b7524455f144a03bf387c88b6d4200e5e0df9139a9d5e79110f89ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:d2e110be24e168b42c1a2ddbc4a476a217b73cccdba69cdcb212b812a88f5726"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189,
                    "digest": "sha256:889a7173dcfeb409f9d88054a97ab2445f5a799a823f719a5573365ee3662b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243649029,
                    "digest": "sha256:9d4140b2262670c6100138f9e4198715b80c02085b4483c3ed1457c9ece1b83a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:3c725e149f0bb61ec2ff805fd379908b19fc1e0218ed80891d5986c5553c9238"
                }
            ]
        },
        "1.36.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8887,
                "digest": "sha256:94bfe9269d3bdd3c86cc738565691bfcfe8e95950960bc87b1c8e37ce0f1f61b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26696304,
                    "digest": "sha256:4bbfd2c87b7524455f144a03bf387c88b6d4200e5e0df9139a9d5e79110f89ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:d2e110be24e168b42c1a2ddbc4a476a217b73cccdba69cdcb212b812a88f5726"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189,
                    "digest": "sha256:889a7173dcfeb409f9d88054a97ab2445f5a799a823f719a5573365ee3662b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243652423,
                    "digest": "sha256:a1c2046d6c317c40619cb7374ee983b4a7e378560fa773e7725e2bab2dbe1ff8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:aa23513f152cf28b3338c98b28ff9db6a079db09c189740bf545a882033b065a"
                }
            ]
        },
        "1.37.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8888,
                "digest": "sha256:57519f14caa3ab973afa97988a01f1513d72ab888ef6b3fd2e0a1368c9bfd493"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26696304,
                    "digest": "sha256:4bbfd2c87b7524455f144a03bf387c88b6d4200e5e0df9139a9d5e79110f89ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:d2e110be24e168b42c1a2ddbc4a476a217b73cccdba69cdcb212b812a88f5726"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189,
                    "digest": "sha256:889a7173dcfeb409f9d88054a97ab2445f5a799a823f719a5573365ee3662b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243647422,
                    "digest": "sha256:79108cca3052ccd2f660a7a7a8d99bf2b6be51927c0aa097a69084e40312e295"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:22a5411d3bb9d3c4b794e5cda69f6ee32b7a1be6667a24769f93ee53608f1fc1"
                }
            ]
        },
        "1.37.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8887,
                "digest": "sha256:88193db45ab10d8934b583f1c904d54befd28cdc7275c571f794bc8838fad95e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26696304,
                    "digest": "sha256:4bbfd2c87b7524455f144a03bf387c88b6d4200e5e0df9139a9d5e79110f89ca"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:d2e110be24e168b42c1a2ddbc4a476a217b73cccdba69cdcb212b812a88f5726"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 189,
                    "digest": "sha256:889a7173dcfeb409f9d88054a97ab2445f5a799a823f719a5573365ee3662b6f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 243670237,
                    "digest": "sha256:90b90889f207a16b132c9e3a6e055ce694174ad4473c136867c87f6ace79be88"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1953,
                    "digest": "sha256:08b81dc184cdf5e196cef2c8142795d1402d3077a3f4fedad6bc0f801e3cd722"
                }
            ]
        },
        "1.37.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6947,
                "digest": "sha256:618a77c2bdd68a1e5992ebfa4f33235e6a71ddd9acfed36fb4f936d8f27a9f46"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26700706,
                    "digest": "sha256:25fa05cd42bd8fabb25d2a6f3f8c9f7ab34637903d00fd2ed1c1d0fa980427dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244381057,
                    "digest": "sha256:c01cf9d27f867205a69a4172eb53a9a34491b80627ea6bbf2c980aa18c5f44f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1954,
                    "digest": "sha256:5eb9d71a89cc105dc5cc73fe20afc1a11ebfcc8346235bcf909ae9c0f43fa767"
                }
            ]
        },
        "1.38.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6943,
                "digest": "sha256:141e703cb63a51635a7233b3a27ab89ae1548844146b3a2664cfa92298dc74e1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26700706,
                    "digest": "sha256:25fa05cd42bd8fabb25d2a6f3f8c9f7ab34637903d00fd2ed1c1d0fa980427dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244408079,
                    "digest": "sha256:7d69911eaa94e4ade4560cc0833ec1cd1e9148663c223b1ae3c29195b608e4ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:0387447f410e43ac6a7adf2f052c7e59cf4d2afd75ec227d2e52df7b5ee314ad"
                }
            ]
        },
        "1.39.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6948,
                "digest": "sha256:94f1c93067d478949b8acf632f5c082b9b8d89e697534f8d8ff924454f492f02"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26709039,
                    "digest": "sha256:feac5306138255e28a9862d3f3d29025d0a4d0648855afe1acd6131af07138ac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244324507,
                    "digest": "sha256:775eb1496c4fcd52a82778205b38bc1585798870d265a5c800d9a774aaf7fe85"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:a3503a475fb94fd5690a86692c87d613574b257c5c2a872afd682a095d431ab1"
                }
            ]
        },
        "1.40.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6948,
                "digest": "sha256:ad66701bd0f63087eb1d76a8565780d622d9e41c651fee843b3f89d607891e28"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708511,
                    "digest": "sha256:e4ca327ec0e73c737201b7a6d7b2df779a3ccf34fe9cf1b0c031e767f6464240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244233476,
                    "digest": "sha256:1d5666b061c3505f3709b3b6067e829c39878431b3db7c678fa00e0f0372dae3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:5182d96f655ab04e51f4646326f163ee8baed46ced64fb460f1fc1dc58024ae1"
                }
            ]
        },
        "1.40.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6946,
                "digest": "sha256:10033649eca85367a04ccec4eea9e73d8caac7d5bf90c4b5b578d337bedbd7c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708511,
                    "digest": "sha256:e4ca327ec0e73c737201b7a6d7b2df779a3ccf34fe9cf1b0c031e767f6464240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244281768,
                    "digest": "sha256:a5f98f764319d554ff139e88c47ad54034501ac9713ac48f4ddb1797c2f5d2fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:53e3b6e7dd072225158f810fd7eae61d6cc0b800144dbd1e118d182f66915245"
                }
            ]
        },
        "1.40.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6946,
                "digest": "sha256:68f64cfa51668683cab0f70968a4dd8408f5643ed527c5e34042c236b1ffc068"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708511,
                    "digest": "sha256:e4ca327ec0e73c737201b7a6d7b2df779a3ccf34fe9cf1b0c031e767f6464240"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244284961,
                    "digest": "sha256:3adf0138ebef32001b6beb5a724067ebb72c9a01a976778e4f0c361a754a49f1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:23f638ce4323a113be00e87a8a6f63f799c909ca69e33f67f4c9958795dadf8a"
                }
            ]
        },
        "1.40.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6946,
                "digest": "sha256:6f20b481902bcd035016f123c51578fb2cd46bcc82113948affcf681592ad83f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244279182,
                    "digest": "sha256:b84d8270c7c2367fbaf984da544a3b1c84e03ef62b52df0ca0da1941a4aa4add"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:958b5ec0ab94624738288e828b55261deba3cd201e3d3e3037e7d9bfb81fdc47"
                }
            ]
        },
        "1.40.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6948,
                "digest": "sha256:42cceced8b7752223cf53b0da102d939c57e035a32e336a5b62bba8b74fbbcd0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244470450,
                    "digest": "sha256:c2eb92fff6c177202c43d226e66c13ca6aa29f3a5bf2a0f7ad0acd40adcfb4d1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:c4c7ba42cef43f5455d34d4653c560089e265d89ec924b6df14f590f98cedb2c"
                }
            ]
        },
        "1.41.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6950,
                "digest": "sha256:a94917e63c7a12e85f73ddbab16b0a189d539bef19ff633d0f03aec3bd746342"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244050343,
                    "digest": "sha256:6fd5a957f23cd13444292f94df6f441a9c3478c3f568454f57772f2d9ea801e5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:d72c68d11ee58576fad06fad365557affeeb2db5868b66b00065d7e11bd06f7f"
                }
            ]
        },
        "1.42.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6951,
                "digest": "sha256:c4f27ba26eb4e4b1d1503f301f8fc762bb358dd3fba0c8b03d8f7fb0a7d2dbc7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244062244,
                    "digest": "sha256:17b2eebf0909d65b31a9bc8f70e7db0ae7b83b4587e23bf98cbec1e4da7e683e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1948,
                    "digest": "sha256:925f3850e06e2ed601ec7f4027bd788dd84231b54c34aceb9c7189b66fdfe227"
                }
            ]
        },
        "1.42.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6950,
                "digest": "sha256:ff957e0cec07ada32f2ced4593289b4350c91a49e30b0bd0ee9af0ce92efdef2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244066432,
                    "digest": "sha256:1eff3547b348c87bd11bea504ec1b7a8c7052f034131aaa061bd760a7626c57f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:27772f3c280721fb81f6d02d50846964e93a4272ec9070e1ad57337097cdba95"
                }
            ]
        },
        "1.42.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6951,
                "digest": "sha256:cb57e9e8609dcdb0f7f5cf8e2446765634dab2635b619e3fc028a23c3e2dd79f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244083079,
                    "digest": "sha256:b4bec04089b4e55ae8076b0114628d3513d941cb0294074705e9d2c04987930c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:6d8e2355b6ab3944b866c1e2de92133388ea11ead7b4289c8f12de4cc01d5e11"
                }
            ]
        },
        "1.43.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6950,
                "digest": "sha256:030fdcc73b35e52a9d9b2fb490e1f3da16c250c4bea04af59aa25c906c54eec2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244086188,
                    "digest": "sha256:6a5c74a2d01c0c422389e645598a9e637a5ef33761ee48638d5db7819247a6df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:0c5e9877c3676092d15334ab934d4c47fea0cf045d6741b29e3edfcee17dca51"
                }
            ]
        },
        "1.43.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6950,
                "digest": "sha256:2ecbe06e495a9bb790de53cf390c1770010f36a3ef622d4c9e82ff481f6a70e9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705075,
                    "digest": "sha256:284055322776031bac33723839acb0db2d063a525ba4fa1fd268a831c7553b26"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244119341,
                    "digest": "sha256:38add736f99c5530aaae5a7a31ffcb424af54b621f25a37bb1c59ca0a4b3179f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:cc8d543ad5e88a76e870d265e4c45d8b4d50bcf7ba7a69d5e9f9e91e4094bb28"
                }
            ]
        },
        "1.43.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7148,
                "digest": "sha256:8c4bedb9ea12a4d827f5ee89544f7b590e6bae00efd552afd65da8144794e0a1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705027,
                    "digest": "sha256:2f94e549220aea96f00cae7eb95f401e61b41a16cc5eb0b4ea592d0ce871930a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 253034825,
                    "digest": "sha256:36cd4c6e167de97629131503a9205c2955b0504802fdd201a5538e1c40403ced"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:08d20333cdefac4d5fa7f68f083f52f09477f0fa057d118cdb1a56ec4127b71c"
                }
            ]
        },
        "1.44.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7149,
                "digest": "sha256:d58c3c64e4dcbdf27d518751999e3643d38a4f1634c13a28330e021f959fa1b3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26705027,
                    "digest": "sha256:2f94e549220aea96f00cae7eb95f401e61b41a16cc5eb0b4ea592d0ce871930a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251429471,
                    "digest": "sha256:41cda21b53877100db178f04576034da9ce74162f8397a6a5f8ed9b6392bc07b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:efff9fde73cfd53b53eff5d86784c6f11b65f71bfd1dc8f3ea82dec01b9ab81f"
                }
            ]
        },
        "1.44.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7138,
                "digest": "sha256:85e9bde9b0736b76f9d5bbb2e064330b012a07316b883aa00daf2b32882ca7ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708634,
                    "digest": "sha256:11323ed2c65349758e68a03a8e43825ec263dc9790daea93cf83b18ad0703109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251477785,
                    "digest": "sha256:9e90b16324ec7367512e621281be0c8257f8c2e9a130be20dc3b8f2931b989d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1978,
                    "digest": "sha256:09c2e249cb8eb0e81a9428ad3cdb32229db7799080121cddf32f30af71030d36"
                }
            ]
        },
        "1.45.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7139,
                "digest": "sha256:a92d69d2f1cca914d98a44318347af2f1c932913af07a1c2678248ea6b142675"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708634,
                    "digest": "sha256:11323ed2c65349758e68a03a8e43825ec263dc9790daea93cf83b18ad0703109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251553457,
                    "digest": "sha256:a25c193273523d35b380c2d8c2570b3cbe5c26bedc415e50e2cf24e6f95322a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:4ec549648318ae4fef69323444e966475e35eef27fe8eca9ad04b1f8247cfe19"
                }
            ]
        },
        "1.46.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7138,
                "digest": "sha256:6802a8c4fdfa7b1e0caa9adcd8321b168c26a7cd6e0552ab02a11d3692018a2b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708634,
                    "digest": "sha256:11323ed2c65349758e68a03a8e43825ec263dc9790daea93cf83b18ad0703109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251583593,
                    "digest": "sha256:e7e0c5459cfa1041b5f3d84c9030500fe85682592b61ca8d9459c5ebc6f14e72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:db460452a71ee7859fbb66cd472e57f22e77e8e45f6176098228e3a664314efd"
                }
            ]
        },
        "1.46.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7140,
                "digest": "sha256:8985b410c935c4d1b147da28bca5cf4431512e7fe4ed3dde34107b60bfdc823f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26708634,
                    "digest": "sha256:11323ed2c65349758e68a03a8e43825ec263dc9790daea93cf83b18ad0703109"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251583768,
                    "digest": "sha256:f659ff69404f0a129a42a8f39b86be12911bac91336fa9fc05c059e105c078e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:0d85c962abf187df819d2bfc1e57ac588d77b3c167b826b097aba8ad32d9af11"
                }
            ]
        },
        "1.46.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7466,
                "digest": "sha256:5730053a9704912d7ea8393f20197f33e5e9442e5ed46f8da4b738c6529ca031"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26709108,
                    "digest": "sha256:40dd5be53814ae70b2898558673b7ea18d58bf7ab3433560b9ce3cb76d9ff0b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252906351,
                    "digest": "sha256:37b27c480710c6b558a6b02e720e2dc5d0a654be4c600c45de4ad9c227be05ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:ab4953535b26b1586e2cb1c1d6ecfb1d8c0613b7db62e35ffb724c00d9efd739"
                }
            ]
        },
        "1.47.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7976,
                "digest": "sha256:fa0ed169d278bc5eb8c12af9607b3666f435354db5bea069e6743f1992872028"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711626,
                    "digest": "sha256:09db6f815738b9c8f25420c47e093f89abaabaa653f9678587b57e8f4400b5ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248330480,
                    "digest": "sha256:b1131dbbe75525ed177d77b76357c50ebcfbad16ace1ab6792d330ab82cf336a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:fd0371280dad24317135ea28203f2cd3c5124a54703057becbc9b5a68724a4c4"
                }
            ]
        },
        "1.48.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7974,
                "digest": "sha256:2d9679c23cf20e054f091207b3483dc71220889658591294607aedfa396813cb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711626,
                    "digest": "sha256:09db6f815738b9c8f25420c47e093f89abaabaa653f9678587b57e8f4400b5ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248331887,
                    "digest": "sha256:9b9f5c8230c56af1842f1d1d820a7e082237b7d164e3e2efecc1a2b52790abb4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:d77b2cb875b4417300ced405053b24f37715e7be1bb8c65f19f885f22d473651"
                }
            ]
        },
        "1.48.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7976,
                "digest": "sha256:b60d876848112e011cf55fb66a8f38cb831660d97978446ae342ecfafb2833c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711626,
                    "digest": "sha256:09db6f815738b9c8f25420c47e093f89abaabaa653f9678587b57e8f4400b5ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248326181,
                    "digest": "sha256:433328a710c834353472cade90ba96a457de845bdae599f65aa4ce19cd6afeac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:8d8b4ad5524d8888777a45b72e09119e567e1ae7685ca72c515071835907bac4"
                }
            ]
        },
        "1.48.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7975,
                "digest": "sha256:08246745f84bdc1f53eb047f8d64615b74701827b290052fd34374776e92d858"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711626,
                    "digest": "sha256:09db6f815738b9c8f25420c47e093f89abaabaa653f9678587b57e8f4400b5ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248332642,
                    "digest": "sha256:7db6aab041073a6081b4d06eda7a7b1ef575acf18e2b9139e0020138751bf445"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:4f09ba24f2f6f5a865e0dc62b8d100fad97c4120edbac5ad1e4dc909d17fb22a"
                }
            ]
        },
        "1.49.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7976,
                "digest": "sha256:eea41cad1efede5dd0ff0fe4cb349e3cc13329e900d8565e36b860aa04c9939b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248791043,
                    "digest": "sha256:61f1b29a8eb6e1ea1f306ec5a1a80e777f3799368711849555c66b35c7b2c87d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:9288e62a5084d0e6ff2a3c8597816fbd2306dc9789354ed628ab21bcce23cb90"
                }
            ]
        },
        "1.50.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:2257a0cc920275ccdf431beffafbb3d6c1cc0e3548592a674a643d5decb8656a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248783186,
                    "digest": "sha256:46d0561fe7181200c16e6b544c2c1b1f6db7d56d569da651ade5412b9a0969a2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:70f255417b55794952db2349a22631f397c4f50aaf29d51cdd2fd070488f7e1a"
                }
            ]
        },
        "1.50.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:7d1abc48f8277239b300acab1df253bd0b3c9e135f4938b89230869b7017c1ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248783410,
                    "digest": "sha256:1dd77e97bfb0c1d6358ec748a2bad0f4ab28ab66e779937c96526876b5c1e6f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:f0ce98896974b0df56fb9f5a3bd64484a1dc172ce4baab85c0f41bf3ccd1ef75"
                }
            ]
        },
        "1.50.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:3a4b617d134dc7696e8b764751c3a5d3515bd8b02071e12d6c03247096d29c62"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248785261,
                    "digest": "sha256:a8c12495e885f142656c96a362481fe3046930f56b05914f388cfa707c51195d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:579b704adc9dd851e0bfb923f7fb67b99474c5931d39bc100eaff02d70c1ad1b"
                }
            ]
        },
        "1.51.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:0dd3091d905a2da555ed5e2aeb90aa606144956e13e7fdb310bccc8bbc59a867"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248794080,
                    "digest": "sha256:5cb0537c0eb9d35d10c6633ce9de33be33275be0faa8d59126c562219cb0860c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:0ab3f7bb86685a31aa08e86e35bb47f6eba50b98c0ad8ce9a772c1b8ca966c03"
                }
            ]
        },
        "1.51.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:e761115efecdbbb7f0d0ebae5fb9f08c6ee5a17d8b03368d7ab1b213acb31456"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248807755,
                    "digest": "sha256:b54e3d7d3ccbe22f89ed77601b9d74a7723b1398832f3339db42a5807923933d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:0b60c15f0e94f182b99e872ee7331f2de44e1237d20b52a95c0d14a7d199b4bd"
                }
            ]
        },
        "1.51.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7975,
                "digest": "sha256:259f8f76bb483aac09a7915de034db0b014522540d383c753d871ee39e6dacf1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26710270,
                    "digest": "sha256:22c5ef60a68e3fa0bd8df52f48470e836e823434a3bead43e35e87098a0b01fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248810706,
                    "digest": "sha256:f988a5914614d52e035e925ec91d91ac26a99de07f1be4227998c29409d2442a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:ae3a475c55bb887bea7ee9d56d8de64055061f2e6c7f5a19e4016e1254a48b2f"
                }
            ]
        },
        "1.51.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:c78947f1193a7e591b9042e4c9dc29678fa6d5720173ffd35c23c0138e7cfda8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26712500,
                    "digest": "sha256:a404e54162968593b8d92b571f3cdd673e4c9eab5d9be28d7c494595c0aa6682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251267905,
                    "digest": "sha256:258fca237b12c91ec327b97bd177455d17dd5c206f2ca837498c674f8a9bd7be"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:47d1f722672025d61a5038a4585cfa5dae35417998f8a6975018d7b1b8533386"
                }
            ]
        },
        "1.52.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:6ba924b73b5496391c01be6e80ca9900b3b1bb260c9b3d315e8348a4610cda7a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26712500,
                    "digest": "sha256:a404e54162968593b8d92b571f3cdd673e4c9eab5d9be28d7c494595c0aa6682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251265634,
                    "digest": "sha256:507abaa291cae062dd221c677f3b6a6009dc7d9ded5f0c03ffb21dd384f73d1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:fcab768546a74253ff253dea75ca4c5f7d67aec31e6414b014deac52d4e8bfa3"
                }
            ]
        },
        "1.53.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7977,
                "digest": "sha256:13db982028115a4e9ff8261cc376aabde99c69abef1068ab3e86fdb2e9952661"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26712500,
                    "digest": "sha256:a404e54162968593b8d92b571f3cdd673e4c9eab5d9be28d7c494595c0aa6682"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251266184,
                    "digest": "sha256:535de2bcab14e861216ff85ed472b193a41af9d1094f5acf717ffdaad011ff53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:cce3c5f2e754b839604bac1d955d9393723eb5a5022a207f720d83179e43c237"
                }
            ]
        },
        "1.54.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7976,
                "digest": "sha256:21a050ec8e6193095690b9632d850a43aba0c060922f761d1982cffff5beae94"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711442,
                    "digest": "sha256:a055bf07b5b05332897ea9a464c5e76a507fafe72fa21370d3fccaf07d55f360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251406868,
                    "digest": "sha256:7aea5180cd10e6db951050e9953497c8c90df59882d0e7ab0af71dd4b3ca638a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:7b9045cf86848d6ad1395ee27a2b4b47321147084bb4f60bf69b469ed9c5779f"
                }
            ]
        },
        "1.55.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7975,
                "digest": "sha256:a33cc25323ac185f4107f6649971cd1fb4c51dbc3ddd8e8a5a3a6f976b955236"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711442,
                    "digest": "sha256:a055bf07b5b05332897ea9a464c5e76a507fafe72fa21370d3fccaf07d55f360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251424255,
                    "digest": "sha256:4e1a57802c42d0ab1751d1fa31c08e701b3d3547d4fdb12d1081934df1e24999"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:6d690ec410c5889bf9a6a0d578d78d3a16a664dd38d9226f30a5edb2236fcb96"
                }
            ]
        },
        "1.56.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7975,
                "digest": "sha256:44a146126ee070de0cf930480fb32d6bdbe26ddc0e7eed9b5a53477490860d29"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711442,
                    "digest": "sha256:a055bf07b5b05332897ea9a464c5e76a507fafe72fa21370d3fccaf07d55f360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251425631,
                    "digest": "sha256:52300e77fdb94b2fc98068aa815265c36529bfb56dbca3929fd1e11d2333a3ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:222638fafca059dd182191b070ff24c52e893d20210fdf703bafcce94a589a49"
                }
            ]
        },
        "1.57.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7976,
                "digest": "sha256:e5ee4147b52786f7b68da4e6a73f0e691ed6b7b5dad31f81a9367a078a6c206a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711442,
                    "digest": "sha256:a055bf07b5b05332897ea9a464c5e76a507fafe72fa21370d3fccaf07d55f360"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251425508,
                    "digest": "sha256:341f34ebf0fb925bafff68eb12fb64733ae19654266c81c3758aadcee0ea66f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:42c485804facef9d64469614a397a853f395233b7792c80705c0caf736f5d331"
                }
            ]
        },
        "1.58.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8681,
                "digest": "sha256:06ae6603c20883ba88256910266c15f59ef288d31cf5ccdfa7fe4deee7cb3be8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711594,
                    "digest": "sha256:456d651ccb276bafe702e453add4a4f15b511fd3234cb7db898c22540ad3c8c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251551897,
                    "digest": "sha256:a050ecdfe7eae310c337ee08c986774618b5a8765d766210d70c6ff026c4b6cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:a5475d05ccebc1eb6becfd947d3c44f236d0481cfbb8b005d0f11d406f05ca2d"
                }
            ]
        },
        "1.59.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7593,
                "digest": "sha256:e8a2a43dad46d74221a7389c360a35298c92e0d31ed061855307016657a433d3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25689788,
                    "digest": "sha256:4e43cebf9258af1a3b1edd74432c71dcb190dea879f69291328e63a25dbf46b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255635582,
                    "digest": "sha256:2fb4ba12ab65fd8ae1591780cfd0ae781666868dd7ce9353c181e741d3c89722"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:39a877e94403117fd8ddcf09046bb2f4cebc1071b8d5a91492d292605b8fe374"
                }
            ]
        },
        "1.60.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7595,
                "digest": "sha256:7253e6807ae1f1167a566515cdee26230f3d479bff2e1fdcd65394ddbc0b1e22"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26715509,
                    "digest": "sha256:c67806d7e72dd941e600bad2eabe920a17ba1852b325b63900c819ffeae646fb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255636595,
                    "digest": "sha256:3f8680e84d48c4038963ec4ed2d227f00c463b82f8f7c37f3bb81a514396acc7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:230f306c10e2ad1a2a840877ed8fcccd27a35b9415b85ed822a602c8a57ee25b"
                }
            ]
        },
        "1.60.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7595,
                "digest": "sha256:cb5a737c336ce7573cb1704dff60bcdc65f97dee4489abd7d72e525590ff94f4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 25691281,
                    "digest": "sha256:7c457f213c7634afb95a0fb2410a74b7b5bc0ba527033362c240c7a11bef4331"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 253177442,
                    "digest": "sha256:7a747558a7f92d40656c095917f1f49e1cee33b9677d5480ed032a14503dbad9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:c40354f3ec76c161a7643ae2d7e51ccd21e27ce8a7677783a9041e9ab06a6ed7"
                }
            ]
        },
        "1.60.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7595,
                "digest": "sha256:4bda0fc042c1ab985e99f311efa750f985e82cb707bd60daae9dbc23d8d22961"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26717357,
                    "digest": "sha256:41af1b5f0f51947706ae712999cf098bef968a7799e7cb4bb2268829e62a6ab3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 253378785,
                    "digest": "sha256:be7e104e28116ce4de38d22bd8a30ee1071e88ded57d543008b753b516be83b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:de9d26b11b079f697f260788704e74c8ab909645494143931b1c28fab11238b1"
                }
            ]
        },
        "1.61.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7595,
                "digest": "sha256:d8d208e8902e8be973660224d1fe8d75cc54782c7d2f5b3bd55f76a7b659b925"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26717357,
                    "digest": "sha256:41af1b5f0f51947706ae712999cf098bef968a7799e7cb4bb2268829e62a6ab3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 253381153,
                    "digest": "sha256:2140d37f21403ff5642a0aa1f9741b1e5fe7c662e99f33d49229b3212c8642ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:cd7d4af5a54b68376d19ae67e655c598da76fb1c583149babd82a4c468dc9dd7"
                }
            ]
        },
        "1.9.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8013,
                "digest": "sha256:ea143dafabfcf5df64c0775fcbecaf632b1b6f2a47b3c76428f0b59958e0b4c8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32102249,
                    "digest": "sha256:32802c0cfa4defde2981bec336096350d0bb490469c494e21f678b1dcf6d831f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:da1315cffa03c17988ae5c66f56d5f50517652a622afc1611a8bdd6c00b1fde3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 556,
                    "digest": "sha256:fa83472a3562898caaf8d77542181a473a84039376f2ba56254619d9317ba00d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f85999a86bef2603a9e9a4fa488a7c1f82e471cbb76c3b5068e54e1a9320964a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 319306441,
                    "digest": "sha256:07af3f70c0c788d302d2498f1e2e78a0e1d70f2f7bc5b16a99c61bd7f590c535"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:0c8f44cbd16474870ae3a3c73e98650ca54323b718cce8793fcd6d7aca710cf0"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8680,
                "digest": "sha256:969a66624a6323664f2deae58f65c4c9dc7fd8f5fbdbb78d5dec2ff7436bc9b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 26711594,
                    "digest": "sha256:456d651ccb276bafe702e453add4a4f15b511fd3234cb7db898c22540ad3c8c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 251566751,
                    "digest": "sha256:6dd9f82d08683364ec12e8fe15478c17634d81e810e2b744d901bac8bd904833"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1979,
                    "digest": "sha256:1e74e235f1b70f49164457516860c8bdfe2a7ddb5e6f5ff7c0447bfcf5873e70"
                }
            ]
        }
    },
    "tags": [
        "1.10.0",
        "1.10.1",
        "1.10.2",
        "1.11.0",
        "1.11.1",
        "1.11.2",
        "1.12.0",
        "1.12.1",
        "1.12.2",
        "1.12.3",
        "1.13.0",
        "1.13.1",
        "1.13.2",
        "1.13.3",
        "1.14.0",
        "1.14.1",
        "1.14.4",
        "1.14.5",
        "1.15.0",
        "1.15.1",
        "1.15.2",
        "1.16.0",
        "1.16.1",
        "1.17.0",
        "1.17.1",
        "1.17.2",
        "1.18.0",
        "1.18.1",
        "1.18.2",
        "1.18.3",
        "1.18.4",
        "1.18.5",
        "1.19.0",
        "1.19.1",
        "1.19.2",
        "1.19.3",
        "1.20.0",
        "1.20.1",
        "1.20.2",
        "1.20.3",
        "1.20.4",
        "1.20.5",
        "1.21.0",
        "1.21.1",
        "1.22.0",
        "1.22.1",
        "1.22.2",
        "1.22.3",
        "1.23.0",
        "1.24.0",
        "1.24.1",
        "1.25.0",
        "1.25.2",
        "1.26.1",
        "1.27.1",
        "1.28.1",
        "1.29.1",
        "1.29.2",
        "1.30.2",
        "1.31.2",
        "1.32.0",
        "1.32.1",
        "1.33.0",
        "1.33.1",
        "1.34.0",
        "1.35.1",
        "1.35.2",
        "1.36.0",
        "1.37.0",
        "1.37.1",
        "1.37.2",
        "1.38.0",
        "1.39.0",
        "1.40.0",
        "1.40.1",
        "1.40.2",
        "1.40.3",
        "1.40.4",
        "1.41.0",
        "1.42.0",
        "1.42.1",
        "1.42.2",
        "1.43.0",
        "1.43.1",
        "1.43.3",
        "1.44.0",
        "1.44.1",
        "1.45.0",
        "1.46.0",
        "1.46.1",
        "1.46.2",
        "1.47.0",
        "1.48.0",
        "1.48.1",
        "1.48.2",
        "1.49.0",
        "1.50.0",
        "1.50.1",
        "1.50.2",
        "1.51.0",
        "1.51.1",
        "1.51.2",
        "1.51.3",
        "1.52.0",
        "1.53.0",
        "1.54.0",
        "1.55.0",
        "1.56.0",
        "1.57.0",
        "1.58.0",
        "1.59.0",
        "1.60.0",
        "1.60.1",
        "1.60.2",
        "1.61.0",
        "1.9.2",
        "latest"
    ],
    "configs": {
        "1.10.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e8fe176dca234f536c024954bd13dbc209cc3ec94022a20c19d24c4ce6e20716",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "00f9498051f546a212db90deae3e79cd65920b5dfa1894926c68b61fe4d9c4a8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e8fe176dca234f536c024954bd13dbc209cc3ec94022a20c19d24c4ce6e20716",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-10T09:36:31.605046703Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:31:30.632448029Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:31:30.800067631Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:36:26.331794579Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        vim=2:8.0.1453-1ubuntu1        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        valgrind=1:3.13.0-2ubuntu2        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-10T09:36:30.622506578Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:36:30.825021307Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:36:31.605046703Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:5c328682811af6ed3668dfc8ce9b8dda71ceff58d3109fc453747d43b3d5e739",
                    "sha256:51394d6b2796769f5a52cd055d32efd799c304476da9f77267220e52b60a88aa"
                ]
            }
        },
        "1.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5b3d17041055204bad07cd9f46acd1b24acfdff76e74430222dace6d3e55239",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7042d7b70bd69eebe608869e6e53e36e139f185e46481d79c23fedf831a09b8d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5b3d17041055204bad07cd9f46acd1b24acfdff76e74430222dace6d3e55239",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-17T11:37:08.407943509Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:32:10.091035116Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:32:10.255087788Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:37:02.897311446Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        vim=2:8.0.1453-1ubuntu1        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        valgrind=1:3.13.0-2ubuntu2        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-17T11:37:07.476569919Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:37:07.655152251Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:37:08.407943509Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:37793b22e96f23f3260ed5367732465c68aabffa53eed38b8d6072b3b9b7e749",
                    "sha256:6290f3858808387e69f15b8e7153d155d3f057bf7a2fb6361fcdb6d1e4cea357"
                ]
            }
        },
        "1.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44e6fbca126c4d3a625197fb482d27dd713810e1867c8fac785ae95bb4f722c8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a695730d69e960377ab54e9a082af80efbb7d5c5e38656fe41d4c26350e02466",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44e6fbca126c4d3a625197fb482d27dd713810e1867c8fac785ae95bb4f722c8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-17T16:11:16.24984353Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:06:11.537215046Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:06:11.708156081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:11:11.270700623Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        vim=2:8.0.1453-1ubuntu1        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        valgrind=1:3.13.0-2ubuntu2        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-17T16:11:15.274613949Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:11:15.489186602Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T16:11:16.24984353Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:d4a46ec773023c0817dd65f7a5023da4ee6a16815bcadf85f3ad8c0a2ab7e25b",
                    "sha256:cbe9ab2373c3d57ff1946d007b69a091bf2607806fcc8ab5cdb56c8ee7583d39"
                ]
            }
        },
        "1.11.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5a0c75a6b52b1214d38eb677bc199d27e6db8fa9937a7a5db38cdbc382485f5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d3b773c1520adb48b9476265e8683b8537152e486c0c4eac77a10f750955b467",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b5a0c75a6b52b1214d38eb677bc199d27e6db8fa9937a7a5db38cdbc382485f5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-19T14:32:38.525088006Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:27:47.676538155Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:27:47.832857017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:32:34.444352097Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        vim=2:8.0.1453-1ubuntu1        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        valgrind=1:3.13.0-2ubuntu2        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-19T14:32:37.632682887Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:32:37.817184516Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-19T14:32:38.525088006Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:0a74ecf9fea9b0fa7c44a85a91b09bd98b817bad86783f5704eec3faffd7f543",
                    "sha256:0768d26e498d84a10a907f6114e068d76d53917b32aaab0b32722e54760b777b"
                ]
            }
        },
        "1.11.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9fe485d17ef39dbb6c0d7dca9b5fcb3cbfa2eadf08b58e44d278a207cb79e04b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ce02bed6f77933cfb76cee740dc26460ad36f5b8fe7833fe82c9f1bf452f7426",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9fe485d17ef39dbb6c0d7dca9b5fcb3cbfa2eadf08b58e44d278a207cb79e04b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-02T09:53:50.699365711Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-12-28T23:22:55.561374671Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c0f17c7189fc11b6a1d525e9fcff842b93bfaae92e5b91cb9a76aa867792756d in / "
                },
                {
                    "created": "2018-12-28T23:22:56.315289519Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-12-28T23:22:57.018417539Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-28T23:22:57.764454395Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-12-28T23:22:57.930890907Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:49:14.171093407Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:49:14.33871737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:53:44.340072706Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-02T09:53:49.794750799Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:53:49.978776033Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:53:50.699365711Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2fb7bfc6145d0ad40334f1802707c2e2390bdcfc16ca636d9ed8a56c1101f5b9",
                    "sha256:c8dbbe73b68c96e3252f8191226b700d4f4b284154624fa40a2e6a0c42712a0d",
                    "sha256:1f6b6c7dc482cab1c16d3af058c5fa1782e231cac9aab4d9e06b3f7d77bb1a58",
                    "sha256:2c77720cf318a4c7eaee757162e6bfc364c3ed83a96a525bc20c548e0f75f1af",
                    "sha256:564cc81ccd390b07a346f4512cd82462371c9ddfa4d49b5aee116e95d0fec7c1",
                    "sha256:94f2d3fea00b35f0761d24fc8b0dea82cae799fd65168632fdbb3bcbb4653340"
                ]
            }
        },
        "1.11.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ea205ebad1f4dc95cd55e835ac79e88ec5e957979e65bdce7fd6a5b31639e0cc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "21f39d0dd83720bc684dd48b5ab4980baa173b5c50890b14757a55ddb1d131b2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ea205ebad1f4dc95cd55e835ac79e88ec5e957979e65bdce7fd6a5b31639e0cc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-14T13:40:57.198614497Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-12-28T23:22:55.561374671Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c0f17c7189fc11b6a1d525e9fcff842b93bfaae92e5b91cb9a76aa867792756d in / "
                },
                {
                    "created": "2018-12-28T23:22:56.315289519Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-12-28T23:22:57.018417539Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-28T23:22:57.764454395Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-12-28T23:22:57.930890907Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:36:25.275446938Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:36:25.476752656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:40:50.947549327Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-14T13:40:56.319601828Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:40:56.491331089Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:40:57.198614497Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2fb7bfc6145d0ad40334f1802707c2e2390bdcfc16ca636d9ed8a56c1101f5b9",
                    "sha256:c8dbbe73b68c96e3252f8191226b700d4f4b284154624fa40a2e6a0c42712a0d",
                    "sha256:1f6b6c7dc482cab1c16d3af058c5fa1782e231cac9aab4d9e06b3f7d77bb1a58",
                    "sha256:2c77720cf318a4c7eaee757162e6bfc364c3ed83a96a525bc20c548e0f75f1af",
                    "sha256:38fe9b6d872229283ad3ddfaab360880f94e95739d0fc19c059ce922d55c74a8",
                    "sha256:b9084afb34c8fcd45c1796cdbce7c34a326944506d1270f7a312c797a7cdadf6"
                ]
            }
        },
        "1.12.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7beeb8b1fa9ac1354e9c172ed555b48aa4fbd619aae4a09e72f203567a892eda",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "280e10c63b9d905c7be8df2f46e318e26ad1615d551b9919c25ed17a4a07b434",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7beeb8b1fa9ac1354e9c172ed555b48aa4fbd619aae4a09e72f203567a892eda",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-30T18:33:49.53051725Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-01-22T22:41:24.761169701Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38a199e521f5e9007f2a0f987ede0d49489b3aa82729a1e28af42f9c5981220c in / "
                },
                {
                    "created": "2019-01-22T22:41:25.920355033Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:41:26.891988875Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:41:27.979830805Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:41:28.350121367Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:26:45.686453596Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:26:45.852803574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:33:43.138694878Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-30T18:33:48.60199299Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:33:48.784386053Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:33:49.53051725Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adcb570ae9ac70d0f46badf9ee0ecd49fbec2ae0bc26254653f99afa60046a4e",
                    "sha256:7604c8714555c5c681ce97ab9114c24d5b128e248724bd3e8389f3ccbe1f09a4",
                    "sha256:9e9d3c3a74581b0bb947e9621526ccec317d3cae000bc3c5d7b7f892bc1b4baa",
                    "sha256:27a216ffe82565764e05e8e0166a2505242bbf4c359a2eaf737e0a4b9d3c3000",
                    "sha256:5fbbd592f953c43152c6f8aa12429e84e23a8b29caaba56ed8a734da40581eba",
                    "sha256:70d2efeebf5a98c1dcac45bbe7e8e19f32f804bdbe483e7af631a256e97feb8b"
                ]
            }
        },
        "1.12.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a91a2ac9bc25686c31d1dc2060e73c5a7490fd5094f2a7e13bf65cf0f8df16bb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "df24a1431318bd6404f6b87fbf86d45efc8189ed553bda2a2908547d8fbbd9e0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a91a2ac9bc25686c31d1dc2060e73c5a7490fd5094f2a7e13bf65cf0f8df16bb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-02-05T17:24:01.567148626Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-01-22T22:41:24.761169701Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:38a199e521f5e9007f2a0f987ede0d49489b3aa82729a1e28af42f9c5981220c in / "
                },
                {
                    "created": "2019-01-22T22:41:25.920355033Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:41:26.891988875Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:41:27.979830805Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:41:28.350121367Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:19:20.09227054Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:19:20.275247047Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:23:55.41989597Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-02-05T17:24:00.702584562Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:24:00.887179835Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:24:01.567148626Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:adcb570ae9ac70d0f46badf9ee0ecd49fbec2ae0bc26254653f99afa60046a4e",
                    "sha256:7604c8714555c5c681ce97ab9114c24d5b128e248724bd3e8389f3ccbe1f09a4",
                    "sha256:9e9d3c3a74581b0bb947e9621526ccec317d3cae000bc3c5d7b7f892bc1b4baa",
                    "sha256:27a216ffe82565764e05e8e0166a2505242bbf4c359a2eaf737e0a4b9d3c3000",
                    "sha256:8e5fb8cf100f8ac3ab8b697bd02fbcfffcf8cce5ec65b0c35c4966a4c3776fce",
                    "sha256:09ae41edda0a4e942605261da856e44cb8a822e16c962093cf1f09ab4c5ddc09"
                ]
            }
        },
        "1.12.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:07420c90575296dadbba821071b0c5ed7cf1cc4b80ad25327d16dd297e0ebd99",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d9dc4e784bd47c94d852e7eac410f209f34f504694a616fcce1ee971d9b09153",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:07420c90575296dadbba821071b0c5ed7cf1cc4b80ad25327d16dd297e0ebd99",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-02-08T16:09:14.039350875Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:04:45.638934276Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:04:45.816288594Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:09:07.821222481Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-02-08T16:09:13.17480487Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:09:13.344034022Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T16:09:14.039350875Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:0b8ee8e8e7f3ace36707b97844158698fcd9409b3fc5d2aa921f46057a860f1e",
                    "sha256:380c9751419fcd14a0708aed1b09a55705b21cd063247bf9df07f07ce47fcaf6"
                ]
            }
        },
        "1.12.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d9000e38fe552d7d1a8ee371622a6f270d0d4d78d32c3ba7abd7f5f45912011",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dc607c60122a6decd093503d5689de8dec76eb197247fecbbdc1603df26d44ba",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6d9000e38fe552d7d1a8ee371622a6f270d0d4d78d32c3ba7abd7f5f45912011",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-05T14:18:41.487710294Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-02-06T03:37:49.11022815Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:529264c6593975a61f31e017eaf2e33d9ef126bde387f5d4136c60cf010a7383 in / "
                },
                {
                    "created": "2019-02-06T03:37:50.015400721Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-02-06T03:37:50.731067942Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-02-06T03:37:51.438885551Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-02-06T03:37:51.599085524Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:13:40.009459799Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:13:40.200159136Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:18:35.123167316Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-05T14:18:40.525496791Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:18:40.724148673Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:18:41.487710294Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bebe7ce6215aee349bee5d67222abeb5c5a834bbeaa2f2f5d05363d9fd68db41",
                    "sha256:283fb404ea9415ab48456fd8a82b153b1a719491cdf7b806d1853b047d00f27f",
                    "sha256:663e8522d78b5b767f15b2e43885da5975068e3195bbbfa8fc3a082297a361c1",
                    "sha256:4b7d93055d8781d27259ba5780938e6a78d8ef691c94ee9abc3616c1b009ec4a",
                    "sha256:c3186fea3831b1ec9e29d07f2db82d1efdda7d46a66aecd2ee2384bca77868ff",
                    "sha256:f1b77eb8b5dbaf29b083b95b1de5b35fce104b59099a4eeb7ed9d17aa4563eb0"
                ]
            }
        },
        "1.13.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:988fd6a18009d8b370bef3d23e06dc0ccb540641605f42db64f563bcd3b7e43f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "97d6db0788b14fb047d9d603cd23115bd40339144a54988230fa30815a37dd22",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:988fd6a18009d8b370bef3d23e06dc0ccb540641605f42db64f563bcd3b7e43f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-13T18:42:52.439978003Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:20:11.822070833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 in / "
                },
                {
                    "created": "2019-03-12T00:20:12.662768662Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:13.40256317Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:17.242000095Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:17.419392342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:37:55.131591718Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:37:55.622228416Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:42:31.982685984Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-13T18:42:49.340425619Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:42:50.624625814Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:42:52.439978003Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:762d8e1a60542b83df67c13ec0d75517e5104dee84d8aa7fe5401113f89854d9",
                    "sha256:e45cfbc98a505924878945fdb23138b8be5d2fbe8836c6a5ab1ac31afd28aa69",
                    "sha256:d60e01b37e74f12aa90456c74e161f3a3e7c690b056c2974407c9e1f4c51d25b",
                    "sha256:b57c79f4a9f3f7e87b38c17ab61a55428d3391e417acaa5f2f761c0e7e3af409",
                    "sha256:b9621086a97c0ca1cbc4cc729964fd0051bd8d3dc5f6e27b15aacc433d744817",
                    "sha256:1d13df77a6f399fc0865131be17983ce2cc307a93723f999076163a2cc77b5e7"
                ]
            }
        },
        "1.13.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf2dc077bf5d1b86ca57be71f3e927f4d52cc8c148d0cd632c796927958d38f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0c460c1ac307fc177bc026e65c8cc44c5af522454f43b77f6e5e108df56085ff",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf2dc077bf5d1b86ca57be71f3e927f4d52cc8c148d0cd632c796927958d38f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-18T17:01:56.754578754Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:20:11.822070833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 in / "
                },
                {
                    "created": "2019-03-12T00:20:12.662768662Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:13.40256317Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:17.242000095Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:17.419392342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:56:41.506452077Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:56:42.657751293Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T17:01:30.200096445Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-18T17:01:52.5653478Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T17:01:54.198875609Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T17:01:56.754578754Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:762d8e1a60542b83df67c13ec0d75517e5104dee84d8aa7fe5401113f89854d9",
                    "sha256:e45cfbc98a505924878945fdb23138b8be5d2fbe8836c6a5ab1ac31afd28aa69",
                    "sha256:d60e01b37e74f12aa90456c74e161f3a3e7c690b056c2974407c9e1f4c51d25b",
                    "sha256:b57c79f4a9f3f7e87b38c17ab61a55428d3391e417acaa5f2f761c0e7e3af409",
                    "sha256:70aed571e4230c9a1ba732e0239341eaab7be0f51cb8ae087338299507e84501",
                    "sha256:439b8b9374379514827fe3050a3f2db22f2c8d865040e8504a433716b1987234"
                ]
            }
        },
        "1.13.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8079c311603e26ab5b85363ff7a31849fbeb83ccd627c9f2e8c8e54efd9b67ca",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d1ea6258e740000599313acba80fceacc1e8320a789364fc147adcb85e188472",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8079c311603e26ab5b85363ff7a31849fbeb83ccd627c9f2e8c8e54efd9b67ca",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-27T14:35:13.092309291Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:20:11.822070833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 in / "
                },
                {
                    "created": "2019-03-12T00:20:12.662768662Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:13.40256317Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:17.242000095Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:17.419392342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:30:02.786787328Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:30:03.663224852Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:34:46.644669074Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-27T14:35:09.476911642Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:35:10.758410442Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:35:13.092309291Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:762d8e1a60542b83df67c13ec0d75517e5104dee84d8aa7fe5401113f89854d9",
                    "sha256:e45cfbc98a505924878945fdb23138b8be5d2fbe8836c6a5ab1ac31afd28aa69",
                    "sha256:d60e01b37e74f12aa90456c74e161f3a3e7c690b056c2974407c9e1f4c51d25b",
                    "sha256:b57c79f4a9f3f7e87b38c17ab61a55428d3391e417acaa5f2f761c0e7e3af409",
                    "sha256:16fb97af53c1a99838f873cacdd6d3e421aa9474977275f173c6ab95c059e458",
                    "sha256:ac833f53b6f666c0f62f1144fc58ecffdee9e3f4bc519e0e19da74bfc8603931"
                ]
            }
        },
        "1.13.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0a63618b220d4bb38da0cd258a56e8739e4b9197573a6ec5e4900f8228aa271a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "32e62e44e838cf349d725a0058cffd7c12de38fbe39ff8986a1027eb57a5bae8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0a63618b220d4bb38da0cd258a56e8739e4b9197573a6ec5e4900f8228aa271a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-27T17:22:55.898791827Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:20:11.822070833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 in / "
                },
                {
                    "created": "2019-03-12T00:20:12.662768662Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:13.40256317Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:17.242000095Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:17.419392342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:17:53.270841634Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:17:54.527986778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:22:35.905692677Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-27T17:22:52.804509249Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:22:53.945214795Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T17:22:55.898791827Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:762d8e1a60542b83df67c13ec0d75517e5104dee84d8aa7fe5401113f89854d9",
                    "sha256:e45cfbc98a505924878945fdb23138b8be5d2fbe8836c6a5ab1ac31afd28aa69",
                    "sha256:d60e01b37e74f12aa90456c74e161f3a3e7c690b056c2974407c9e1f4c51d25b",
                    "sha256:b57c79f4a9f3f7e87b38c17ab61a55428d3391e417acaa5f2f761c0e7e3af409",
                    "sha256:f86425b91695fd1ffdcf3f359158d6c9b0841a2a59e2b40bb0b5d8853607c33b",
                    "sha256:557100d2d9ab1d3144ddbeb75d1bce37f11da553d99ea827e56e6924aa50d48a"
                ]
            }
        },
        "1.14.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc13ca6a3d9d503ca48682b31ef25de922a48122efbb4ad5c820089354948457",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f80b834e6ca886bdd3d01016ee692b48c4df49eade73faafe21fdedd2411778f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bc13ca6a3d9d503ca48682b31ef25de922a48122efbb4ad5c820089354948457",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-28T16:07:37.483190488Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:20:11.822070833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 in / "
                },
                {
                    "created": "2019-03-12T00:20:12.662768662Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:13.40256317Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:17.242000095Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:17.419392342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T16:02:30.821252925Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T16:02:31.61578829Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T16:07:12.669090232Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-28T16:07:33.736961508Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T16:07:35.199046607Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T16:07:37.483190488Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:762d8e1a60542b83df67c13ec0d75517e5104dee84d8aa7fe5401113f89854d9",
                    "sha256:e45cfbc98a505924878945fdb23138b8be5d2fbe8836c6a5ab1ac31afd28aa69",
                    "sha256:d60e01b37e74f12aa90456c74e161f3a3e7c690b056c2974407c9e1f4c51d25b",
                    "sha256:b57c79f4a9f3f7e87b38c17ab61a55428d3391e417acaa5f2f761c0e7e3af409",
                    "sha256:66f971da90b14dafb28b5c104be1b1efc4bfba6ec1af9f504a412f9d21dc376d",
                    "sha256:530a1e7d46f792c1e2bbec35a9508c6b93e620f4ec20f99fdafb362daef48787"
                ]
            }
        },
        "1.14.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c1e7484d3b48965b5ca74cfbaca67fd8f3da591553d94927ab858748c3be7de",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "895b74732aa06d77b75cf0c76d7c0412cbf8d64136776327f154f9de417feea7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c1e7484d3b48965b5ca74cfbaca67fd8f3da591553d94927ab858748c3be7de",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-01T10:46:46.270085731Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:20:11.822070833Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d7cb45c4e196a6a84319b976b95ce1a9037c40b085e88350c071bf27ff59166 in / "
                },
                {
                    "created": "2019-03-12T00:20:12.662768662Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:20:13.40256317Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:20:17.242000095Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:20:17.419392342Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:41:59.248320423Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:41:59.791457674Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:46:26.803902213Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-01T10:46:43.264603252Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:46:44.389071562Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:46:46.270085731Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:762d8e1a60542b83df67c13ec0d75517e5104dee84d8aa7fe5401113f89854d9",
                    "sha256:e45cfbc98a505924878945fdb23138b8be5d2fbe8836c6a5ab1ac31afd28aa69",
                    "sha256:d60e01b37e74f12aa90456c74e161f3a3e7c690b056c2974407c9e1f4c51d25b",
                    "sha256:b57c79f4a9f3f7e87b38c17ab61a55428d3391e417acaa5f2f761c0e7e3af409",
                    "sha256:bfa60ef0eec477f2dcc978eb5f3564bd7b0ba82150b125db3fd6f746e9273b5b",
                    "sha256:88bd60c3e136b0f244f15237241b57d19755de18184c7143b5be394dbeea89e3"
                ]
            }
        },
        "1.14.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4b95574dc5bf4e9bdc21d6fc3f997761aae12419d07321ae592b6ae4cf84f211",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4f9310ae37e5545f52ad393c4cc405d598eb8ec0822d2eced06e4cf9773c10eb",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4b95574dc5bf4e9bdc21d6fc3f997761aae12419d07321ae592b6ae4cf84f211",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-29T08:15:41.792462271Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-04-26T22:21:02.724843678Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7ce84f13f11609a50ece7823578159412e2299c812746d1d1f1ed5db0728bd37 in / "
                },
                {
                    "created": "2019-04-26T22:21:03.471632173Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:21:04.220422684Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:21:04.936777709Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:21:05.100534088Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T08:10:29.0902685Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T08:10:29.641121778Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T08:15:21.617562625Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-29T08:15:38.552720568Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T08:15:39.820323957Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T08:15:41.792462271Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:604cbde1a4c8fee1b102f8b64d4f41e62d770b5f8a6b06fb809cfd873a2643c3",
                    "sha256:5d74a98c48bcfc2d04e9d679ea095d360ac0b2f2a27312c8e95a7f5ba5341d9c",
                    "sha256:94e5c4ea5da6d2a5e0232458e8f14a2cdba0d0f0ce1bdd8098789477c89a7f45",
                    "sha256:7660ded5319c352f98b8b305b6bd11a501b9704f5e31d1e3b1d3da644f1c3fb8",
                    "sha256:2a2c223f8aeac5bffd47823f37adcdc8dd42412b495f3cb0a2e4a8ea12aadef9",
                    "sha256:f19b808e3dd36c3b84b5464269272a97ff8e449d19a8aab4d96f79cc66743607"
                ]
            }
        },
        "1.14.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4552aafd9dda941026d1d539e9196d78b59577d38328f2ecef906d1be91c994c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7a80f742a32f8002ac4def96f3fb6a5c3ee56ada76a6b1dfa7667603ae4f2495",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4552aafd9dda941026d1d539e9196d78b59577d38328f2ecef906d1be91c994c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-03T09:04:09.552909928Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-04-26T22:21:02.724843678Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7ce84f13f11609a50ece7823578159412e2299c812746d1d1f1ed5db0728bd37 in / "
                },
                {
                    "created": "2019-04-26T22:21:03.471632173Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:21:04.220422684Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:21:04.936777709Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:21:05.100534088Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:59:02.63934076Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:59:03.482324845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T09:03:48.997715986Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-03T09:04:06.555389669Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T09:04:07.760840286Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T09:04:09.552909928Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:604cbde1a4c8fee1b102f8b64d4f41e62d770b5f8a6b06fb809cfd873a2643c3",
                    "sha256:5d74a98c48bcfc2d04e9d679ea095d360ac0b2f2a27312c8e95a7f5ba5341d9c",
                    "sha256:94e5c4ea5da6d2a5e0232458e8f14a2cdba0d0f0ce1bdd8098789477c89a7f45",
                    "sha256:7660ded5319c352f98b8b305b6bd11a501b9704f5e31d1e3b1d3da644f1c3fb8",
                    "sha256:f19ef3b69a1881da08fd13ac546d63a0eec972e2af9cba80a188d738696f37b8",
                    "sha256:5894224a69617bb88374bad64bcd612194b1ad54c0b46a18e9c557e937966952"
                ]
            }
        },
        "1.15.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:49147880d48ccbc5f249faeec8b2b812808cfbfa16081fcb8c207a02af751025",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c000fd09714b609cf6fb2a493be5ffc91dd0b0db6e3637c22a59ea5d4610d758",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:49147880d48ccbc5f249faeec8b2b812808cfbfa16081fcb8c207a02af751025",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-13T13:57:59.392507769Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-04-26T22:21:02.724843678Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7ce84f13f11609a50ece7823578159412e2299c812746d1d1f1ed5db0728bd37 in / "
                },
                {
                    "created": "2019-04-26T22:21:03.471632173Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:21:04.220422684Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:21:04.936777709Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:21:05.100534088Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:52:51.24342756Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:52:51.949316535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:57:34.032224887Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-13T13:57:55.863769343Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:57:57.280502255Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:57:59.392507769Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:604cbde1a4c8fee1b102f8b64d4f41e62d770b5f8a6b06fb809cfd873a2643c3",
                    "sha256:5d74a98c48bcfc2d04e9d679ea095d360ac0b2f2a27312c8e95a7f5ba5341d9c",
                    "sha256:94e5c4ea5da6d2a5e0232458e8f14a2cdba0d0f0ce1bdd8098789477c89a7f45",
                    "sha256:7660ded5319c352f98b8b305b6bd11a501b9704f5e31d1e3b1d3da644f1c3fb8",
                    "sha256:72c33e4a47a3138a6eb42622eb54d3a570c3ce1e3c5af167c6a7372c7b0152f5",
                    "sha256:fe5fcde3bca90364bdb422f3605c86cb9c299e8086ec4212fe6abb1353549fc4"
                ]
            }
        },
        "1.15.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b9bbd0a80cd99f120c09af7d41188cc3d2e5434a56f16ae97b98856c5444a3a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "aa9d393871d72184716f2156ce52f9c0cf79493f4680ecc379de29bfe71a9196",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7b9bbd0a80cd99f120c09af7d41188cc3d2e5434a56f16ae97b98856c5444a3a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-24T17:46:59.779541951Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-05-15T21:20:23.573798446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f4fdc61e133d2f9019d8a06a8126fef0ed4339cb25fda73446393fe8da197c5 in / "
                },
                {
                    "created": "2019-05-15T21:20:24.344200675Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:20:25.007712306Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-15T21:20:25.711230215Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:20:25.927610362Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:42:26.422402224Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:42:27.520411098Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:46:36.62050651Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-24T17:46:56.914992636Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:46:58.051720214Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:46:59.779541951Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02571d034293cb241c078d7ecbf7a84b83a5df2508f11a91de26ec38eb6122f1",
                    "sha256:270f934787edf0135132b6780cead0f12ca11690c5d6a5d395e44d290912100a",
                    "sha256:8d267010480fed7e616b9b7861854042aad4ef5e55f8771f2c738061640d2cb0",
                    "sha256:246228a503835f5795469a68ea7a51c2e7421f3636902f99be4ece4f0262c2c3",
                    "sha256:469c5bfe4d83a2565d2e3014d043980676222cb87b4647b7fbe4d88a5f03c40e"
                ]
            }
        },
        "1.15.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce74cd0c3dbb138b3c9799d8019b6c40321d8f4cc29a7c834479b92701359fb6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0ac0d157184807f3bcda7ca5fe8b8743067793b957249d96e0687c574055db9b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ce74cd0c3dbb138b3c9799d8019b6c40321d8f4cc29a7c834479b92701359fb6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-03T12:33:37.449990593Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-05-15T21:20:23.573798446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f4fdc61e133d2f9019d8a06a8126fef0ed4339cb25fda73446393fe8da197c5 in / "
                },
                {
                    "created": "2019-05-15T21:20:24.344200675Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:20:25.007712306Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-15T21:20:25.711230215Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:20:25.927610362Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:28:46.238882969Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:28:46.742298427Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:33:14.659206158Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-03T12:33:34.636278405Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:33:35.704618698Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:33:37.449990593Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02571d034293cb241c078d7ecbf7a84b83a5df2508f11a91de26ec38eb6122f1",
                    "sha256:270f934787edf0135132b6780cead0f12ca11690c5d6a5d395e44d290912100a",
                    "sha256:8d267010480fed7e616b9b7861854042aad4ef5e55f8771f2c738061640d2cb0",
                    "sha256:70c1beb44df026cf3d5b1473f72324dbf85a228ca714da78e83ae9ebccbabafc",
                    "sha256:a0970e488bc056f2ea482d4fb5133c92cad6ddd767566883e23333a3ef2db392"
                ]
            }
        },
        "1.16.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0986c8eda16d7fa253963acbfb228d16e62ba4130da8bf3c89ad0efd736da76b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "44a11bbbb44939f8250babb44a6600af7472237055a409209d6b6c0790210582",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0986c8eda16d7fa253963acbfb228d16e62ba4130da8bf3c89ad0efd736da76b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-05T18:10:16.029366283Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-05-15T21:20:23.573798446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f4fdc61e133d2f9019d8a06a8126fef0ed4339cb25fda73446393fe8da197c5 in / "
                },
                {
                    "created": "2019-05-15T21:20:24.344200675Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:20:25.007712306Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-15T21:20:25.711230215Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:20:25.927610362Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:05:04.8630492Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:05:05.449388934Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:09:53.808389363Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-05T18:10:12.84027885Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:10:14.096809929Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:10:16.029366283Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02571d034293cb241c078d7ecbf7a84b83a5df2508f11a91de26ec38eb6122f1",
                    "sha256:270f934787edf0135132b6780cead0f12ca11690c5d6a5d395e44d290912100a",
                    "sha256:8d267010480fed7e616b9b7861854042aad4ef5e55f8771f2c738061640d2cb0",
                    "sha256:d31cf3df2d20e7818b61e3710db8410770f599e78d8b46d9e83321f0b5ffd036",
                    "sha256:f2abf0defb81d5b7eb764fa157b1b8fa0038b22ee25d4e9356b29a385348d18d"
                ]
            }
        },
        "1.16.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1c647c7f1ce5592a4fb823cd8b5856db285d44c12b35706b25b1f267bb49c482",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d20eb1287dc1745bf3f04ec150850f0f777626c628d9c708305a5c37621ca730",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1c647c7f1ce5592a4fb823cd8b5856db285d44c12b35706b25b1f267bb49c482",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-14T07:47:17.728899687Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-05-15T21:20:23.573798446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f4fdc61e133d2f9019d8a06a8126fef0ed4339cb25fda73446393fe8da197c5 in / "
                },
                {
                    "created": "2019-05-15T21:20:24.344200675Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:20:25.007712306Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-15T21:20:25.711230215Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:20:25.927610362Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:42:07.879157896Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:42:08.524576384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:46:56.059502517Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-14T07:47:14.442377062Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:47:15.7516396Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:47:17.728899687Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02571d034293cb241c078d7ecbf7a84b83a5df2508f11a91de26ec38eb6122f1",
                    "sha256:270f934787edf0135132b6780cead0f12ca11690c5d6a5d395e44d290912100a",
                    "sha256:8d267010480fed7e616b9b7861854042aad4ef5e55f8771f2c738061640d2cb0",
                    "sha256:6582a04cba3ad48f4d021a6b97b376e4b7a98a4759161cf42df6750d62812e66",
                    "sha256:be4c3494547127f4d33f8354e1ef2d63237fcc717b76bbaf7cc626025186582d"
                ]
            }
        },
        "1.17.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ee87997b093522acf9b291547a61d60d69a00c4158856a4d2deb37e30980d774",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ee1f9a32b54e7b89333a8bddba1f476c57d6ef26516f14e31489af4e51310aed",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ee87997b093522acf9b291547a61d60d69a00c4158856a4d2deb37e30980d774",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-15T08:09:07.339567626Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-06-18T22:51:33.33427803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e6b5d9ca371eb881c581574b8dc4f5391eff2872db364af0f8d9804e4890098 in / "
                },
                {
                    "created": "2019-06-18T22:51:35.055084744Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-06-18T22:51:36.497759658Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-06-18T22:51:37.923085354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-06-18T22:51:38.340092056Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:04:15.223549149Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:04:15.792439361Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:08:46.190948754Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-15T08:09:04.348642898Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:09:05.525071225Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:09:07.339567626Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ba9de9d8475e7f5e40086358a1353b3cc080994fc6d31e4272dd3acb69b0151e",
                    "sha256:fbd2732ad777cb5db2515fa62b6122b797be233d01db02e0a19e5d894688cad6",
                    "sha256:dda1518598187bf87704acc22aa0ec2a67d9e7835c24346dfca118ab42c5cd0b",
                    "sha256:75e70aa52609fdbd63b58d46d6f7c20470062e1c9bb75616f7703a358a61e5ca",
                    "sha256:ce2b520b0acb0233013abb1b4c8ed2adb9f61f413187ee15c7efa049b338e18e",
                    "sha256:3d227f6aed3914a840ec0d868309ff8d130f7996a9e05ab4bebfbda1383b11be"
                ]
            }
        },
        "1.17.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3b65c878b9e87b13189a557d8c8b880040575e2478002dd2162fdddf302b8ac6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f32f5d2d3e0bb951635e466f82a449e38b5d0841cf429a8cd31e3bcdb717b4e4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3b65c878b9e87b13189a557d8c8b880040575e2478002dd2162fdddf302b8ac6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-22T14:52:19.124840933Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-06-18T22:51:33.33427803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e6b5d9ca371eb881c581574b8dc4f5391eff2872db364af0f8d9804e4890098 in / "
                },
                {
                    "created": "2019-06-18T22:51:35.055084744Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-06-18T22:51:36.497759658Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-06-18T22:51:37.923085354Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-06-18T22:51:38.340092056Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:47:34.514542747Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:47:35.609152616Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:51:56.643771991Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-22T14:52:15.789048975Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:52:16.986873134Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:52:19.124840933Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ba9de9d8475e7f5e40086358a1353b3cc080994fc6d31e4272dd3acb69b0151e",
                    "sha256:fbd2732ad777cb5db2515fa62b6122b797be233d01db02e0a19e5d894688cad6",
                    "sha256:dda1518598187bf87704acc22aa0ec2a67d9e7835c24346dfca118ab42c5cd0b",
                    "sha256:75e70aa52609fdbd63b58d46d6f7c20470062e1c9bb75616f7703a358a61e5ca",
                    "sha256:05f9cbe18e588da6b6097cf26dc5fbd89e6281ad9dd223cb122a9293a0448817",
                    "sha256:2e01b507de5cd11340dc9ab783846307c10574bf5f88659414c5daf178cd90b6"
                ]
            }
        },
        "1.17.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:679f6f92a5676094df5d3565356816fdda0432d4c688e789359006e9675df1d5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a73f6d2c087e835cc5b3c75c75557bca2a3d52e409738d981379661dcea0f1c2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:679f6f92a5676094df5d3565356816fdda0432d4c688e789359006e9675df1d5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-25T14:48:13.22607854Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-07-23T15:21:10.573282806Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ddd02d976792b6c6deed85bd3643cba43a7bce743c2a84d91336fc951e9a9ec in / "
                },
                {
                    "created": "2019-07-23T15:21:11.358433137Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:12.075358061Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:12.799067692Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:13.01464074Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:43:35.585602675Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:43:36.447940161Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:47:51.621220954Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-25T14:48:10.191634496Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:48:11.42498465Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:48:13.22607854Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:543791078bdb84740cb5457abbea10d96dac3dea8c07d6dc173f734c20c144fe",
                    "sha256:c56e09e1bd18e5e41afb1fd16f5a211f533277bdae6d5d8ae96a248214d66baf",
                    "sha256:a31dbd3063d77def5b2562dc8e14ed3f578f1f90a89670ae620fd62ae7cd6ee7",
                    "sha256:b079b3fa8d1b4b30a71a6e81763ed3da1327abaf0680ed3ed9f00ad1d5de5e7c",
                    "sha256:792ecc5e71267043d312cc0448bbea20c49aaf2e2a9e8d5ca78af70c4fa2c625",
                    "sha256:b51ec9a5121ecd4f4c44032a8ddd4aba4685baf7e6a160f843afa4de9d731921"
                ]
            }
        },
        "1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:680383fed23d9052d4ac23ed2e895caf782c2c6e53e554afdd53b5ce0c84b06b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5992e226fc6bab884aba3455e259a6616724c935165d29a489a96e125041a23b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:680383fed23d9052d4ac23ed2e895caf782c2c6e53e554afdd53b5ce0c84b06b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-30T12:00:51.474023117Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-07-23T15:21:10.573282806Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3ddd02d976792b6c6deed85bd3643cba43a7bce743c2a84d91336fc951e9a9ec in / "
                },
                {
                    "created": "2019-07-23T15:21:11.358433137Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:12.075358061Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:12.799067692Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:13.01464074Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:56:09.08066255Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T11:56:09.613994074Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:00:32.176374145Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-30T12:00:48.372927495Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:00:49.526818205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:00:51.474023117Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:543791078bdb84740cb5457abbea10d96dac3dea8c07d6dc173f734c20c144fe",
                    "sha256:c56e09e1bd18e5e41afb1fd16f5a211f533277bdae6d5d8ae96a248214d66baf",
                    "sha256:a31dbd3063d77def5b2562dc8e14ed3f578f1f90a89670ae620fd62ae7cd6ee7",
                    "sha256:b079b3fa8d1b4b30a71a6e81763ed3da1327abaf0680ed3ed9f00ad1d5de5e7c",
                    "sha256:a0ed27b74dbb47627b8500eaf42b11da7e07fc43ac0c06f98fe4351784d45adf",
                    "sha256:5345f47fbcd1ce1fe46339a7ac15c4076ef7568f9e3eb123f9ca3abd87f6ee9e"
                ]
            }
        },
        "1.18.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf9a81dc8cab2b8021f7702274e4ad5dc36ec813331c012276bfcad80df0cd1c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7b0153f0baeaec51abc9563133db19b70a764cacc9959e54fe975b03704cdffc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bf9a81dc8cab2b8021f7702274e4ad5dc36ec813331c012276bfcad80df0cd1c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-19T07:31:29.907972412Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-08-15T07:28:12.433344678Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c477cb0e95c56b51e0b7353f3805165393689902b82a41bbe77dbef4b31667e1 in / "
                },
                {
                    "created": "2019-08-15T07:28:13.20852008Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-08-15T07:28:13.964607567Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-08-15T07:28:14.64282638Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-08-15T07:28:14.830150536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:26:57.059570019Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:26:57.504790977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:31:09.685148093Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-19T07:31:27.060011725Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:31:28.169128453Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:31:29.907972412Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6cebf3abed5fac58d2e792ce8461454e92c245d5312c42118f02e231a73b317f",
                    "sha256:f7eae43028b334123c3a1d778f7bdf9783bbe651c8b15371df0120fd13ec35c5",
                    "sha256:7beb13bce073c21c9ee608acb13c7e851845245dc76ce81b418fdf580c45076b",
                    "sha256:122be11ab4a29e554786b4a1ec4764dd55656b59d6228a0a3de78eaf5c1f226c",
                    "sha256:2fbe1c9d952ec05f7a7ef51a56991a3bd8c39b5554dd7653027eb09c02aded8f",
                    "sha256:4f6ad1e78a1d02708e5ac3c29e9302675bc69751fbea805ba13fd8ba041f5d99"
                ]
            }
        },
        "1.18.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0cddf10a612df1047181eb4969afee01049032b6b1db35c95ded6f39eaf71d44",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0c717d6f7189d199db5362499b293c827624c6420149c87bd428036a95e3c4d9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0cddf10a612df1047181eb4969afee01049032b6b1db35c95ded6f39eaf71d44",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-31T20:24:33.556373239Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-08-15T07:28:12.433344678Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c477cb0e95c56b51e0b7353f3805165393689902b82a41bbe77dbef4b31667e1 in / "
                },
                {
                    "created": "2019-08-15T07:28:13.20852008Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-08-15T07:28:13.964607567Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-08-15T07:28:14.64282638Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-08-15T07:28:14.830150536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:19:45.604230305Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:19:46.553162455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:24:12.869235614Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-31T20:24:30.523128307Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:24:31.731252033Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:24:33.556373239Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6cebf3abed5fac58d2e792ce8461454e92c245d5312c42118f02e231a73b317f",
                    "sha256:f7eae43028b334123c3a1d778f7bdf9783bbe651c8b15371df0120fd13ec35c5",
                    "sha256:7beb13bce073c21c9ee608acb13c7e851845245dc76ce81b418fdf580c45076b",
                    "sha256:122be11ab4a29e554786b4a1ec4764dd55656b59d6228a0a3de78eaf5c1f226c",
                    "sha256:e57e882b11fd5949ddf79c45a5493c9795673585be0c87220fc7bb735282dac7",
                    "sha256:67f9d98eb554f07d637dd360489a5f851eb6026aaf89d2e662472804b6d002bb"
                ]
            }
        },
        "1.18.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afe7e126cccab230764d5788a88538c9c46aab8544a2f98528a13a65e5630197",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "975323c848442b8d677d59b40aa0e8fd438570c07c55e7a8dd92420b384ca9e3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:afe7e126cccab230764d5788a88538c9c46aab8544a2f98528a13a65e5630197",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-10T11:39:04.653811756Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-08-15T07:28:12.433344678Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c477cb0e95c56b51e0b7353f3805165393689902b82a41bbe77dbef4b31667e1 in / "
                },
                {
                    "created": "2019-08-15T07:28:13.20852008Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-08-15T07:28:13.964607567Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-08-15T07:28:14.64282638Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-08-15T07:28:14.830150536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:31:18.170055374Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:31:18.791834056Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:38:43.81977196Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-10T11:39:01.487065672Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:39:02.767431921Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:39:04.653811756Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6cebf3abed5fac58d2e792ce8461454e92c245d5312c42118f02e231a73b317f",
                    "sha256:f7eae43028b334123c3a1d778f7bdf9783bbe651c8b15371df0120fd13ec35c5",
                    "sha256:7beb13bce073c21c9ee608acb13c7e851845245dc76ce81b418fdf580c45076b",
                    "sha256:122be11ab4a29e554786b4a1ec4764dd55656b59d6228a0a3de78eaf5c1f226c",
                    "sha256:962e7a98581995ce95a6a94ea6755254c4ea64e13f1f78dcdab24c88f564b590",
                    "sha256:16e27d1fe1af4d58499b9f0c5edf7a72c429bc8ec4a692c730a2227e0f27b01e"
                ]
            }
        },
        "1.18.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:03bffae45da0c5132064bd72d843d8a34d21965d88fa299850d04b1a0c9045f5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b9240470b58cf925b2e09a0c22c8e64d47619ff5a2722bf812411bdd4757934b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:03bffae45da0c5132064bd72d843d8a34d21965d88fa299850d04b1a0c9045f5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-23T12:31:43.55487457Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:25.001198355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:288ac0434f65264f3c50cf3e2766c5dbf3fa953c89995dd9445063fd565aac81 in / "
                },
                {
                    "created": "2019-09-18T23:20:25.907034433Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:26.643052498Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:27.334214267Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:27.499267707Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:26:38.758981501Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:26:39.461119713Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:31:22.73713217Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-23T12:31:40.575134329Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:31:41.763128535Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:31:43.55487457Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1aa3da2a80a775df55e880b094a1a8de19b919435ad0c71c29a0983d64e65db",
                    "sha256:ef1a1ec5bba9f5efcecf38693111c335cafa27f53669a91bee5d3dc17819180c",
                    "sha256:6c3332381368f5c277995c2e1d19dc895b8a870ba7d1ccd8a4dbe4a5c26810bc",
                    "sha256:e80c789bc6aca44ee043fb65d06ddff70f644086dd99e6c65b04149cd5787d84",
                    "sha256:fe465a88b5d12971839f6cedd553ae8e6f7b871f32069dd8ca42ebff945fc305",
                    "sha256:4f4fd5792374d478afa3490205d06a50f06eab0b9b085968b4efc79c3f4a3686"
                ]
            }
        },
        "1.18.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:44bde397d5d59b6f012b77e9515466c9ef32294ef07ace51a719f1b88c675e5b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ac9b02e7f9cb238a4d507677c4d6ab31ab70302c302603eafa567533135543cf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:44bde397d5d59b6f012b77e9515466c9ef32294ef07ace51a719f1b88c675e5b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-27T06:59:26.926783957Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:25.001198355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:288ac0434f65264f3c50cf3e2766c5dbf3fa953c89995dd9445063fd565aac81 in / "
                },
                {
                    "created": "2019-09-18T23:20:25.907034433Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:26.643052498Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:27.334214267Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:27.499267707Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:54:13.929585922Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:54:14.501305572Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:59:06.945025919Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-27T06:59:23.448849657Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:59:24.628965175Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T06:59:26.926783957Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1aa3da2a80a775df55e880b094a1a8de19b919435ad0c71c29a0983d64e65db",
                    "sha256:ef1a1ec5bba9f5efcecf38693111c335cafa27f53669a91bee5d3dc17819180c",
                    "sha256:6c3332381368f5c277995c2e1d19dc895b8a870ba7d1ccd8a4dbe4a5c26810bc",
                    "sha256:e80c789bc6aca44ee043fb65d06ddff70f644086dd99e6c65b04149cd5787d84",
                    "sha256:f53aafda73e96a6b75c7243b32eb1b0ac96b2f0684fbfca8fd43ad020df05784",
                    "sha256:3b3e804be4479b91a4a1ec07c2af18c7f3b1a68772f7d98b59c427cfbc8a42c5"
                ]
            }
        },
        "1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a4b3b0415ed9f94ddb47e0e75ffa0a2d8739eb1c195cd729b2d3c23bb9e9e8c8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e964bb1c694e6d25111cd7024daea3843c608c23d2db5994fd5e8217997ba41c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a4b3b0415ed9f94ddb47e0e75ffa0a2d8739eb1c195cd729b2d3c23bb9e9e8c8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-30T09:26:18.860410683Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:25.001198355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:288ac0434f65264f3c50cf3e2766c5dbf3fa953c89995dd9445063fd565aac81 in / "
                },
                {
                    "created": "2019-09-18T23:20:25.907034433Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:26.643052498Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:27.334214267Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:27.499267707Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:21:15.168934749Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:21:15.763945899Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:25:55.97470363Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-30T09:26:15.749048794Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:26:16.969651444Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:26:18.860410683Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1aa3da2a80a775df55e880b094a1a8de19b919435ad0c71c29a0983d64e65db",
                    "sha256:ef1a1ec5bba9f5efcecf38693111c335cafa27f53669a91bee5d3dc17819180c",
                    "sha256:6c3332381368f5c277995c2e1d19dc895b8a870ba7d1ccd8a4dbe4a5c26810bc",
                    "sha256:e80c789bc6aca44ee043fb65d06ddff70f644086dd99e6c65b04149cd5787d84",
                    "sha256:b9dedb616ddfc296de49cec01100f7a377d287ae993575df728007a432aba99c",
                    "sha256:09e15302f979e6cbc2a6888a80bfea5ab053ac1644157210e4b67695746c88cf"
                ]
            }
        },
        "1.19.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a561571e2fbbc2cdf168055b99d7bdde63a56d8dd3e758bf51543b6955ab753c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c3da26f7890a7dda56c0cf04dc5ebcf352db8fee3f62c56a8d17dbf2b9f7d94d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a561571e2fbbc2cdf168055b99d7bdde63a56d8dd3e758bf51543b6955ab753c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-03T14:21:10.586632286Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:25.001198355Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:288ac0434f65264f3c50cf3e2766c5dbf3fa953c89995dd9445063fd565aac81 in / "
                },
                {
                    "created": "2019-09-18T23:20:25.907034433Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:26.643052498Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:27.334214267Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:27.499267707Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:15:50.546760545Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:15:51.538791495Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:20:48.190788938Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-03T14:21:07.268963166Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:21:08.503913035Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:21:10.586632286Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a1aa3da2a80a775df55e880b094a1a8de19b919435ad0c71c29a0983d64e65db",
                    "sha256:ef1a1ec5bba9f5efcecf38693111c335cafa27f53669a91bee5d3dc17819180c",
                    "sha256:6c3332381368f5c277995c2e1d19dc895b8a870ba7d1ccd8a4dbe4a5c26810bc",
                    "sha256:e80c789bc6aca44ee043fb65d06ddff70f644086dd99e6c65b04149cd5787d84",
                    "sha256:40599202d08f28c3f5caac4ba5b5b94a026805fcbd9fe9713c8a529d0df03188",
                    "sha256:1e579c1414c1f25e98fff3617f444aa788b32fa5744676992cc8e788e4148292"
                ]
            }
        },
        "1.19.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:807c9353def08fc5f4eafd56404e7ecaeb9c841113ea998a530cd1eab358a6d9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "56e34daf040a09ae4b7cde56b15485d4f8426f7ce444a003ae38763d2f37306f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:807c9353def08fc5f4eafd56404e7ecaeb9c841113ea998a530cd1eab358a6d9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T07:23:49.412937274Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-18T18:48:49.35320434Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d13b09e8b3cc98bf0868e2af7a49b14622d2111e2a4e10341859902e43bd872a in / "
                },
                {
                    "created": "2019-10-18T18:48:50.103034647Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-18T18:48:50.787856146Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:48:51.466908877Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:48:51.632346407Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:18:44.11557999Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:18:45.097353444Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:23:26.756901445Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T07:23:46.339586722Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:23:47.518976841Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:23:49.412937274Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a090697502b8d19fbc83afb24d8fb59b01e48bf87763a00ca55cfff42423ad36",
                    "sha256:97e6b67a30f1efeb050ada13c2afa1afd748e175ae744027dd0cce1f2931a594",
                    "sha256:100ef12ce3a46c3242d186dbbadedff1638dc1f69cab4e1fbf73489049c01c25",
                    "sha256:19331eff40f01dd084a3f966cc6939e828d617d777163706b8a13d0f972704d1",
                    "sha256:338210cca70c39f9096f29b60cd8312d1ac397161de4de1282ded4e9e2e57407",
                    "sha256:8ae61e9ed8f8a2fb32edc375ad03002b3e07f241f855709e9534ada92fafeb60"
                ]
            }
        },
        "1.19.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a48b7311d40a764ef7d5651309c0bb044c9ea61055ecb76d94cd534988c03bd2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3b273d2dafb737e10db662a04af43020100bd4c9011083f7f858d1dbf31bd1e4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a48b7311d40a764ef7d5651309c0bb044c9ea61055ecb76d94cd534988c03bd2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T13:22:47.468738294Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-18T18:48:49.35320434Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d13b09e8b3cc98bf0868e2af7a49b14622d2111e2a4e10341859902e43bd872a in / "
                },
                {
                    "created": "2019-10-18T18:48:50.103034647Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-18T18:48:50.787856146Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:48:51.466908877Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:48:51.632346407Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:17:41.478009687Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:17:42.507645036Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:22:24.492743201Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T13:22:44.357198916Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:22:45.518804702Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:22:47.468738294Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a090697502b8d19fbc83afb24d8fb59b01e48bf87763a00ca55cfff42423ad36",
                    "sha256:97e6b67a30f1efeb050ada13c2afa1afd748e175ae744027dd0cce1f2931a594",
                    "sha256:100ef12ce3a46c3242d186dbbadedff1638dc1f69cab4e1fbf73489049c01c25",
                    "sha256:19331eff40f01dd084a3f966cc6939e828d617d777163706b8a13d0f972704d1",
                    "sha256:d2bc0f4a6f1401a9ba1548c1f94a6189ef4c68316b9597f37f9de3e67e2c0584",
                    "sha256:5f41fda46b9474372cc2901feb1cbc0229252ebec7e701a795f68015196e176c"
                ]
            }
        },
        "1.20.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b20f56dfcd4ae002f406ab74cbe51e2a310da98202e40c0a9542f631bbeeb2e9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "579cde9f727344b13cc17adf18585203e27f90aceb5c19ea5124ab57f29b41fa",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b20f56dfcd4ae002f406ab74cbe51e2a310da98202e40c0a9542f631bbeeb2e9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-04T11:27:27.036294031Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:22:39.146619272Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:22:39.671234222Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:27:05.919298495Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-04T11:27:24.063515087Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:27:25.225921661Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:27:27.036294031Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:8ad0c278f629b865b1c48a0b83e27946be1e56cc68963ee61e1ad0ab729d44ca",
                    "sha256:a947a64d090e9b0fa37bb79008a323cb710d01f4065de5687b2d1deb13eea379"
                ]
            }
        },
        "1.20.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:375c42d900712a4879e21385b9cf11be5ee5d8560643701726c73ef2bfff1fba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b0bf592f840a9a97e9c752bcfb7535cb8b38d822dc5daa367069726ecf41266b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:375c42d900712a4879e21385b9cf11be5ee5d8560643701726c73ef2bfff1fba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-05T11:11:40.803631774Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:06:56.329483035Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:06:57.506658688Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:11:29.552120781Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-05T11:11:37.82130983Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:11:39.00407401Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:11:40.803631774Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:f58806e9be9716c56cc474640873aa55129731f150e1d905557b01a3b8a8b3e7",
                    "sha256:072d027e4c584b7edd0a7f5f1faf866e9dbb6c7ee44ffe244bdfd089637693a1"
                ]
            }
        },
        "1.20.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:19c96e00e7c1041b3f8799087aef183c865c96ebc6c728a832c64e38dacd1c3b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5af9174bbf4db77970975bcf5b6540989b5e4c9ba1bfcffcf114c54bd345a51",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:19c96e00e7c1041b3f8799087aef183c865c96ebc6c728a832c64e38dacd1c3b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-06T09:36:43.765799051Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:18:40.759777349Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:18:41.509301122Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:36:17.99130914Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-06T09:36:38.278779084Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:36:40.123913212Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:36:43.765799051Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:50f03c650daf96a50957d46294fee508ca06441100d0bbb617b12b954c7359ed",
                    "sha256:1545b39c608c0c59885df2713551525b2a4998258523af636337dddedd643259"
                ]
            }
        },
        "1.20.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b7966f846e6446f2c7b92cf48bcb509525baf4a532bf3000da01237cff16ac75",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2f36ee8f1602f455cdea2806ec558a7d13de03bcafa4b686040e27597c323dc6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b7966f846e6446f2c7b92cf48bcb509525baf4a532bf3000da01237cff16ac75",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-11T15:16:28.499794794Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:11:38.869125735Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:11:39.422128957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:16:08.142422116Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-11T15:16:25.697702587Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:16:26.781552253Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:16:28.499794794Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:8e571a43f9c87a95986ce3ec965c30943b4c55524d5236c1f86079f3b3014f49",
                    "sha256:69e2e0a5d76e42797b8a9a78705ecb404e093068f19e039ec65eaa7506c90170"
                ]
            }
        },
        "1.20.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:94bfffb750b5d4e349632ca8a636a3ffbe715ec322534148d43a85c6d7521862",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c94b71f877dcce0cf1fdbda7a2a366b39c3aaab788e1a4568522ca12e69e57a0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:94bfffb750b5d4e349632ca8a636a3ffbe715ec322534148d43a85c6d7521862",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-19T15:16:55.560090827Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:11:49.847941856Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:11:50.453836541Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:16:34.377714659Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-19T15:16:52.516594989Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:16:53.676187101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:16:55.560090827Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:30c53a36c5ba01bdb3c88e65b5db2e317b49aecfe6103659af147d0775cfe04d",
                    "sha256:b75b23ac7eb666eef0026a12c5c1356f6fcd0352ecf801bcb831e969220ff43b"
                ]
            }
        },
        "1.20.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b15b60f054740f216c94c8636242b967580d16c304481bb48e3afcc3b2381f48",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "efe4c6847d4616ca9657704d4c17d2547473f88f501bdfc546659eb39f1e8bd3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b15b60f054740f216c94c8636242b967580d16c304481bb48e3afcc3b2381f48",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-03T14:11:40.202749943Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:07:08.309607818Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:07:09.382781458Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:11:20.392757102Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-03T14:11:37.486586482Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:11:38.58069614Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:11:40.202749943Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:ee59a5e529c83cbe0dea3842cef3d83e3c2b7a833d721b3d932506cf11503199",
                    "sha256:1d501adc62093304554c2fe5e785212de57e9b1d6c6fa67e8f4d3a1b7972a448"
                ]
            }
        },
        "1.21.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2e754019817a1a2a2c8350ed64eab79c504b46064870599678c1e72c7f24e69d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "114c44558690ec027747b835634af7c0a265c8c0aec82f9b5942717baabc6ec5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2e754019817a1a2a2c8350ed64eab79c504b46064870599678c1e72c7f24e69d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-10T11:21:55.05700352Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:35.371741262Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a48a5dc1b9dbfc632f6cf86fe27b770b63f07a115c98c4465dc184e303a4efa1 in / "
                },
                {
                    "created": "2019-10-31T22:20:36.173590614Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:36.882756782Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:37.550873398Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:37.714423666Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:17:02.221969041Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:17:02.761214794Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:21:33.940145323Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-10T11:21:52.079813258Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:21:53.285639528Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:21:55.05700352Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc967c529ced563b7746b663d98248bc571afdb3c012019d7f54d6c092793b8b",
                    "sha256:2c6ac8e5063e35e91ab79dfb7330c6154b82f3a7e4724fb1b4475c0a95dfdd33",
                    "sha256:6c01b5a53aac53c66f02ea711295c7586061cbe083b110d54dafbeb6cf7636bf",
                    "sha256:e0b3afb09dc386786d49d6443bdfb20bc74d77dcf68e152db7e5bb36b1cca638",
                    "sha256:24ad2b787bc7fdaa0cb71bb10f74647657247d2965cf7566f134ea68a6f03c43",
                    "sha256:ce79a79b0b7894b15b44bac3de51d64224c2c2a66331928e9f6e755e15dde4e9"
                ]
            }
        },
        "1.21.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c19149080b375bc284343dcdb01edc5d3cc8e3ff61b427ab5be90f0fa1915091",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5586c9976f1249b34ff67bcc61f7a652af62c6bbc19a39e6df9f123062de4b08",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c19149080b375bc284343dcdb01edc5d3cc8e3ff61b427ab5be90f0fa1915091",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-01-24T19:25:29.516089218Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2020-01-16T01:20:31.888175377Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:08e718ed0796013f5957a1be7da3bef6225f3d82d8be0a86a7114e5caad50cbc in / "
                },
                {
                    "created": "2020-01-16T01:20:32.694672178Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:33.40768866Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:34.09120692Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:34.28326882Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:35.784349466Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:36.250948845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:18.094737357Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.1-Linux-x86_64/* /usr     && rm -rf cmake-3.16.1-Linux-x86_64     && rm cmake-3.16.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-01-24T19:25:27.307228956Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:28.159475657Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:29.516089218Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43c67172d1d182ca5460fc962f8f053f33028e0a3a1d423e05d91b532429e73d",
                    "sha256:21ec61b65b20ec53a1b7f069fd04df5acb0e75434bd3603c88467c8bfc80d9c6",
                    "sha256:1d0dfb259f6a31f95efcba61f0a3afa318448890610c7d9a64dc4e95f9add843",
                    "sha256:f55aa0bd26b801374773c103bed4479865d0e37435b848cb39d164ccb2c3ba51",
                    "sha256:969939a988de4686ca080d151961b884eb9331d5376a57cabba20ef6b861a146",
                    "sha256:b1a2af5409740b770abbec00480b5119cab152ffab557d36fca625fe3d444e2c"
                ]
            }
        },
        "1.22.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c2020d38d27e8c5eae7ee45196239d8c6384f8ad86c02893edc7e0f50c803d3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "097a23d8cecbd0e813d1eb6490973dcb81c11dfe31a31857ae1669db87024259",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6c2020d38d27e8c5eae7ee45196239d8c6384f8ad86c02893edc7e0f50c803d3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-07T20:50:34.091630203Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-01-16T01:20:31.888175377Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:08e718ed0796013f5957a1be7da3bef6225f3d82d8be0a86a7114e5caad50cbc in / "
                },
                {
                    "created": "2020-01-16T01:20:32.694672178Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:33.40768866Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:34.09120692Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:34.28326882Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:47:32.546915337Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:47:33.220765288Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:50:23.453480169Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.1-Linux-x86_64/* /usr     && rm -rf cmake-3.16.1-Linux-x86_64     && rm cmake-3.16.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-07T20:50:32.311093442Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:50:32.982052676Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:50:34.091630203Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43c67172d1d182ca5460fc962f8f053f33028e0a3a1d423e05d91b532429e73d",
                    "sha256:21ec61b65b20ec53a1b7f069fd04df5acb0e75434bd3603c88467c8bfc80d9c6",
                    "sha256:1d0dfb259f6a31f95efcba61f0a3afa318448890610c7d9a64dc4e95f9add843",
                    "sha256:f55aa0bd26b801374773c103bed4479865d0e37435b848cb39d164ccb2c3ba51",
                    "sha256:7562c0e216bde7a085e34e41e920c795b1de4c3e114339d717be5d0c6f933057",
                    "sha256:97ca18fb9dc4ba7739c4826883186547c08e727e5c8ed920a6211629eae9067b"
                ]
            }
        },
        "1.22.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4996e6c5abb9c993e7fc05e535e7bba07f900ec9906b0708054f38518eb31f32",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a2fb62c38feea5b066920aa31f729f6b68bd76f0b865fee7e7d0144e18433646",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4996e6c5abb9c993e7fc05e535e7bba07f900ec9906b0708054f38518eb31f32",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-12T14:04:52.782667165Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-01-16T01:20:31.888175377Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:08e718ed0796013f5957a1be7da3bef6225f3d82d8be0a86a7114e5caad50cbc in / "
                },
                {
                    "created": "2020-01-16T01:20:32.694672178Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:33.40768866Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:34.09120692Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:34.28326882Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:01:13.047775495Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:01:13.292698268Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:04:40.887459525Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-12T14:04:50.56351303Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:04:51.439665142Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:04:52.782667165Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:43c67172d1d182ca5460fc962f8f053f33028e0a3a1d423e05d91b532429e73d",
                    "sha256:21ec61b65b20ec53a1b7f069fd04df5acb0e75434bd3603c88467c8bfc80d9c6",
                    "sha256:1d0dfb259f6a31f95efcba61f0a3afa318448890610c7d9a64dc4e95f9add843",
                    "sha256:f55aa0bd26b801374773c103bed4479865d0e37435b848cb39d164ccb2c3ba51",
                    "sha256:c3208472089d68d25929a1596b6bbc94195db86014d7127a63a2add93af05b8d",
                    "sha256:db94dd9e7db7974a9e78e2dd49b27801d24a1b637370b7c1f12274c7ef7187a7"
                ]
            }
        },
        "1.22.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5048b5231a6031a90dded47a1c973d7d61186ea2cd186eec5fcc2767f626bdce",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0d5d9f88473046e1771ea131e841f554f04852876808c39cead77681672fd672",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5048b5231a6031a90dded47a1c973d7d61186ea2cd186eec5fcc2767f626bdce",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-26T18:22:24.217230826Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:20:39.949702462Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91a750fb184711fde03c9172f41e8a907ccbb1bfb904c2c3f4ef595fcddbc3a9 in / "
                },
                {
                    "created": "2020-02-21T22:20:41.462180188Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:20:42.813141008Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:20:44.104623432Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:20:44.446608273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:19:09.368977804Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:19:10.237005729Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:22:12.843887895Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-26T18:22:22.241020824Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:22:23.013514406Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:22:24.217230826Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc4590d6a7187ce8879dd8ea931ffaa18bc52a1c1df702c9d538b2f0c927709d",
                    "sha256:8c98131d2d1d1c8339d268265005394de6cafe887020dcca9ba9d9d07a56280c",
                    "sha256:03c9b9f537a4ae66d7ae7a4361e7f36e6755380107eadff3fbc11cd604c6c9b9",
                    "sha256:1852b2300972ff9f68fd3d34f1f112df3e35757d91dcd40cc8b379bbf2be62d5",
                    "sha256:400efef0dabcf4723aa858f5bbfb04f01191d0febdb7fd2e10702a62e6e362ad",
                    "sha256:507c3f75ea68a698f97c985e58b3af93dd16daee44510d1c415ceb2c287f505f"
                ]
            }
        },
        "1.22.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9b832975e158e3dcfa66df4dd92c85d205cee12cfeaadf318f8cc96bf7485c31",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "777e1b250df2be95daca06283942d5ff4b6d39ff78d1c215bb2271c71cc83e2b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9b832975e158e3dcfa66df4dd92c85d205cee12cfeaadf318f8cc96bf7485c31",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-09T21:54:06.354644322Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:20:39.949702462Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91a750fb184711fde03c9172f41e8a907ccbb1bfb904c2c3f4ef595fcddbc3a9 in / "
                },
                {
                    "created": "2020-02-21T22:20:41.462180188Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:20:42.813141008Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:20:44.104623432Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:20:44.446608273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:50:34.762126864Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:50:35.242706199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:53:55.160735168Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-09T21:54:03.970645889Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:54:04.854374138Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:54:06.354644322Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc4590d6a7187ce8879dd8ea931ffaa18bc52a1c1df702c9d538b2f0c927709d",
                    "sha256:8c98131d2d1d1c8339d268265005394de6cafe887020dcca9ba9d9d07a56280c",
                    "sha256:03c9b9f537a4ae66d7ae7a4361e7f36e6755380107eadff3fbc11cd604c6c9b9",
                    "sha256:1852b2300972ff9f68fd3d34f1f112df3e35757d91dcd40cc8b379bbf2be62d5",
                    "sha256:a505008c1eb1adf84361b448566cd20849e6e1999848b28509fd38d4dbd9b7e6",
                    "sha256:282436c7b6081037606d0e10589f4a6b17d5d475863e23478b2557f066591c99"
                ]
            }
        },
        "1.23.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b02a38329e48c6f21aa85acbd2a7300eeae4b60cd677a4731eb66ce59d45f7f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "228605aa0c6cf1d285da97e98d913736caef001e3db00e15477b68dfe655631f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b02a38329e48c6f21aa85acbd2a7300eeae4b60cd677a4731eb66ce59d45f7f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-12T17:55:38.397989033Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:20:39.949702462Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:91a750fb184711fde03c9172f41e8a907ccbb1bfb904c2c3f4ef595fcddbc3a9 in / "
                },
                {
                    "created": "2020-02-21T22:20:41.462180188Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:20:42.813141008Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:20:44.104623432Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:20:44.446608273Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:52:05.013787342Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:52:05.23846737Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:55:27.70424566Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-12T17:55:36.469672095Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:55:37.237652069Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:55:38.397989033Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cc4590d6a7187ce8879dd8ea931ffaa18bc52a1c1df702c9d538b2f0c927709d",
                    "sha256:8c98131d2d1d1c8339d268265005394de6cafe887020dcca9ba9d9d07a56280c",
                    "sha256:03c9b9f537a4ae66d7ae7a4361e7f36e6755380107eadff3fbc11cd604c6c9b9",
                    "sha256:1852b2300972ff9f68fd3d34f1f112df3e35757d91dcd40cc8b379bbf2be62d5",
                    "sha256:de5eb5b62cb2b87250ab4f54152e827fc107fd9296590c383eee1d590918b45a",
                    "sha256:32d95db0c74319082f1c7f257f9b8d81f4238b3d074467836f2c74a2a9f3055d"
                ]
            }
        },
        "1.24.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88d0cb7a5df9536bea981e148c11096a6b755f105654137e8ad62c49d694ac23",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "27161962b2428659e4629696554049ecdf783020e2cdefe2d6f3323add8752ae",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:88d0cb7a5df9536bea981e148c11096a6b755f105654137e8ad62c49d694ac23",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-16T17:05:19.311436597Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-03-20T19:20:20.247087133Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:594fa35cf803361e69d817fc867b6a4069c064ffd20ed50caf42ad9bb11ca999 in / "
                },
                {
                    "created": "2020-03-20T19:20:21.136950754Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-03-20T19:20:21.887904759Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-03-20T19:20:22.640524898Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-03-20T19:20:22.835345724Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:01:18.381092069Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:01:19.261208995Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:05:08.077544797Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-16T17:05:17.01734645Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:05:17.857255637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:05:19.311436597Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c8be1b8f4d60d99c281fc2db75e0f56df42a83ad2f0b091621ce19357e19d853",
                    "sha256:977183d4e9995d9cd5ffdfc0f29e911ec9de777bcb0f507895daa1068477f76f",
                    "sha256:6597da2e2e52f4d438ad49a14ca79324f130a9ea08745505aa174a8db51cb79d",
                    "sha256:16542a8fc3be1bfaff6ed1daa7922e7c3b47b6c3a8d98b7fca58b9517bb99b75",
                    "sha256:b03d40b0cb59ce5a4a29830a027c2905477ee4b11849896d79168123dee69d8a",
                    "sha256:03b561e5e3adbb55fc49f65724ff87cbd697ac91556729dfb4b0bb3039d92751"
                ]
            }
        },
        "1.24.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b70266399ce0f871cb29f0b3bacc8c6d58fc0978a0047bf1818bc1452185e940",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f010d7493ec206ff166e247b57b931e43c9b7696d21c24cf9c9ed2abbf606d4b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b70266399ce0f871cb29f0b3bacc8c6d58fc0978a0047bf1818bc1452185e940",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-21T17:54:01.25981879Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-03-20T19:20:20.247087133Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:594fa35cf803361e69d817fc867b6a4069c064ffd20ed50caf42ad9bb11ca999 in / "
                },
                {
                    "created": "2020-03-20T19:20:21.136950754Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-03-20T19:20:21.887904759Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-03-20T19:20:22.640524898Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-03-20T19:20:22.835345724Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:50:22.955181627Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:50:23.248640434Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:53:50.297653663Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-21T17:53:58.875694433Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:53:59.811584206Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:54:01.25981879Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c8be1b8f4d60d99c281fc2db75e0f56df42a83ad2f0b091621ce19357e19d853",
                    "sha256:977183d4e9995d9cd5ffdfc0f29e911ec9de777bcb0f507895daa1068477f76f",
                    "sha256:6597da2e2e52f4d438ad49a14ca79324f130a9ea08745505aa174a8db51cb79d",
                    "sha256:16542a8fc3be1bfaff6ed1daa7922e7c3b47b6c3a8d98b7fca58b9517bb99b75",
                    "sha256:98a73faf360cfc05cd8067aba312899f986e1c254454cc3254185d6c7ea70a85",
                    "sha256:25cd3b2d5ad6235818981af9ee6a93d42f00a58ed48a477ebf214fe1fe62b4dc"
                ]
            }
        },
        "1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:96f95d0c9148e68e3c350cb34475ce1900fdcab95c11ef457782446c246d935a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "905c81c4142899171fa3e1acc4efed4ea06293b99642dd2ffed261022e68894d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:96f95d0c9148e68e3c350cb34475ce1900fdcab95c11ef457782446c246d935a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-08T20:08:43.273310991Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:07:00.492876816Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3e6bb316dfa6b81dd4478aaa310df532883b1c0a14edeec3f63d641980c1789 in / "
                },
                {
                    "created": "2020-04-24T01:07:02.135111213Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:03.672177555Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:05.384376132Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:05.743682549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:05:43.772454352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:05:44.212974958Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:08:33.1349883Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-08T20:08:41.532870182Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:08:42.208984931Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:08:43.273310991Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b7f7d2967507ba709dbd1dd0426a5b0cdbe1ff936c131f8958c8d0f910eea19e",
                    "sha256:a6ebef4a95c345c844c2bf43ffda8e36dd6e053887dd6e283ad616dcc2376be6",
                    "sha256:838a37a24627f72df512926fc846dd97c93781cf145690516e23335cc0c27794",
                    "sha256:28ba7458d04b8551ff45d2e17dc2abb768bf6ed1a46bb262f26a24d21d8d7233",
                    "sha256:7ba217f769b57b72b4eb430575bad9b1a42c7ada3a2bea8ebc2b46ad0f67cb7d",
                    "sha256:37efc470412dd537839da94a1644d1b85b5d1fcba48afc8e9eb3b5291a8c22c5"
                ]
            }
        },
        "1.25.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b985d16580b9543f1c4bcf5f5596b19706b11c76b2a992add396e94f40c64272",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b5d61d341e6a2883b2a725d5c9e2a4a21156d9cc81fec13556054aa99d7b2202",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b985d16580b9543f1c4bcf5f5596b19706b11c76b2a992add396e94f40c64272",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-19T20:06:01.512979786Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:07:00.492876816Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3e6bb316dfa6b81dd4478aaa310df532883b1c0a14edeec3f63d641980c1789 in / "
                },
                {
                    "created": "2020-04-24T01:07:02.135111213Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:03.672177555Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:05.384376132Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:05.743682549Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:02:18.700106485Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:02:19.242351567Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:05:51.989467806Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-19T20:05:59.376801398Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:06:00.216763289Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:06:01.512979786Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b7f7d2967507ba709dbd1dd0426a5b0cdbe1ff936c131f8958c8d0f910eea19e",
                    "sha256:a6ebef4a95c345c844c2bf43ffda8e36dd6e053887dd6e283ad616dcc2376be6",
                    "sha256:838a37a24627f72df512926fc846dd97c93781cf145690516e23335cc0c27794",
                    "sha256:28ba7458d04b8551ff45d2e17dc2abb768bf6ed1a46bb262f26a24d21d8d7233",
                    "sha256:5176f2be5d0bacb66739ce25d0ed4081ac09eb9fadb244bf6a66d960ebbb0d81",
                    "sha256:556eb307cc93906f5f8b8e899a2a5130756ba4491e7779fa5adcfdc72b1239e3"
                ]
            }
        },
        "1.26.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d4799f5488f7944ba1bb5a9be4ce5d2afffe864121867704f94b29bfa1ef554a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4dcc1a8df9ce9b1c8698fdce3c234e096883624ee148f6c49f297c24fc6fb947",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d4799f5488f7944ba1bb5a9be4ce5d2afffe864121867704f94b29bfa1ef554a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-06-23T16:00:05.113056442Z",
            "docker_version": "3.0.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:29.510909008Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1e8d02626176dc8141df3c0a1365774ce73d79934654fe24a4b1e7f173108232 in / "
                },
                {
                    "created": "2020-06-17T01:20:30.34966818Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:31.148479974Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:31.887842339Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:32.08043412Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:55:48.113185805Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:55:48.392798017Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T15:59:53.335544168Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-06-23T16:00:02.736351735Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:00:03.676604924Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:00:05.113056442Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b187ff70b2e47a4cf3d735dd04b4309cb3004c3069846969716b7f804a01576b",
                    "sha256:5930c9e5703fbcb1f5e47dd833763a0bb0d9b1927f97b8c5e2b7e7fb4798238e",
                    "sha256:c64c52ea2c16427957eb5048da0df868d445795a5dbec8fd2b594ad169295eb0",
                    "sha256:ddc500d8499442f954ee7184ef015b5041629e55bf8b336304c9614154008bcd",
                    "sha256:941efe90ebee052d779197c07dea218e94e715c80a7dda1b6f2984e1341c7f17",
                    "sha256:462957602e1dd9af73e0d5614d0269d4d47803865d02a28873dc3fa45a20858a"
                ]
            }
        },
        "1.27.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0aac995998819b1b60ced3af229eaa0d16aa8ae5e230bd1dc24e99ec7edc911a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c6d4ff8f300a8cd9ec71c019cf85a39aebda12a81cc347c6b9835a7081b2f5be",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0aac995998819b1b60ced3af229eaa0d16aa8ae5e230bd1dc24e99ec7edc911a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-07-23T17:51:47.553664647Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-07-06T21:56:08.90082159Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0b40d881e3e00d68de1f1df0a565385bb838144b83814df891c994f466e9efa2 in / "
                },
                {
                    "created": "2020-07-06T21:56:09.734796309Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-07-06T21:56:10.500337505Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-06T21:56:11.299151655Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-06T21:56:11.478320417Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:48:08.918558551Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:48:09.289834227Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:51:36.465053502Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-07-23T17:51:45.00992167Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:51:45.873803535Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:51:47.553664647Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:88cc1a200eb9be206c4261e79d642c392d97980236a066f23434f4452f8212a7",
                    "sha256:bf509d6bc5ecd3b1a3660fb5f167ce2e320f5cc532574217cd8ba179ca06bae9",
                    "sha256:2af0e1f1e531af9c95e30c3f908f6431d635a173b866e39b5f480e9ff3a180b9",
                    "sha256:4b07a7bca5b71a13357fc3f96dab8dd67a2ffb139410cd2fcd74a61fa8225255",
                    "sha256:361b2475cfd90af218b4db8df5fde7820ede7eedc1c1271c2ed822db1ebfd685",
                    "sha256:f9fe88e945ce34f532a79e76d743b2bccfa58e92215cadc9b8db4e9dd9064d63"
                ]
            }
        },
        "1.28.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ca967507435fbb87b44db3660bf5cc618bb5574db941ea01305568cf8680a46e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "665dbce1a73c92a65b7e14aa8d470636148577062efb8f179396671a93f3f521",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ca967507435fbb87b44db3660bf5cc618bb5574db941ea01305568cf8680a46e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-08-11T17:07:20.366098919Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-07-24T14:38:19.482143079Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9bbf45a5b2510d44d3206a028cf6502757884d49e46d3d2e6356c3a92c4309 in / "
                },
                {
                    "created": "2020-07-24T14:38:20.335965442Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-07-24T14:38:21.071294363Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-24T14:38:21.85928744Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-24T14:38:22.027273323Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:03:25.674488403Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:03:26.254231115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:07:08.795966251Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-08-11T17:07:17.974314985Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:07:18.862073054Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:07:20.366098919Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7ef3687765828a9cb2645925f27febbac21a5adece69e8437c26184a897b6ec7",
                    "sha256:83f4287e1f0496940f8c222ca09cbaf2c7f564a10c57b4609800babe8d1b5b32",
                    "sha256:d3a6da143c913c5e605737a9d974638f75451b5c593e58eb7e132fcf0e23c6db",
                    "sha256:8682f9a74649fb9fc5d14f827a35259aae8b58c57df8d369f6aa2e92865930c2",
                    "sha256:97337569552e38030a9f2d414e1bd480336731710d42f2d7f95609a15ac4699f",
                    "sha256:7b5326675aa8bc7e0824a6a273cfd2b477556e998f5d916448996d98afc65da0"
                ]
            }
        },
        "1.29.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d2c884f98b1274aace9cd676c54e129d8bad240bd03a69b6b46abd0d098568df",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "eb48aa9fb343e92319c1a383972300a389fa45fe982f68ac21f907c7d25d1f7e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d2c884f98b1274aace9cd676c54e129d8bad240bd03a69b6b46abd0d098568df",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-18T15:27:33.486392094Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-16T22:20:02.674174446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:84f8ddc4d76e1e867ab084f300cf4c2397bb9e4628d83dc22f4f5e2f6ec670b4 in / "
                },
                {
                    "created": "2020-09-16T22:20:03.49604913Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:20:04.296053299Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:20:05.143724493Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:20:05.306900029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:23:34.622359105Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:23:35.262289546Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:27:22.570173752Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-18T15:27:31.190381583Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:27:32.082020154Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:27:33.486392094Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6effd95c47f2a768ce984d80ac8dd11242ee532ea1a0367e919686d53b45958b",
                    "sha256:4ad5df11bd988cdf37d9ecce46412eecc262f069659370f8903581ec72b209d0",
                    "sha256:a2d674c9d7eda4df565109bbcaddb28c4c3849ae516020dc6706eed60ef6bde4",
                    "sha256:1bc04b7bba093f9627d346dd1bd51ebafcb74e789bf381f9ca615e225aebc3c3",
                    "sha256:a6a7f999a9ea8ea1000ad6a01f86e44946792ded1e0aad4308d697bc3c80eff3"
                ]
            }
        },
        "1.29.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8f17e05c62bd4c4a58b47fd4d06c8630bc2ddbbdb368a112a15ca9a74233891f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a80906eaf8a7d4b4e31b6ec6beb0908077a1bca0c3e6a2fb77647926463baebb",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8f17e05c62bd4c4a58b47fd4d06c8630bc2ddbbdb368a112a15ca9a74233891f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-25T14:26:46.937707529Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-16T22:20:02.674174446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:84f8ddc4d76e1e867ab084f300cf4c2397bb9e4628d83dc22f4f5e2f6ec670b4 in / "
                },
                {
                    "created": "2020-09-16T22:20:03.49604913Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:20:04.296053299Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:20:05.143724493Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:20:05.306900029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:22:43.830509926Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:22:44.286072786Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:26:36.148330644Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-25T14:26:44.405615294Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:26:45.398642413Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:26:46.937707529Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6effd95c47f2a768ce984d80ac8dd11242ee532ea1a0367e919686d53b45958b",
                    "sha256:4ad5df11bd988cdf37d9ecce46412eecc262f069659370f8903581ec72b209d0",
                    "sha256:a2d674c9d7eda4df565109bbcaddb28c4c3849ae516020dc6706eed60ef6bde4",
                    "sha256:190593a48ed8c8fa2c87544f1fae0119260c82276eee6301e972f1f83e4451ad",
                    "sha256:c08c71ffc118f9219ddf2dd99b7441353f1dd8eddb4a7a5df0057af20415b28c"
                ]
            }
        },
        "1.30.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:69fc4c8067f9b27e56d54eee517b316e933a3031bf780793362128c28eb86446",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c8794a3accf972c08275c16a24d37764c34bdf81198a65d61990eef3b91a03ae",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:69fc4c8067f9b27e56d54eee517b316e933a3031bf780793362128c28eb86446",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-10-19T14:45:23.270354029Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-09-25T22:33:49.531664713Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4974bb5483c392fb54a35f3799802d623d14632747493dce5feb4d435634b4ac in / "
                },
                {
                    "created": "2020-09-25T22:33:50.472187951Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-25T22:33:51.37343796Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:33:52.240104873Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-25T22:33:52.495173292Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:41:06.389182656Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:41:07.293448377Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:45:13.051872097Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-10-19T14:45:20.661538034Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:45:21.666185642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:45:23.270354029Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80580270666742c625aecc56607a806ba343a66a8f5a7fd708e6c4e4c07a3e9b",
                    "sha256:3fd9df55318470e88a15f423a7d2b532856eb2b481236504bf08669013875de1",
                    "sha256:7a694df0ad6cc5789a937ccd727ac1cda528a1993387bf7cd4f3c375994c54b6",
                    "sha256:afe50e1442e89cab6b86d6be68be70cc36cbdbdb0b8223fc392ff1da43bcc080",
                    "sha256:bac503262ce507c038374294aca91895c46e40c95d70b6d24ccc03b5e2593e42"
                ]
            }
        },
        "1.31.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:18e7dfcffd18a338553f01e90c9f93002106e6108dcf8fed09ba92a3d7c0bb8b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1d0f34625ec1e903a43868646e97ff8db36d58f50f64376d1915aaa833f07ec2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:18e7dfcffd18a338553f01e90c9f93002106e6108dcf8fed09ba92a3d7c0bb8b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-11-12T15:44:01.4359177Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-09-25T22:33:49.531664713Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4974bb5483c392fb54a35f3799802d623d14632747493dce5feb4d435634b4ac in / "
                },
                {
                    "created": "2020-09-25T22:33:50.472187951Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-25T22:33:51.37343796Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:33:52.240104873Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-25T22:33:52.495173292Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:39:59.256269632Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:40:00.259783208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:43:49.827232616Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-11-12T15:43:58.817539344Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:43:59.900174629Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:44:01.4359177Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:80580270666742c625aecc56607a806ba343a66a8f5a7fd708e6c4e4c07a3e9b",
                    "sha256:3fd9df55318470e88a15f423a7d2b532856eb2b481236504bf08669013875de1",
                    "sha256:7a694df0ad6cc5789a937ccd727ac1cda528a1993387bf7cd4f3c375994c54b6",
                    "sha256:acce0670b15e97bf4eab9f42c0a6e7541f14811bc304220e930ed5ffdbec796c",
                    "sha256:11457e3471313f251bb0e32e7777091cf60555eebdc1915f05f7476dd06ec916"
                ]
            }
        },
        "1.32.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:e204d588af974739a8e09f120ebfdf62ebdbfe76990a83b87caab307b638e55a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0a5fbcbc5104444ae0c375cc90df3a5b21653c853208b5c84aa0305f2b7e83cf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e204d588af974739a8e09f120ebfdf62ebdbfe76990a83b87caab307b638e55a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-12-15T11:36:33.313670989Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-11-25T22:25:13.893229226Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ef542de9959c3061f2d0758adb031e226b221a1a2cd748ff59e6fc13216a1c0 in / "
                },
                {
                    "created": "2020-11-25T22:25:14.939045643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:15.966902703Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:16.910748508Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:17.102901455Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:33:11.477730996Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:33:12.233302923Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:36:22.489454103Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-12-15T11:36:31.221085316Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:36:32.016864306Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-12-15T11:36:33.313670989Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b43408d5f11b7b2faf048ae4eb25c296536c571fb2f937b4f1c3883386e93d64",
                    "sha256:23135df75b44a66efa9d8dc1a10051768c27bd95388f436eb9553e0eb17211f6",
                    "sha256:fe6d8881187d429af3f636c574911690455825998c9f366e985eab646665e711",
                    "sha256:b96d523b27e0bbe489b713b76e77cbc2135f772bf72993cf2d72781afb816527",
                    "sha256:413e25c2887221d4e930d3d7dd36253faf0449d71fe1da1393c90697aa77c374"
                ]
            }
        },
        "1.32.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:edb1bd5c6aa36ca91b594b0fe45839f1fec3d8c01372c6258b5dba5e15d9ea24",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "30873ed26e8f8e03f624858aeae312f92435fb2d500fcf04045dd179b29376d4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:edb1bd5c6aa36ca91b594b0fe45839f1fec3d8c01372c6258b5dba5e15d9ea24",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-04T16:04:42.087562525Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-11-25T22:25:13.893229226Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ef542de9959c3061f2d0758adb031e226b221a1a2cd748ff59e6fc13216a1c0 in / "
                },
                {
                    "created": "2020-11-25T22:25:14.939045643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:15.966902703Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:16.910748508Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:17.102901455Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:00:24.685221689Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:00:25.284040841Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:04:30.256061186Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-04T16:04:39.764106999Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:04:40.664367101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:04:42.087562525Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b43408d5f11b7b2faf048ae4eb25c296536c571fb2f937b4f1c3883386e93d64",
                    "sha256:23135df75b44a66efa9d8dc1a10051768c27bd95388f436eb9553e0eb17211f6",
                    "sha256:fe6d8881187d429af3f636c574911690455825998c9f366e985eab646665e711",
                    "sha256:5f8b38fe5d7c4e1cd2ada4539d9646f0aba2985138242c0c8242f0c4b61fdfb7",
                    "sha256:cc690ed8f23e6a5d5d4420b8a3e16f6f28cd12b449e22519775473e5017910b6"
                ]
            }
        },
        "1.33.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:3decece4001e894c4a28189561973db12463c9826a53067640e2419de49311cc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b75c498f05d4d91614579cf5d56cb2fba82b497f1d1416580217aff472fc9f13",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3decece4001e894c4a28189561973db12463c9826a53067640e2419de49311cc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-20T12:12:58.153610136Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2020-11-25T22:25:13.893229226Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6ef542de9959c3061f2d0758adb031e226b221a1a2cd748ff59e6fc13216a1c0 in / "
                },
                {
                    "created": "2020-11-25T22:25:14.939045643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:15.966902703Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:16.910748508Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:17.102901455Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:09:40.698042871Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:09:41.237910018Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:12:47.076407287Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-20T12:12:55.780993429Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:12:56.714242754Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:12:58.153610136Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b43408d5f11b7b2faf048ae4eb25c296536c571fb2f937b4f1c3883386e93d64",
                    "sha256:23135df75b44a66efa9d8dc1a10051768c27bd95388f436eb9553e0eb17211f6",
                    "sha256:fe6d8881187d429af3f636c574911690455825998c9f366e985eab646665e711",
                    "sha256:69b7bbf3bcb9df4ca799f11970db0291f70d230dad66564e5e3e89d7363dc8ea",
                    "sha256:66b4a57cb4d7a9d96cc9fed9f338e240a12433286881392582fbd973b50e577a"
                ]
            }
        },
        "1.33.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:a2b51adf4c827245aae3e02980ac033dd549ef5c2ab5c6279bec2e4f20ff1063",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "172e01e826eb21b63fd6f515f02ffca6e6bd1ddae4908386aab3ca81c6c3b1b5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a2b51adf4c827245aae3e02980ac033dd549ef5c2ab5c6279bec2e4f20ff1063",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-02-17T17:27:05.047541234Z",
            "docker_version": "20.10.2+azure",
            "history": [
                {
                    "created": "2021-01-21T03:37:59.610121534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef36fee25b0bd1d99979ecb8d54b206cec33d4e8fd2232189f0d8e5ab9754798 in / "
                },
                {
                    "created": "2021-01-21T03:38:01.686909008Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:03.602826437Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:05.448405114Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:05.801776526Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:22:49.994800954Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:22:50.28412849Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:26:53.689994594Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-02-17T17:27:02.658779709Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:27:03.598947277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:27:05.047541234Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c95d2191d7773c6e29188f92922bc9547e1f0b6130e85dfc2f5e4eae13137c7c",
                    "sha256:27502392e386147bf71f51b4676dbe938b9b86592e41047c17fc94a116aa2841",
                    "sha256:9f10818f1f96a349981e134a0e8d566fa5ab144c9f9f4e766be8cdab76d4074d",
                    "sha256:0497a67d58aa1cfaa3eb497d85e21689338c68e0c565584a7fcf026b4e535469",
                    "sha256:cf0ac8eebe78f4190638cb30c42dc6e81416f6758f0ccab13b45f6594ca54e5a"
                ]
            }
        },
        "1.34.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:c113b3e6bae404ad9453dc5f53739bc4ced938f26c7215e94ff3418e58658bf5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1990e79f4f3e1e639256d8d5ca21d9ee90bbf5c37ac6b0733634c921d2bb0992",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c113b3e6bae404ad9453dc5f53739bc4ced938f26c7215e94ff3418e58658bf5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-03-02T18:05:05.616482337Z",
            "docker_version": "20.10.3+azure",
            "history": [
                {
                    "created": "2021-01-21T03:37:59.610121534Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef36fee25b0bd1d99979ecb8d54b206cec33d4e8fd2232189f0d8e5ab9754798 in / "
                },
                {
                    "created": "2021-01-21T03:38:01.686909008Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:03.602826437Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:05.448405114Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:05.801776526Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:01:17.952819881Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:01:18.264545945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:04:54.599147298Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-03-02T18:05:03.452196312Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:05:04.304187876Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:05:05.616482337Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c95d2191d7773c6e29188f92922bc9547e1f0b6130e85dfc2f5e4eae13137c7c",
                    "sha256:27502392e386147bf71f51b4676dbe938b9b86592e41047c17fc94a116aa2841",
                    "sha256:9f10818f1f96a349981e134a0e8d566fa5ab144c9f9f4e766be8cdab76d4074d",
                    "sha256:a1a95c7d045c284fe70f1eb88593699d502ee586ec7cb2b36cdf5044f4f7eb46",
                    "sha256:5fce0cc4025d0863fdb7d5f64327b950f7413871bd668e332cb0bacf037de521"
                ]
            }
        },
        "1.35.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:57a7a7aaa41e1278e322867b29b5f23798657f980e5efdce9baf3d29b9001ab7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "496033edbbfeb588367e4ce11c4f1484ca7c348920181a13693de7c414a3122d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:57a7a7aaa41e1278e322867b29b5f23798657f980e5efdce9baf3d29b9001ab7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-04-15T16:02:58.332377913Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2021-03-25T22:32:58.817886156Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e80ae8d359b484dac5346f98c549abc694e1d0c87e1d9753d495aed4d9c8b2b3 in / "
                },
                {
                    "created": "2021-03-25T22:32:59.983827209Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-03-25T22:33:00.959783272Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-25T22:33:01.951286663Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-03-25T22:33:02.159055896Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:05.816726507Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:06.277260755Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:02:52.017890835Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-04-15T16:02:55.780471458Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:02:56.828441143Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:02:58.332377913Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:030309cad0ba82b098939419dcb5e0a95c77d2427d99c44a690ecab59f80a487",
                    "sha256:1e77dd81f9fa12f3034fa1ed55bc2d1f7a316b450ae53f36beb52af2dd83b78f",
                    "sha256:6f15325cc380f8fc8fa0cdffc5cc7e38c5beb155e09ab3e0edbb1e5a842c46cc",
                    "sha256:dbe1f4408ec07d69e7a3dffa6391b5e8a75abb57b1dea9037355030fbc69e894",
                    "sha256:f00f27d7137ec09518328142626ef1074707d8dde116fee47de3fcdc55008368"
                ]
            }
        },
        "1.35.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:bd45a8719aecd44b637a58314f4c7aed085b132277db53a5f0df573fd38e5608",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d0b11132aebf69db239d510a2584524b66b0c9213a24333e00a3133518aa426f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.35.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bd45a8719aecd44b637a58314f4c7aed085b132277db53a5f0df573fd38e5608",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T21:40:55.303393882Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:44:30.652887198Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e05689b5b0d51a2316f8a87b1a9d6cbf90d98b19a424dbb924ee3d0b1cc17bfc in / "
                },
                {
                    "created": "2021-05-19T19:44:31.777045493Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:44:32.763740202Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:44:33.750449981Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:44:33.928995967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:12.080186376Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:12.36385042Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:13.315506706Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:51.568577432Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T21:40:52.791419808Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:53.867415627Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:55.303393882Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50858308da3d192ec20027838c7aaf983333731dc2dcc0cd03c4522495a4cee8",
                    "sha256:c7bb31fc0e0892ba47b0059aab580a5c7575289320d47890fd7110e82e31fd58",
                    "sha256:5f08512fd434ebecfa88e2e5321503762258950217478d5ba51b7a3876a036b7",
                    "sha256:ee7684cba0ec9baf813ec1d63050a273175b96adb3945e928e055cff5f335b51",
                    "sha256:bc83cb5e1116bdc9def58bd9592620a327d21ce025c578d1c9b1eaea37868007"
                ]
            }
        },
        "1.36.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:ba5e72ff061f0af1e70bcf56adfcd8e2e8dd011b4f0f4db8b924684c22df3e2d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "eb0df1f21f2abf7a33f15959722f486fc073dcaabdaa4d7b38143515513ebdae",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.36.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ba5e72ff061f0af1e70bcf56adfcd8e2e8dd011b4f0f4db8b924684c22df3e2d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T20:47:24.386832282Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:44:30.652887198Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e05689b5b0d51a2316f8a87b1a9d6cbf90d98b19a424dbb924ee3d0b1cc17bfc in / "
                },
                {
                    "created": "2021-05-19T19:44:31.777045493Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:44:32.763740202Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:44:33.750449981Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:44:33.928995967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:31.887248833Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:32.29518418Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:33.291562743Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:47:20.694716928Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T20:47:21.986758417Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:47:22.938653746Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:47:24.386832282Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50858308da3d192ec20027838c7aaf983333731dc2dcc0cd03c4522495a4cee8",
                    "sha256:c7bb31fc0e0892ba47b0059aab580a5c7575289320d47890fd7110e82e31fd58",
                    "sha256:5f08512fd434ebecfa88e2e5321503762258950217478d5ba51b7a3876a036b7",
                    "sha256:199653052429284dffdfb80943320521e703ee417d851913b9e6b2e0c625c92f",
                    "sha256:c915c9f648f420442597626961360932b60723b2e6e4ca28b61d26c4a2df0295"
                ]
            }
        },
        "1.37.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:7fc05f66a3176d5948f80ba2032b68c20a7c1c127624046076fc6b2ec7c4e48d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0b6dd4abb4fafa2ffe9a8b1f3b00999ee6a54e11fec8cd76e4a93457b94d67a3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7fc05f66a3176d5948f80ba2032b68c20a7c1c127624046076fc6b2ec7c4e48d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-01T19:00:25.026013304Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:44:30.652887198Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e05689b5b0d51a2316f8a87b1a9d6cbf90d98b19a424dbb924ee3d0b1cc17bfc in / "
                },
                {
                    "created": "2021-05-19T19:44:31.777045493Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:44:32.763740202Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:44:33.750449981Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:44:33.928995967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:37.115091481Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:37.401944158Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:38.307954535Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:21.547844014Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-01T19:00:22.736135303Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:23.664487913Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:25.026013304Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50858308da3d192ec20027838c7aaf983333731dc2dcc0cd03c4522495a4cee8",
                    "sha256:c7bb31fc0e0892ba47b0059aab580a5c7575289320d47890fd7110e82e31fd58",
                    "sha256:5f08512fd434ebecfa88e2e5321503762258950217478d5ba51b7a3876a036b7",
                    "sha256:5f478a05bcbd754dbb14e7e3bf58db21d26a325a3b53fe888a65bbd9c9c42764",
                    "sha256:644f94ae584a7ff7da473b073a900a408e1796e8a8be12680fbe892cdfd1968f"
                ]
            }
        },
        "1.37.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:1315ddb349abd9f006f153de23b69ad19765de8aa84783297372031c4d5ba1f5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9e33a3485f61a1e9860762528a51f5ac7845e3181ca0809deaedb01d4797c5cd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1315ddb349abd9f006f153de23b69ad19765de8aa84783297372031c4d5ba1f5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-08T12:54:53.840938373Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:44:30.652887198Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e05689b5b0d51a2316f8a87b1a9d6cbf90d98b19a424dbb924ee3d0b1cc17bfc in / "
                },
                {
                    "created": "2021-05-19T19:44:31.777045493Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:44:32.763740202Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-19T19:44:33.750449981Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:44:33.928995967Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:29.193909308Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:29.485899258Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:30.283710957Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:50.535659267Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-08T12:54:51.70211309Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:52.525302958Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:53.840938373Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:50858308da3d192ec20027838c7aaf983333731dc2dcc0cd03c4522495a4cee8",
                    "sha256:c7bb31fc0e0892ba47b0059aab580a5c7575289320d47890fd7110e82e31fd58",
                    "sha256:5f08512fd434ebecfa88e2e5321503762258950217478d5ba51b7a3876a036b7",
                    "sha256:b334dde7aefded8da5f0909a0a4f666702f008b3c50a65e71aa8e4540b5e26ab",
                    "sha256:7e8b03998f192d78aadadfd8870d3376447a957d4299536015efb0957915825b"
                ]
            }
        },
        "1.37.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b0b1e2e40757f7aa58d3b72a2f9a39f2f03fa2b96978cd94ec747363bd65c870",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5eada37b917da11c34cc85947c37e070f695a5c57520f225065e0f8548be64a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b0b1e2e40757f7aa58d3b72a2f9a39f2f03fa2b96978cd94ec747363bd65c870",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T19:29:08.256668876Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-17T23:31:22.09459591Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:900f735ff138e5137cf25ddd85a32a01921ebec26d86704d24b5f12e73a832c2 in / "
                },
                {
                    "created": "2021-06-17T23:31:22.471354017Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:45.402076102Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:46.294422249Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:47.278559144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:29:04.591614662Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T19:29:05.721728394Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:29:06.913398829Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:29:08.256668876Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8f8f0266f8349dd17fdca5a1c827a7c8b11d84903b1226b05c6fbdc7edd30652",
                    "sha256:8592992fad602e189cdd531a77b9016c16781058c8fc01b39bc602c8b09f75f1",
                    "sha256:7a2dee7be48a161449c438158c7b675bf9e0c8e62ddd6204aa491f104decea2c"
                ]
            }
        },
        "1.38.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4449059bdea2520684f8a5fe56dc446be00c154ca1d1a147b788a5df34b2e4ba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2f870e29697e9ba7c8faaf1cd3820adc4d237a7d61a056808769cba3de3313ac",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.38.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4449059bdea2520684f8a5fe56dc446be00c154ca1d1a147b788a5df34b2e4ba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T20:54:44.96772831Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-17T23:31:22.09459591Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:900f735ff138e5137cf25ddd85a32a01921ebec26d86704d24b5f12e73a832c2 in / "
                },
                {
                    "created": "2021-06-17T23:31:22.471354017Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:50.90436991Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:51.303821659Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:52.32288571Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:41.296076985Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T20:54:42.560701677Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:43.515599281Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:44.96772831Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8f8f0266f8349dd17fdca5a1c827a7c8b11d84903b1226b05c6fbdc7edd30652",
                    "sha256:4b349023c4dc67ac97e6c7dd83f71387b41b661927b9eaff49727b51d148ad5f",
                    "sha256:c73c1e6bfd82ed5dc55af1f37db52f6e3485f052058de3b6f108e2927fd06d20"
                ]
            }
        },
        "1.39.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:46e265283c3a00a4f0be7a2caf6dfc7b2b187e2aeaa43400cd0b2135c0c4bf15",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c7f87daf4ecccb08be1e59c6fbd9268fad3d01f5ca7e9a10582328e13a7ab9a4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.39.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:46e265283c3a00a4f0be7a2caf6dfc7b2b187e2aeaa43400cd0b2135c0c4bf15",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-08-04T08:04:07.425789872Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-07-26T21:21:30.743417551Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e729fb032bd2f7cde20fb343da0cd358447e8b23028422c123944e8d0be660fa in / "
                },
                {
                    "created": "2021-07-26T21:21:31.071665434Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:00:18.175356847Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:00:18.467735894Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:00:19.319877091Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:04:03.562084367Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-08-04T08:04:04.842656527Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:04:05.898189749Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:04:07.425789872Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:21639b09744fc39b4e1fe31c79cdf54470afe4d7239a517c4060bd181f8e3039",
                    "sha256:238209702317a318ca4ca479c248f67ef2bae6d6ab2c630ca985fdb68b1e2eb9",
                    "sha256:6fd2c2d7c43a5f0a55dd2300aac72bfd91509a92198f363f8bc72522b13c1940"
                ]
            }
        },
        "1.40.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:465d93358055e1000696ef3edd95a66a33760a89bfb4fa49b5da97ee4c4d7256",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a137246bf610ee716c2e478e3815ed9de893cee073a3d55c01f3706e48a173e8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:465d93358055e1000696ef3edd95a66a33760a89bfb4fa49b5da97ee4c4d7256",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-09T20:55:43.036683555Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:20:48.073433461Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:425a053fd043786e9454fb269d4c93c624550fb913a8c96d03ddd430b4e6c1c3 in / "
                },
                {
                    "created": "2021-08-31T01:20:48.414661265Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:52:16.824725113Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:52:16.986517595Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:52:17.155977556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:40.135280156Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-09T20:55:41.182119441Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:41.869593787Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:43.036683555Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6babb56be2593d69d561cae7ad16b670a1ee7c0a32b4fa715007fba7febd5ddb",
                    "sha256:4e4c1ed0aa679aa1aa82e1d22f019903b03871848dbe92b5872f96ce54da2c1e",
                    "sha256:1c07a6875da22a872c0e92fbb06fbd3381c48ce8d13bf0a1e918ae56a7c50660"
                ]
            }
        },
        "1.40.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2e7ee3fea1eeab0acfa050c3492a1f53ad70e18c9fb016aa2c3ba9ad6c7578f8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2c0899edb1acd4d03365ae225093a053d6db2fe7345f4624bf7707fd9e14484b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2e7ee3fea1eeab0acfa050c3492a1f53ad70e18c9fb016aa2c3ba9ad6c7578f8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-28T12:22:35.038234578Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:20:48.073433461Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:425a053fd043786e9454fb269d4c93c624550fb913a8c96d03ddd430b4e6c1c3 in / "
                },
                {
                    "created": "2021-08-31T01:20:48.414661265Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:16.23158341Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:17.155554711Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:18.165017857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:22:32.108605363Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-28T12:22:33.15868011Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:22:33.846762028Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:22:35.038234578Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6babb56be2593d69d561cae7ad16b670a1ee7c0a32b4fa715007fba7febd5ddb",
                    "sha256:f0b3bb999875ced95f6468319570accc3374dcd28f3969850dd5b5f09bdcf712",
                    "sha256:f120932b34147b45a2963e4ceaae2fb4fc2d0dd0e5ae1ea556111e6baf3fc4cc"
                ]
            }
        },
        "1.40.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:643a71236c0229f3b466dd2ab9c158640fecca279cfec37fc65ac4553df0b401",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fd08fd7eacc26dd3798e5c5d8aa2f0a21d2c3ba6778d9fad59f834bb8c2a6617",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:643a71236c0229f3b466dd2ab9c158640fecca279cfec37fc65ac4553df0b401",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-29T17:33:06.20801243Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:20:48.073433461Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:425a053fd043786e9454fb269d4c93c624550fb913a8c96d03ddd430b4e6c1c3 in / "
                },
                {
                    "created": "2021-08-31T01:20:48.414661265Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:34.944981835Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:35.150224979Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:35.341400709Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:33:02.590392618Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-29T17:33:03.819594619Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:33:04.793550726Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:33:06.20801243Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6babb56be2593d69d561cae7ad16b670a1ee7c0a32b4fa715007fba7febd5ddb",
                    "sha256:f8225dba29f35fefac58812b558b06569d9847c42b78b6af2b057b10219b9994",
                    "sha256:796ee952019d0ffe92887a7a6bcb645ea4a7b664ec92a980925f74bebd4baa29"
                ]
            }
        },
        "1.40.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9d61a80112c5ed6f2c998d733126babd9bd5630c2e817bef3a9b8d0ea8bd4623",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6393c474001fbb51a9c39dc67a35ab08d8bc1e909b64be40ae22097eb7f915de",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9d61a80112c5ed6f2c998d733126babd9bd5630c2e817bef3a9b8d0ea8bd4623",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-07T19:51:23.045677741Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:47.862167357Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:48.057237924Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:48.25053499Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:51:19.49881151Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-07T19:51:20.674206677Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:51:21.457363722Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:51:23.045677741Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:3de2d570b1c0dd5bd1c92cbc8ab84a42b3861cbfcab857bae0cabb442ae2e86d",
                    "sha256:fec6b37e9d449158ef5c685f19210b44d7549d2904b9cbb36d79fea36bf86153"
                ]
            }
        },
        "1.40.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:dd36dbeebe1dc8f692bb484d2b1d6601bac3a39eae36ac52d088b6f285a5cbd5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8eddbd96b3032084f001577e8320454bc176942e20eba0941461a4adc21949b8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.4",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:dd36dbeebe1dc8f692bb484d2b1d6601bac3a39eae36ac52d088b6f285a5cbd5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-19T13:48:35.59935851Z",
            "docker_version": "20.10.9+azure-1",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:44:37.306440172Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:44:38.198979754Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:44:39.225691973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:48:31.543888686Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-19T13:48:32.861339282Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:48:33.868799476Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:48:35.59935851Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:ee0d37ab33c68c6daeb21027a6fb5f45d63c63a582da738b8a40761e38314490",
                    "sha256:15ce96d68df885669af931955f643d542ddb0bbd5cc9ed42f3f17e8b8efd0b0c"
                ]
            }
        },
        "1.41.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e4eaacc7f512f2ed598dc0a4bb94b695b7810a4d2e1740c2b7a88f7d6dd316f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "42143f827caae847f6937d628deca52f41b1ead9d492bdeb0f5d8f66d73bb992",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.41.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e4eaacc7f512f2ed598dc0a4bb94b695b7810a4d2e1740c2b7a88f7d6dd316f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T17:40:37.688305104Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:49.165153478Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:49.352121604Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:36:50.198683097Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:33.706319399Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T17:40:34.92774951Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:35.763943974Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:37.688305104Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:6e2d2d8acbc95003e824e240fe61c20ef40c658ec66b3fd2413737d34fef9bff",
                    "sha256:2bac20bcb7c86b81142022bf88196932434bcf282ec8ddbaa2a1cfeff296049e"
                ]
            }
        },
        "1.42.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6529a6c9272bce32dc7565605d2988c3ecd8c4406fe3e75f47051060a9b47fd2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0817044b09d8c62fa1501019f3929c20cabd8942b18a4ccfe5fff6f6bca949ce",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6529a6c9272bce32dc7565605d2988c3ecd8c4406fe3e75f47051060a9b47fd2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T18:16:10.749730866Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:14.108201321Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:14.334367621Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:15.214336522Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:16:06.800781582Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T18:16:08.048046183Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:16:08.863610568Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:16:10.749730866Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:d91e2d682bdd89f194cf296cb5f04cc0248b9104a16d5ef89d9fe864b685755c",
                    "sha256:8912e8115d155e8e81fa467ffafcd4f840afaf125bcd95b0bdbfbfa6edfbd89d"
                ]
            }
        },
        "1.42.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9ada6c5c14c95fdf949af283568bd5fba01237f726286cfc432957505c02784d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "575ad6c4d3b0479beb04b50927f5e5b1a991ef7d9d5c6361fc11c5b98c6b3094",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9ada6c5c14c95fdf949af283568bd5fba01237f726286cfc432957505c02784d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-08T21:35:14.416413626Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:35.123733739Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:35.31886302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:36.181618327Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:35:10.847275002Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-08T21:35:12.032331044Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:35:12.778551632Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:35:14.416413626Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:1ba26d29baa96586ba0612d3048ce15354347e3baf9098eb06e72823a90688fc",
                    "sha256:03953142fcb041b2cac6f9810bc6f0b49282d0c1bd4e5a5ab6dae63d83c5ed90"
                ]
            }
        },
        "1.42.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4b79990f47010c3217f849ad803bb3c0f9cb826b4da3f9827bac4d4c57fbedc9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5a2c3136210ab0762292767fd561f4b751329b83322200bcfe4308b51de1faf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4b79990f47010c3217f849ad803bb3c0f9cb826b4da3f9827bac4d4c57fbedc9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-30T17:59:30.948446596Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:15.183469955Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:15.334077639Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:16.147029574Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:27.737050154Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-30T17:59:28.782597263Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:29.658017079Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:30.948446596Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:bc51463b4b8ca8f403c3f3bc280936c605224d95f93360d69368bcbfb37f88ac",
                    "sha256:70a7602d2b0ae82982dbc40e12ab7a82d7f37bb7cb3c04a4db47cdc2a6172fa7"
                ]
            }
        },
        "1.43.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:846ec62091b6f68362a92a7128fae5fe490bd98f8e15e6b9063124f4345249c6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "534b9308db16a8b3068de5f3dacc06e726e91bae29511bd191d2eafb6de9a5c2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:846ec62091b6f68362a92a7128fae5fe490bd98f8e15e6b9063124f4345249c6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-06T09:26:14.266609894Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:22.27208091Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:22.472200368Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:22:23.189879912Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:26:11.164345871Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-06T09:26:12.332555694Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:26:13.088365006Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:26:14.266609894Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:e209ecbc91f154a46101f0e3dd4a1249d09deaa19c166109af1f53af9ebc97ee",
                    "sha256:dad80b5d2f058a08723b8f7291f41c8965ba919afe295fe597cbd9546f903a27"
                ]
            }
        },
        "1.43.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2e0a55d77a23fbb91666652218d907154361594f136965003cbe5ed1e16b56a3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f0eeda392b2ea3941558ddbfc83bdba4ea087c4e55e3eb1d04c8ca9b82aa4eb9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2e0a55d77a23fbb91666652218d907154361594f136965003cbe5ed1e16b56a3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-30T12:32:21.997244416Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-10-01T02:23:23.735764952Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0d82cd095966e8ee78b593cb47a352eec842edb7bd9d9468e8a70154522447d1 in / "
                },
                {
                    "created": "2021-10-01T02:23:24.179667784Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:16.642831843Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:16.804067917Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:17.154906702Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:32:18.933927968Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=17        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-30T12:32:19.924335055Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:32:20.64966008Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:32:21.997244416Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:824bf068fd3dc3ad967022f187d85250eb052f61fe158486b2df4e002f6f984e",
                    "sha256:81eeb040403dd861d0759b789d552fff70182d40c06b7d3478804754fde0e62c",
                    "sha256:faea6d17b992693dc77b447b258e6b2cf93f8dcb26d6020e914802f3d6ad1939"
                ]
            }
        },
        "1.43.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d626eb35373a547bad62bc303d82c2d5d0c7b1003e7add4b79ced1c0ba8a615c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f7c1fa6e494909b0152daad783e4fda2d2c27b1db0314d7dee7427fc5a9fcc9c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d626eb35373a547bad62bc303d82c2d5d0c7b1003e7add4b79ced1c0ba8a615c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-01-28T10:38:20.124473341Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-07T02:25:21.335268541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2aa3e79e3cff3c048612744ac310cf86bc27de3433d420711bafc6612445befc in / "
                },
                {
                    "created": "2022-01-07T02:25:21.793903815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:44.403624321Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:45.180684876Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:34:46.169937536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:38:17.22638982Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-01-28T10:38:18.342486773Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:38:19.067701962Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:38:20.124473341Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:40a154bd33523297c30ac1466b4e818afad0b8b05de9f3eb790315673d0da635",
                    "sha256:b243a9352852dc02c064a70f2dfc711ba2eef28ff78468ed72e4da4bfd7374e8",
                    "sha256:2b9e0f23e1c569219a89b83c5dd8cbd2e31a9d1d35f62ac01ef661a5231a1683"
                ]
            }
        },
        "1.44.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7099b08159e3cd707664a91716208f10724b9e1d95d00355e42592725a506264",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ed2066f6fc1b220e0d5b7d58524cdb0727019dee267e5c414cc56fa4f8cc89fc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7099b08159e3cd707664a91716208f10724b9e1d95d00355e42592725a506264",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-02-01T11:11:38.750518684Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-07T02:25:21.335268541Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2aa3e79e3cff3c048612744ac310cf86bc27de3433d420711bafc6612445befc in / "
                },
                {
                    "created": "2022-01-07T02:25:21.793903815Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:07:11.769942063Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:07:11.988778222Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:07:12.202631556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:11:34.937215684Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-02-01T11:11:36.391841222Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:11:37.334480782Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:11:38.750518684Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:40a154bd33523297c30ac1466b4e818afad0b8b05de9f3eb790315673d0da635",
                    "sha256:d3a0b8403a6ab75588e717fbc53289d46c952003e03b3d2f45fd05440187c759",
                    "sha256:b63926ccd81f938a9e200ee11368b280b078f21c665674217e3384e202750069"
                ]
            }
        },
        "1.44.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0a27a33a167612a2ee89d961c988320b37b4eb5376dc30f0c59b82d732d82d2d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "60cdd7c3390c9b5168ebbb0904e2656284d051d1999a1b81b9258faaa9061bdf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0a27a33a167612a2ee89d961c988320b37b4eb5376dc30f0c59b82d732d82d2d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-18T15:18:19.66110244Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:26.87345292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f554512cb0acad99508554656767804e4821ece488fac0e46fd2c643a39f7021 in / "
                },
                {
                    "created": "2022-03-18T05:30:27.263481466Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.346106803Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.480806008Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.605368402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:12.575477515Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-18T15:18:18.740568654Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:18.866686438Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:19.66110244Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d6787a516e72b7ed9422c8df1a4b298d82982bdf80ee1e198eedf1e1a010d76",
                    "sha256:698bd50c5bf51c02092e1b455557b32ae2174295c28cf9fd1a686535ca93cd25",
                    "sha256:55589aeb7ddb306e7d5fa4f768d1330714e5f711d11d8f183cd24456c21c56fe"
                ]
            }
        },
        "1.45.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:86b67c4938b109afb7f0d09d61cce244f1df9f54ee598724cb95ad99232f5099",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4d9a4c3a1e50d5ed552fca83ebe6175df274bb5a6d6fb92d835149715d2342fc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.45.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:86b67c4938b109afb7f0d09d61cce244f1df9f54ee598724cb95ad99232f5099",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T15:55:26.394584501Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:26.87345292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f554512cb0acad99508554656767804e4821ece488fac0e46fd2c643a39f7021 in / "
                },
                {
                    "created": "2022-03-18T05:30:27.263481466Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.346106803Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.480806008Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.605368402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:18.99213377Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T15:55:25.386758835Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:25.523102807Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:26.394584501Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d6787a516e72b7ed9422c8df1a4b298d82982bdf80ee1e198eedf1e1a010d76",
                    "sha256:0438fe9db9f6ff3b7adfa5825a7a76815264111e79159dfd16f8ef6da881f53a",
                    "sha256:e72d51cb7d70b9168a9555f47b1809a8dc481bd2e9d72c1da93be3ee7947c548"
                ]
            }
        },
        "1.46.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:11c5f79bf8396ae051476d232ca86597f98f8fe211c22bac9abc8852654ecb45",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d5e52a8e14fa8dd832093fb941dee960cb1798b561eae1e62b437cc0c03d815a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:11c5f79bf8396ae051476d232ca86597f98f8fe211c22bac9abc8852654ecb45",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T16:31:26.35763904Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:26.87345292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f554512cb0acad99508554656767804e4821ece488fac0e46fd2c643a39f7021 in / "
                },
                {
                    "created": "2022-03-18T05:30:27.263481466Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.346106803Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.480806008Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.605368402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:19.070068826Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T16:31:25.396886685Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:25.523048661Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:26.35763904Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d6787a516e72b7ed9422c8df1a4b298d82982bdf80ee1e198eedf1e1a010d76",
                    "sha256:7e5a32910c8d75a77ed26c1ebfffb47ffd610ebfeb8b317cb22f400fa2606d6c",
                    "sha256:85fa935b3a612ba7205f0d2365f765a95d4e064a0817008e022a55362344fbfd"
                ]
            }
        },
        "1.46.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:aa77f27c3a202f013870cda17c8d3ed6df6e752ec048fa4127ac0df1981bb172",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "236428d03151fdfc32cbee363687fe6d7441a7b6afd645dca8b75f7396d25920",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:aa77f27c3a202f013870cda17c8d3ed6df6e752ec048fa4127ac0df1981bb172",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T17:06:17.951218287Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:26.87345292Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f554512cb0acad99508554656767804e4821ece488fac0e46fd2c643a39f7021 in / "
                },
                {
                    "created": "2022-03-18T05:30:27.263481466Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.346106803Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.480806008Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:48.605368402Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:10.663951618Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T17:06:17.012859708Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:17.130836364Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:17.951218287Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d6787a516e72b7ed9422c8df1a4b298d82982bdf80ee1e198eedf1e1a010d76",
                    "sha256:fc1aaf89465590ca153721258b140d73448008cf02a68652a58c16038cbd4e47",
                    "sha256:67b0ac071058c73f1419e9b715926262ebc40e67d34a753a095486604dd7fe5e"
                ]
            }
        },
        "1.46.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:54b6f6a461e934f0b2da14ea775327f8ee72c018f7b7b8cebf6ef0ae4055fcb2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b597290561c171099d6577ee57ccff325d43efaf074a35fd08142cea25b8ed6f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:54b6f6a461e934f0b2da14ea775327f8ee72c018f7b7b8cebf6ef0ae4055fcb2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-05-18T11:43:58.911817024Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-04-29T23:20:51.24018737Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f657a56a18426c3a88d620a7024e7b91424d926e7b47faa6a97c2369c4c4a228 in / "
                },
                {
                    "created": "2022-04-29T23:20:51.577192429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-03T16:07:05.507891811Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-03T16:07:05.645387027Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-03T16:07:05.759127693Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:51.67755838Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-05-18T11:43:57.996658848Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:58.127947232Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:58.911817024Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3e549931e0240b9aac25dc79ed6a6259863879a5c9bd20755f77cac27c1ab8c8",
                    "sha256:4cb2f1d2a663e5e7863b1c1c5005ba11f162e294b62272260fe704be314019aa",
                    "sha256:47b70cad1c578d7d808c5e0f0772824596519b3f23b9adead97bfdef5eca1013"
                ]
            }
        },
        "1.47.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:6147cde87cf07a1bf06c3baaaf64899918d05ed6577d00f1bf281a9b65e7e831",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "89fdc0021948147b83da26b2d152add9792f731682eb57880597921cd9cd9ed6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.47.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6147cde87cf07a1bf06c3baaaf64899918d05ed6577d00f1bf281a9b65e7e831",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:05:35.801480235Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:04.854637935Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40290d9a94ae76c35ab1f57178130ce1c5b976e34a91e77472ecf7e945ab64f9 in / "
                },
                {
                    "created": "2022-06-06T22:21:05.13964764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.232193535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.381192234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.528812715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:28.535104674Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:05:34.863299192Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:34.984623414Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:35.801480235Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95129a5fe07e89c1898dc40a027b291d5fe33a67b35a88f0f0eaf51ea691f0b5",
                    "sha256:82abf1303f7002a8ddeb28fc6ad47e884925425722c4b8114a97b6d5e57cc27b",
                    "sha256:5f556219f9a2f3fa24fbd4f98ea83da2e7a51d6c9e2d53a75fe205b6af5188fb"
                ]
            }
        },
        "1.48.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:65a9fc0983b18e1cdc43d75a32eeb7844c3680e084b12054e5e819f31aebab3d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "caf848293a8769d5a6c2fd773abcb603cce3d5ab25c459dbdae0baca9f5ec450",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:65a9fc0983b18e1cdc43d75a32eeb7844c3680e084b12054e5e819f31aebab3d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:42:33.158281706Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:04.854637935Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40290d9a94ae76c35ab1f57178130ce1c5b976e34a91e77472ecf7e945ab64f9 in / "
                },
                {
                    "created": "2022-06-06T22:21:05.13964764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.232193535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.381192234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.528812715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:25.889127435Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:42:32.2087918Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:32.324466901Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:33.158281706Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95129a5fe07e89c1898dc40a027b291d5fe33a67b35a88f0f0eaf51ea691f0b5",
                    "sha256:44d47d16e75d6a2be75ffebe0b74093b90529d858ad29a31fae4e0d94b20d197",
                    "sha256:92ce22c4c7a22ec54a2d5ddf8fe8ae25f417e141776af2a167f102172ed545af"
                ]
            }
        },
        "1.48.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:68000dd79f6c6c9a371ace2a4a918fa34c1f9437705a9a588ca9e4330af3f07b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8f45dc32384394c16c7a28ca75256f8f556a22c03a0abdbcb1f286da0c17942a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:68000dd79f6c6c9a371ace2a4a918fa34c1f9437705a9a588ca9e4330af3f07b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T15:16:06.785767806Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:04.854637935Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40290d9a94ae76c35ab1f57178130ce1c5b976e34a91e77472ecf7e945ab64f9 in / "
                },
                {
                    "created": "2022-06-06T22:21:05.13964764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.232193535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.381192234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.528812715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:04.500018644Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T15:16:05.815231109Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:05.934987689Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:06.785767806Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95129a5fe07e89c1898dc40a027b291d5fe33a67b35a88f0f0eaf51ea691f0b5",
                    "sha256:323f343bac3c1ef45012a9bd11d2b0f81ce29f028ad6feb72c8e5a1acb704134",
                    "sha256:a2f396ca99d568eb55ea7bf2f65a7148affc3818dc46a97b4af67dee18a2c559"
                ]
            }
        },
        "1.48.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:eadc3a13a2f281ad7498c5521b0dc6790c6b1a617fc5dfca53ce9fc01e6f74b2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6e87bf5d0fd0c627bc60f6c8ad2e6fb3bfafd07f9afe8e9811a276624d667aa3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:eadc3a13a2f281ad7498c5521b0dc6790c6b1a617fc5dfca53ce9fc01e6f74b2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T16:09:09.482977807Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:04.854637935Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:40290d9a94ae76c35ab1f57178130ce1c5b976e34a91e77472ecf7e945ab64f9 in / "
                },
                {
                    "created": "2022-06-06T22:21:05.13964764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.232193535Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.381192234Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:10.528812715Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:07.204356122Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T16:09:08.57787341Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:08.692366968Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:09.482977807Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:95129a5fe07e89c1898dc40a027b291d5fe33a67b35a88f0f0eaf51ea691f0b5",
                    "sha256:93a093cfd8ef6275715a510f0cf6c2a113332a46b3b44486c4300f284d86b1d1",
                    "sha256:dcb357e73b260c5ad3ef6cc10a9d0c4edb6b47174005fedc62656484ddeba7b7"
                ]
            }
        },
        "1.49.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:60f772d2c8640fde400f0a198924c2a76a64f49919a5002ce6bcdf18454ee61d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "aff64d040749f5185b3221cfc3117a2f09f4a4047f5f44c031e3824507822a7e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.49.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:60f772d2c8640fde400f0a198924c2a76a64f49919a5002ce6bcdf18454ee61d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:08:05.842061361Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:08:03.36427536Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:08:04.847681487Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:08:04.988393686Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:08:05.842061361Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:4b5c47f37ceaccfbd955c07add159bac44382b5a2becfcf768c6fc2ed639f98d",
                    "sha256:2903fb7a480b1eeda6ee145b1f64a9eb8f7b3afe48dea5f2928741c8992c1ae9"
                ]
            }
        },
        "1.50.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e21b4a081ee01c524619df483124147724c08c21ce7674bebeb87a6e052e9ce8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cb2cae919ab69b95c23ea9373c083ffbfd276cbd43c35398610192cf703ef6b5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e21b4a081ee01c524619df483124147724c08c21ce7674bebeb87a6e052e9ce8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:44:34.288496577Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:26.866378715Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:44:33.309166333Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:33.438038661Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:34.288496577Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:f717dddfe9c896b8006095e07b081e949408c62973676a0959e5df0e07820cc4",
                    "sha256:88cf4757c776c99567b3a4db288956acb96cd12ca8ebc3606f78839a4d31da78"
                ]
            }
        },
        "1.50.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d96111938f216ff2b6051ea6c88d228bf22e5462f3acbc70e11c21a815939b00",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "129ec6c89a936f73334f4a4e78aa39edc564127937d9f5144cf7342b899a6f90",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d96111938f216ff2b6051ea6c88d228bf22e5462f3acbc70e11c21a815939b00",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T12:18:21.473702694Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:15.886323537Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T12:18:20.496005569Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:20.621941317Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:21.473702694Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:20be62ebe3bef77f6a43af50bd6c553ae3abded1a5147051fbfb36b28fb67f3d",
                    "sha256:619b6836cc4d7bee7ec2d60a8515e545aacc072b59d97d666cc28ce05612a552"
                ]
            }
        },
        "1.50.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:694fc7831b1e6593cedd8b09eafeae51b5df6fd4323dc9e534ed90192f462f00",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d11bc4d378dc7e503ed6e2d9715b576af6fff8c687b13caa351a47b483b507ab",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:694fc7831b1e6593cedd8b09eafeae51b5df6fd4323dc9e534ed90192f462f00",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:09:27.317214178Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:22.847164948Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:09:26.339373212Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:26.457698661Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:27.317214178Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:daaf0a5cbb858e1f73735f5cbdab7f87434d24ee9635735ffd278cb4726a54f4",
                    "sha256:0a4b2135685ce217167a4027f6c42b8c301dd612d1c2fe4ec24fa1e382f1c14f"
                ]
            }
        },
        "1.51.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:3e0544dabda9fcecb9c080c6fdcc6c6a4c75a39547248e8a9616e0dbca65de0c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "36962c5363c13b576dbb9435cb655408753b9a8929a5bf6049621468f5031b1d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3e0544dabda9fcecb9c080c6fdcc6c6a4c75a39547248e8a9616e0dbca65de0c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:45:28.975522855Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:21.527648998Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:45:27.951271299Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:28.081242267Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:28.975522855Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:9235e447ae96362687fcfd6dae0055a4d559e018076b8ad46cb5b4eea5ee1fd7",
                    "sha256:5210b8dd6ab1f3d0e914bc949d12bce1ef5ff71cda632e33ac79943313cbb600"
                ]
            }
        },
        "1.51.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4bdfad8a0e45fc5a69f32c5710b61ddd654c81af50bd20b683bdbe683d91e63d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "af8351d90ed29a43830412fb51c930d34d2f32ffaac3b1bc655c6efd1c1f2b90",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4bdfad8a0e45fc5a69f32c5710b61ddd654c81af50bd20b683bdbe683d91e63d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T14:20:20.790303104Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:13.722986692Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T14:20:19.862947732Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:19.978736155Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:20.790303104Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:e22bd83b67912b6c08e848e8a9fabececb52f07aae7bf5f70643389af57dced5",
                    "sha256:cc053b7b92b324d35d7ea077bb5c1a77af32f44dedbc6116473a5c8869c53af1"
                ]
            }
        },
        "1.51.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:37b611a87fbb130e5815b651fed9ce52ff1fc2bea0fc4426016fe84002e33fc5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7d07d709e4e9c69c5fada9c280defedb18558eedfa492089ee4aebc8ad3e3f6f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:37b611a87fbb130e5815b651fed9ce52ff1fc2bea0fc4426016fe84002e33fc5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T15:15:18.120857147Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:42.697460572Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0eb7f0555d03ff4f0755bba2c3d133e68737888f41390c17710f64b70c8e662a in / "
                },
                {
                    "created": "2022-08-02T01:30:42.983551684Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.336448544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.482652117Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:25.616021579Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:10.7358552Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T15:15:17.197162581Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:17.305934982Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:18.120857147Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e722d396f503c712107acad2a081b07e33e73d6286c43f58234f69345a216918",
                    "sha256:b0c3f2d34fc9060b4f51ecb2ea75c70dab49c7fd13d0828c7f3aa6f5e87c1171",
                    "sha256:f6046c9a8f734a28379c1deb149afce86b1de3ed387aa01b53c4085389094295"
                ]
            }
        },
        "1.51.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:783d0dd2132792fe9a5b3429b2de228c76ca8b354e1820bc6374444f535d9467",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "22e4937e686b0dbd55549db178ed342d1f0085c6124785f4d7918c858db3a101",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:783d0dd2132792fe9a5b3429b2de228c76ca8b354e1820bc6374444f535d9467",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:16:49.005800655Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-10-25T01:53:28.076432005Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc5d658c47ede58827812b75a311353be776e41e2dd339b8906839527c9b5247 in / "
                },
                {
                    "created": "2022-10-25T01:53:28.417730137Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.596880627Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.722252092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.840253977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:41.718899613Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:16:48.096194931Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:48.213038829Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:49.005800655Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:69f57fbceb1b420d7e4697e0f6514887b0805ee0059bea7d51e0a832962e74bf",
                    "sha256:bc14fca48e2b074b42d47873c623b2b63ded9f7e3ac9313b181c63dd3360cc25",
                    "sha256:8506f71a80899d9cc6d75bea18c558b774c8efa0bee21051fb49037ea754af4c"
                ]
            }
        },
        "1.52.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:182557465d97f45cbc292adba368b1a50ad8a0b9f5c13175c9d5833ec71024ab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "90bf8df7b5c6c62e7f5f6bbbd6c5635052dc57b9c27f4468393566b7acef074e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.52.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:182557465d97f45cbc292adba368b1a50ad8a0b9f5c13175c9d5833ec71024ab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:51:36.833594948Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-10-25T01:53:28.076432005Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc5d658c47ede58827812b75a311353be776e41e2dd339b8906839527c9b5247 in / "
                },
                {
                    "created": "2022-10-25T01:53:28.417730137Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.596880627Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.722252092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.840253977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:29.564186687Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:51:35.873281342Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:35.994911442Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:36.833594948Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:69f57fbceb1b420d7e4697e0f6514887b0805ee0059bea7d51e0a832962e74bf",
                    "sha256:6fbae0eceeaf318fb8aa3ce0dbd6fb4c6bf3a4b7f8a3610d196ef935900db147",
                    "sha256:ae86ce4eeffb4ff394e77122ed9ef870e60715a6a871f1442b043e232e866de0"
                ]
            }
        },
        "1.53.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:43fd4edb46434577c2eae15e21ad02f1d3c0ba810bb1650df03e2e06bdb49188",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fc1477481bbfb7b1cb0926249f91c8c986e8c0d07965da19acaa965a6d0cbff6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.53.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:43fd4edb46434577c2eae15e21ad02f1d3c0ba810bb1650df03e2e06bdb49188",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T16:27:45.759215325Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-10-25T01:53:28.076432005Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fc5d658c47ede58827812b75a311353be776e41e2dd339b8906839527c9b5247 in / "
                },
                {
                    "created": "2022-10-25T01:53:28.417730137Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.596880627Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.722252092Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:01.840253977Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:27:38.653340209Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T16:27:44.782875875Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:27:44.907780824Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:27:45.759215325Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:69f57fbceb1b420d7e4697e0f6514887b0805ee0059bea7d51e0a832962e74bf",
                    "sha256:6b3ef8a408eb876bab5bbbbfb1c6d84bd82d23fe151a0321403c6f69b5ab2b99",
                    "sha256:37d1dda9eca613364190c27323e25e9501bca6247554dc5f81fde8647500cb23"
                ]
            }
        },
        "1.54.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:990c748de4f1bb5ffa9747bd95abc7aefcee92171addff0d8ac4c32d90d5f04f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9ff991a3c12755cb3128c40d60a28051895456e8bd401a9bd3846b3b99e75fe8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.54.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:990c748de4f1bb5ffa9747bd95abc7aefcee92171addff0d8ac4c32d90d5f04f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:08:16.696992128Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-01-02T18:48:55.82573627Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:132da97f77ddc534ddb931a461d83ac2aa601dd4481360c874eac33b6c3470d9 in / "
                },
                {
                    "created": "2023-01-02T18:48:56.081327405Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.064789851Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.204072551Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.343663465Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:09.483525076Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:08:15.773570097Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:15.891578168Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:16.696992128Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:101b05ef38e1a76d27ec117baf9151eb7fbc4e1bde60065b615633d1af65a547",
                    "sha256:be4523ebc4011c3c6733bc927f5e1961fc573a1cde8306422513c0ef4541e270",
                    "sha256:e80725e8be6a584d2ab0a0982b56223b02f06a90e0f426de8743581e6ad13079"
                ]
            }
        },
        "1.55.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7abb2e6af11085a54f3f6eacefefb78e9d553e0eb0f443f8282beb34d08def0c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b79b26df4d9afe508b877a55b7f41973c434cde28a9b886258accd0b69acab15",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.55.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7abb2e6af11085a54f3f6eacefefb78e9d553e0eb0f443f8282beb34d08def0c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:43:01.848246717Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-01-02T18:48:55.82573627Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:132da97f77ddc534ddb931a461d83ac2aa601dd4481360c874eac33b6c3470d9 in / "
                },
                {
                    "created": "2023-01-02T18:48:56.081327405Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.064789851Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.204072551Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.343663465Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:42:54.590759703Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:43:00.92532925Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:43:01.051619022Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:43:01.848246717Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:101b05ef38e1a76d27ec117baf9151eb7fbc4e1bde60065b615633d1af65a547",
                    "sha256:229ed2c7283ef81edcfef77589dffef6a8fecc707300328e0cbef83a567df76e",
                    "sha256:24ac4b96d73a943105a68a8280d5b6cd5474a4995dc5070c43e5e217548394cf"
                ]
            }
        },
        "1.56.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e1c716825f92421c80fb65a5947d29414e6faccda887e836f62870c5d9b210cf",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a871779ba607695ec8ff2f2cb322922c20de6bf658fe3f7a0b9d5b2f36f5fea9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.56.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e1c716825f92421c80fb65a5947d29414e6faccda887e836f62870c5d9b210cf",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T08:17:17.073315927Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-01-02T18:48:55.82573627Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:132da97f77ddc534ddb931a461d83ac2aa601dd4481360c874eac33b6c3470d9 in / "
                },
                {
                    "created": "2023-01-02T18:48:56.081327405Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.064789851Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.204072551Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.343663465Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:09.720629664Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T08:17:16.098198739Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:16.22342101Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:17.073315927Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:101b05ef38e1a76d27ec117baf9151eb7fbc4e1bde60065b615633d1af65a547",
                    "sha256:1e078b186730456153f2b079ec21b6d1fa30bf1d3875de6b6511894f18d8d637",
                    "sha256:a07de556557c752aef1d61fe83c76912f585a8491490f1f6332d88df842f5af6"
                ]
            }
        },
        "1.57.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c5b0a43fa216b3a57bbe571fad5a879fe225e307c6fdbe57556e284fd525b3bd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "355bdee8a4b1eaba15facf47951121ac4a9ca0b55ab67ab51dd8f60509540074",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.57.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c5b0a43fa216b3a57bbe571fad5a879fe225e307c6fdbe57556e284fd525b3bd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T09:07:30.004068228Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-01-02T18:48:55.82573627Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:132da97f77ddc534ddb931a461d83ac2aa601dd4481360c874eac33b6c3470d9 in / "
                },
                {
                    "created": "2023-01-02T18:48:56.081327405Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.064789851Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.204072551Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:03:57.343663465Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:28.030046307Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T09:07:29.004568749Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:29.130257902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:30.004068228Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:101b05ef38e1a76d27ec117baf9151eb7fbc4e1bde60065b615633d1af65a547",
                    "sha256:6d832715ce040c6138f8ac5bd84a55f8ed2653981620cef99b5bbb91ce384fd5",
                    "sha256:ced5255fbe82526863a18fb66b8e678c1075aafc5aa7f263d6515a70b7fee55b"
                ]
            }
        },
        "1.58.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:f8a530684704d0e6d366d5f0529d2ee4d90309918647c7d10b137389b2dd51b3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "container": "8549a08d54753021205e99f3e18c86fb996bfd3f7548b1ade7cb0800c487da4d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.58.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f8a530684704d0e6d366d5f0529d2ee4d90309918647c7d10b137389b2dd51b3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2023-02-02T10:44:58.112149649Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-01-26T10:03:03.123412846Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:03.179445667Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:03.238578224Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:03.303267113Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:04.9904471Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:365c129e10f7ef1594e8086543b45f524313e36dd6a25b68f4da542a09491f04 in / "
                },
                {
                    "created": "2023-01-26T10:03:05.221824871Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:16.087820999Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:16.229203168Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:16.36599275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:44:50.791584944Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-02T10:44:57.133127508Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:44:57.268465617Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:44:58.112149649Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:475a54c2a93de61ab1a000184b41b5c5370eef3842486f6c185cd9a001ff1a92",
                    "sha256:22aa992f8a4dbde7e0c0c36a714119991bcd4d1f61447fc0827dd8f52ca1e1ae",
                    "sha256:c7ff9860a7325d2412cee2a031d9dfe80466dbf2059e0f6fdb10a99a5074f0b7"
                ]
            }
        },
        "1.59.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-06-01T15:53:05.42454525Z",
            "history": [
                {
                    "created": "2023-05-12T09:41:51.317900871Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:51.394927292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:51.458593823Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:51.516865181Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:52.955574795Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47682dd3869ca8e57ceb15f69a6ac7c9048d4d42c7a99a976e597cf072423c12 in / "
                },
                {
                    "created": "2023-05-12T09:41:53.213402954Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:04.826424597Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:04.826424597Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:04.826424597Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:04.826424597Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:04.826424597Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:04.866082296Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:05.42454525Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09d5e92ce69e5b398823f217f748114698689cc296331870e9ddac8bdf5e9b65",
                    "sha256:0fd465270488f4e15b9e11bdf48e2bafe99b624754b6e2faf4d7ff61ea5af7b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8831488bf22698053f620f8d8eaf7a7a854f4a5b1d473e62513a5f828718c8d6"
                ]
            }
        },
        "1.60.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-06-01T16:27:39.937257638Z",
            "history": [
                {
                    "created": "2023-05-12T09:41:51.317900871Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:51.394927292Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:51.458593823Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:51.516865181Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-12T09:41:52.955574795Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47682dd3869ca8e57ceb15f69a6ac7c9048d4d42c7a99a976e597cf072423c12 in / "
                },
                {
                    "created": "2023-05-12T09:41:53.213402954Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:39.352154296Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:39.352154296Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:39.352154296Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:39.352154296Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:27:39.352154296Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:39.376643931Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:27:39.937257638Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:09d5e92ce69e5b398823f217f748114698689cc296331870e9ddac8bdf5e9b65",
                    "sha256:65191ea2c896de99784099b1c663f7ac17cb4175e4e7b8ab4260b09056b10e05",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc90b5fcc5c9bf5561d327e8c8859844bd18f55caea45460b43f6bd4d6c1b268"
                ]
            }
        },
        "1.60.1": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-08-03T11:50:43.173658582Z",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:50:42.422928375Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:50:42.422928375Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:50:42.422928375Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:50:42.422928375Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:50:42.422928375Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:50:42.490474299Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:50:43.173658582Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:16e43a630fce8694f7531577e790b809c75b6ec3012723d159f360684fae8389",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8ad58cb44b547fb84ff2ce1714ae492b00efd340282497294b91ac9e45c091c0"
                ]
            }
        },
        "1.60.2": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-28T10:39:46.783827196Z",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:46.210774754Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:46.210774754Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:46.210774754Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:46.210774754Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:39:46.210774754Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:46.240347834Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:39:46.783827196Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:d3dff569850ea464f3f9ab54417dc252b42ae17a56245fe7f12cf3148a7d0550",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4530f59f47ac9a3c57df9044193182fae54f4cdb2ba1a49db6e11dc0f55b42e3"
                ]
            }
        },
        "1.61.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-28T11:38:34.129680937Z",
            "history": [
                {
                    "created": "2023-05-30T09:32:07.458866408Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.512060632Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.566627883Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:07.623484379Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-30T09:32:09.125568601Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3c74e7e08cbf9a87694ce6fa541af617599680fa54d9e48556fc0fbc120b4a83 in / "
                },
                {
                    "created": "2023-05-30T09:32:09.432301537Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T11:38:33.520971212Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T11:38:33.520971212Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T11:38:33.520971212Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T11:38:33.520971212Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T11:38:33.520971212Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T11:38:33.547627728Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T11:38:34.129680937Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:548a79621a426b4eb077c926eabac5a8620c454fb230640253e1b44dc7dd7562",
                    "sha256:928dd7afc956f819b5c57d6b66251f1f882071259e7bcb87f08437ea87505392",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:794abbf29ece687293c4a3f88a57b20c5df9da1001b7a37a56dbce3898e5fd78"
                ]
            }
        },
        "1.9.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab723a32abc44f4429c799979f52059cfe808363768275dfa780c1f3dc0e23a8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "03af7fe51f4f3b649f992d5f7f3f1e26a4ff5ddcf4d83ca56133b55c90640512",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab723a32abc44f4429c799979f52059cfe808363768275dfa780c1f3dc0e23a8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-04T16:07:41.226081502Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:20:39.739838469Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:39e5bc157a8be63bbb36a142e18b644b0cfff07a8a02b42f7d0c4ee4ba75a5bc in / "
                },
                {
                    "created": "2018-11-19T21:20:40.571619714Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:20:41.293060457Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:20:42.002883522Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:20:42.235528208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T16:02:14.490056746Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T16:02:14.645933806Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T16:07:34.76274547Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.21p2-3ubuntu1        binutils=2.*        wget=1.19.4-1ubuntu2.1        git=1:2.*        vim=2:8.0.1453-1ubuntu1        libc6-dev-i386=2.27-3ubuntu1        linux-libc-dev:i386=4.*        g++-8-multilib        libgmp-dev=2:6.1.2+dfsg-2        libmpfr-dev=4.0.1-1        libmpc-dev=1.1.0-1        libc6-dev=2.27-3ubuntu1        nasm=2.13.02-0.1        dh-autoreconf=17        valgrind=1:3.13.0-2ubuntu2        ninja-build=1.8.2-1        libffi-dev=3.2.1-8        libssl-dev=1.*        pkg-config=0.29.1-0ubuntu2        subversion=1.9.7-4ubuntu1        zlib1g-dev=1:1.2.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=7.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz     && cp -fR cmake-3.12.1-Linux-x86_64/* /usr     && rm -rf cmake-3.12.1-Linux-x86_64     && rm cmake-3.12.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan     && chown -R conan:1001 /opt/pyenv     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-04T16:07:40.337751567Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T16:07:40.525851062Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T16:07:41.226081502Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bc7f4b25d0ae3524466891c41cefc7c6833c533e00ba80f8063c68da9a8b65fe",
                    "sha256:a768c3f3878e96565d2bf0dcf90508261862847b2e7b8fc804a0770c07f0d5d5",
                    "sha256:ca2991e4676cba899ad9bc6ad3a044cd0816915f9e97a6f2e67b6accbc779ba5",
                    "sha256:b9b7103af585bd8ae9130de947817be7ce76092aa19cf6d2f9d5290440c645eb",
                    "sha256:96208c11e5bef7c27cdef0eb2e3bac66049e1f4ea7475f49ede19515264dd22c",
                    "sha256:c82f2979f3a58130a125f8b4e1bbc272870443c3ddc96e3bffaca5488ca1deda"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:f35bfe07372d42b627b91f4135a2913c03efd6a6c624ef7808165dcaf149f31f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "container": "182a6b37451ad72067b7cbae559955d7e7a63c9a98b19f943bd9788cb3f16102",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.59.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f35bfe07372d42b627b91f4135a2913c03efd6a6c624ef7808165dcaf149f31f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "18.04"
                }
            },
            "created": "2023-02-16T16:56:32.763053059Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-01-26T10:03:03.123412846Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:03.179445667Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:03.238578224Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:03.303267113Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=18.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-26T10:03:04.9904471Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:365c129e10f7ef1594e8086543b45f524313e36dd6a25b68f4da542a09491f04 in / "
                },
                {
                    "created": "2023-01-26T10:03:05.221824871Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:16.087820999Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:16.229203168Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:16.36599275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:25.233121257Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        linux-libc-dev:i386        g++-8-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-8 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-8 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-16T16:56:31.811854029Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:31.92893765Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:32.763053059Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:475a54c2a93de61ab1a000184b41b5c5370eef3842486f6c185cd9a001ff1a92",
                    "sha256:9e7bf83e8b61f5aeaab59e72fc57b032400a54f64389a64df6f039d6bd023e54",
                    "sha256:c9215d14de89acf90856e3866133cbdb7c87f17f280328e52a554670ba7c9dc8"
                ]
            }
        }
    }
}