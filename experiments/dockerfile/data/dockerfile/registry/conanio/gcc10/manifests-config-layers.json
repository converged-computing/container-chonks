{
    "manifests": {
        "1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8048,
                "digest": "sha256:efa4fa173fd8b4f0dde9c3c36179403940be171819fb5b1e36466e3483cb495b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556247,
                    "digest": "sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32304,
                    "digest": "sha256:fc878cd0a91c7bece56f668b2c79a19d94dd5471dae41fe5a7e14b4ae65251f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:6154df8ff9882934dc5bf265b8b85a3aeadba06387447ffa440f7af7f32b0e1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:fee5db0ff82f7aa5ace63497df4802bbadf8f2779ed3e1858605b791dc449425"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216190817,
                    "digest": "sha256:082af94d212636be3ebaf8832efc62b530cefce29dbd9a8e20096791e7f7f846"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:91c25001bd7549be36ce48d25676a98ec332f47e4bc93b45ffb58b046266c1b8"
                }
            ]
        },
        "1.25.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8048,
                "digest": "sha256:83834721aae20a80efdeaa1a820e7e90fbdb397a5d8bb3fee8efe80a46034010"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556247,
                    "digest": "sha256:d51af753c3d3a984351448ec0f85ddafc580680fd6dfce9f4b09fdb367ee1e3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32304,
                    "digest": "sha256:fc878cd0a91c7bece56f668b2c79a19d94dd5471dae41fe5a7e14b4ae65251f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:6154df8ff9882934dc5bf265b8b85a3aeadba06387447ffa440f7af7f32b0e1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:fee5db0ff82f7aa5ace63497df4802bbadf8f2779ed3e1858605b791dc449425"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216192616,
                    "digest": "sha256:696358328033849cf076a5f13d577b19e9840be9acac882294b93c7bc579e846"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:d2b0e613444a40b3b4c3a0ef24c50ac867e7c847f06b1aa7161c20dbe7c7868f"
                }
            ]
        },
        "1.26.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8048,
                "digest": "sha256:71ba99c1f864c1bd81b518f1923239425770d5537c98e2e701c786937ab83b95"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556492,
                    "digest": "sha256:a4a2a29f9ba48efd3d2075f395538b2eec56fb1bedfb7aecf5e54174446f9e2a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32317,
                    "digest": "sha256:127c9761dcbaa288abc58fc56437c2f2ffbe611b9f7f30e0b5b43cd348bb2094"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:d13bf203e905463e64d89b14509aafa983fb8baf7c1931fe0a65652aeb6c838f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:4039240d2e0b4bcb42ccbce75bc54570e471ad81457478de35fbeef63536e9c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216227405,
                    "digest": "sha256:ccf4e8c69309083e03a20467fe73b0d55a97bb256aa5b5b4d305991da21e2489"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:85d497419e1d17df7c54e4891aff0434fb43f1c566d96670c02a476a545f160d"
                }
            ]
        },
        "1.27.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8050,
                "digest": "sha256:4924945e8f9a0b900f25af57f8306941f0853f5579bf02a3188c1c8b6bc3b6c4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28556756,
                    "digest": "sha256:692c352adcf2821d6988021248da6b276cb738808f69dcc7bbb74a9c952146f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32327,
                    "digest": "sha256:97058a342707e39028c2597a4306fd3b1a2ebaf5423f8e514428c73fa508960c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:2821b8e766f41f4f148dc2d378c41d60f3d2cbe6f03b2585dd5653c3873740ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:4e643cc37772c094642f3168c56d1fcbcc9a07ecf72dbb5afdc35baf57e8bc29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216232222,
                    "digest": "sha256:9b5ae8dd26857cd2ef02045864e7b71c41fd227c217f521f15121a9492ccb200"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1953,
                    "digest": "sha256:445f2f6476e5761a79449ff0a1ffdf93063ad1f08ec66aa466e9ea26e3f52349"
                }
            ]
        },
        "1.28.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8050,
                "digest": "sha256:57dc27a08bf0189ece9c93d79542bfc3b6d77f3de0216ce2135b36e31e8581bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28557306,
                    "digest": "sha256:3ff22d22a8554f746f90a78b501da38d56a46f2ddba0dfec8b260aebaa61b3ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32320,
                    "digest": "sha256:e7cb79d19722c46b9c0829811d7a5a0ae82c8771ab7f2f68e7d3a3ed6bd5d5d0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:323d0d660b6a7da8df08a01dbc7250f38cfa2161db00c7c27c0b20be07a8236a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b7f616834fd07522cbfd33f0dfa848903599320b5c7191b59fe9aa7562f956a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216264276,
                    "digest": "sha256:bde6500d52fe22579f912524af398d563ed59325f35d4fe919c21eb2d78d87cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:d8dd53f1a31598542e2e993476ef3fb0763bd6b2048403d5e4753696452acf36"
                }
            ]
        },
        "1.29.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7995,
                "digest": "sha256:eec1b8e0e5830162d5f036efe5a3885d651995bb2a960e8b4d39fd1ae8670de1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28557166,
                    "digest": "sha256:e6ca3592b14484be6a9719617680e0c810e0107d89c437162c75d2401637c72c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 839,
                    "digest": "sha256:534a5505201da9ddb334b5b2fcb3cec45fcafccd8e91b93ad4852e1a1bb318c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:990916bd23bbbf9c30d202dad557e813562d028f3076bf57904830c69d4cde83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 216332751,
                    "digest": "sha256:e5497eb481665a9f8e83eca498e65aa0eaed1c94a684fb7c1e4e076226a515d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:fdce0ba1f573d285309384cb4829c6549851e7986bf94cf621f8fa51f8bff863"
                }
            ]
        },
        "1.29.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7994,
                "digest": "sha256:2fd9e8b10e43447843e96a63ec0c7a60331147fe76c5213d4fad8dae0878969a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28557166,
                    "digest": "sha256:e6ca3592b14484be6a9719617680e0c810e0107d89c437162c75d2401637c72c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 839,
                    "digest": "sha256:534a5505201da9ddb334b5b2fcb3cec45fcafccd8e91b93ad4852e1a1bb318c1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:990916bd23bbbf9c30d202dad557e813562d028f3076bf57904830c69d4cde83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 221456108,
                    "digest": "sha256:74f02881c49cf601b52d26fe8539933c0757b915a3879abc234a5d4f73280f1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:808818c0c3b32a3a5d3405dbe15a4faaf1bb87bdb2dfd1c9a1ee72b465efd291"
                }
            ]
        },
        "1.30.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7993,
                "digest": "sha256:4567b97e91133d73fc472312172706a1139f4e2ca427ed668cfe7768b34cd3a3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28558050,
                    "digest": "sha256:d72e567cc804d0b637182ba23f8b9ffe101e753a39bf52cd4db6b89eb089f13b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:0f3630e5ff08d73b6ec0e22736a5c8d2d666e7b568c16f6a4ffadf8c21b9b1ad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:b6a83d81d1f4f942d37e1f17195d9c519969ed3040fc3e444740b884e44dec33"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 217191923,
                    "digest": "sha256:98aa5e9d216ce6ec74a848defa3b53ebf2b9273fcf497695b16dfab59e6d3bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:d5fb6c99bb7fe83a1019943a2ae26c69fa1b69d7a9e05e93b057145150d32064"
                }
            ]
        },
        "1.31.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7994,
                "digest": "sha256:785afa5169be0d5b87e0b634698a07bdb6471b9b1f56debaefe2cf58c0ed83e5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28558714,
                    "digest": "sha256:6a5697faee43339ef8e33e3839060252392ad99325a48f7c9d7e93c22db4d4cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:ba13d3bc422b493440f97a8f148d245e1999cb616cb05876edc3ef29e79852f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:a254829d9e55168306fd80a49e02eb015551facee9c444d9dce3b26d19238b82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 218626406,
                    "digest": "sha256:702f8795e8ff708a1862583cf2cc36c6710e676b77593276b367c4404ac44598"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:6be87986e901eafffa90c0f8fd4462403301e62772e4bb860d4402e1474c5924"
                }
            ]
        },
        "1.32.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7855,
                "digest": "sha256:e3eac6fd7773ed49df11b0518690a8dbd4b2618731f36bf322b06d2303bc1759"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28563271,
                    "digest": "sha256:da7391352a9bb76b292a568c066aa4c3cbae8d494e6a3c68e3c596d34f7c75f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:14428a6d4bcdba49a64127900a0691fb00a3f329aced25eb77e3b65646638f8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:2c2d948710f21ad82dce71743b1654b45acb5c059cf5c19da491582cef6f2601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211224206,
                    "digest": "sha256:f7926e987eebe8f382d2669ac9fe41a6e887df73811a77d57cc1e03abc9b469c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:2ae6daf9e68c1f2c075a8b6fbd661ff5447941f648ed42cbb6dfe9582b299404"
                }
            ]
        },
        "1.33.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8096,
                "digest": "sha256:e8ed0b08b6c7e7562f654b8deb47e82765def59cf16207c47a7c148e424315e1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28563271,
                    "digest": "sha256:da7391352a9bb76b292a568c066aa4c3cbae8d494e6a3c68e3c596d34f7c75f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:14428a6d4bcdba49a64127900a0691fb00a3f329aced25eb77e3b65646638f8d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:2c2d948710f21ad82dce71743b1654b45acb5c059cf5c19da491582cef6f2601"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220004801,
                    "digest": "sha256:11708f7b909ab78a2ec499168c267ee267eb9658bfe88901e82c079ac88a712d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:9c4ee6b7788e58746b37145fa3069eb4e8acdacdba6b57477eedb1f4c33bba6f"
                }
            ]
        },
        "1.33.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8093,
                "digest": "sha256:25982560f13bba00c27a6bb81e784bc8058d0025c4ebc321507adb5eec1549e9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565893,
                    "digest": "sha256:83ee3a23efb7c75849515a6d46551c608b255d8402a4d3753752b88e0dc188fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:db98fc6f11f08950985a203e07755c3262c680d00084f601e7304b768c83b3b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f611acd52c6cad803b06b5ba932e4aabd0f2d0d5a4d050c81de2832fcb781274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225255871,
                    "digest": "sha256:e67ba439363354688b430c8d9607d3bdc55ef23ac1f339ed30e89a70a6ad5ab5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:2358edce8b907a555102d34abd9426a501a496eea64a63e08deb82647f5556af"
                }
            ]
        },
        "1.34.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8093,
                "digest": "sha256:73ccc0ce1ca3285e15e81c09551273158ea4904f145ec578320db4e3afefffe2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565893,
                    "digest": "sha256:83ee3a23efb7c75849515a6d46551c608b255d8402a4d3753752b88e0dc188fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 843,
                    "digest": "sha256:db98fc6f11f08950985a203e07755c3262c680d00084f601e7304b768c83b3b1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:f611acd52c6cad803b06b5ba932e4aabd0f2d0d5a4d050c81de2832fcb781274"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 225316045,
                    "digest": "sha256:5d9ba24ab9b52d591cdd6b3278e71f7caf839959f05302ebd4e2440f6dba13c9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:b5fc5d6e51b30afd6f56d6fb91a375eb647b147a16823eb216858420218e5d83"
                }
            ]
        },
        "1.35.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8095,
                "digest": "sha256:abfd9cc9ca8798ab75360ba71a19a67b7dcfcdfa51f42d79e88e1231c985ff04"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28569016,
                    "digest": "sha256:a70d879fa5984474288d52009479054b8bb2993de2a1859f43b5480600cecb24"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:c4394a92d1f8760cf7d17fee0bcee732c94c5b858dd8d19c7ff02beecf3b4e83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:10e6159c56c084c858f5de2416454ac0a49ddda47b764e4379c5d5a147c9bf5f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220209819,
                    "digest": "sha256:6231b698e012e01586115407203a0a293e985a0e60659073be0fe80a1014e306"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:f04c3381892480dc10e2f1a9b1e74bf5a937823ef20ad5f66756343a1a9f2dff"
                }
            ]
        },
        "1.35.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8324,
                "digest": "sha256:fb2b12db4243c6c1ea961bf00e8d47f5c2f30a67a672f4050b07d3c0f65f654d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220236727,
                    "digest": "sha256:d05f7bf16a10623571ee723b2c77851e3e9946550f0ece9369cf8fbabe29c8cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:433ea6540f628715c88df4cc21093fc3384767e31a8f3ffd46912264a96041aa"
                }
            ]
        },
        "1.36.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8324,
                "digest": "sha256:0e2bb18205d5fa403c33700c035bf263a9c1cabf751363165fdfa10fc680645f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220245603,
                    "digest": "sha256:e0fb3e668699a563b953ba0f99b7031cc342b2922da2499c6ca6f6e0b264afd9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1945,
                    "digest": "sha256:3bcfac2528cc9e71ec6e2aff5f101b64c39994031b90304ade02358b3305a5aa"
                }
            ]
        },
        "1.37.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8324,
                "digest": "sha256:b100b92021c4277043ba9829b477516db1f0a55958323ecb7958decf2ee79e4d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220232281,
                    "digest": "sha256:6424ef0f0d99ffa5334ef72e4082eaf812a7f2327a63690dedce6c26f1ef2a56"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:597b1bc1f7d3accf2d3ea6786ff6b6b694d895ebcf88f4942861cb7a7b081c4d"
                }
            ]
        },
        "1.37.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8321,
                "digest": "sha256:c6ea41187ab43ab1ba1ebcb2f26e03655f267f948f400d86989f99eb2a5cdd39"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28539626,
                    "digest": "sha256:345e3491a907bb7c6f1bdddcf4a94284b8b6ddd77eb7d93f09432b17b20f2bbe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:57671312ef6fdbecf340e5fed0fb0863350cd806c92b1fdd7978adbd02afc5c3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 187,
                    "digest": "sha256:5e9250ddb7d0fa6d13302c7c3e6a0aa40390e42424caed1e5289077ee4054709"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220259345,
                    "digest": "sha256:82fef4ed44a387a3e06a2386a90e6073c6ed307f4ff142ea08750b8185fd64f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:afe184f2bbaa2a63fac172e42f46dbf9233e0b2e5f5561642ac8c4931b67393c"
                }
            ]
        },
        "1.37.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6384,
                "digest": "sha256:922feed5e657ab585ca7205621cc829272d1529fddb37833b64d1de61e93c5f3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28553692,
                    "digest": "sha256:c549ccf8d472c3bce9ce02e49c62b8f6cbc736ea2b8ba812a1ae9390c69d0b71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230152534,
                    "digest": "sha256:d0cfff0381ac0346f64f015094e41ab5e25159935eb20448c2ad5e87d11e933b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1953,
                    "digest": "sha256:2e1907b1c085000e952b80e0d828ea6273df40385600cac0b36ce4a14a7681aa"
                }
            ]
        },
        "1.38.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6386,
                "digest": "sha256:e824d4668fb1717059976166a59b86e8f58310c7da2fa7487603f7c8f2a3394e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28553692,
                    "digest": "sha256:c549ccf8d472c3bce9ce02e49c62b8f6cbc736ea2b8ba812a1ae9390c69d0b71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230147486,
                    "digest": "sha256:256d6b2eed859e902e401683803caa7a9f7a6e627bb552629788a3038e982c5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:567cbed2793be9a641ff910ec6577289024730ba616a9fe5c74447331c984afd"
                }
            ]
        },
        "1.39.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6386,
                "digest": "sha256:a1be33219b90a154145600d41221a77224dce350d354d94b9eead053fddd1845"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567944,
                    "digest": "sha256:16ec32c2132b43494832a05f2b02f7a822479f8250c173d0ab27b3de78b2f058"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229299023,
                    "digest": "sha256:951a4b0c63147ff7da9084de7726c6b1efbab80bb132abe76e24368520031566"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:3c3a008573def7b3fc9d3171cf68f13b50d7fc6ecb41c36c273a7e966b69fe58"
                }
            ]
        },
        "1.40.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6396,
                "digest": "sha256:1d42623d077afd9af06a7a3ee7691205c08b6552461ab1d7a06f068490e61169"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28570074,
                    "digest": "sha256:35807b77a593c1147d13dc926a91dcc3015616ff7307cc30442c5a8e07546283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229214386,
                    "digest": "sha256:133ad063741836f68688592911ff2669bb9ea764c9f63e686bbb56e1c26ed2cd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:b1a59176321233ce259f12dc517713faa43eb3bfbb0e81b4fcf5017b6fe276d2"
                }
            ]
        },
        "1.40.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6395,
                "digest": "sha256:80f11069ecb4f9ee177134580d273ab1a4c65e008f50b6bbd2be7ebc0c653b91"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28570074,
                    "digest": "sha256:35807b77a593c1147d13dc926a91dcc3015616ff7307cc30442c5a8e07546283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229248114,
                    "digest": "sha256:eaad31929111b6116fcb14d4b70530f070b6bae0e3c3629a9e21452cf9dab8ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:35291966db6b6c85afb8c86a236f492c71f12d4c0da3e7c24b27fd5df54c3747"
                }
            ]
        },
        "1.40.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6395,
                "digest": "sha256:2edb7eb8b894bb08d36ddd59a1f30ffc8644536f51362b4a744747ff92aef3f0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28570074,
                    "digest": "sha256:35807b77a593c1147d13dc926a91dcc3015616ff7307cc30442c5a8e07546283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229249283,
                    "digest": "sha256:c5c3f838990dd458a8c24297a627f95676eee338ff66f684b1edcb881d71a58b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:e8362c5e8e07bb66860d3307a27f74986423c349ef7e71e3020443a4eea2d4eb"
                }
            ]
        },
        "1.40.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6395,
                "digest": "sha256:9f6fdb88da4d22923129353af0d5ab58506fb6af8aa3051457e4ec93242eb555"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28568914,
                    "digest": "sha256:f3ef4ff62e0da0ef761ec1c8a578f3035bef51043e53ae1b13a20b3e03726d17"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229254818,
                    "digest": "sha256:b9202ce6966bb392610664a2e8e818e41dcfa109826fb107ed9d8437fe1e447c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:616ed1cd7ee06d9d649d8f8d60268b31dbbb97eb8f09a5c7564e4c37d008a38a"
                }
            ]
        },
        "1.40.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6396,
                "digest": "sha256:62ac355f49f4686f258972884ac327ad6a972e488f4e3c1b61d5850dffc994a4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229447287,
                    "digest": "sha256:128d6c76278913219f981c75b29be00353310309c7416574658a06c688cd1a5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:3a152d808f2acb78dc6978d99d5f3777909ab75b6723abff9160f1f69b1e206b"
                }
            ]
        },
        "1.41.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6399,
                "digest": "sha256:051085af2ef378f9d421fc5adabbf06120de3b8ef65b23597527b27ca57710f7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229036128,
                    "digest": "sha256:6303daa20572a98d4d2792a8e01ef4e7d68db3336a6f84f4b5a7682358618dcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:cba28d6035a5aed897290a8728acb551dacb1f567c6a8cb9ba7f998df384cf7b"
                }
            ]
        },
        "1.42.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6399,
                "digest": "sha256:e784bda675c3c810f396dcb569ce0bef32da7a5f6804eab5228f4d6032a6dfba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229050125,
                    "digest": "sha256:d07be9c85a5339c50de89f17cbe2c8eb76811abab27fca55e8fa9e212d38fdfe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1948,
                    "digest": "sha256:b0eb87738028510c970405075879df3ed216d172f72072d987d1bc771c018559"
                }
            ]
        },
        "1.42.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6398,
                "digest": "sha256:329f19c791b8a4307a44aa6530383df15c3b2cb3fbdc488c8a773e63e96ae836"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229065953,
                    "digest": "sha256:11f91ff240abc03d5f00bc5940f1fc949e407283aed1a2e842aace95458c41fa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:52c5c61caeef4e5137b8ecc07e53c7ccb0b6f5d45796ecc24b0ff50f1a5af9d2"
                }
            ]
        },
        "1.42.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6398,
                "digest": "sha256:533bdfadd216a69c41d313d4074d2495251acd472a907d934666edaef73e1ba7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229074686,
                    "digest": "sha256:94f4f333a72a74aa544887ace1a954422eea3fea4822b9f929cf395c6dc46edf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:cc743568bb3783043410c6718215338aeb03fc8c848aca46a2fe55c77ebd6b87"
                }
            ]
        },
        "1.43.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6399,
                "digest": "sha256:eef8fa71f3ba81e910612815c02379d6948c567424b0e405d8c63d89686a58c5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229085540,
                    "digest": "sha256:75547338adad8f5d03eec02777e0aec48a054c07e95acc143b5216cd43fdc168"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:4afb70e1e5c2b10e52e8e014f9235641ec5a591f7180e37368eea6fc9f5ce922"
                }
            ]
        },
        "1.43.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6397,
                "digest": "sha256:7d49d0bc9bd2e9ffe9f3d8e3730fc896dab7a9ef7a2807cbd261b7377e6c72fe"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28567101,
                    "digest": "sha256:7b1a6ab2e44dbac178598dabe7cff59bd67233dba0b27e4fbd1f9d4b3c877a54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229116852,
                    "digest": "sha256:7d04e3e840e65757874843ebecaed779149c968b4522ac50aea4d534415b2c10"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:0ab58c465ae7c05e1424cb27f21c06d7ce69f2c7878200eb206794549f751cbe"
                }
            ]
        },
        "1.43.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6706,
                "digest": "sha256:1c7a0d6570b3cdae17781e1b0e4e9f0b4ac4ad36629e8a3aec4a098486a1ba78"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566425,
                    "digest": "sha256:ea362f368469f909a95f9a6e54ebe0121ce0a8e3c30583dd9c5fb35b14544dec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 246895112,
                    "digest": "sha256:a265b7420dca4df0ca752036434dd19a45faf045f7250425361b59bd4b1ba34f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:6a2f48b0a383109a6503019d5fb067a051767097570e2767a010162383d73089"
                }
            ]
        },
        "1.44.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6706,
                "digest": "sha256:15a7fece09c27ec24bb85c73bcc05f3bb6337b77eaa7f945c77e5f87dee13d6b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566425,
                    "digest": "sha256:ea362f368469f909a95f9a6e54ebe0121ce0a8e3c30583dd9c5fb35b14544dec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245297437,
                    "digest": "sha256:d884ee1e896b03d945e9be255032be57ecb9a7a1f80ef8f671a52776c086524f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:7b5f16694b77cc5b02ec36a2a858c6222091e4d67a5dcfc10da5e9a0a46b14dd"
                }
            ]
        },
        "1.44.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6696,
                "digest": "sha256:b68ca4413356d1da9866cf52d954187048d967987dc060bb65d24a324cff9daa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565909,
                    "digest": "sha256:4d32b49e2995210e8937f0898327f196d3fcc52486f0be920e8b2d65f150a7ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248645222,
                    "digest": "sha256:9f6d1542670650c24444b40167999e4accafd6eda87ade287100a8942e6aaf5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:14fcfcd4645b9ff0b9ddbe14213a8983789b48fdb3f69ecd884ed06b84eb51ec"
                }
            ]
        },
        "1.45.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6697,
                "digest": "sha256:08389cefe84ea1db88bdf1ac6b70fddf2761fc8b745ab5422ec85d7953f95056"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565909,
                    "digest": "sha256:4d32b49e2995210e8937f0898327f196d3fcc52486f0be920e8b2d65f150a7ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248725402,
                    "digest": "sha256:50c84e4dbbbfe7c2f4732a1ff2c894efe7bace588f3bd91a3e7eab4dbc13b510"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:f4a581d800aa4730a00f80cf3a1c6ce1cdf15380c4f8de73a57497fe8d03cb66"
                }
            ]
        },
        "1.46.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6697,
                "digest": "sha256:bcf2e38c0b1cc0d13b0fed45c87b824713e8c8c07e70308388ac6bf3e102e5bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565909,
                    "digest": "sha256:4d32b49e2995210e8937f0898327f196d3fcc52486f0be920e8b2d65f150a7ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248736423,
                    "digest": "sha256:e695d14ac227fd690a54af07d2feed5a932a9920efba8dbaf7cd2d7f1311ff68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:d627747259de9434f38946a697bd6be2b456bcd1014f1130a91870613e46fc42"
                }
            ]
        },
        "1.46.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 6696,
                "digest": "sha256:a99e1a619a91b2957b62e177adef91c76dd8645800bf28936cd20440110649bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28565909,
                    "digest": "sha256:4d32b49e2995210e8937f0898327f196d3fcc52486f0be920e8b2d65f150a7ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248722692,
                    "digest": "sha256:68ac3905d94982ec582cb81ef332b11e595861119421402d6e78aafc5a098482"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:9d8fdc42ec050ae825f4ace4930266be09bb06f02c27bf6002cc6a7629174bc8"
                }
            ]
        },
        "1.46.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7026,
                "digest": "sha256:8157fde2d0b7d641b0c236e7e623de14d08670424934bd419b9f6eabf70e8dc2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28566230,
                    "digest": "sha256:d5fd17ec1767521cf97f61568096bfc9a7cd9c2d149576a7b43930c5a97062b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 255520622,
                    "digest": "sha256:7cca4fc134a2aab03cdd7458b3e2613b4da1becbd877d9eaf044016b4c518fdd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:900bc2465f81ba4d1cc910aa45ac2432c06c77103e29276af36b79e9e270fafd"
                }
            ]
        },
        "1.47.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:c3fccbe3054e7a11e9884b69f9694e1cf55f7354a4c1efc8b846d05156c0f8dd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572632,
                    "digest": "sha256:d7bfe07ed8476565a440c2113cc64d7c0409dba8ef761fb3ec019d7e6b5952df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245380268,
                    "digest": "sha256:065d7aeed890671d5db0673039f1090fff3f3d91632b5b5f4f7a1a42c81a1765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:801a45f0ccc373ce7b7b043473deff2108ba9319f1a91ca1b3f30ee033cfeafd"
                }
            ]
        },
        "1.48.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7535,
                "digest": "sha256:0caba24675d5ce845633499b3cf0e8a6633c2941f67a85e3927ca1dee2d08a8d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572632,
                    "digest": "sha256:d7bfe07ed8476565a440c2113cc64d7c0409dba8ef761fb3ec019d7e6b5952df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245365440,
                    "digest": "sha256:cf9e1f9551ce59d1899d96527f3733bb167cf3c513393eff48f24b63eb371877"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:9e38bf5cba819d5d5f58e465ab948d7e4a3db05d47425f8193723d7dbcd30e71"
                }
            ]
        },
        "1.48.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:cb9d2f1fe30139f96941b444c6787196dafd971c0a528f1a682aafeed73a1a17"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572632,
                    "digest": "sha256:d7bfe07ed8476565a440c2113cc64d7c0409dba8ef761fb3ec019d7e6b5952df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245370300,
                    "digest": "sha256:0d4d4f1da86cfaf1c4376a023038252a49eb436398f58b62698cbdf033475765"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:bc17b14ab5a936d72867f2584abc538e166e29d23eb7a4e6f461e4be07bb3cb1"
                }
            ]
        },
        "1.48.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:04a41eefab3f7ba7e17ad3cdf847168a7ae5ee618920c73131579b65ce615bf8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572632,
                    "digest": "sha256:d7bfe07ed8476565a440c2113cc64d7c0409dba8ef761fb3ec019d7e6b5952df"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245365387,
                    "digest": "sha256:cf611f0d267617cc13c6dacb4561c2ad103af8de7076ef2831a073b72041fc1b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:9f90fca8b684925b09d13ca515225ed2457e80076a967bda2c7fd5974341530d"
                }
            ]
        },
        "1.49.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7538,
                "digest": "sha256:aceb9e1934f0ae941a56f07a7235999d6a3ba5ff20a17c45de0f03e54b37cf74"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245777195,
                    "digest": "sha256:d57e8344062fba82bd5259ca1477318c6232416b7aa9cf1344a9efbff76e068c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:36a072cce71118ca406b3ef62b8ac847967b962c8ea9661b8bd597d310fbed06"
                }
            ]
        },
        "1.50.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7536,
                "digest": "sha256:0599f2704d213b6dfb1c1ecf81e81ce4ca42620e714760c782aa05c211151c76"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245783841,
                    "digest": "sha256:7ce2d6ae47b7f1b64a157605ee3395c6b980722bea09bc81565b6d412468d260"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:001288efc5b2b10b1eca4b8acf45bfadd598fedcd8ca8ff8791174bab2ff91df"
                }
            ]
        },
        "1.50.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7538,
                "digest": "sha256:6709a0776d864443c919b0c1af5b95a9f45f9429e0f66e352c6e5724427943e0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245784891,
                    "digest": "sha256:92c04785ac89e0670cc2d033216ea06d0e1d35d2da53d3730347e27bdd3229af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:2a19d1969ea4a35a0d1ff8ca0a3bcc9a1d73548f343b61bb83709b1700d9ab81"
                }
            ]
        },
        "1.50.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:f089b5693bca5dd6c792d281f3efc8578ee41b431060ce6c84a789bf0e006a04"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245760346,
                    "digest": "sha256:4c3c7f7b7954b3c164efb88ba1065d07df3fa525ff6c60e5fcf72996acb07ebc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:161591b73b53818ac867486efaa37da9092a6f12b594f42524a88267496681ae"
                }
            ]
        },
        "1.51.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7538,
                "digest": "sha256:e4e5d38b98dfa9f2c14a95ee773fadcedcf82b237b2e853dd90cbdf85305a0b2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245764218,
                    "digest": "sha256:de447d5eb898e0fff38ecf47ac265ee35eab3c7d9a59a2e9c5c6cffbdf60ced6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:bb2112eec05ff6e4edf5cf2d98a6a996c97b5ffa34afd7e1ecfba444017dbb66"
                }
            ]
        },
        "1.51.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:a7cf22fb3a03a2c3de4afa11db99638c6932b4e57bb11765a6abb9dbeacab48d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245761007,
                    "digest": "sha256:751f7ef24255b9c47e5988bb10d32cb26a6d9467febdb8c21737b858fec3393d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:5ef3c592efb83eb365155b6392b212eca9ff5fab9995956ee9151b576b9bf98c"
                }
            ]
        },
        "1.51.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:e1eae90826b58332b7ae14b42c13da3b4fd33af177ef31297a5ad4a1a670c0c6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28572596,
                    "digest": "sha256:3b65ec22a9e96affe680712973e88355927506aa3f792ff03330f3a3eb601a98"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245750167,
                    "digest": "sha256:34524e5741cfae92110fc0fe3d6b4226a72c2fbaf08fc5eaef824d0c0523e70b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:e3883023626c27f75e504c96f81efc2cb0c45c9b42693b6a732e990593ef0fce"
                }
            ]
        },
        "1.51.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7535,
                "digest": "sha256:aa7963b7a029130c1ee8a3da15d91a43412d717be5a745e7653744bdf1b55029"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28577834,
                    "digest": "sha256:eaead16dc43bb8811d4ff450935d607f9ba4baffda4fc110cc402fa43f601d83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248609046,
                    "digest": "sha256:891ae0e8488046a02a752205bb0064df33dbb420ca2fe7b443c1316e3506c1bb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:48b410f3606b35d5ff280ef9008d12ec8b28e768024f2086355bb1205a22a607"
                }
            ]
        },
        "1.52.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7536,
                "digest": "sha256:5adffe65e363b30f68401fb2860a08dde6655b851bffbf0e6f6b256cc4a9a5d1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28577834,
                    "digest": "sha256:eaead16dc43bb8811d4ff450935d607f9ba4baffda4fc110cc402fa43f601d83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248606787,
                    "digest": "sha256:48155f2522129182d8d7fb6ebc37a7b9e4fd67ceced563400f87fb5c649b5f29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:e76236954b6b0eb7a64975d6006b7fc02269ece114e4cea2a03a1f5d13c081b0"
                }
            ]
        },
        "1.53.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7534,
                "digest": "sha256:3211bb2fee40e51fdacea75b406757227e89af3d2da6655e7207a36eab6d1fd7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28577834,
                    "digest": "sha256:eaead16dc43bb8811d4ff450935d607f9ba4baffda4fc110cc402fa43f601d83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248609989,
                    "digest": "sha256:27a5a645fbab94ad87a57a39695cf42a3ae1849b613d59afdec9b5fa331ec963"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:145f1c43801b632347922d8601cf5d50f73923b8b7c31303f9e56c7167008e44"
                }
            ]
        },
        "1.54.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:6104527203004f591432922797794540ca91c588bf5e9b93a739ba67d41d7371"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248440975,
                    "digest": "sha256:df03c9079017d5af3f7c73bb2ade3e5456a5ea23a4c217ae00c922e1c5ce50b5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:b47263ec6f2e4dc27558a203d0db6d0eb3b2a8f824b506b30e622f6a49ef4fc5"
                }
            ]
        },
        "1.55.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:0197d8dd9ac8d7d45a70017b0220ee98a63298c9f03bb0ef2e4247dd353442d4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248444994,
                    "digest": "sha256:992f853f1acd0f544c3f75bf7f1b05adb6cbe01d9f0c9e8196c97aa6183573d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:da43c2363ac409f597add80ee49e1d4c1451af1addb7d5f54f56ae84a62f0088"
                }
            ]
        },
        "1.56.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7537,
                "digest": "sha256:919bc4dfb6b7c2d1e3ebe1a57ec2afef32ba2abdf8dadbe112606274bbefa665"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248425002,
                    "digest": "sha256:3344ac907616c14c4c4d047d448882885f7aa591074eefe126ef9450c9664287"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:4d9ca49c7b65d114687ba8c758d4cb6f19090dd80feb13cbe9f7a50f0bedc80e"
                }
            ]
        },
        "1.57.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7535,
                "digest": "sha256:2209c29afe4a1ff95347931e48e9152599821d4a4a7e4485c32f4e34f14ad84a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28576882,
                    "digest": "sha256:846c0b181fff0c667d9444f8378e8fcfa13116da8d308bf21673f7e4bea8d580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248454939,
                    "digest": "sha256:fdd1e029ce90bfa17786bf30870bf3849956d5289ddb5607231bfdd4734f8923"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:d32c3764650441b0a04b3bc3fa5389d14d0516316103220d2891e134fad2dc4c"
                }
            ]
        },
        "1.58.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8242,
                "digest": "sha256:4f4bf25390bfec39a055bfd0b373bfa7ccda090bff7cd27743a3b034c0137139"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28577884,
                    "digest": "sha256:7608715873ec5c02d370e963aa9b19a149023ce218887221d93fe671b3abbf58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248560411,
                    "digest": "sha256:d7c228477c83d374a1caa9352e89fd7530fad30ef6d55375de0faff1837dd32d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:2360663de085ddc52b1c330ae7c1f069d2898594e6edda1b1ca8069b8cd915c4"
                }
            ]
        },
        "1.59.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7115,
                "digest": "sha256:734093faab1f59bd97b6ba4bc14b1322e993b8ea43cd75346f9a8111883b992f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27504674,
                    "digest": "sha256:ca1778b6935686ad781c27472c4668fc61ec3aeb85494f72deb1921892b9d39e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250776133,
                    "digest": "sha256:7c32e62ae2c222f4d45aa873b1360ef82f8811a5cf00911f87211cf9b4a649ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:611731f23796c1d58a8de973a47a02e35fe5e2909f2d2918b76ce77608aa550a"
                }
            ]
        },
        "1.60.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7115,
                "digest": "sha256:899ec74bf57f4ffa7cbee0bdb49c7121d1cec34d1be6df74b2cd8ded5555341d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28578563,
                    "digest": "sha256:99803d4b97f3db529ae9ca4174b0951afac6b309e7deaa8ec3214c584e02b3a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250782723,
                    "digest": "sha256:b2e9bfc230074679694ca7d44e88ee740da0c035985ca3f1947a3fe8f084fd2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:c10cc0301900cce188861e0c2c98531aa0870942e0e03e73f52ae8da258784ec"
                }
            ]
        },
        "1.60.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7114,
                "digest": "sha256:c7d83f520ebdce5c849dc9224ed5d3beb1f36d1d51386243ddf2c89e9cda4c40"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27506442,
                    "digest": "sha256:edaedc954fb53f42a7754a6e2d1b57f091bc9b11063bc445c2e325ea448f8f68"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250594342,
                    "digest": "sha256:a40b429f99e3449a9a047270d3bf3c28937b860966bccc130e7e1db9746d99bf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:11d18e5092731950acaaeafb623eed29be1db22d9526a3ee1f3f54d2b987c2b5"
                }
            ]
        },
        "1.60.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7115,
                "digest": "sha256:b003a06bdd4179e7e0200b74832779501c97c34716ffba79509bba553ac7f99c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28580671,
                    "digest": "sha256:7007490126efaae58924972668256aaeb4858e6c4537eb4257e1978719b958c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250815664,
                    "digest": "sha256:38d8e65cb181ae14fa38277c9a71a3290df8de1c1e6a01e238e174cfbf2a9f6d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:380be3a995656e256f6581ea62961cad3c9ca13c7eb2289aa45c26ed77896f4e"
                }
            ]
        },
        "1.61.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7300,
                "digest": "sha256:96eec891d061b01cd7f4abba844341627c3959f59051efb290d924983352e687"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28584024,
                    "digest": "sha256:521f275cc58bdab90307a5929f8a6d197368b8c214edbc7f06fc1aaf48cfff3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 265896623,
                    "digest": "sha256:33cdaa57b4e699a4b78f7b5a8b0eda5e016bc9a17d3c283fe0f72579cd2bb2f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:43fc78ec45b505263f8d3e89fb62f3f8fa76b7a77ae14deb08b8c4b01e68bbf2"
                }
            ]
        },
        "1.62.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7301,
                "digest": "sha256:58c34bfdf809a92103133917b4bb73decd6ba9aa2e5abc33e8e626511469020a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28584460,
                    "digest": "sha256:3c67549075b6db92af85c8649f848d697b5bb1f448b436c4b4d6ee6834ab45f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 265934201,
                    "digest": "sha256:c5e60bad2dc07d6d714bc52ff21826702c1be1cb018c5bf4d8d270b0ddcea126"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1979,
                    "digest": "sha256:731fdd6694caa783a497b7032da608457d171293a7e4be04cd8c38f6ec2a3677"
                }
            ]
        },
        "1.63.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7301,
                "digest": "sha256:b07b4c8dbf587952981f6e989cdcdedf6c661aaff8cf0b0c8fbdca6e2ddb6047"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27514928,
                    "digest": "sha256:8ee0874247356ecb5ea92128219660506b139dcb6cc45dcab84d98b3c6485061"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 265936187,
                    "digest": "sha256:dcde63d29b97f22e26c69552ea1be7eab1081466137750e2947beedecc4c7546"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:171114d44ee78a58d04d011e2fee255f4ec4a9318e4df1dea67e5d08af4162e6"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8244,
                "digest": "sha256:971fd6c04e5d422b8b598002e9e5011b82d6ddd4dd3a6f8fc04569d000909843"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28577884,
                    "digest": "sha256:7608715873ec5c02d370e963aa9b19a149023ce218887221d93fe671b3abbf58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248591356,
                    "digest": "sha256:1687fd0ec92f5cce56903cdee16ec4b6fbb0df2c24b96d74dd3f2c9298d442e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:23d7dad267a300a7e2386e9defa6e66defe1b4b52c3ca8ba44f52d093dfc05ee"
                }
            ]
        }
    },
    "tags": [
        "1.25.0",
        "1.25.2",
        "1.26.1",
        "1.27.1",
        "1.28.1",
        "1.29.1",
        "1.29.2",
        "1.30.2",
        "1.31.2",
        "1.32.1",
        "1.33.0",
        "1.33.1",
        "1.34.0",
        "1.35.1",
        "1.35.2",
        "1.36.0",
        "1.37.0",
        "1.37.1",
        "1.37.2",
        "1.38.0",
        "1.39.0",
        "1.40.0",
        "1.40.1",
        "1.40.2",
        "1.40.3",
        "1.40.4",
        "1.41.0",
        "1.42.0",
        "1.42.1",
        "1.42.2",
        "1.43.0",
        "1.43.1",
        "1.43.3",
        "1.44.0",
        "1.44.1",
        "1.45.0",
        "1.46.0",
        "1.46.1",
        "1.46.2",
        "1.47.0",
        "1.48.0",
        "1.48.1",
        "1.48.2",
        "1.49.0",
        "1.50.0",
        "1.50.1",
        "1.50.2",
        "1.51.0",
        "1.51.1",
        "1.51.2",
        "1.51.3",
        "1.52.0",
        "1.53.0",
        "1.54.0",
        "1.55.0",
        "1.56.0",
        "1.57.0",
        "1.58.0",
        "1.59.0",
        "1.60.0",
        "1.60.1",
        "1.60.2",
        "1.61.0",
        "1.62.0",
        "1.63.0",
        "latest"
    ],
    "configs": {
        "1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:462e8a83d0d625916eed9c33b02b7d9dff7e8055a105ab075fbfa7c0d6460a92",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "67e282e6a1174bc01fc602906066db0945f1d2d06e291d2ea851f8f6721e6e68",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:462e8a83d0d625916eed9c33b02b7d9dff7e8055a105ab075fbfa7c0d6460a92",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-08T20:20:05.087551154Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:07:46.570210148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a58c8b447951f9e30c92e7262a2effbb8b403c2e795ebaf58456f096b5b2a720 in / "
                },
                {
                    "created": "2020-04-24T01:07:48.333199576Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:49.883984186Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:51.592036847Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:51.928109369Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:17:03.630501984Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:17:04.210647641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:19:54.466458941Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-08T20:20:03.310913608Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:20:04.007325364Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:20:05.087551154Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7789f1a3d4e9258fbe5469a8d657deb6aba168d86967063e9b80ac3e1154333f",
                    "sha256:9e53fd4895597d04f8871a68caea4c686011e1fbd0be32e57e89ada2ea5c24c4",
                    "sha256:2a19bd70fcd4ce7fd73b37b1b2c710f8065817a9db821ff839fe0b4b4560e643",
                    "sha256:8891751e0a1733c5c214d17ad2b0040deccbdea0acebb963679735964d516ac2",
                    "sha256:0a3d25569f86c494b891f7ba5e60bc561a70e60e232811bd470e30e353474019",
                    "sha256:07f75a7337584aeb9cebbf2b131755a2045e6115a6129d8673d88705c1988318"
                ]
            }
        },
        "1.25.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0742a519a99416237f9e381dfd7da2023fbb8c5172773106e570e95f076f62fd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "28ce57bdcf8dee86a52bae97f91ea8848246e9f44b03f5a4e169ab0da6f03837",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0742a519a99416237f9e381dfd7da2023fbb8c5172773106e570e95f076f62fd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-19T20:13:13.290389148Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:07:46.570210148Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a58c8b447951f9e30c92e7262a2effbb8b403c2e795ebaf58456f096b5b2a720 in / "
                },
                {
                    "created": "2020-04-24T01:07:48.333199576Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:49.883984186Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:51.592036847Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:51.928109369Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:09:29.894443705Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:09:30.239130351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:13:01.657056305Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-19T20:13:10.958345854Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:13:11.862360325Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:13:13.290389148Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7789f1a3d4e9258fbe5469a8d657deb6aba168d86967063e9b80ac3e1154333f",
                    "sha256:9e53fd4895597d04f8871a68caea4c686011e1fbd0be32e57e89ada2ea5c24c4",
                    "sha256:2a19bd70fcd4ce7fd73b37b1b2c710f8065817a9db821ff839fe0b4b4560e643",
                    "sha256:8891751e0a1733c5c214d17ad2b0040deccbdea0acebb963679735964d516ac2",
                    "sha256:9ebe5d8b48d345d61d68b823ff6bb617830b4111663badf43bf5538375dd2105",
                    "sha256:97eae2d60e3f83b333d2cb7a8bfde2743b030ba19ea88bc53b30b8857bdc36ef"
                ]
            }
        },
        "1.26.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6c379950c46f34059b653ab9b7e85323db27c2bd07a6544b85e4034bec0ebffe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4994eef1de057db4b65dd493b8480c02af7ff68674675c16788309a99c16f311",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6c379950c46f34059b653ab9b7e85323db27c2bd07a6544b85e4034bec0ebffe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-06-23T16:11:35.390817387Z",
            "docker_version": "3.0.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:53.681386552Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b2342c7e6665d5ff3850d4f04e2521d1851eb2054f9a8d56fcf4e7c314b9f20e in / "
                },
                {
                    "created": "2020-06-17T01:20:54.523721121Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:55.294213224Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:56.126960877Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:56.323568224Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:07:42.339154723Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:07:43.256196935Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:11:25.402357637Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-06-23T16:11:33.151626258Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:11:34.058679811Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:11:35.390817387Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e1c75a5e0bfa094c407e411eb6cc8a159ee8b060cbd0398f1693978b4af9af10",
                    "sha256:9e97312b63ff63ad98bb1f3f688fdff0721ce5111e7475b02ab652f10a4ff97d",
                    "sha256:ec1817c93e7c08d27bfee063f0f1349185a558b87b2d806768af0a8fbbf5bc11",
                    "sha256:05f3b67ed530c5b55f6140dfcdfb9746cdae7b76600de13275197d009086bb3d",
                    "sha256:14e4c27ec06b0c192b54770ec2245200041a6c81d01faa99bcb2894b3da50ca9",
                    "sha256:51a6976ac6f124d4dd7d3ed47dcebd6fc526abbde11c5e9a1d11299c665b80f3"
                ]
            }
        },
        "1.27.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:193191a8cbfb1526627a3976f39549dce157a1dbe4a7abe43f7fce7d0117e9fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "17167648a6ae00bd90cd1018025a7c31623840d44640d94501ac2c30a26fa421",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:193191a8cbfb1526627a3976f39549dce157a1dbe4a7abe43f7fce7d0117e9fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-07-23T18:02:13.987876403Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-07-06T21:56:28.828661061Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cf87af1f0e27aa6ffad26c57edca4ca55dc97861590a2d63475085a08d3b0063 in / "
                },
                {
                    "created": "2020-07-06T21:56:29.704325263Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-07-06T21:56:30.474974715Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-06T21:56:31.295257919Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-06T21:56:31.471255509Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:58:28.483297462Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:58:29.255543742Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:02:03.143411058Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-07-23T18:02:11.523599138Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:02:12.407092352Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:02:13.987876403Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d22cfd6a8b16689838c570b91794ed18acc752a08a10bce891cc64acc1533b3f",
                    "sha256:132bcd1e0eb5c706a017ff058b68d76c24f66f84120c51c7662de074a98cbe7a",
                    "sha256:cf0f3facc4a307e4c36e346ddb777a73e576393575043e89d2ea536b693c3ff5",
                    "sha256:544a70a875fc8e410b8a1389bf912e9536cf8167cbbfc1457bba355d5b7ce5c4",
                    "sha256:1fade6415fb8cdf014e5c901462013471c54c799ecb413da46cc032de2a222ce",
                    "sha256:5896b66fedb076ab6a185a5253a313dacb7be4c8da1c81bca1edf9731c7c73ab"
                ]
            }
        },
        "1.28.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:20dc88e29260b3685e1a3c40fc4c0d225353626a461f0a65c8f1a712512240fb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "df9f60af9451fc3d0e7696d787676ca4a60b509690ba815ba714156ea192d771",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:20dc88e29260b3685e1a3c40fc4c0d225353626a461f0a65c8f1a712512240fb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-08-11T17:17:14.367166119Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-07-24T14:38:32.823896776Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:65a1cc50a9867c153deb3bed36d9d51d469fb123df6ee0ba31e01646edf1a1c4 in / "
                },
                {
                    "created": "2020-07-24T14:38:33.688832816Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-07-24T14:38:34.492666736Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-24T14:38:35.274751405Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-24T14:38:35.464294608Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:13:22.503229437Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:13:23.267091394Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:17:04.513506763Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-08-11T17:17:12.120324334Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:17:13.015871502Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:17:14.367166119Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce30112909569cead47eac188789d0cf95924b166405aa4b71fb500d6e4ae08d",
                    "sha256:8eeb4a14bcb4379021c215017c94800a848a8203a8ce76aa1bd211d4c995f792",
                    "sha256:a37e74863e723df4ddd599ef1b7d9a68e2301794a8c37c2370f8c2c8993ef72c",
                    "sha256:095624243293a7dfdb582f8471d6e2d9d7772dd621bc57906b034c59f388ebac",
                    "sha256:d7bc8ba580559525556d619d94b1e62556d6b8c90518870810bdaf402a045646",
                    "sha256:83deafbf8a7ce08369fe78e77421e7876c435a013e12b55508924cc8795843e0"
                ]
            }
        },
        "1.29.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:727004bbcd7ac569a1507aaf7b12064c57693b3d399ca0a2a989482b43cc96ea",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8ba8df5497815db3dc574fe8c7ae9e5b72b05af4c6bcc1a9b6eda9296d742b15",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:727004bbcd7ac569a1507aaf7b12064c57693b3d399ca0a2a989482b43cc96ea",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-18T15:36:43.231196434Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-16T22:20:23.293462536Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1b4ec50586b9f0621095f51ee6baecc00a7f6d95b4a04e3bedc5393b28bc8a54 in / "
                },
                {
                    "created": "2020-09-16T22:20:24.110797463Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:20:24.878966564Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:20:25.617267116Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:20:25.950751723Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:33:29.519860445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:33:30.241973331Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:36:32.496683801Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-18T15:36:40.974607906Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:36:41.825969154Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:36:43.231196434Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2fd17df207168da45a6eefccbf58eca08d05b263b3eeb365b6e4b321b18cdc8",
                    "sha256:c0151ca45f2728482ee96827de759393d47cd5b6707c9f3b930cf46bd92f11b8",
                    "sha256:128fa0b0fb8154f33be04e9cda2c01e88c03cde4825081ed3e0c1858cb5a3431",
                    "sha256:277b027fb8074382a6b85ae894dc0c30b62a1115a216f5a7c34b5757d7f22bff",
                    "sha256:4b12f328e92f6ce9cf28bec9f47d1d842d93b6b715520fd00a63044994db2bdb"
                ]
            }
        },
        "1.29.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f55d99b83a45a486d8c2f2fa60c49e11774c43789b6e13ef99d79e24d3d7364f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "997ca242b9757e14be00afc67b9ace6d3b506efc460330926d6dcde152a58980",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f55d99b83a45a486d8c2f2fa60c49e11774c43789b6e13ef99d79e24d3d7364f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-25T14:36:44.956219179Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-16T22:20:23.293462536Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1b4ec50586b9f0621095f51ee6baecc00a7f6d95b4a04e3bedc5393b28bc8a54 in / "
                },
                {
                    "created": "2020-09-16T22:20:24.110797463Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:20:24.878966564Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-16T22:20:25.617267116Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:20:25.950751723Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:32:48.71638472Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:32:49.272228978Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:36:33.731259888Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-25T14:36:42.595913573Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:36:43.519874142Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:36:44.956219179Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b2fd17df207168da45a6eefccbf58eca08d05b263b3eeb365b6e4b321b18cdc8",
                    "sha256:c0151ca45f2728482ee96827de759393d47cd5b6707c9f3b930cf46bd92f11b8",
                    "sha256:128fa0b0fb8154f33be04e9cda2c01e88c03cde4825081ed3e0c1858cb5a3431",
                    "sha256:73dac2e15c3d18a2d79b65f41ae4177e51df54e0b5280fb62b6e408e4e2f1b85",
                    "sha256:92547873325bfdc06bbbac940d1d1d030c14fa6a6d5e3733e2a57371d588a4ba"
                ]
            }
        },
        "1.30.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74239df95ac0cb27116dd6ba562ee9c758294c99b5746190cc4a40b007180e4a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "95ba576967f8ac036d7cb5a3471f7f2db9de64e627e2475bdb4a6d83ca316f37",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:74239df95ac0cb27116dd6ba562ee9c758294c99b5746190cc4a40b007180e4a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-10-19T14:55:07.769674685Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-09-25T22:34:27.65236466Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:da80f59399481ffc32f84353830dcf598f31a97785222e75d643bfb8a9aa14e7 in / "
                },
                {
                    "created": "2020-09-25T22:34:28.547374062Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-25T22:34:29.319019618Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T22:34:30.123784058Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-25T22:34:30.295807036Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:51:02.894544641Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:51:03.32319928Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:54:56.426393695Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-10-19T14:55:05.202514756Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:55:06.210320073Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:55:07.769674685Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d42a4fdf4b2ae8662ff2ca1b695eae571c652a62973c1beb81a296a4f4263d92",
                    "sha256:90ac32a0d9ab11e7745283f3051e990054616d631812ac63e324c1a36d2677f5",
                    "sha256:782f5f011ddaf2a0bfd38cc2ccabd634095d6e35c8034302d788423f486bb177",
                    "sha256:4912e69f35431d4ee633655cff871b3de91a4f3e7e236f947aeddd68cc4dccf1",
                    "sha256:72a62564d6c5499d040555a9ca9a1df3c4f6fb07e60b5d1f4251d57ed5f40970"
                ]
            }
        },
        "1.31.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a254542d80ebdaae3be333f8f35075d1f1dae283cb3f4ab54d64d482024e9734",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "67bc078c719e2ebf13725f801fd63a9ab79be3cee1ea9ae6ea5151063d49b5b0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a254542d80ebdaae3be333f8f35075d1f1dae283cb3f4ab54d64d482024e9734",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-11-12T16:01:29.461072434Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-10-23T17:32:33.883592185Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:435d9776fdd3a1834f344fb82e459dbbb67cd50c71ab5e29b719273888d5bb7c in / "
                },
                {
                    "created": "2020-10-23T17:32:34.71810844Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-10-23T17:32:35.470778446Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-23T17:32:36.258836592Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-10-23T17:32:36.438324921Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:57:29.881352488Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:57:30.277337794Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T16:01:18.365302613Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-10        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-10 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-11-12T16:01:27.045668222Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T16:01:28.021503487Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T16:01:29.461072434Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:47dde53750b4a8ed24acebe52cf31ad131e73a9611048fc2f92c9b6274ab4bf3",
                    "sha256:0c2689e3f9206b1c4adfb16a1976d25bd270755e734588409b31ef29e3e756d6",
                    "sha256:cc9d18e90faad04bc3893cfaa50b7846ee75f48f5b8377a213fa52af2189095c",
                    "sha256:6822297053add0ccd6607065ca42f46b57ac3de28235d590da1c55009f2cb2e2",
                    "sha256:2f4f36958f09700638ceb6e7b67f288107e4004394adf76131a8d83de3914f73"
                ]
            }
        },
        "1.32.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:cc677eeb887e6759dc204554f06b1f12ba7f2cc1a9d6eb367926a465d1b4064e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1f3e076d61d608c55d0db5f00b0fb82c68729c1a04eea5e245cb557b93c84d7e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:cc677eeb887e6759dc204554f06b1f12ba7f2cc1a9d6eb367926a465d1b4064e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-04T16:13:25.634008912Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-11-25T22:25:26.245907708Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f15c4475fbafb3fe335e415e3ea1ac416c34af911fcdfe273c5759438aa8eb4 in / "
                },
                {
                    "created": "2020-11-25T22:25:27.346756278Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:28.342445422Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:29.343142847Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:29.546718343Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:09:20.322797923Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:09:21.277800426Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:13:13.489507656Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-04T16:13:23.073359039Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:13:24.100971308Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:13:25.634008912Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bacd3af13903e13a43fe87b6944acd1ff21024132aad6e74b4452d984fb1a99a",
                    "sha256:9069f84dbbe96d4c50a656a05bbe6b6892722b0d1116a8f7fd9d274f4e991bf6",
                    "sha256:f6253634dc78da2f2e3bee9c8063593f880dc35d701307f30f65553e0f50c18c",
                    "sha256:dd78e22709616398a615abda3bd89dd08917091aab18a98c218488cb913b3dd9",
                    "sha256:316d39044a704b3a8b601724233cb28b13813b7b9727a11afc8bf8b185a2beb7"
                ]
            }
        },
        "1.33.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:5e5e776da1d78314cb35ba987a30ab97b10cb9595ebbd9a158dd57fd57f634a2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8d227f2b52f18f003a0904208c8c6abef5e5fdd3cb0599f75d85911e4c79d324",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5e5e776da1d78314cb35ba987a30ab97b10cb9595ebbd9a158dd57fd57f634a2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-20T12:13:55.799936067Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2020-11-25T22:25:26.245907708Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4f15c4475fbafb3fe335e415e3ea1ac416c34af911fcdfe273c5759438aa8eb4 in / "
                },
                {
                    "created": "2020-11-25T22:25:27.346756278Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:25:28.342445422Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-25T22:25:29.343142847Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:25:29.546718343Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:10:31.507755181Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:10:32.263762237Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:13:44.506722336Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-20T12:13:53.608056896Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:13:54.475595555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:13:55.799936067Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bacd3af13903e13a43fe87b6944acd1ff21024132aad6e74b4452d984fb1a99a",
                    "sha256:9069f84dbbe96d4c50a656a05bbe6b6892722b0d1116a8f7fd9d274f4e991bf6",
                    "sha256:f6253634dc78da2f2e3bee9c8063593f880dc35d701307f30f65553e0f50c18c",
                    "sha256:160f9a8e5b095e42b8275de7908f7ed973aa809855088d00be19a3d19fb9ff50",
                    "sha256:84393986ac0b535a0af87adabf60edaaf606d29e6ea7cda5ca049ca46f714072"
                ]
            }
        },
        "1.33.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:404b5afb015d53ca99bd29945ba6f838850e81297becc4cbc6046f5c5c6c0f3c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "84a2a6675a9550f699d25e3c43a167d762ced47ceadcda6d169e2d38cf437e0f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:404b5afb015d53ca99bd29945ba6f838850e81297becc4cbc6046f5c5c6c0f3c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-02-17T17:39:06.776040864Z",
            "docker_version": "20.10.2+azure",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:35:22.092136323Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:35:22.388677966Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:38:55.286672588Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-02-17T17:39:04.356101322Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:39:05.303999424Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:39:06.776040864Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:dfbd52290b8c8dc7a94f126288d6a4eadb49cd4538f53f5b5c15f12fd52d60af",
                    "sha256:5a316cdebc49958f06a08d281a27ff4b294071e80d0fb73941f5bf86389fe114"
                ]
            }
        },
        "1.34.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:7463f50f1d15eff79b56225416e638b7e5fb6b084919c208e5037e34f821c769",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "13eecafdc079a8965a5e1418f6e19ae03617f4e04fab7e39f75b23213d9cb050",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7463f50f1d15eff79b56225416e638b7e5fb6b084919c208e5037e34f821c769",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-03-02T18:05:45.352135902Z",
            "docker_version": "20.10.3+azure",
            "history": [
                {
                    "created": "2021-01-21T03:38:20.003680095Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:2a90223d9f00d31e31eff6b207c57af4b7d27276195b94bec991457a6998180c in / "
                },
                {
                    "created": "2021-01-21T03:38:21.115557643Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:38:22.166838465Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-21T03:38:23.18135616Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:38:23.37559427Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:22.665465162Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:23.276580446Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:05:33.740610175Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-03-02T18:05:42.931383234Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:05:43.835684155Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:05:45.352135902Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f32931c9d28f10104a8eb1330954ba90e76d92b02c5256521ba864feec14009",
                    "sha256:dbf2c0f42a39b60301f6d3936f7f8adb59bb97d31ec11cc4a049ce81155fef89",
                    "sha256:02473afd360bd5391fa51b6e7849ce88732ae29f50f3630c3551f528eba66d1e",
                    "sha256:b17524e8c1cdb5b1d42d02171fd253906c8cdc7820376eccb44d5b7e612be925",
                    "sha256:3817567581fe322f839e86a4cf5f966680f40441dfbc19e676b3ea3cf4b34590"
                ]
            }
        },
        "1.35.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:5c93b591b90d8d39a2de10355374a42b6067f2545e30cb3b4a0ecd70c5dc6bbc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b4425a8d469b05a4f13fcdd82122864b9ae6fd219a8b55bfc062299cace4b096",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5c93b591b90d8d39a2de10355374a42b6067f2545e30cb3b4a0ecd70c5dc6bbc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-04-15T16:02:26.365974473Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2021-04-03T00:53:06.283651296Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:27277aee655dd263ee698d1f2fe17f0b1dbba740615bcac8642723a6ac0d62be in / "
                },
                {
                    "created": "2021-04-03T00:53:07.448472866Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-03T00:53:08.446620064Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-03T00:53:09.409626609Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-03T00:53:09.625644166Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:32.501036786Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:32.799853399Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:02:19.830980872Z",
                    "created_by": "/bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-04-15T16:02:23.808968619Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:02:24.808780962Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:02:26.365974473Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e64bafdc7ee828d0f3995bebfa388ced52a625ad2969eeb569f4a83db56d505",
                    "sha256:935f303ebf75656fcbf822491f56646c5a875bd0ad0bf2529671d31dd5456dfa",
                    "sha256:346be19f13b0ccad355ab89265edaa4ac5958a42b8bb0492d2d22d9e4538def4",
                    "sha256:1f0c10896818408dc74e8da0ef43c6443ac22fd0f88b6c06eb3e3dc1c6488ee7",
                    "sha256:1605affe0073b612d7da7393bc4aa9ea868e271f24cd63e953637f673e6af6e3"
                ]
            }
        },
        "1.35.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:dd0a4ad0ad2995942f75a03d0d4e423cbbed4df4254a02c81c66ad5908819d49",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0ab40cf969ec3bc0bbd0d8dc8da2ea7961a5f10b400fe662a7c387bbef5327c1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.35.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:dd0a4ad0ad2995942f75a03d0d4e423cbbed4df4254a02c81c66ad5908819d49",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T21:40:47.888708495Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:36.641179752Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:36.891819444Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:37.263142866Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:44.433056806Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T21:40:45.661798401Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:46.556311004Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:47.888708495Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:1d6532f41554645f6c293df2ca9a5b8481ba6de8fb17ece058ba2f4e61c017d6",
                    "sha256:996558766a5cdf75a140effa056a1a5c510ed2fed0d72b03a86af0536c1be1c6"
                ]
            }
        },
        "1.36.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:69def38b9f66efa97027a484ad4f9d4a9455246db710f20311dd1a24d5a79b6f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f0149210c42053b3117ca02486a4c9ac355256c514bb09ea58804f21280b3357",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.36.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:69def38b9f66efa97027a484ad4f9d4a9455246db710f20311dd1a24d5a79b6f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T20:48:02.898440362Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:44:01.704345544Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:44:02.306722804Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:44:03.299169384Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:47:58.879327991Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T20:48:00.339307575Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:48:01.378501593Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:48:02.898440362Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:94b4b1763f58982f2f2c90a1ac7a301dca20f70593e28728e51cc230f616f1f1",
                    "sha256:998edd7092e8beffff976b7d30e9e8bb84506ac6ff4383190206090d46de5a91"
                ]
            }
        },
        "1.37.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:6c0b956f006e5510b741361206f31977de9d94e2bd4bcae1b289f6571f80dae0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "52db93dcd6dc7c2f49cc535061a7fc0cf92ffbe41e24cbf2bda34e158aef255b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6c0b956f006e5510b741361206f31977de9d94e2bd4bcae1b289f6571f80dae0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-01T19:00:49.535283016Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:58.383107149Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:58.708029003Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:59.295787539Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:45.355117009Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-01T19:00:46.852433741Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:47.959410902Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:49.535283016Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:3b7b6a5686d77bcd7003e6fe19321583c1bd545ad972489c298fa3d153cb1783",
                    "sha256:cf46e0337964ef36365d25643075658e36aced0eeadccabd48378afa789fd995"
                ]
            }
        },
        "1.37.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:352cfdc01ddc829421ee1a7f976e0df32446af7e04756276821e30f64bd79942",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "10572e8c62dd156cc0e616f6f7c07256144c401b329b419fa07efce26d9ee13b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:352cfdc01ddc829421ee1a7f976e0df32446af7e04756276821e30f64bd79942",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-08T12:56:11.33596115Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-04-23T22:21:34.1865992Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5c44a80f547b7d68b550b0e64aef898b361666857abf9a5c8f3f8d0567b8e8e4 in / "
                },
                {
                    "created": "2021-04-23T22:21:35.354865637Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-04-23T22:21:36.274883825Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-23T22:21:37.334286535Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-04-23T22:21:37.49442735Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:53:01.560204492Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:53:01.822697126Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:53:02.267973225Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:56:07.91002015Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-08T12:56:09.113945564Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:56:09.980010135Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:56:11.33596115Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439",
                    "sha256:63c99163f47292f80f9d24c5b475751dbad6dc795596e935c5c7f1c73dc08107",
                    "sha256:2f140462f3bcf8cf3752461e27dfd4b3531f266fa10cda716166bd3a78a19103",
                    "sha256:be5356bc9ec7ed3dc6c3acf3c11beaf29625c44431ba06d8c8efd57ad7091c3f",
                    "sha256:ccce75489f11700b7c81c82713aa9405d24931fbcc9a7c88ba5aa77d8bed32a1"
                ]
            }
        },
        "1.37.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9992403d683d7eed4fe97a37e3e4002c38b7d3b7485f5751187ace77b1c156e6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f0f766eb0eb97569a8287d2987d98feae665035cd333eff8e1feb2c9b9af115f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9992403d683d7eed4fe97a37e3e4002c38b7d3b7485f5751187ace77b1c156e6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T19:28:37.180803982Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-17T23:31:29.39657203Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:920cf788d1ba88f76c97e41e03e4dc2f3005b08d65b5e9da9dd1cbe20a74459b in / "
                },
                {
                    "created": "2021-06-17T23:31:29.779641053Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:22.288677409Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:23.287533729Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:24.299145736Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:28:33.5168554Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T19:28:34.807319197Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:28:35.756620725Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:28:37.180803982Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:feef05f055c989eea0367f5d3a2cba79896dd6d8a8b72bea2c729548a4ca5aef",
                    "sha256:57c035c99946300892afb181ca9c3d12490c320ef68d1827168490648ee8ecfa",
                    "sha256:607efec5a7f77cc8648614642ea2d27577384a90bd79dc5699d50cf1b14ab696"
                ]
            }
        },
        "1.38.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:610a12cb3276ada1da8abc4901086d231413342e2a995c9bdaafd3d2fb828b0d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ba8d03742fbbea30e05e291ebd568979086a93908e7455c1066612ca01d92e59",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.38.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:610a12cb3276ada1da8abc4901086d231413342e2a995c9bdaafd3d2fb828b0d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T20:54:15.360676697Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-17T23:31:29.39657203Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:920cf788d1ba88f76c97e41e03e4dc2f3005b08d65b5e9da9dd1cbe20a74459b in / "
                },
                {
                    "created": "2021-06-17T23:31:29.779641053Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:51:16.825934919Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:51:17.257521696Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:51:18.262035663Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:11.746737827Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T20:54:13.000836218Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:13.941123079Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:15.360676697Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:feef05f055c989eea0367f5d3a2cba79896dd6d8a8b72bea2c729548a4ca5aef",
                    "sha256:755de1f52dd9ec34122c1c1b762bf1abba3b13f8177d334ad5ca792d23ae33c9",
                    "sha256:7ba2c82fb5d7c5ead7ee18daf4970c4dc7403fbf9637283cd236bc7db32325d7"
                ]
            }
        },
        "1.39.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:d9b0a07e84981ca11addd13f9a4f938cd63f0dffbb091cedb8c5f0e18a121232",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "13a988e27d28c59eebafae33a4878fa8128b5164d29292e93f805837c9f68a21",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.39.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d9b0a07e84981ca11addd13f9a4f938cd63f0dffbb091cedb8c5f0e18a121232",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-08-04T08:02:31.726913505Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-07-26T21:21:39.951432409Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:524e8d93ad65f08a0cb0d144268350186e36f508006b05b8faf2e1289499b59f in / "
                },
                {
                    "created": "2021-07-26T21:21:40.307832875Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:19.759318157Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:20.275260823Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:21.29499481Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:28.129542902Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-08-04T08:02:29.374583357Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:30.262645772Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:31.726913505Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7555a8182c42c7737a384cfe03a3c7329f646a3bf389c4bcd75379fc85e6c144",
                    "sha256:e1e9a9750177aadce31e4f2cbc93267f00eafc97645e06e3e4f62f97afc381f7",
                    "sha256:5957982c41b133088ffb71b79c36e05f66247ca85059d57f7d3f71e662eb7bc5"
                ]
            }
        },
        "1.40.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5a0d0c128c5eee65f7a36ea2a36ed4735d25ba66f97ef3cee955c51104128e90",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "14c8844d445aa297b51352a9c069d1cd835b4dcdc8895565129f0bdaf14877be",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5a0d0c128c5eee65f7a36ea2a36ed4735d25ba66f97ef3cee955c51104128e90",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-09T20:56:19.234619267Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:52:41.555237034Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:52:41.748964575Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:52:42.191850069Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:56:15.660961094Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-09T20:56:16.992975344Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:56:17.877636556Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:56:19.234619267Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:874b16caeeb5c454fde5f170d9d2abdd00af5577751e0fd2f84d74eed9752272",
                    "sha256:c82f1523095dab5b45d2bd994d0fddbd484bb51cd427507008cf1f0a84efadf5"
                ]
            }
        },
        "1.40.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e32334e3a7ee6595c6d56c66f035f7247776bcfbd08dc4615b079d23bff9e484",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d81007813d1aa4fbd7a27b97fae361d940f100b4dc155cbed92a3fc022149d7f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e32334e3a7ee6595c6d56c66f035f7247776bcfbd08dc4615b079d23bff9e484",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-28T12:25:07.368848531Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:21:00.856779221Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:21:01.199840404Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:21:02.201068455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:25:03.633554646Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-28T12:25:05.03189914Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:25:05.970753395Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:25:07.368848531Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:fdf689d1d5cbaf5f37307bdd58ea03ba166abdafd608d1d47474bdda33da350f",
                    "sha256:2aaf333906a5d17469f53ba56a6aae5f74bdea1909e6484b5e9a9dfa1dc05254"
                ]
            }
        },
        "1.40.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bc3ce468c5711ed5820368ad0ece214e1092db989a2515fb2e12acde07ca52f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "474123b08ee244d78e7acca48f5dc0daf51a2f5af481aaef01fe876e440da025",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bc3ce468c5711ed5820368ad0ece214e1092db989a2515fb2e12acde07ca52f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-29T17:34:27.078242605Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:20:55.806655339Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d2abf27fe2e8b0b5f4da68c018560c73e11c53098329246e3e6fe176698ef941 in / "
                },
                {
                    "created": "2021-08-31T01:20:56.191693866Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:30:28.966660467Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:30:29.146084442Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:30:30.153634346Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:34:23.903263192Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-29T17:34:24.99929339Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:34:25.741480497Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:34:27.078242605Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4942a1abcbfa1c325b1d7ed93d3cf6020f555be706672308a4a4a6b6d631d2e7",
                    "sha256:31a24a0f71525ac42c5b3ba0435c9ffda9f963e34919aa6fa7adb4408a31fbe9",
                    "sha256:2156f69eec05a67c7c92bbdbdaa670b03f024b47762363d511ae618f39525427"
                ]
            }
        },
        "1.40.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8ba81bcf17ff14c08665bf92fd0cdac58f91d4b99d8a48210ae77309adbd4ccd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d96c08b16a4546848136191977fca4bde4074269b92e27f2815774b2ab6adc8d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8ba81bcf17ff14c08665bf92fd0cdac58f91d4b99d8a48210ae77309adbd4ccd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-07T19:51:36.738478334Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-10-01T02:23:40.163413701Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8d2f4a45a58b3f5426c89e2ef57164824fbf0e4d17b8a90fffa0d5ff3b4e5114 in / "
                },
                {
                    "created": "2021-10-01T02:23:40.619312769Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:57.587907532Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:57.781263266Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:58.18912003Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:51:32.542069015Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-07T19:51:33.935919308Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:51:34.875974215Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:51:36.738478334Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:da55b45d310bb8096103c29ff01038a6d6af74e14e3b67d1cd488c3ab03f5f0d",
                    "sha256:42eb7e2e6bf11fc0b810024098fa23de538454976babe55cada21da5fdc185e7",
                    "sha256:3739b2cd9cade84f049e3004cfeaaeac15112d2ba8fbf7e033cd4082f370c4d9"
                ]
            }
        },
        "1.40.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:c2b3628bd467caac9255c31296b1d20f5df6a887bd8b3421d7d7032fe1564375",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cefcaec89342658002aab4c6ada39681088d2f608b4e6b1e7edff0dbb713e6bb",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.4",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c2b3628bd467caac9255c31296b1d20f5df6a887bd8b3421d7d7032fe1564375",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-19T13:50:21.78976976Z",
            "docker_version": "20.10.9+azure-1",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:47:20.546701111Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:47:21.169674868Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:47:22.168856882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:50:18.100088493Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-19T13:50:19.311451735Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:50:20.132628914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:50:21.78976976Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:c988b098ca2ab5bc147e4060be1d82fc07b4352ed23ce2debdd2f82b744c3745",
                    "sha256:67402116663eb624cc85e7a83f16333da50998fc96176b0239d0fe3d3986e21f"
                ]
            }
        },
        "1.41.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2e3e7d7f3420ccbc41ccd084ef1a126b177a77e6ca161574ef1bcab8b8ba82d5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6c6091c79d7632f472b238b9dd23959ddc0977324121fa29b9710a1af8c9821d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.41.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2e3e7d7f3420ccbc41ccd084ef1a126b177a77e6ca161574ef1bcab8b8ba82d5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T17:41:00.988319494Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:35.411759611Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:35.597700126Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:36.190834405Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:57.093557216Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T17:40:58.405225287Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:59.232399379Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:41:00.988319494Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:8e30fd2f4a60c263d75b5d4c45e34d42538c49a27d164b38ece3b322fcb7414e",
                    "sha256:d71fa4033fec121a8a9aa85dec22b5dbfc6ad06129b593bdcb9a32690661e83d"
                ]
            }
        },
        "1.42.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a29f94491aab3d0b8ebc7188003d7df173b7fe291bb9b5a5232ba5d7b40f2e22",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ab181c75010bebe7fe5349dc00d8b982cf4d29c59a06303e184ae28b77280dd8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a29f94491aab3d0b8ebc7188003d7df173b7fe291bb9b5a5232ba5d7b40f2e22",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T18:18:26.717423357Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:14:32.409763321Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:14:33.221156887Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:14:34.230477347Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:18:22.552858398Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T18:18:24.015130717Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:18:24.960568303Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:18:26.717423357Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:6f9591d07a784b73a28e3fb45a739dbc3ef7841550d6a950c07c5fd612425873",
                    "sha256:aac0e3114618f49335a393576d3e42e95f2f62da2e6d36fb0e45d07062851147"
                ]
            }
        },
        "1.42.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:bdbdabc6cb8c76c5963f193cda6e96e9a020b0e933a7e109a347d27b12f0b187",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "33779eebfc24d87dba860b6f1d2f92ee77ab8b625724fb96acf2085738fd4862",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bdbdabc6cb8c76c5963f193cda6e96e9a020b0e933a7e109a347d27b12f0b187",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-08T21:37:37.425083786Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:54.230837276Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:54.419394735Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:33:55.203114021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:37:33.200301325Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-08T21:37:34.593069025Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:37:35.53824628Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:37:37.425083786Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:e6fb289335237bcc5fc28954e89a299b76bffb52ec76f7eea73cce727534968d",
                    "sha256:8764a7a33e1df1c93c6d44b3779d7e761b7164145981e43acfded0c1b27bf248"
                ]
            }
        },
        "1.42.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:89ea978fe2412ef8613c7fdc1b5378c463c2cfa636868d53b7c55ccead475187",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3c5a33c5e03bf0c74cac1f4e78865beffa4f31833725b73f1268dd341ca43095",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:89ea978fe2412ef8613c7fdc1b5378c463c2cfa636868d53b7c55ccead475187",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-30T17:59:53.116148839Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:47.047510027Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:47.209480341Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:48.16244515Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:49.980780272Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-30T17:59:51.142198535Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:51.900707914Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:59:53.116148839Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:44d3ee353f0a4bdc1ec244f205c9ba1eb21b195f332ad0cf6d773a0f9d6e3f02",
                    "sha256:70c7b074a442a1b4188422e930acb651ca8fe2667b4180e38d5847d5438ba6f6"
                ]
            }
        },
        "1.43.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:962549852f34bba4509f85796643973a782b27368c9734d71498f3f3c842fd2a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "be419b5a3a83ac49202b87b8e498bd30458dd9f578183ef9178be0ee16e10ccd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:962549852f34bba4509f85796643973a782b27368c9734d71498f3f3c842fd2a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-06T09:27:42.347307436Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:46.490650747Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:46.687904913Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:47.196543305Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:27:38.484720701Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-06T09:27:39.921278092Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:27:40.966189395Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:27:42.347307436Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:517893a92a31aebeb1f26414cb2bec156eb3c901ac0ad325a578ad5b7fc91058",
                    "sha256:c6f07041690bc01a38f187b624fb613133497901723927dfafbe5db9465f3a15"
                ]
            }
        },
        "1.43.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e47dedf275a7c4f483327e9be83b680a71ea81c12ac27d678bff314837ed3a74",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a91c425f3f813d1915c2873764def3633d8b9ea792bc5782706dd11177bed6dd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e47dedf275a7c4f483327e9be83b680a71ea81c12ac27d678bff314837ed3a74",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-30T12:34:54.49067172Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-10-16T00:37:47.226745473Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5d68d27cc15a80653c93d3a0b262a28112d47a46326ff5fc2dfbf7fa3b9a0ce8 in / "
                },
                {
                    "created": "2021-10-16T00:37:47.578710012Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:31:44.514002429Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:31:44.682956247Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:31:45.172849627Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:34:51.402552458Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-30T12:34:52.568067833Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:34:53.350640976Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:34:54.49067172Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9f54eef412758095c8079ac465d494a2872e02e90bf1fb5f12a1641c0d1bb78b",
                    "sha256:03cb931f765ce4f0b059cb34f29c80afbe2ec79a430a4828935d14dbaddd607c",
                    "sha256:e6623220fe17e5d9a2bb8012246f5020b31c26637a1b03bdf90b0a34af006624"
                ]
            }
        },
        "1.43.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:b198fe34c547e4fc63aa0de47600e3b6cea63005f6cda26c0413da247ceab98a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0a37a0a6d02d1de8cd8016983fc1b30341e21b3a494a65adb83c2f0f8e73d8ea",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b198fe34c547e4fc63aa0de47600e3b6cea63005f6cda26c0413da247ceab98a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-01-28T10:41:10.360463616Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-07T02:25:29.849530323Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:122ad323412c2e70b3138d8eb62648c4692989de91be1ffb6b4bf086c8311b62 in / "
                },
                {
                    "created": "2022-01-07T02:25:30.389665393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:56.972505728Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:57.209074302Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:58.205266502Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:41:06.199163977Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-01-28T10:41:07.824242211Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:41:08.901692392Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:41:10.360463616Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0eba131dffd015134cb310c284b776c1e44d330146cd2f0e30c4e464d0b76d24",
                    "sha256:6d6b5464483a944c443fdb82d6ea77cf01c0d1a7fb57a445bdccc28d6062d371",
                    "sha256:66da28f3bb3bbba142ba9d59e5aade022825546c1e930c53e1e2e4a88f562ebb"
                ]
            }
        },
        "1.44.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:2565fd95964758009cba3beff2f17bd0341c08d2808163847871fed9fc14bdd4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cdb21fa4f44797305a06cabd93c580d9917521ee97ef28597d6a0ff313bbbc1d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2565fd95964758009cba3beff2f17bd0341c08d2808163847871fed9fc14bdd4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-02-01T11:11:50.677504747Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2022-01-07T02:25:29.849530323Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:122ad323412c2e70b3138d8eb62648c4692989de91be1ffb6b4bf086c8311b62 in / "
                },
                {
                    "created": "2022-01-07T02:25:30.389665393Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:07:32.495287933Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:07:32.720901226Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:07:33.222898787Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:11:46.164494299Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-02-01T11:11:47.906208182Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:11:49.056371439Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:11:50.677504747Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0eba131dffd015134cb310c284b776c1e44d330146cd2f0e30c4e464d0b76d24",
                    "sha256:d5ed3bc3c3bac32dc4dc396054a61d59e62e627fe5bab701f35ca561c059ca94",
                    "sha256:63b0e7475259e0a2a6492c80852993869a40d378c70dcdb932bf4c793886da37"
                ]
            }
        },
        "1.44.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e7adde98c0336add9f2412eda606dd4e300dcb2b515b81ffe5fb36da2b3a1434",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8d396cd8740ebb5dc866211e0cc1a9832db963696e878c0d2bcc04b992855ff1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e7adde98c0336add9f2412eda606dd4e300dcb2b515b81ffe5fb36da2b3a1434",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-18T15:18:25.283631999Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.235275953Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.405282024Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.577543545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:17.825801824Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-18T15:18:24.21555578Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:24.378153597Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:25.283631999Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:5c6e6d250630215da17c79368e6e42f9977e73dbca130163d4f68a8434abb2f3",
                    "sha256:1b768c12055c31d08b160ee4e6dd858ceceeaba9305bddef706a721a61632544"
                ]
            }
        },
        "1.45.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:67e155a7fad0dc8912d4336db6ea4a9839671f9dc0f07142cf8d286260ec1125",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d8bc481dfd2763680e6025373e9a671b41f271913e8a5bf4907bb6b597065514",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.45.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:67e155a7fad0dc8912d4336db6ea4a9839671f9dc0f07142cf8d286260ec1125",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T15:54:56.107070742Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.235275953Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.405282024Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.577543545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:54:48.671035467Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T15:54:55.190014946Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:54:55.306596744Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:54:56.107070742Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:1d5cf2880fab87bb6bb1abc051a2f9cf7bc2a249a4e099686556423e4fc77afe",
                    "sha256:5dc92cdf68985415dd341b48c33a5bf0b009bfa7d799f973529bf6d2ba0f4174"
                ]
            }
        },
        "1.46.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:60966675c21b0bb499796105cfcea1a227817c20fad9ff3ec944557db7639bab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "62a69adff0e104c5a712ae7f0ac10419c4bf0c07b71d3dc7439d347632fe4f0c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:60966675c21b0bb499796105cfcea1a227817c20fad9ff3ec944557db7639bab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T16:31:39.283874706Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.235275953Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.405282024Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.577543545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:31.888864763Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T16:31:38.315686686Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:38.450243135Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:39.283874706Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:3e80a141b3d1b771a28a29c916ee19422869a23f5e14e9e06967c5da7fbbd604",
                    "sha256:3db6cd1aec19e4b59c95ef45006ab20b2167749a1c9065c710de8ad465c23f45"
                ]
            }
        },
        "1.46.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:e70c41f2cf46fd0959f27952165dd7a47813fdaaab9e04c6811368803954ad99",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "efa9c1316d8cf40966f14c8d9f51b53129226371553be055ad1c8249ec91af19",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.5",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e70c41f2cf46fd0959f27952165dd7a47813fdaaab9e04c6811368803954ad99",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T17:06:18.866805602Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-03-18T05:30:40.063546094Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1d3b09cf9e041d608a00c2dc25cdf3c388e436c5db607a3d124f2aa0f764fc69 in / "
                },
                {
                    "created": "2022-03-18T05:30:40.61165091Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.235275953Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.405282024Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:13:59.577543545Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.5 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:11.506959247Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T17:06:17.94751538Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:18.069095871Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:18.866805602Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:867d0767a47c392f80acb51572851923d6d3e55289828b0cd84a96ba342660c7",
                    "sha256:f0b7f47df03a8a188a89a191a50ed8d5ec9d19a2c7f0677ccb73c11d2037db8d",
                    "sha256:3f52167fed5cc163e056166a3df57e232f1483d5a9604417151a9708a92a408c"
                ]
            }
        },
        "1.46.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4664bb1ec9f10b4b25e681497b62c1cf1f753cea5357a30d2f041bbc3aca00eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6c2c682f94a730f1c90b24e118939205713999474fb1e63c58c3b1aefdb02378",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4664bb1ec9f10b4b25e681497b62c1cf1f753cea5357a30d2f041bbc3aca00eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-05-18T11:44:06.946916226Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-04-29T23:20:59.079732432Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7009ad0ee0bbe5ed7f381792e07347e260e6896aeee0d80597808065120fa96b in / "
                },
                {
                    "created": "2022-04-29T23:20:59.430653302Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-03T16:07:12.04032337Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-03T16:07:12.204193206Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-03T16:07:12.350060496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:59.462452835Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-05-18T11:44:06.02469723Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:44:06.13708445Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:44:06.946916226Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bf8cedc62fb3ef98ad0dff2be56ca451dd3ea69abd0031ad3e0fe5d9f9e4dfff",
                    "sha256:22b411c31ddd4d8c4795d98d53fff0c52fbffd42359ad94438fc0772b1ccb789",
                    "sha256:47d9236725afe1717504037641de0895d0b1cb5e0517257eaf863add3b53ed92"
                ]
            }
        },
        "1.47.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:4e53b3d37dd3a0176ea94d387142a954c7887c69c341eb1692c497917279a043",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "01eaddb4bd76073adea8869703a12fb150b38d4c706e0dcd3609db89ca3adb5a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.47.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4e53b3d37dd3a0176ea94d387142a954c7887c69c341eb1692c497917279a043",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:05:39.738999561Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.705821349Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.85955784Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:39.021492104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:32.332821147Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:05:38.729909242Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:38.864355111Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:39.738999561Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:c56108ab9f7bd613bf6ff7509baffd4e0a3a723eb8e7cfe5cde0e756e53cd266",
                    "sha256:109f7452e1f4db38aaf090cf6d80c1167ce3b840ca48fc4e1e6ded1d75ee712c"
                ]
            }
        },
        "1.48.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:09ea411af674a60b2d2006a6f5935430a80ff926c79255812e59f88a04ee0452",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b64a69d3dff07ca22d5b4fcacc59837b3a0f557d1167ecf9456444746500e7ce",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:09ea411af674a60b2d2006a6f5935430a80ff926c79255812e59f88a04ee0452",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:42:33.24100957Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.705821349Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.85955784Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:39.021492104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:25.767316128Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:42:32.256983292Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:32.387236948Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:33.24100957Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:7923d69e043e15cae26259eee2cf76d180b07fb03231917b8b96bcc1f8379463",
                    "sha256:3495326a8e324e51e4f53bb6ee3d625fa3d48cc0d8ef43004507f55987969a47"
                ]
            }
        },
        "1.48.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:1d8570402130ab451d9564f37ff1c261c388703f5c060e056f0cff3a0b7a74b8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8703c40bc4c8623aef6633334c47d3429470f217147ab1419b7ad105265bb937",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1d8570402130ab451d9564f37ff1c261c388703f5c060e056f0cff3a0b7a74b8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T15:17:24.795487403Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.705821349Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.85955784Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:39.021492104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:17:17.572319856Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T15:17:23.894835781Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:17:24.011897221Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:17:24.795487403Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:f77823702c30e681c12435e104d1de6520158c7ad95b936866f8b7eb8a5fc7f3",
                    "sha256:7880f165b5fcf8767ef58fff899249bc54a8b290fb4c2f857eafaf6b42d26ad6"
                ]
            }
        },
        "1.48.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:a91caf5bd6eb029e17add4f25c5bb9ffc90dc7c53500e77e076a0e1dfddeb158",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b8b5baa83978455931b9c77b875f9632e3ae484e4a056d8bf65b75199fe8325d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a91caf5bd6eb029e17add4f25c5bb9ffc90dc7c53500e77e076a0e1dfddeb158",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T16:09:07.357656515Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-06-06T22:21:11.683921179Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:00dae10e79b05c4e1a3db053a1f85a4f38a39fe85cbbd88d74201a01a7dd59b5 in / "
                },
                {
                    "created": "2022-06-06T22:21:12.070779776Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.705821349Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:38.85955784Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-09T12:50:39.021492104Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:04.575466597Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T16:09:06.366865895Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:06.486574229Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:09:07.357656515Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:af7ed92504ae4c20128a0f01048d41d467fef5c795c38d0defdb998a187ed1d4",
                    "sha256:d5cbb17add733bf9c8166358479524934325cc57525f15a1236eda0bd14fe4e4",
                    "sha256:2aee2713d6eef5df3c6498961fd96e683511489f8b697d8095982b46eae5c607"
                ]
            }
        },
        "1.49.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0fab96ba2556890dd41b1b71e0abcbd93f893f9ba7ff0a2f086ee8006e9ddbb4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "bc57b0166520098f0c5366df44cd6b00b7dac21ca317a363982ac6f12338020d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.49.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0fab96ba2556890dd41b1b71e0abcbd93f893f9ba7ff0a2f086ee8006e9ddbb4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:09:10.302497161Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:09:02.969896237Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:09:09.351028945Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:09:09.469315701Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:09:10.302497161Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:f85dde4a3c6b94dabf91426e8a0f1c1a3e066585ce1f9a4da93e0f32c5b21cd5",
                    "sha256:3a78bd72f977593384baa790f9d3e90aa9f4505804eb3e4c3012b04690db9262"
                ]
            }
        },
        "1.50.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:256a7ea2ad841f1f654721b224e1861d5cfb7747fa12a70ae1d30af24cf054fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b0a5f0ce627902c31a80f769797b47f432e0285dfd4b900d0e366c4fed5cc1fa",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:256a7ea2ad841f1f654721b224e1861d5cfb7747fa12a70ae1d30af24cf054fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:44:13.893406255Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:06.5568942Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:44:12.972561203Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:13.091961161Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:13.893406255Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:fed62389f24344bb840b02d4a6fa6eebe48409937bcb85b7b2cd8888f783ca86",
                    "sha256:cf5ddbffdd817e3f9bca51d45800ee7fbbbbb36ff9a3994d974a3f15928be6ae"
                ]
            }
        },
        "1.50.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9032e1cb819f12703da51572465d5acbd8493e78d4fd927db5c49ab9050fa0a4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "20b2d9babbd1afdcd203969e7e755ecc4fb59173f0ce26027fba01cad7d2964f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9032e1cb819f12703da51572465d5acbd8493e78d4fd927db5c49ab9050fa0a4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T12:18:26.415607303Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:19.261899902Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T12:18:25.492972521Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:25.616417165Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:26.415607303Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:1b25b72f9d2944c80528a55324284b2daa9cf037e0c7d004b2425fd850510a1d",
                    "sha256:aa3b415ff9b38eb931773edb13fe874362fb874fdc7c304d22b62ed1deba66cc"
                ]
            }
        },
        "1.50.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:9e22d48f3580c437c051c53ab5c60703a0f705f900f9dc328bc44381516b4799",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4cd98d57d6d347b0ed66f145d6037743e0ea46bc62daceef999a838a424566fb",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9e22d48f3580c437c051c53ab5c60703a0f705f900f9dc328bc44381516b4799",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:09:11.632689913Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:04.051064035Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:09:10.639012403Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:10.77691651Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:11.632689913Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:e7054a29c1bd09c11a4bb91030602acd8d1cca4464cc0862b75ce5dbcf22c7d7",
                    "sha256:f70004f043d12a03c4f789c82f47e9e2e1614cfc356fbad560fc3c76215aee72"
                ]
            }
        },
        "1.51.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:637bc166b21337cffcc96fb5bcd650a24854650ad624fb7e689ae10e29470f01",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1c8cb8e48611a4e58b70c00a3be57be44d4ca707393c80bc9100cdbd6a1cb275",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:637bc166b21337cffcc96fb5bcd650a24854650ad624fb7e689ae10e29470f01",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:45:05.669219705Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:44:58.472454748Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:45:04.649286632Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:04.784592876Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:05.669219705Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:9205bed69cae14ef473d40e40d9f5ba4e385d8ed8657ffdccf43286106b31b85",
                    "sha256:9082b59f2946af021f6fef55cd0685f83f388ded241bfcf735a8c5278d766dee"
                ]
            }
        },
        "1.51.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:91b0a7a68413cd166d76e33b8e89bfc921ec503b1d68ca06cc17a20a25214f5d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5e625b025452b72ddbbebebe03ea488365c38dfd9b6ea2a08ed45cca53ce1aa",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:91b0a7a68413cd166d76e33b8e89bfc921ec503b1d68ca06cc17a20a25214f5d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T14:20:45.853899675Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:41.756421909Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T14:20:44.795251668Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:44.93519275Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:45.853899675Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:09c3360a2a83dc5de0ffbc3df06470b3e81812c6e1294b4b556454970ea8563e",
                    "sha256:3349261f99fa7d7a6197e2cc225a7bb46e99f90ff1b2e90cc63c3b3b250f4c78"
                ]
            }
        },
        "1.51.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:8cb6818993858734a1d16d5085b7126019a80f998050b9c430a436abbe9cb63b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "83048df508a3c837eacccbc3f99234f71b431c6a36633ae32e209737d46635db",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8cb6818993858734a1d16d5085b7126019a80f998050b9c430a436abbe9cb63b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T15:15:33.126781468Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-08-02T01:30:49.193203152Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:af4cf77e6818016b697a1491101b40c71d06529ced65f36107749f099d6d4bdc in / "
                },
                {
                    "created": "2022-08-02T01:30:49.506874325Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.537712311Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.689414198Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-02T13:24:27.827102013Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:25.78130201Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T15:15:32.141075939Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:32.271156561Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:33.126781468Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c3f11d77a5de76ec836c52333d45ac3742c7b27d3d83feba6ec978e223715c67",
                    "sha256:42aaa51cf148d2046b04546d146478ad060a4324999fe133e99efcc2f81ac8f9",
                    "sha256:7217338231c5ba1eed5924c0cd133c09e7fc7a82bf738f62b38a6c73af38c16e"
                ]
            }
        },
        "1.51.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:001d1aa216e105e6455127d80cf2e97d6bfc7c513ef900a7216370144b5e335f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1e544fa5a150e1c7c92fdc4720c55ec6507ecb00592680805390383481c9f566",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:001d1aa216e105e6455127d80cf2e97d6bfc7c513ef900a7216370144b5e335f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:16:37.055437634Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.564559193Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.714860115Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.841247308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:29.771452065Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:16:36.10488113Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:36.227302364Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:37.055437634Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:78a114225f678779cef91cb3a81713f0fa91df776898227485efdc642721a644",
                    "sha256:4264cf7466db6f1200514f7636ff6f2bb33b6f3ea60739662c60804cef31734b"
                ]
            }
        },
        "1.52.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:ff0f04d8bcc00a8e9fb0c681f231fcd93e599c7bc610fbbe6d62c0a7f8c28012",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e1cf71ad805d737def178f5c3c8fc230d56952ba6c46f6708c132610420ba33f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.52.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ff0f04d8bcc00a8e9fb0c681f231fcd93e599c7bc610fbbe6d62c0a7f8c28012",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:51:16.160627152Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.564559193Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.714860115Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.841247308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:08.847358559Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:51:15.173711689Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:15.308528381Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:16.160627152Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:c6eced9352ffec563d62d6aae272ceaca5d9711135b2acbfdc316cf345b1086e",
                    "sha256:db6b6a80cf13960442d8f32553274dda669b2a0337b772b55c8894f31c6b5ae1"
                ]
            }
        },
        "1.53.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:5ab5090346f4e77a3a887d3758c003b2b1c88700de86e6965e46f6ba459d65d4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e82ceb2e832292da4679a97a8141895a38f9ad3edcc86ab85ca17eff1dd5bee4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.53.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5ab5090346f4e77a3a887d3758c003b2b1c88700de86e6965e46f6ba459d65d4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T16:28:45.32800633Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-10-25T01:53:34.67854161Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7633003155a1059419aa1a6756fafb6e4f419d65bff7feb7c945de1e29dccb1e in / "
                },
                {
                    "created": "2022-10-25T01:53:35.02678149Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.564559193Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.714860115Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-07T17:30:07.841247308Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:38.019832282Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T16:28:44.371291867Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:44.495896664Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:45.32800633Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4462d5b2da2985f37409c9b257afd2b9fb82356ce4e43e804ee34214242e34a",
                    "sha256:208dc72a3a61b2d884b4b9ef322c3aa17b8bb6ae29daa693509dde0b841bace1",
                    "sha256:0e20e8f86adf638b060c3c41114f83da9b3a049ffff1498c66fd822f8f188ddc"
                ]
            }
        },
        "1.54.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:0b0e17c14b94ee2eb6d1355f18309b4353d0c292c6c42b8520c46e6af20953f9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b90e5c74ab8610fbfb33bbe30b9a47b1e045527861b49af82800a5f61109580f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.54.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0b0e17c14b94ee2eb6d1355f18309b4353d0c292c6c42b8520c46e6af20953f9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:08:25.547480502Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.646851294Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.770990193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.896988621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:18.365695073Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:08:24.639075386Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:24.752833983Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:25.547480502Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:b71a7fbc2254a0a11e1140bd8bda3256e418c26fe3860965cd0a1f980fe2786f",
                    "sha256:e7dd189adb23333a40a49120d747a8f5177748f6a4f7e87005506ecfb6cbbf8c"
                ]
            }
        },
        "1.55.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:25414ed5ec4ffd5f17bbf06dc6173b5126b50a66a290f753e21d166448a437e7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f102ab26b3e34666e22519acdc33f4293425a859286d9c606a1bf9cf10554155",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.55.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:25414ed5ec4ffd5f17bbf06dc6173b5126b50a66a290f753e21d166448a437e7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:43:00.851947903Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.646851294Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.770990193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.896988621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:42:53.533123635Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:42:59.889352423Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:43:00.016761134Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:43:00.851947903Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:36416815b2a457b0b19c341f5a0b2f0b079e8f41fe155777820db7b6b98ca1b2",
                    "sha256:26ecb5a776e680093d2732d9a14bb6638ea2c804d6aa2ce16e38d53c7abf833f"
                ]
            }
        },
        "1.56.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:175a985451adb6e5c4c4509858673988db0811a2830ce8552fc0bb1838ce82e7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "44c277f05141d293eaacb19f7915d7f076ea534e69495c1fab5c10867feb2dec",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.56.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:175a985451adb6e5c4c4509858673988db0811a2830ce8552fc0bb1838ce82e7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T08:17:07.443137402Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.646851294Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.770990193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.896988621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:00.165997937Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T08:17:06.499301431Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:06.619283058Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:17:07.443137402Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:74393f938a24cf9f701cd68139a09cfc50287a5921b5ee7cf7ae7df9ed32600f",
                    "sha256:760bf73f387f9c57b0cef14ba37d7b2c36271d76aab64ded6407fda186b72726"
                ]
            }
        },
        "1.57.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "bash"
                ],
                "Image": "sha256:7e0365b104ca4001bbe92577b2744d2991d7cee7a2241c4f5a76b329c339fdca",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "944acd10b5c2952fce9c56b97c8ed94d195679a99eaf377f13dee0609da12c68",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.57.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7e0365b104ca4001bbe92577b2744d2991d7cee7a2241c4f5a76b329c339fdca",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T09:07:04.447682025Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2022-12-09T01:20:21.30286184Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9d282119af0c42bc823c95b4192a3350cf2cad670622017356dd2e637762e425 in / "
                },
                {
                    "created": "2022-12-09T01:20:21.654215477Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.646851294Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.770990193Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-12-21T08:59:47.896988621Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:02.314547421Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T09:07:03.500881808Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:03.6149626Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:04.447682025Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0002c93bdb3704dd9e36ce5153ef637f84de253015f3ee330468dccdeacad60b",
                    "sha256:532a17cf2f510b2028cd58728ba13e041030a36f5b66a9d7b3f2ef9098cabbc8",
                    "sha256:4009d567728bff58e2157723f799f5c06d435425fd84828d90e0a17f417f3e52"
                ]
            }
        },
        "1.58.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:00b83a8555f9e7b93209aa3fd7aa97959dc05cac2ea2f695093b1cfecd0c9d42",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "container": "ebabbbf4e5442f90dcaceded2e92571387c91aacc933cec8255a031ddade059f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.58.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:00b83a8555f9e7b93209aa3fd7aa97959dc05cac2ea2f695093b1cfecd0c9d42",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2023-02-02T10:45:19.03788142Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-02-01T11:42:37.482727828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.542979925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.607000397Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.664006463Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:39.593020695Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8b180a9b4497de0c6e131d6b48cf5c69a885379e63033ab9639d1655991e626c in / "
                },
                {
                    "created": "2023-02-01T11:42:39.850025895Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:47.844108652Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:47.964280103Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:48.083532081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:45:16.32626523Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-02T10:45:18.067534361Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:45:18.207162619Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:45:19.03788142Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d543b8cad89e3428ac8852a13cb2dbfaf55b1e10fd95a9753e51faf393d60e81",
                    "sha256:9b4248d673ddef61407239e8123b82bc1571a56cf3e016abd700156e83ba8bb4",
                    "sha256:59c89d26bebf9e4a5014fe7477a580ca42a2e9711a0a24bb79350c08a384b7dd"
                ]
            }
        },
        "1.59.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-06-01T15:53:27.877512544Z",
            "history": [
                {
                    "created": "2023-04-13T13:05:13.496726073Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.557712287Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.637326115Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.704319522Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:15.451478418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05d1c0936b046937bd5755876db2f8da3ed8ccbcf464bb56c312fbc7ed78589 in / "
                },
                {
                    "created": "2023-04-13T13:05:15.714908196Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:27.284150667Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:27.284150667Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:27.284150667Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:27.284150667Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:27.284150667Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:27.333634473Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:27.877512544Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6f37ca73c74f2cef0ddefd960260f2033c16c84583c5507a4f37b1cf7631dc20",
                    "sha256:9ef2407d7eb8babfbaed35d944a4bd8995a16253d799a010c688107394313a94",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ff03d7d1bca863ab329bfb8712f5a535f07002f3c770077200d99469d45aa3dd"
                ]
            }
        },
        "1.60.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-06-01T16:28:54.240498079Z",
            "history": [
                {
                    "created": "2023-04-13T13:05:13.496726073Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.557712287Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.637326115Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:13.704319522Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-04-13T13:05:15.451478418Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d05d1c0936b046937bd5755876db2f8da3ed8ccbcf464bb56c312fbc7ed78589 in / "
                },
                {
                    "created": "2023-04-13T13:05:15.714908196Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:28:53.660736654Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:28:53.660736654Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:28:53.660736654Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:28:53.660736654Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:28:53.660736654Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:28:53.686383236Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:28:54.240498079Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6f37ca73c74f2cef0ddefd960260f2033c16c84583c5507a4f37b1cf7631dc20",
                    "sha256:c889d6826b2c5ab4c90c31995434f03d06cc4cb9b895a2ca9fed7e23dca23a7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b9754a5dcdb528f737f59623e249d47ec758db7549839a7efe15c3718b101778"
                ]
            }
        },
        "1.60.1": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-08-03T11:51:03.380204604Z",
            "history": [
                {
                    "created": "2023-08-01T06:16:43.955733321Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.018270958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.073377052Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.123822186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:45.820326219Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:233702cd816c07bc9fed02881b11fb3bdcaee41f3ce3ec1c9f0c4a060b155d5b in / "
                },
                {
                    "created": "2023-08-01T06:16:46.059984082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:51:02.769577842Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:51:02.769577842Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:51:02.769577842Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:51:02.769577842Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:51:02.769577842Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:51:02.84515186Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:51:03.380204604Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:954c82bdeb5fcc80094317528fa3fcbb1026aeff64f872527d35ec9b4343b84d",
                    "sha256:b8b8e2e4fd52d433f739abe0ed38138229d9787b01d6ad589e25d79f9c12564a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:218ade6c89cb935ac23c4a9feaa4d5480d95fe1ab10073cb4ce4c34dbc874e56"
                ]
            }
        },
        "1.60.2": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2023-09-28T10:39:38.205197052Z",
            "history": [
                {
                    "created": "2023-08-01T06:16:43.955733321Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.018270958Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.073377052Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:44.123822186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-01T06:16:45.820326219Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:233702cd816c07bc9fed02881b11fb3bdcaee41f3ce3ec1c9f0c4a060b155d5b in / "
                },
                {
                    "created": "2023-08-01T06:16:46.059984082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:37.612412716Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:37.612412716Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:37.612412716Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:37.612412716Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:39:37.612412716Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:37.653318621Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:39:38.205197052Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:954c82bdeb5fcc80094317528fa3fcbb1026aeff64f872527d35ec9b4343b84d",
                    "sha256:735c6c1937095ae79d7f4d7453a2776668157b07788ff89730869d0bff1e9fb7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:896745c62024615a9ef13e3b06d323d57d4ba9f058f25b742e421b6175cff932"
                ]
            }
        },
        "1.61.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "FC=/usr/bin/gfortran",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-01-10T15:56:37.930496963Z",
            "history": [
                {
                    "created": "2023-12-13T10:27:43.956028683Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.019734751Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.068648223Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:44.112893577Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-13T10:27:45.59526847Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5696198fbfd4074852bdee76ffd84da75da8de76727cef4f0cdd265f7bee6b76 in / "
                },
                {
                    "created": "2023-12-13T10:27:45.793268447Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:37.291199661Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:37.291199661Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:37.291199661Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ FC=/usr/bin/gfortran PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:37.291199661Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        gfortran-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:56:37.291199661Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:37.371694144Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:56:37.930496963Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3a03f09d212915b240e9d216069aba5652ed4765c7e4b098c65e71860d47b8e1",
                    "sha256:f78fbfdaab94c47ca3ddb0eb79e15a16a4cb378cedfe08512edc29c560b06edc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e99ec4ee64fd4d2667290ddcc1f6cc31d6acd83250182057d1e0af35c8097cff"
                ]
            }
        },
        "1.62.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "FC=/usr/bin/gfortran",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-02-12T17:12:08.236080118Z",
            "history": [
                {
                    "created": "2024-01-23T13:01:02.876367839Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:02.894270961Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:02.912308857Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:02.933515487Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:04.638592386Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b4e122c96445546ef9fba44a4eae6ada6239edecb9eea2c807a83abaebad451 in / "
                },
                {
                    "created": "2024-01-23T13:01:04.825078387Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:12:07.646993988Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:12:07.646993988Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:12:07.646993988Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ FC=/usr/bin/gfortran PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:12:07.646993988Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.62.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        gfortran-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T17:12:07.646993988Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:12:07.704914487Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T17:12:08.236080118Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.62.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:28da0445c4497f3ecb56288bd74d91ed1ff6f86578d1d0f6f9cb2781915163b1",
                    "sha256:a7c9350b994b8308cac14f84771542db7b85898e8b75b77acdf4e17f31cb8663",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3b2ed178cc9f4ea40406b6735c308bb3c144a6bed25709712ff61b193a6ac741"
                ]
            }
        },
        "1.63.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "FC=/usr/bin/gfortran",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                },
                "OnBuild": null
            },
            "created": "2024-02-12T17:51:03.105190495Z",
            "history": [
                {
                    "created": "2024-01-23T13:01:02.876367839Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:02.894270961Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:02.912308857Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:02.933515487Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-23T13:01:04.638592386Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b4e122c96445546ef9fba44a4eae6ada6239edecb9eea2c807a83abaebad451 in / "
                },
                {
                    "created": "2024-01-23T13:01:04.825078387Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:51:02.508216619Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:51:02.508216619Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:51:02.508216619Z",
                    "created_by": "ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ FC=/usr/bin/gfortran PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:51:02.508216619Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.63.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        gfortran-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T17:51:02.508216619Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-12T17:51:02.540480276Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-12T17:51:03.105190495Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.63.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:28da0445c4497f3ecb56288bd74d91ed1ff6f86578d1d0f6f9cb2781915163b1",
                    "sha256:41426af570109ca9d92ad74a5c0a645820b39ad761c7594775c1a6aa65a473fe",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:52c856dc61ccc89ee6c34c384887c0468025cf3bcf0e1428316d25e00ed72a6f"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:cfe790319db90c825957e41fad49ea3783d439c5d7aa7e6264e947348fa09b85",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "container": "b680adc603ebfb295ead7c4804303075e68e87880f0aa92836e88e39d7187359",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "GCC_VERSION=10",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "CC=/usr/bin/gcc",
                    "CXX=/usr/bin/g++",
                    "PYENV_ROOT=/opt/pyenv",
                    "PYTHON_VERSION=3.7.13",
                    "DEBIAN_FRONTEND=noninteractive"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.59.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:cfe790319db90c825957e41fad49ea3783d439c5d7aa7e6264e947348fa09b85",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>",
                    "org.opencontainers.image.ref.name": "ubuntu",
                    "org.opencontainers.image.version": "20.04"
                }
            },
            "created": "2023-02-16T16:56:29.195747272Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2023-02-01T11:42:37.482727828Z",
                    "created_by": "/bin/sh -c #(nop)  ARG RELEASE",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.542979925Z",
                    "created_by": "/bin/sh -c #(nop)  ARG LAUNCHPAD_BUILD_ARCH",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.607000397Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.ref.name=ubuntu",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:37.664006463Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL org.opencontainers.image.version=20.04",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-01T11:42:39.593020695Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8b180a9b4497de0c6e131d6b48cf5c69a885379e63033ab9639d1655991e626c in / "
                },
                {
                    "created": "2023-02-01T11:42:39.850025895Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:47.844108652Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:47.964280103Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-02T10:40:48.083532081Z",
                    "created_by": "/bin/sh -c #(nop)  ENV GCC_VERSION=10 CMAKE_VERSION_FULL=3.18.2 CC=/usr/bin/gcc CXX=/usr/bin/g++ PYENV_ROOT=/opt/pyenv PYTHON_VERSION=3.7.13 PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin DEBIAN_FRONTEND=noninteractive",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:21.90016549Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        g++-${GCC_VERSION}        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${GCC_VERSION} 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${GCC_VERSION} 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && curl -sfL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd _1000 -g 1000     && groupadd _1001 -g 1001     && groupadd _2000 -g 2000     && groupadd _999 -g 999     && useradd -ms /bin/bash conan -g _1001 -G _1000,_2000,_999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools cmake==${CMAKE_VERSION_FULL}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-16T16:56:28.229898309Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:28.364575072Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:29.195747272Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d543b8cad89e3428ac8852a13cb2dbfaf55b1e10fd95a9753e51faf393d60e81",
                    "sha256:1be68d4af71218293b3f19cf70a023ee2e683f1a41f20d3958093714cb01366e",
                    "sha256:35abbdd1b3e664b5294cc1bd02f87a12249d6cff05221d6542555b9f63bdc491"
                ]
            }
        }
    }
}