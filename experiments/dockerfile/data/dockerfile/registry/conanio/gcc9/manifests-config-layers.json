{
    "manifests": {
        "1.16.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8087,
                "digest": "sha256:056d0ef96fbfc4bcc8f4eac7314b5056ca3b184aa78770069803469be48422b0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29729754,
                    "digest": "sha256:4417cd7c3ebb45585a393a0c01ef74414c31104c874b4252d7034cd416796faa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:df4b01c082df6617a4ec1bf6043f0e270e774c843f7e974e2243090b86d5f929"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:08458b88081614d856d6db8cbe030d86b31ac276e3d439b280e633cb0a9c8d6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245916736,
                    "digest": "sha256:73de97365543866030445e3d9dd448259e260b05e81474bbbe2d4a432beb7c1d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:56a6f3d6636fb96d4da5f89eafe2359636f921702e9938800f27d2702dace6e6"
                }
            ]
        },
        "1.16.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8086,
                "digest": "sha256:70e392a15d36921e78067744c701af8292b8b6258de05180f9c77c55686f0a4c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 29729754,
                    "digest": "sha256:4417cd7c3ebb45585a393a0c01ef74414c31104c874b4252d7034cd416796faa"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:df4b01c082df6617a4ec1bf6043f0e270e774c843f7e974e2243090b86d5f929"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:08458b88081614d856d6db8cbe030d86b31ac276e3d439b280e633cb0a9c8d6b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245914783,
                    "digest": "sha256:db5bbf9162dd4468b7bacc5935d99eb31563ab2d13ffd2ea1088ccf8f726aa53"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:00966585f48829729952ddd40154498d55835175189f227023c0b62bce21e8f1"
                }
            ]
        },
        "1.17.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:8cb63e0e67584c4d56655d999482a2be81bc66f3d8f786fb9192a4ba67b3a11e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619579,
                    "digest": "sha256:29c2f229a1281554ccce1972738cfb3232c4ace59343b4090d6e09f148fee588"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30946,
                    "digest": "sha256:5d724aeeb8846c1a94a323f756fcf2ae6ca4e573edd64266c2c220a7951827b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 865,
                    "digest": "sha256:60682405dd89aa6c1621f0f2df2ba6b430402c5b59c27b6c71af92b07e535893"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:3b9cd020258303b6913dc8e15db14030877decb816e87cde6fc4d24b060881a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244164687,
                    "digest": "sha256:b251fc73f54bb4b3220590880abb6417270ee39bf7abebf43ead7eb561ccc6c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:81cbddb4277c7ac6d6bd7f58ae1baca87d07e283f4212121003882ebea67b514"
                }
            ]
        },
        "1.17.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:a3c5c6cc05b3482669ef7ba9315663caa5894aa05fad3d8ae17a4c2758175774"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619579,
                    "digest": "sha256:29c2f229a1281554ccce1972738cfb3232c4ace59343b4090d6e09f148fee588"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30946,
                    "digest": "sha256:5d724aeeb8846c1a94a323f756fcf2ae6ca4e573edd64266c2c220a7951827b3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 865,
                    "digest": "sha256:60682405dd89aa6c1621f0f2df2ba6b430402c5b59c27b6c71af92b07e535893"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:3b9cd020258303b6913dc8e15db14030877decb816e87cde6fc4d24b060881a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244147032,
                    "digest": "sha256:5667b52985d98ac2c18acd0e2c5f764d1fe3718e28cbe105dc5b44fee106f883"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:de4bf654d147195b19dda426b8cb699fb99e8e27bb2781db82b3cea32a058d13"
                }
            ]
        },
        "1.17.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:ae5b52545ce2b6c84a9081fa576f160abb16a688cfd12a953c275d6eeeea0a8f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619684,
                    "digest": "sha256:1eecd0e4c2cd8c1f628b81c53a487aae6c8d4140248a8617313cd73079be09c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30972,
                    "digest": "sha256:fac13afdf65bf403945c8d6bee654a26940c5527a9913bdf8daa54b69a49f550"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:0c6dd534ddf18642a5af19c09c2d9744d0d1aa93680995d430b5257b6eed079d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:854703cff8700dce5b5ff70e54f5d612ab701405bc200a5b10a0213ca9025e50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244190168,
                    "digest": "sha256:ce5ec88c41e01484575df23e5cc7060c4cb185809c7323bd6b85889e7b7b889c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:3e968dd6e7e980347f4a6b27a178bacdebbdf20896800814e294a119a424971c"
                }
            ]
        },
        "1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:2decd6be46019dc210f9b74490c9b3c4e17b8f7d839a807a01714312d33d505f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619684,
                    "digest": "sha256:1eecd0e4c2cd8c1f628b81c53a487aae6c8d4140248a8617313cd73079be09c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30972,
                    "digest": "sha256:fac13afdf65bf403945c8d6bee654a26940c5527a9913bdf8daa54b69a49f550"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:0c6dd534ddf18642a5af19c09c2d9744d0d1aa93680995d430b5257b6eed079d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:854703cff8700dce5b5ff70e54f5d612ab701405bc200a5b10a0213ca9025e50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244162220,
                    "digest": "sha256:c3a7af5f86a5973c9452f1f73f8b6669b0364f08273a4e8d255c13f91de7e252"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:67db8e97e318de24ff871d4556a22d601af47f95f45d1abf6407b692de89494e"
                }
            ]
        },
        "1.18.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:cc37e7ceb86be3e1b5cd2da4f19eba5cb5f84c754ade42d4b4b2a0eb51b10ce3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619549,
                    "digest": "sha256:34dce65423d31602756adfe952aa443392c805599cc4b80a7b5ce55c25a90dd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30987,
                    "digest": "sha256:796769e96d2463fdd0d516dde12153b63393c330bbf25ce7621ce9b7abac3a57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 863,
                    "digest": "sha256:2a0eada9611d5c30947fee85903015cc594e17c9ebc303297d704f994b043dde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:d6830a7cd9726836800c3b55c886024da1070807af0c3c3df8016c78beaf9ce9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244177450,
                    "digest": "sha256:5adbf5ec6ab93c8f206d233ba5998e632d2a7216c44de3106e4544b8135bdd5c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:d6a3c7512744d20f433d7e4ac7876a40219018c461d2def424ca5b79ef2bb101"
                }
            ]
        },
        "1.18.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:5b8da3caae18770c4a300f6eccbdbe6bed1a76c20a00a824edc763fcdbeb5ebe"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619549,
                    "digest": "sha256:34dce65423d31602756adfe952aa443392c805599cc4b80a7b5ce55c25a90dd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30987,
                    "digest": "sha256:796769e96d2463fdd0d516dde12153b63393c330bbf25ce7621ce9b7abac3a57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 863,
                    "digest": "sha256:2a0eada9611d5c30947fee85903015cc594e17c9ebc303297d704f994b043dde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:d6830a7cd9726836800c3b55c886024da1070807af0c3c3df8016c78beaf9ce9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244199226,
                    "digest": "sha256:2316b6abd38cd15e68ed9b842d38edb9016974199699643de76de9d78102f57d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:00dcfa2f6651a745de59fbb14af35bba23c982f951659b69aff2050a33506661"
                }
            ]
        },
        "1.18.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8149,
                "digest": "sha256:9eaa738ba5eaadde146d3fdf3983a53e46c8f814cec133069377846cf490ccbf"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619549,
                    "digest": "sha256:34dce65423d31602756adfe952aa443392c805599cc4b80a7b5ce55c25a90dd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30987,
                    "digest": "sha256:796769e96d2463fdd0d516dde12153b63393c330bbf25ce7621ce9b7abac3a57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 863,
                    "digest": "sha256:2a0eada9611d5c30947fee85903015cc594e17c9ebc303297d704f994b043dde"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:d6830a7cd9726836800c3b55c886024da1070807af0c3c3df8016c78beaf9ce9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244225000,
                    "digest": "sha256:98552164f14d423fa927f19ec3df43a9aae4cc182310642d4dabaddd720b141f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:2e5be2498958633ff0ecb7c3f1ce84c23cda4661fd822a5209cdd43da374d3ed"
                }
            ]
        },
        "1.18.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:d20f820891ec4ae234735a970e505e8fa54891c4d80555a8bb1c7e8ff24bab45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619226,
                    "digest": "sha256:1178bd7bd0bf90b8f26ff2d6c1c6fb89597b86e97fe97a43e769921369fa3825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30980,
                    "digest": "sha256:4015a21b648d4db3b90f21e647cb40a51541e6f3faae32a073ab35f6fb44e277"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 860,
                    "digest": "sha256:ca864db11161c5b69fd4b2b37f48c1271224ee39e0e292ff87159916aaaaa031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:e91f867b257568eb1c9b7fc486d80237c83d0f81637dccad173aaaab37661ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244174583,
                    "digest": "sha256:1e241103257084e734cffc968845a3167095b24a36abb2f5a04ff5aae40739a4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:9752b2ba70d60aeb11c52d098241c1bec7a7777f00d453a531f415dfa8f14c6f"
                }
            ]
        },
        "1.18.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:f9ab52cd024d6e71a0b36ec4066da813d4f482f46f2cf2e40a159171d98b2a0a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619226,
                    "digest": "sha256:1178bd7bd0bf90b8f26ff2d6c1c6fb89597b86e97fe97a43e769921369fa3825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30980,
                    "digest": "sha256:4015a21b648d4db3b90f21e647cb40a51541e6f3faae32a073ab35f6fb44e277"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 860,
                    "digest": "sha256:ca864db11161c5b69fd4b2b37f48c1271224ee39e0e292ff87159916aaaaa031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:e91f867b257568eb1c9b7fc486d80237c83d0f81637dccad173aaaab37661ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245281611,
                    "digest": "sha256:2ffdeff834aecda89e54b1d08a6c6b83870ba6c0dd8cafb0f9f06e1ed1260e0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:cd4caaee66a0d443d287fe7f6e1b5d5e71ec73cc66d4dc2f331b633cf8c3f489"
                }
            ]
        },
        "1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8149,
                "digest": "sha256:b7f78ff9ff7fafbd97c05e03fd22ced73a4e0fab03813a8316485ed6bb73b75c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619226,
                    "digest": "sha256:1178bd7bd0bf90b8f26ff2d6c1c6fb89597b86e97fe97a43e769921369fa3825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30980,
                    "digest": "sha256:4015a21b648d4db3b90f21e647cb40a51541e6f3faae32a073ab35f6fb44e277"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 860,
                    "digest": "sha256:ca864db11161c5b69fd4b2b37f48c1271224ee39e0e292ff87159916aaaaa031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:e91f867b257568eb1c9b7fc486d80237c83d0f81637dccad173aaaab37661ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245291196,
                    "digest": "sha256:2bed956f9651900ba2e8f24e9f09a7bfdecde38aa23d5561e173be76dc846867"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:a8e90643842535f0eedc8818821dd904160fda9dd4d37b8dc009eb29abad7411"
                }
            ]
        },
        "1.19.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:073b93e646e84a753b50bcf10aa9da4d7c21aea2208936737a5f120e563622a0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27619226,
                    "digest": "sha256:1178bd7bd0bf90b8f26ff2d6c1c6fb89597b86e97fe97a43e769921369fa3825"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30980,
                    "digest": "sha256:4015a21b648d4db3b90f21e647cb40a51541e6f3faae32a073ab35f6fb44e277"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 860,
                    "digest": "sha256:ca864db11161c5b69fd4b2b37f48c1271224ee39e0e292ff87159916aaaaa031"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 161,
                    "digest": "sha256:e91f867b257568eb1c9b7fc486d80237c83d0f81637dccad173aaaab37661ad2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245293899,
                    "digest": "sha256:d8df788dbc0e1e9eabaacd4483b1d780a7f240f67632890b06bcf1affc95a128"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:35c33b0282c986ade53e3f092d54c7b376f4ec4993d3eac3bcfd8af9082c0a34"
                }
            ]
        },
        "1.19.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:1ec54ff6b29fb188124d7af9c60adb84060ea5c04d525577d219955cf1d9c398"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27620501,
                    "digest": "sha256:63f58bbbd54a0267776488c65048d665c7523d77126d9cf37133348e60c1bceb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30965,
                    "digest": "sha256:a8885b922bcfa99979fec922528b6d787f047960792e713d783a9260cf4c832a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 860,
                    "digest": "sha256:7544f62238c128b171d0f8797a5d6b48b089c449d16fcaa6e2f7829aa28d9f44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:91514175c73da9ad1166f3f7b3ef879ca6102c51a4170cf92a3ad89637cca5ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245308114,
                    "digest": "sha256:1b1fba9a9665b1e9e908b71a035487d69d3faa83d7f7b1e5770a81ab93e930ff"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:2d86ee1ef5766c71f5535833436671939f4c62848b024797f1649059aefda85d"
                }
            ]
        },
        "1.19.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:30e66b58d699a6d4dc1dfd584ed71c2510a89082a0244945459a074b6fbce22f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27620501,
                    "digest": "sha256:63f58bbbd54a0267776488c65048d665c7523d77126d9cf37133348e60c1bceb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30965,
                    "digest": "sha256:a8885b922bcfa99979fec922528b6d787f047960792e713d783a9260cf4c832a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 860,
                    "digest": "sha256:7544f62238c128b171d0f8797a5d6b48b089c449d16fcaa6e2f7829aa28d9f44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:91514175c73da9ad1166f3f7b3ef879ca6102c51a4170cf92a3ad89637cca5ea"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245308449,
                    "digest": "sha256:1e8ab4133776a5b72b52abf160a261fdf6dfa83b1d3588e2271764484c589ce5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:3e7c5c99931ab2141aa466406f6904df34306f724ab9dd7f303c52a5cfd18fce"
                }
            ]
        },
        "1.20.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:92fe2da6b9382e5be5de3b32cc202b167c9fbcb2d91f638bf2665ed87ff83b73"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245365875,
                    "digest": "sha256:434aaf168d5a5826e17b6acd5f9835ca15b347d66b9cd6d8f3c79b509c893401"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:2788a6230e243f4662380fbf78aa924cffd5eab9ac7a4d24f9bcd7fc507c924f"
                }
            ]
        },
        "1.20.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:6555d43b1f5517ed4dfd44f7341d0918a2b790447c853cc9bb5b6758c3cdbe45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245346872,
                    "digest": "sha256:6aa33d901ca8b11a2d0187f089a73380e8c62c7e30058f720d2a330ea0518455"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:238b6152bff339848d08db7433b1650de7369ce8e3b54d9f56d7e5f167da2925"
                }
            ]
        },
        "1.20.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8149,
                "digest": "sha256:c862da9e3725b7b6a736f605beae6afaf8eb7e58ab1464d3cd01a7caafac424e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245346694,
                    "digest": "sha256:3dbdd127369a4fd2001b076b72eaab87f0c3625fca92546e3dd98fcf766428f5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:66a5a0099af53db26e27949e246db1d7ecd3939386afa730d75e9e6c1a7c65ff"
                }
            ]
        },
        "1.20.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:d52f8177d9f4cce32a08e44f107a05df948d95781f93529745a86ab64b432f8e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245356455,
                    "digest": "sha256:c7dcc3f7dd332a0b9eb6f451d3a787939a882778c167ee04043ade20be39d526"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:6c706f25e44b4f3adfb2422d125c18a1f35b7e50bfd2fd88f3751b64de025c9a"
                }
            ]
        },
        "1.20.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8150,
                "digest": "sha256:2c671d4975f64550f0a5a22598986443a63ab41247c18d393ddb222e8a1450ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245329823,
                    "digest": "sha256:6809ff1a2601355ed882199988df81b29fd1ed7517bcc06f5f9a29d758120114"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:b80505e2113e60991fc5ea869b1f27812b8dd0112b6c9fd70f181a0075f53f65"
                }
            ]
        },
        "1.20.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:3137cdfc5a8c41c2640ed5e5f6caa09a7c6e141b738297b88131d86f54976b57"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 245378794,
                    "digest": "sha256:9d6618c4046fc53e24d3f974c01d9854f2a5e6ed9a31ab7e7b857cf61cab6f2d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:ea3d1c3958226bac21bdd40f41ab92439669e70c10080c80e3f6a5fdf802c6b9"
                }
            ]
        },
        "1.21.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8151,
                "digest": "sha256:dadfff11ae00b36b75deb5af4c2730b127a7820b12ca00d4f085d7f221af4b39"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 27621247,
                    "digest": "sha256:b21821a6200724aba9a49fe310d920819975191082b845ee8e34c4871d92cdf4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30988,
                    "digest": "sha256:3052859eed3080fc96b719cc8b6ac03bfef13e0bed65966773b6cdcb1374acf2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 859,
                    "digest": "sha256:fba68c59156676c4890f34bb6f00da24441138a1053e6e85a3fcb448155058b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:aab6656eb3a7c5333cc5c4aebc6bbdf3974563e5bbaa6809f3334f2ee6b1144e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244035566,
                    "digest": "sha256:063dd3ae62c9d7e8dfea810519008803f5b13e1c77114247281d1397ac695bd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:f7f49abb26a7ce67f3363e7c081bfe70eaecaec262069fac28b099a3471cc304"
                }
            ]
        },
        "1.21.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8148,
                "digest": "sha256:c20b3bd6b1fe20570fe7feef90fb26eb22205a981bc0aedc444e3f47f15bf50b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28275627,
                    "digest": "sha256:93956c6f8d9ea3e705e03e79d66a5c2acc9a4ac10ed6fb5c6cf654ba9c297df5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30599,
                    "digest": "sha256:46bddb84d1c5e5324fcc5efc270c7e081cc9966c125ac56c900dbca6b7a2fe06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:15fa850485767a7b5ef5a59fcd74b158b9a7faffef6254d4cf0c8d86d347e1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:8aa40341c4fa46ae7bf3b1915da155fd05e53bcc06cfea0606a055b781dd14cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214950783,
                    "digest": "sha256:115960c8c577ad5313e98e6f60a14e13a2f041c3bc93d0db4e1577536805b53f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:44404c355d61bd5abd3e5d64879dd57b9cb67510cf084dfd5845ad205ddec033"
                }
            ]
        },
        "1.22.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8157,
                "digest": "sha256:31cb3958cf79e4ed349c4831dcd596080e7ef0b4dc7153f59ca1eca7886d4867"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28275627,
                    "digest": "sha256:93956c6f8d9ea3e705e03e79d66a5c2acc9a4ac10ed6fb5c6cf654ba9c297df5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30599,
                    "digest": "sha256:46bddb84d1c5e5324fcc5efc270c7e081cc9966c125ac56c900dbca6b7a2fe06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:15fa850485767a7b5ef5a59fcd74b158b9a7faffef6254d4cf0c8d86d347e1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:8aa40341c4fa46ae7bf3b1915da155fd05e53bcc06cfea0606a055b781dd14cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214943395,
                    "digest": "sha256:51f31170e24543a1088cf013d7cace05821543edacade2b53b39fb210b0b2c3e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:c37b22ba375126bedf269f11470f06b9b2a827e264097d585259fc194a6339d0"
                }
            ]
        },
        "1.22.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8156,
                "digest": "sha256:35f732a9a88abf516b6d0b9c1e0f69406f3358234f4fdfce6dfd45dbf953a568"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28275627,
                    "digest": "sha256:93956c6f8d9ea3e705e03e79d66a5c2acc9a4ac10ed6fb5c6cf654ba9c297df5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30599,
                    "digest": "sha256:46bddb84d1c5e5324fcc5efc270c7e081cc9966c125ac56c900dbca6b7a2fe06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:15fa850485767a7b5ef5a59fcd74b158b9a7faffef6254d4cf0c8d86d347e1ec"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:8aa40341c4fa46ae7bf3b1915da155fd05e53bcc06cfea0606a055b781dd14cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 214984805,
                    "digest": "sha256:a0263a3df59de82ed13daa5158f2944736d3bb068956b77dca1c9a74b34eec11"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:5990a5787430c52d9ca66ad2970f4c0da92a24161b80df500cd052d1f0524924"
                }
            ]
        },
        "1.22.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8155,
                "digest": "sha256:9df223f4c3b9a60d03868a60a57ec71b3981e479044f29964f1895dfef7a3527"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276663,
                    "digest": "sha256:a9c68053c4b2379a9ad5b7306236a13f469cfd18e727dd4e76470af366445b45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30633,
                    "digest": "sha256:f2b9c43fe7e5dcfee42adb18336072154126bc052cc1c578e64d27a8aeaabc97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:90491034717d4c1d1e0b37a4bde4f3a0e26630af7d360b7c0248660ccbef59d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:781c6270286751c77c20928c68fa3edd532f0d3d11108db32020c8840f0ea6cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215001029,
                    "digest": "sha256:adb6787472f102a0b6902c3734df7e24619c28cfab3499ecc59d654ede29f039"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:8cc9cbee9ab918e4895ccdcdbf094d520a78b4ec31dab4b26c63d822c4224c74"
                }
            ]
        },
        "1.22.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8156,
                "digest": "sha256:5ab5dd6be769e56cabb7e0ab38ac0a5b5acd10dc478ac5674a5ae99ce121f742"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276663,
                    "digest": "sha256:a9c68053c4b2379a9ad5b7306236a13f469cfd18e727dd4e76470af366445b45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30633,
                    "digest": "sha256:f2b9c43fe7e5dcfee42adb18336072154126bc052cc1c578e64d27a8aeaabc97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:90491034717d4c1d1e0b37a4bde4f3a0e26630af7d360b7c0248660ccbef59d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:781c6270286751c77c20928c68fa3edd532f0d3d11108db32020c8840f0ea6cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220169753,
                    "digest": "sha256:74f687ae3923e5cef2e840fd0a5ff88e287b4e486db66c9fe1da94de02a27a0b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:2ef81bc8381ed7b6c0c465fb676c0e71a77a2d889719291b5a33fa6cebab110d"
                }
            ]
        },
        "1.23.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8156,
                "digest": "sha256:b7766320dc2663e984b4988c6020160597fa9d9b59acee48774481cc796cdd8f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276663,
                    "digest": "sha256:a9c68053c4b2379a9ad5b7306236a13f469cfd18e727dd4e76470af366445b45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30633,
                    "digest": "sha256:f2b9c43fe7e5dcfee42adb18336072154126bc052cc1c578e64d27a8aeaabc97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 851,
                    "digest": "sha256:90491034717d4c1d1e0b37a4bde4f3a0e26630af7d360b7c0248660ccbef59d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:781c6270286751c77c20928c68fa3edd532f0d3d11108db32020c8840f0ea6cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220186137,
                    "digest": "sha256:40699cc687069348fccf67042fbd22a16b40ffaeee1137e725aeda47a7b2f693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:8cba8f56ea1e8310ab188449815dbb0cdb6cd58459888149512fa667f1db137f"
                }
            ]
        },
        "1.24.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8158,
                "digest": "sha256:cdd6ed5975ab393b454c717f36c1cd449acd19337f1e07b785cd12a4d2967000"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276050,
                    "digest": "sha256:eeacba527962683a1b026af611fe162d35281159762b699172caa48c69480f79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30632,
                    "digest": "sha256:25405ed4f245fc5627d0b03996d04c11d492c7a9ff937f4562a18e8757c39434"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:22752cd61bd53e9ac71e22fef539c165b3e11b368c1e54ca947260e317c4870a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:9460de83957c509dd234ede9ea96d4d03b7f9cd252ef1497844f8450dedb6570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215111591,
                    "digest": "sha256:feeb6147b961afc104e638a238ca7bfc4321aa3519fe13a0422732894a83340d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:879fbd7f2806c8e28496a21ad879793abfabd5f46ce251f7d02768b9af5bdc42"
                }
            ]
        },
        "1.24.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8158,
                "digest": "sha256:7466c031b2c7e5872ecbe76608b93216553dc3e2407c0343db15c10b14be9d82"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276050,
                    "digest": "sha256:eeacba527962683a1b026af611fe162d35281159762b699172caa48c69480f79"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30632,
                    "digest": "sha256:25405ed4f245fc5627d0b03996d04c11d492c7a9ff937f4562a18e8757c39434"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:22752cd61bd53e9ac71e22fef539c165b3e11b368c1e54ca947260e317c4870a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 163,
                    "digest": "sha256:9460de83957c509dd234ede9ea96d4d03b7f9cd252ef1497844f8450dedb6570"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215131530,
                    "digest": "sha256:4666de7f9d4a3a38a26c7a9246d0e213764a5ae04d57c0608e2c5aa967f1a85f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:242ab80171b6d386f52119eb8e73d6399432bab7c0877db2ef015bb3362b41c6"
                }
            ]
        },
        "1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8156,
                "digest": "sha256:57d621283673f457e9013847382ff99107b41c984a899c8ebed8c78fb4b89143"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215187870,
                    "digest": "sha256:162419dc7bb54fde13bc4edc08d4bc118be0c16fbb1ffde631e9b0bbf128b70a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:420913e267e7b71b6af89739a27deff4a46c8da58ac2fcbd2fa9fa71c875d2a8"
                }
            ]
        },
        "1.25.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8155,
                "digest": "sha256:1096addff930991ac1cc9293a492c6ed06a137ff0558639ebfcebb8ec7b22de3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28276062,
                    "digest": "sha256:cbdc015de25991fc809f73f41c384f35d1926b260890e8dd3943b23f5a52ca13"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30624,
                    "digest": "sha256:35f8707632bb6296cc7d62276ca30329ba0d420178cc8308f00db6ff82f3e5b8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 842,
                    "digest": "sha256:6b786d087f830394afa28d7897c07c4088bfc81d6459fa07662492ccf8d70888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 162,
                    "digest": "sha256:31fb3cd05fdd042de775cfc09fac087a0ade23200fe43caa487e654f771dcb99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215193168,
                    "digest": "sha256:7a1f3dc39aa594ae8aab9a9bcf0e63e9531382eec8d21d5bed4cf59e60c5b559"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:bf0919da34b78736d3081c6652d636939433167f0a70d0d30d211f10600b86a3"
                }
            ]
        },
        "1.26.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8158,
                "digest": "sha256:b7198c143a2b90482eb0154be39d53ef63832d885ae8f88d48a448a6b9227f13"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 215183700,
                    "digest": "sha256:cb4bc5901df6a499097f0239f89dfc919bfe566b3209752bdac87fd50bf098f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1953,
                    "digest": "sha256:970a71de68cb6c5df703caa14e157817fa84634947c0ebc7e6afe0f7ee0fbace"
                }
            ]
        },
        "1.27.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:b58498f9cfab5721f6cc03d97f939fe2bbbeefffe2905ca56308545e46da66fa"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220319448,
                    "digest": "sha256:2df653720be08dba61c8e63ce19512cdfd0e81358bc358df4c46062f2b1b8693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:fb718ee632fb116d95a7340b0ecf2eff7d6232b9d37f6da4a24f2065e09202eb"
                }
            ]
        },
        "1.28.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8160,
                "digest": "sha256:7ca4c701bedb66fd5c3c2b2e930c93efcc8faecc137413575d2315d26ad9630f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220333499,
                    "digest": "sha256:136994e6b228702da803173973aeb430ea1cd5cc0cf3f8d2bac57a79d1720381"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:67e807e163daef6626781c5e817d2a7d3eea3fa0b549c973f2e14557d40a2a56"
                }
            ]
        },
        "1.29.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:9c67f66625f8dbf772849a00bcf59689c479db1f907eec0b819b987fd64baba8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220370479,
                    "digest": "sha256:0ee1a3c2ac8fd3d4e9a0eeaae97db60c2b8e197a7d09e2bf14a2f2aed889cf2b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:7c569fefb3bfd4ab748420561e25a3ef4230c08112e8e2b04db74fd375d37995"
                }
            ]
        },
        "1.29.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8160,
                "digest": "sha256:c2368106a6cb28480f51e0f1b235dc613920673d6bfb91a0a2ef15b8beb2af01"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220371088,
                    "digest": "sha256:af2963b0f2da75ddd0367a0b97905920e39e7ea47e63f37f2b8ed918b71c44a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:53b57c54914b904a1c6a82b0971303f16acce12f04b58bbab2f2bd3e8f4dd309"
                }
            ]
        },
        "1.30.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8156,
                "digest": "sha256:390372a76a657639316d35d5433663655707ede80ab6ee61ca9e6cd663e117e2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220393925,
                    "digest": "sha256:1f92ba2e4d51af5d318d1435af2342af49ce6d144a86392ab9043ceb1ae58b4b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:8fa6a84a34b5e89cac26fff44cfdd30efe997e05b9d2eed1f67700c909830d00"
                }
            ]
        },
        "1.31.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8159,
                "digest": "sha256:e3e9321b06ff75f6b8e35e386747e28054115f250028e3b47e56f61aad2f138b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 220418848,
                    "digest": "sha256:d593f46b096003805da662a7c56fa53817db1d8320eed8291f6d72f776865879"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:282a536c075d6e3b9515e819a35942834a1e9383ca9cac4f11b35452f3a55e26"
                }
            ]
        },
        "1.32.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8741,
                "digest": "sha256:3858b3b1a6304e22f7854a663789b22b28e0499d53fc9a6b1204e04e3d28b109"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:f0f1a5a3facff86fe3afa522864d30af3aa774cd905ddb4402be87e7c00c724f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 221177885,
                    "digest": "sha256:88cc6722425f9860fa6548d31c991d43356c867c968345a8dc0b639b08274006"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:9554c06d21e6f6e263caa54cdb3eeb58b3807108573d1d158565cb4e9ff915dc"
                }
            ]
        },
        "1.33.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8981,
                "digest": "sha256:167b3639513c791a7c9454eceb1296a7c9854f4ebb0da2d58d5a509e3d99d006"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291,
                    "digest": "sha256:86202c1dae4f985c41fe5ec8cadcc2b09219dd67fe05fe4e654da6c2a4c7dec6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229974556,
                    "digest": "sha256:f2cf09f4fe202512445cc81efe10f3bc8eea249b4fc62c6b61b46ff663c9ea43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:7fa1808a83e24f1a099c2935eba63ff34a5158fc2bbbbd352ca3c98b4b293ce0"
                }
            ]
        },
        "1.33.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8982,
                "digest": "sha256:46b1d7d5a0d45c8f0d746e2da7b96d0e58c0126919683427bcb24ca18ef0e58f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:d49e17183c71e022393614011a6650b7f0250164c41e0efd03a7b1cff45229ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230107538,
                    "digest": "sha256:7856a2a3dbd93997df063f2d186a3ad98ac7786a58fe39c5077e4d781b186d69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:ade3f4bedb6c4cf0de2a877a88f9efa73deaa2bab12332d7377ec89697a71faf"
                }
            ]
        },
        "1.34.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8980,
                "digest": "sha256:a34ef0b2c1eab247d80f7a77dc09cfdd22f30387e362a3a4453d3dd30ec4d464"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:f4a9d1a1030b695e6dec68b2772e702ae1036ed63a543ce0dfe608bbd6fa7302"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230125895,
                    "digest": "sha256:1a85f3e50329bbb72a38bb345e9ff588d637d02263c3f382e2cf09da6ccd2b36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:02488bd26372db43723b4f9867483c5b0f0eeaead2bf8fb85e51726e7fcdcacd"
                }
            ]
        },
        "1.35.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8981,
                "digest": "sha256:2f8e9630deec4ac80452a4ba69de5401fd16fcede1b2ef4723d7db6f3f4eb3f3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:76cc923ae01b9e1a62d83f1ab273da333470a9935ca41487e145463b708d7ecd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230171686,
                    "digest": "sha256:35c7dd4fbef88cb435c30e4703ad17982a4463f10032dd50994b153e241e44b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:23d2c663e79ebe3a9cc4c4df681196895e627f8d3deff6c44dbaeeb0b82dcc09"
                }
            ]
        },
        "1.35.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9214,
                "digest": "sha256:6085c7acc402138b26d0a9dab8ac25da29e8b40bbb1eb7cf7536c13784e19b20"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:c4556904e83aee16c31819b071cbdf560168136ef7d5b4a826dbf4b7ea2b7f82"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230180271,
                    "digest": "sha256:ed6c4ee8589039349e5c7b2534904b350550b5f94ee7e9e9856ffa3c58120ed6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:463a65a3f9b668dce0b1bdd6eeb5051a67f50bacd3474011cfee8a13e810afa8"
                }
            ]
        },
        "1.36.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9212,
                "digest": "sha256:ebc50a7d1d025188c06ece7bb42d13becaee3260a158ba32463acc570f01a535"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:b1792798defdd10381378e1fb773c637c39128eda29c485da8333031df2099ef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230191943,
                    "digest": "sha256:b20eaa660412aea628dbd4e31c233eb272aaa886d2108990a8d0945cb8c38e3b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1947,
                    "digest": "sha256:3f45808994912c4c9a81607af617946e7d57c5da33e6f904dfa64d2a1ac9ca6b"
                }
            ]
        },
        "1.37.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9214,
                "digest": "sha256:57679e8f7d997aa5d1403289251d6d2ae32881ee54ab08d812bd356ede4cd652"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:3a93b77d8b7b94d5707978d519b3ecc9d30e89ca651e90fdc92710c65e426447"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230220463,
                    "digest": "sha256:0c4701d057bda8b417c4b7905d3baaaf54e1e4eebe3151fcde324cf71c38d260"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:140be1854182388830dc63eb340d3378b2699193e950e8e7b88164375c7bdd68"
                }
            ]
        },
        "1.37.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9212,
                "digest": "sha256:38a9b13c724bb504ca04378ca84be8667e26f88b59d061e4911c827bf84257ab"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:876d865dbcd19e6cdf7ae5a28b83e36e4b12849e63f5fcc8fdae4fc634c1c68e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230214882,
                    "digest": "sha256:a16b26f110e0f02b3c65ca5d3e389f04668b4d6f51639d834b3eb94084ab2930"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:2c5808a0f8d729422dfd755454bf3f8ca9b29bd0d2bcb716eca2de780fb0c8c4"
                }
            ]
        },
        "1.37.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9121,
                "digest": "sha256:e343a7b89944f4ba99a8b8808541edc109b693d39eaa6a04a5bdd3b69c0b0f0d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 291,
                    "digest": "sha256:3781e5a2baeb1890fc643cd107651f152111d2b271ef97efd1bbb859b6a0ff71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230940955,
                    "digest": "sha256:65aeb890f36f60ea484812bfdc6386cc3e9d8df0d590471cbd2f0babbda7019e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1954,
                    "digest": "sha256:00dbabe592f407dcc2903f208b3e0b5d57c14d720d843c77129549ecae3a0cc6"
                }
            ]
        },
        "1.38.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9118,
                "digest": "sha256:e45c2d38ea09b26be67cd4134f5bb565100ab10b74454fe992b412ba34ab2176"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:ec0deffbe48450bba1477911869e587f5d1980de0e084885e956cda535afd661"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230954432,
                    "digest": "sha256:f4507c81949b035376cca3dae0a7535afa4a22269788875e9a72070490782033"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:1e75ebf7c20baedad478c7b53b5b98eac7714785870262e2b49caa616a79b086"
                }
            ]
        },
        "1.39.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9120,
                "digest": "sha256:046c8bc94f31748294714ecb4287ef9a0985c762e2a10433f5dcd4ba15367649"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:5fe3e95c9e7ad1709a2de063f29beb95af10f481816b0160969d670b474e2946"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230856801,
                    "digest": "sha256:e3a73553555e6ef39b5e8274ccb12415731c55b35f9d9c7ac209d263e3f1a0f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:c180364cc9dcc29ff39a3cd6bd9dce38343dcebf86389f38338990495465b9e5"
                }
            ]
        },
        "1.40.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9121,
                "digest": "sha256:24f3f1b9fb1f51bf40230000d03c1f25761c0694f842064a621aa2d9f9f2d079"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:6709117326409cf0e41e2d1599ebbfb2c22ea8b0f7f76c9a7f47470706ebd3e2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230805133,
                    "digest": "sha256:25a8605a96ed323bbc665b242f6e36996143109b0efe1e8e3ffb9fd2a650f77e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:229329d9d1c6f61001f58ff6a2e8d42c5c6178ba2e01b395a74727a08333bc7b"
                }
            ]
        },
        "1.40.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9119,
                "digest": "sha256:6ff6a1e99b51c162365395560556470202f371f80ca0527e33d32200327c4465"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 290,
                    "digest": "sha256:dc6d20d15db552266f3717510da2aeef82a26b16e3684785726a1a6ff44214e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230820749,
                    "digest": "sha256:fa1e57eb9c94fa7ecf63aaac86331da96e14f7c40072e76ae901cda97399c4e8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:44efdc1f4a904ad2e5a45dd6f5668a45552b68e5692cc2cd897c3347191309b1"
                }
            ]
        },
        "1.40.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9120,
                "digest": "sha256:c38567b1f60af3ebf2478e91ee55d0a4a9e07973e63f4d5787dfe724965fcc9c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:8d3b395a1e1ee1bbbde96dfe3584d97664133c013f0ce6cc81cdd1ca18504e71"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230821712,
                    "digest": "sha256:67b97962d2da159adb870f9932fbe93cb4e5ee89fea44c3df2b72f5bdcd06389"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:b3ea1425aab8de070239a4860347537c4f23a7f06ff21f2f57376060386f4f9a"
                }
            ]
        },
        "1.40.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9122,
                "digest": "sha256:da883061dcd6da33635bcd93fd9086aa65fdf9a92a8583b31a5fdf82ecff7333"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:831b9dfbb87b209c65f8f8ff825d108f28b953dfcdc56230cfc98b41ae0d0086"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230831718,
                    "digest": "sha256:854c0920aa3e30c5454092c043689790a6821394d242bd6b95d514039a28b219"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:28ef8cb2f04f5c7f9b89452aedffcfd77444a67a99e19bc5b39a7cbfcb6c5d55"
                }
            ]
        },
        "1.40.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9122,
                "digest": "sha256:3dfc9d805f021715b3143e42e8f3987dbdb85730f74f90ea7ea045857895e3d2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:ca83ab0400330d537e9ecc117f45ebf70f3813aa5f7b52983523ec08560668ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231005614,
                    "digest": "sha256:b0a042b1a3d3f835a90a0467e15ea4af12ab7c82690f4b084e24179adc97e8b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:bc5cf1570e1cdbe166889fa3275ad6e56eb40b1609c0f14b6014b1dd39ba8462"
                }
            ]
        },
        "1.41.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9124,
                "digest": "sha256:dc20bb5b133b9e1f8135f06a7522d23eb4415709737cb0305194cb62e970a514"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:6823d51ff2767a23db7fdff9d40f73de636fc434323cddc0ee54842c26534f66"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230623366,
                    "digest": "sha256:46c184f78a62d0b890708d10c7259c6da651a6ad34d5e31a19e9369a1a362e0c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:e422d7e4b2aca4ac1205973c4b68c2bcd6b8cabb839305f9163e6d0fd183fd59"
                }
            ]
        },
        "1.42.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9125,
                "digest": "sha256:22f470902708a56ee843c75fabb61d017694ff880179e178fd516ee1d84626c9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:c24cfbafb6b36c16df579c8e34fa74ab1c497a383d45b1624cb17d095c13de45"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230615053,
                    "digest": "sha256:311fd836d3beada2d1e74b3dd9b127aaab0994641cb509dcf051d5417e03d243"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:bf029d180c593438ffa891042204e8d3ad86692627e7000eb484957ebe51fe5e"
                }
            ]
        },
        "1.42.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9125,
                "digest": "sha256:cfcb08d5fd2c3cae7d0c0821bf2b442c79386449c269e77b9c7c1d8a78cbb733"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:796c98201b59dc3876e10889c446bad4ab25329be6b1110dfeecece9f368683e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230610232,
                    "digest": "sha256:c189e84442d7f54aef212a84c8c5b2cfa6eee30306f3f06279d0db5222a36255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:a849222748d1615d6c5fe3b2dc4bc1492c955af626a805d07383e3fc6024d85a"
                }
            ]
        },
        "1.42.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9121,
                "digest": "sha256:c5e868cf0aff305fda781cd815cb1d06d88483218cfddd51e17425494991f49b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:1cb93d522193085202ab70fa819fcfe85cc6923be9f746ee14878cd319013782"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230655968,
                    "digest": "sha256:74ded666a36eecae083670d1bef302a6085ea92bb118653932d30061d1f2807d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:179c6c9ea06929ed19d8141b72e66641e147a1d078bb41a04c867a74803cd3d5"
                }
            ]
        },
        "1.43.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9125,
                "digest": "sha256:ce4df060be48a7a2e6cf892236eb55817e3b5d0a1ba40238c0557f8cab723cca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:ac22b1281831f5543f91ec81d5f231ae54e1125e9bd3f3251d3209e632493d38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230655903,
                    "digest": "sha256:f67b0551135f5a9c55ad8b8d3fd39d75a6fbf8a95f8314c664ebf262dd0f6d96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:5eb4240939610a7708656b3bb4be37de6f706b5dad874d535c711a36b973c954"
                }
            ]
        },
        "1.43.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9125,
                "digest": "sha256:572c39174ca56aad8546e4c2d72a49653537a5a8316decc5e6066e0514037e85"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:2bc75ac0e3eb21ebcc13a146a5a2e74ef8752f120a933bf28b271f7a9aa7c080"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230640462,
                    "digest": "sha256:b8eda7bb844097073b5dde000c07d31a5122b52d40719413fa52f660acf66ed0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:e5d5dea9feeaf7645cda5d0f1705c731a80e5373164572a1b1531f4c217a8118"
                }
            ]
        },
        "1.43.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9321,
                "digest": "sha256:5a34019f991ccb3fb0680c711dec666752111252a6d8b769ba6fef16e610b954"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:ecd1fc62164502b661417ce7cc6c305e576629e5771547bd993564edb0e85a22"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 253695936,
                    "digest": "sha256:9fe1aa09af33985ed7d81d6b4a206f8f8dee7ede7dc193358561fe2ca0722597"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:5ab2b9f1814a486254618b5c08ac1d380dee5b929562498b8138759dbb8682d4"
                }
            ]
        },
        "1.44.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9323,
                "digest": "sha256:7f6ad824422bd5e37cde6f818627beb002b3cbe879fac0c3f99df40ffb12bb9e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:10a492ccdbddf797c407e013f486aa20ec79c12ed532b1572c2994c1997b449d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252099225,
                    "digest": "sha256:e6740bcb9f4fa2da20035d5625721a7a58ffff58782ef0715a70935264d0a3e4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:19cee1e6f902ba548a221f6a2eb05f0b532c4ab8ee9b2be1a2fc8913afdf43b8"
                }
            ]
        },
        "1.44.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9314,
                "digest": "sha256:5c91f9c17ac2196fadc57a8fb39687a73b4952de577276cac28daa735504bddd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252160713,
                    "digest": "sha256:dc23e25b37faa749c0786f2ec66cfaeed94fd36a56f34108dd4892661546d8ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:46d832c62e2bf48cad4a3eae1c69d5e873e69286c3129602969165e0dd929da1"
                }
            ]
        },
        "1.45.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9316,
                "digest": "sha256:4dcac0869b1465a546cae9387a14e71460e0378fcceaecb08f5937bbe9b7e77b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252177368,
                    "digest": "sha256:1570c40a32e9faa6bbe0cecf971a2714b2ca663b49b21dd82894813ed9dda837"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:70b535042ad32bd6cdef134c3fa7dc2af1e089bb7eb3232f285a5319e0f62073"
                }
            ]
        },
        "1.46.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9316,
                "digest": "sha256:0870219ef4e9a4e91f794810599bf5c622e3be1c89fb67e2d7969566d75ea0dc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252171829,
                    "digest": "sha256:73425efb0bb0cb435cba3a1d8011ecc6d45f2c88369375cf46bd26410db16a4c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:fbd4e4af917a1516f34b44110735492611a9f5435f3e468934bdfd6d918b50ca"
                }
            ]
        },
        "1.46.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9316,
                "digest": "sha256:dbb817c0eff1196c59c3d8243fd59b56f9c998cd81b1dd340e69ebf5ea0000bd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 252186222,
                    "digest": "sha256:3497d592d42b9a177a2d1cb687b0e47c42629be98e3721100675d74bb0b6977c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:47b60623f160b6691b93b1e5918304b555035cba4fcb1f00543c40453fad1c7a"
                }
            ]
        },
        "1.46.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9642,
                "digest": "sha256:19876bf1fef7eee21dc96a8079558b7fd0a356ab5d63f5ee8b855f00ef37ea03"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 253373643,
                    "digest": "sha256:45afd74fe3ed9c7905199ef00f7d0e42327557dc8fcca9133cfbf8ec0064e50b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:94aa8ab71dffc7f0b61d97284ccf00dac92ffb2ef97a484fba797834393d347b"
                }
            ]
        },
        "1.47.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:0707ad1fb42cb787128809d2762166a6865e1369a8f9645a366c474662280510"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248293508,
                    "digest": "sha256:bcc8f2772c7905e1f002db1190f79b3ea53d88625934fe35613299c626618e99"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:ac0c1574517aa415220425016fe119882793a80bc57c6432e0a60873c392e959"
                }
            ]
        },
        "1.48.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:34977b8928c74367ecb3d219971de81d01154fc2e71f40d6ae5c36c9be3e6f84"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248305002,
                    "digest": "sha256:ac82ad519372cd2f5e3f2c58d2151d6fe635a061d788b5aad6b9bb434fb91e89"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:c0ecc65837ddd8b8b5922a2e50a7d955d64ae7ef2f25ab1ced6ccfbb6550f5c3"
                }
            ]
        },
        "1.48.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:ab3e64c046b414f4252bf0a0f3e7043d17b6c1e510f652f3c781272b4b78501c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248300807,
                    "digest": "sha256:edb72c7c342f09aad2f56df8c50bb98679783ead3b7fbef6f2a70f02e3eaccd7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:53bbd0dc90ba96ca92c39c1945666453797a09f749234778df6e1c5c58ce8b4e"
                }
            ]
        },
        "1.48.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:cf09634fc4a846173b394d9505a1f769315cb30a520a6e34a1550d16a307fec6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248303554,
                    "digest": "sha256:8111a05e9d6902a034b26893df2d1580cfcb0a65442a4e044dfa66082f25c964"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:7fb7a975492480f00c32fb741893a71085a00f398cba315ceba660f37e609c9c"
                }
            ]
        },
        "1.49.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10150,
                "digest": "sha256:c6bececb9ba617057cac7518609d6a72a6b0eb8114bf9229f7a3b3df16d6d5d9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248644827,
                    "digest": "sha256:a4672b3f39b23dbaebc25bbabc798c0c664ae995d6e22c01dc93cce03318dafb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:e5b5fc8db083f3ac7d93649e8e18b3fbbf5a3ec0f11373b0b228a43d2910cde2"
                }
            ]
        },
        "1.50.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10151,
                "digest": "sha256:df03bd8155a0bc2f5122ebc3fb1121bba4c6a0295b063ed92f49935a78b3ef00"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248648305,
                    "digest": "sha256:c985735dfcb691bf17c7b5d3e3ff7886a944a5a664735972c4f1c789958d1b02"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:103699585edcdcb6786a447694bf8a887b2fe7565193406a12dd3702e7df1858"
                }
            ]
        },
        "1.50.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:23f6409c51c0598205b24e7dddf7d4e3e904cbf8c64bc527feef22e4dbce0844"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248646663,
                    "digest": "sha256:b0df001a53cbb37401d3440a432a90f3659d086326d48886b54ff5bc2e4a3b0d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:a89bb260da4fb4c844f8704773c3134948c0b2d5db4ed76356e1ab131a92391d"
                }
            ]
        },
        "1.50.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10151,
                "digest": "sha256:4458d6041fd95278ab3c8c8d0f53fc185ad45ccb46420a8b51f38331b072a9a6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248645328,
                    "digest": "sha256:6cd837de6d5e88bcc39d9f426912c65527981d437d6846b7be59159d0cde59f7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:9c58bc503a31dd7b047c4f363d959f97c5628f5bddb3e0c0dad0e0ffe36fc923"
                }
            ]
        },
        "1.51.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10150,
                "digest": "sha256:ca44c77b00c7e58060a99abce64a6ee2edd42ec3d989ae395496d90bb0a8072a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248659017,
                    "digest": "sha256:78093051e22302bb1f7f35fa84fb18c6743fae1f5246b51b9b3beba09f4ca793"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:f4550efca0a7735d4f0a5a21a18f83708099c29f5e62de5858d8d08299b16682"
                }
            ]
        },
        "1.51.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:eaa588808340300cfe1d7539b2037b34dfe7192a6ca36861a77b057e98f21ecc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248660058,
                    "digest": "sha256:2abd3d19d32eb4db685e53c21207f2ec8aa3cc7f926b3a3d158780ab3c1bf02f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:05edb16b19a37dca60602c0036e6d6c6604efaf1a6ad9bbe85a9d48e39f3afa5"
                }
            ]
        },
        "1.51.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:496c1ad59a8bcb39567feaf316ee8d76847df78ce47d6f83d94c331a9797dcc3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248662217,
                    "digest": "sha256:532354be09b30afc78e3abd13d0a115840dea272683c034b477de69173288093"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:ee263f67d93a1ea9b016f5da073abca99a2f9df0f6316059850800bf537b0e5a"
                }
            ]
        },
        "1.51.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:fdccd6f8498426956e15fc6af3257900884a1274f6de1a1c83f9c87ef0fce0ca"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248827975,
                    "digest": "sha256:5e4d342023677499d8fee9f0864814525d653ba2bd3ceca074adea8cfe65a331"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:42f15b22cef767da28e915973ab91ab11129b89e34b1e59191558eb3bd380819"
                }
            ]
        },
        "1.52.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:308deeb5da8be7cec10dc35da2ed6553ef28bd3c9ac575d3d8f65233d4644578"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248829799,
                    "digest": "sha256:5aa710e9b990a5384f5344f1a8b0d94b17049494dbfd9209e5a2b15a138cc021"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:3c32f918e3ba3194b21f30e24e1464833f7cb137905dcf48a3a75ae004c6ee5b"
                }
            ]
        },
        "1.53.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:f3c8ddcb1cd8f7894da3ff1c2ad02e1b83d507cea9fd8254147da9b538d69758"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248844114,
                    "digest": "sha256:88371d2548d43f369dc2a9c6f68b6f0c23d3f69113273b2ca8973bd42f94ef91"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:fac187e80433aaaa04550f91c293da9bd77e82b72d55ddc9c7d889d48d071abd"
                }
            ]
        },
        "1.54.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10151,
                "digest": "sha256:da8398fd8816952dc26f0167ad0a90e66270f02140f1208f333170f5aa0fe3f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248914373,
                    "digest": "sha256:6cabadbdad09dafba1b1982c7dc54d72efb84e37b3aa3f92f4715f2b64af00dc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:4b750530e970d83c28ec483f63d9a42632efe322893602260771b118dbca5083"
                }
            ]
        },
        "1.55.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:cf15cbf7dc42537d898b20e8dd694c6410cac7d1e8cece27857d2c918c5b3211"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248924866,
                    "digest": "sha256:600cc10f87103b7405d0bdeb28e890d2008236537622cff109172e229db1a9b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:6e930b2204f1ea289a3ede1c8f91d211e8a911ef8d6b9c966b0aebc0aa3e15d4"
                }
            ]
        },
        "1.56.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:29f42f6114e8ec1df778c7478a5498e4fa7d074094b9acd2ea998ff763084f49"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248915002,
                    "digest": "sha256:fb0b9bd61811673b81163073d5ffe3fd06227779e7c60bf1f47ac8b59d728e06"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:3abafcfc02c6fbf8b4c4df90478df6b94285457cff92bee11e62e9718e328433"
                }
            ]
        },
        "1.57.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10151,
                "digest": "sha256:aa5a0c38c3b791451b57a67f9e27f3cc5b90e15ebe488dc86779132e5d19c386"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 248939775,
                    "digest": "sha256:bbc0fb026b19bc38c208ca50e07b581486447d2f3a7d9825d28b0dcee838adf1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:bd04c56ed0fc7028eca5c2f56b2964ed1e739412478d249184e6cca552c81e8b"
                }
            ]
        },
        "1.58.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:56b1fe34a8dffde7d11ee0872a2fbcffef483476a224a2c40deee7b17b04aa5d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 249064652,
                    "digest": "sha256:bc20df93d76fa44d80caf1ab3748272606e857db1d6e8d8f8a59cf0f065ce3f6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1979,
                    "digest": "sha256:5ccdbff4555b0708cc930c70203244d5642effc49d986af31928bbfb7d4b6e0f"
                }
            ]
        },
        "1.59.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9118,
                "digest": "sha256:a7d0c1a06081ed5e4110aecbdce52557ac1a47c43457c96782c52d2e6d159eed"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:bf800acdf49edbcf760c8f7f15bedb641e552216c83e98dc8c6c8c0bad2be373"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250469919,
                    "digest": "sha256:ecd0e4346e3fb230a3f46a01ee96f4eb757a4e75fc9438adc910a7aa7f828f0a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:41f0fd3adfb68bb448dfeef7605bf2823f48b1b08ece84698cc452bc0d9300f4"
                }
            ]
        },
        "1.60.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9118,
                "digest": "sha256:3c97ccc77cd2771f75b7b6ec13480c20c3e6b51cee657e46568f7d23dd3f64c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:6dca9c7482bc8f00c0398cce72198b6966963e1e1936f451e6d0a9bfe38b7a1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250443500,
                    "digest": "sha256:1f8af4950fbb3d96e6ec9a43f298522f52864a5a91d9c0bbb43c8948209f265a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:c15f0f16f0ca1d18dd1db12ef1d0e204651bd6caa9bd901ca781474692e1fe46"
                }
            ]
        },
        "1.60.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9114,
                "digest": "sha256:945b0b5126173e2f52e2d2cbcad5a1b3c34f0e30abb7d9fc373abdbb97556196"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:e34225f182ab9914d1b40f5b57a72637be087585b9d7357f94ccad60aea18198"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250199593,
                    "digest": "sha256:aeb498e7781133bc795deb46311785565ab8e387cb9623c71eb53c4f159af84b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:c8f98abc201cdb171d47a8c227622352b67e01093bd45726fe959514ad47bd69"
                }
            ]
        },
        "1.60.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9116,
                "digest": "sha256:40e0f31ed066d734cc1428090ebcc34b2b795782c305bc47a81f0de5a35814de"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:19e3870a9d5427f7f959dcd3235bdd925f3acc8b3d9bbd9063e1b26db61ee255"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 250315800,
                    "digest": "sha256:62a06edddbb8d130f9cb59672e2b24b27237e748e81bcd1b5e8c52f5927904ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:7f8278cdae704939b9ed6959ae683c232b4088b87921ea27b8566454b8ad7e02"
                }
            ]
        },
        "1.61.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9287,
                "digest": "sha256:65cb610ff8447a2c17bfabfa0545e6d71e74b3d277e2c663a84b26847009bdd9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 293,
                    "digest": "sha256:e65ea00c0cc5770c3210e13d73012ec4f6080389f8377b00c9c78d79544be821"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 268937795,
                    "digest": "sha256:abaf39e4226765cf0a185e97d75da909fd7d58a21cce5d32581950cdf9f0c270"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:5ee5b88893131d87743e3e5fef0a07f2ca7b333501d0c545ffac976903a1cd90"
                }
            ]
        },
        "1.62.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10203,
                "digest": "sha256:95739b4c9b3de6ac0b20ef37b16f5b2bec63a7c91045d00d669a018ef933eccb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:128bf57be260b1b177550886c75b0d285d0ad31f75f0bb755bd3f43cb165f2a5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165451085,
                    "digest": "sha256:88d4e7dbd78ce9929a00712d630fbd0a009d2c581f269857b43c462798dd9718"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23510131,
                    "digest": "sha256:23071ce1bb295c3f4dea3638477ede0f0c1e3c4153d4d5cdd5fcb55d95a738ba"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663115,
                    "digest": "sha256:9eb524b30757e19e7c7016a89276ccf6c4a53ab8eddd9883d1d0feec0396bcab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 52167827,
                    "digest": "sha256:0e062a5e8d48d09eb004e410f260a7f00607f81cdbf0c0c346fbe9b681d2da80"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33966350,
                    "digest": "sha256:94c18962f02f181bf35f4a6d8bfe10e353cf33f31ff18cf000aeb338f28a3ce6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352704,
                    "digest": "sha256:31a36e1ce1810a6ef0151204ad06948812f34df3f8881725929164933a10d885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12917514,
                    "digest": "sha256:fae21f1f0fae762d132f2cd910f55616fe432d57934fb731d2f29409649e4f2e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:0138ba92d78e407f7c68a2fd1e495be04ffdf7b537cbd0ef62c850dc53810ba3"
                }
            ]
        },
        "1.63.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13281,
                "digest": "sha256:ddb20064c432b9296556aefe5e754c2c476c49e66df120e80e3c15fb83134c92"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:d5088a3856cea2ede28b77a6ec1d289241d1799e49353d44c6cc29d36e7fe958"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165451577,
                    "digest": "sha256:a641489b431cba3184e749afb4eb6fec0dd5fb61368011e8c890d1746e8e7535"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511926,
                    "digest": "sha256:e966d501cf972fb43e2e721855254cc94dea9312fcdeffcc6f4b09725232069f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663114,
                    "digest": "sha256:12da1df3a6a61d5612d9ffa6a8d0246c1965930e68ae65de30293926ee41639c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51993696,
                    "digest": "sha256:b86b35a86dc2fe2e3db04647253cb6aae79d4463efcabe66752c090a357b7c61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33862551,
                    "digest": "sha256:d4de1d1d464de606e03050f54291cbd998f320ee17fb7b547f091143aa649b0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352808,
                    "digest": "sha256:822f538d9a7e7bd504fa5c310721d4ec731077bfc74620c06acf08454b4f2234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12880539,
                    "digest": "sha256:645108bd301410444750df591197ae942c529924bacbcfbebe0dbef5471e1821"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:4189875f418369661b6da554114a5c0beac70d9b7e40c39b2fede2f05c288615"
                }
            ]
        },
        "1.64.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13284,
                "digest": "sha256:fa3d784793e280430bbbba20f9fafa63220da52c43ffde2ae1931572fa32f173"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:d5088a3856cea2ede28b77a6ec1d289241d1799e49353d44c6cc29d36e7fe958"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165451577,
                    "digest": "sha256:a641489b431cba3184e749afb4eb6fec0dd5fb61368011e8c890d1746e8e7535"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511926,
                    "digest": "sha256:e966d501cf972fb43e2e721855254cc94dea9312fcdeffcc6f4b09725232069f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663114,
                    "digest": "sha256:12da1df3a6a61d5612d9ffa6a8d0246c1965930e68ae65de30293926ee41639c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51993696,
                    "digest": "sha256:b86b35a86dc2fe2e3db04647253cb6aae79d4463efcabe66752c090a357b7c61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33862551,
                    "digest": "sha256:d4de1d1d464de606e03050f54291cbd998f320ee17fb7b547f091143aa649b0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352808,
                    "digest": "sha256:822f538d9a7e7bd504fa5c310721d4ec731077bfc74620c06acf08454b4f2234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12881982,
                    "digest": "sha256:023876edd58e2410ce3c0a0c47ace688c7503882655c523913ebd6e1e39d6960"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:f146d2be6e52ce67918d183c4fb3acd2545e6c4bfe44c2356ecd2e4eff574b7e"
                }
            ]
        },
        "1.64.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13284,
                "digest": "sha256:11ec1ed4e915cad956c748075e3aa75312eddaa2edac1a20f58156930bab826e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:d5088a3856cea2ede28b77a6ec1d289241d1799e49353d44c6cc29d36e7fe958"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165451577,
                    "digest": "sha256:a641489b431cba3184e749afb4eb6fec0dd5fb61368011e8c890d1746e8e7535"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511926,
                    "digest": "sha256:e966d501cf972fb43e2e721855254cc94dea9312fcdeffcc6f4b09725232069f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663114,
                    "digest": "sha256:12da1df3a6a61d5612d9ffa6a8d0246c1965930e68ae65de30293926ee41639c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51993696,
                    "digest": "sha256:b86b35a86dc2fe2e3db04647253cb6aae79d4463efcabe66752c090a357b7c61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33862551,
                    "digest": "sha256:d4de1d1d464de606e03050f54291cbd998f320ee17fb7b547f091143aa649b0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352808,
                    "digest": "sha256:822f538d9a7e7bd504fa5c310721d4ec731077bfc74620c06acf08454b4f2234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12891715,
                    "digest": "sha256:3bf6fd04b0ffea0fecd938f53a884ad03ddb985fba5e8a7c8ab2fb2cfd2bc9fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:07292cad5c84d7dd0929b5ce3b36d7d011274e3ce67c7ca803d61ed1e465f0c9"
                }
            ]
        },
        "2.2.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 13282,
                "digest": "sha256:76d6e21de894a4be14efd29e073c0ca56e0eb89779b624250a8160a7a379dc44"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 292,
                    "digest": "sha256:d5088a3856cea2ede28b77a6ec1d289241d1799e49353d44c6cc29d36e7fe958"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 165451577,
                    "digest": "sha256:a641489b431cba3184e749afb4eb6fec0dd5fb61368011e8c890d1746e8e7535"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511926,
                    "digest": "sha256:e966d501cf972fb43e2e721855254cc94dea9312fcdeffcc6f4b09725232069f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663114,
                    "digest": "sha256:12da1df3a6a61d5612d9ffa6a8d0246c1965930e68ae65de30293926ee41639c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 51993696,
                    "digest": "sha256:b86b35a86dc2fe2e3db04647253cb6aae79d4463efcabe66752c090a357b7c61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 33862551,
                    "digest": "sha256:d4de1d1d464de606e03050f54291cbd998f320ee17fb7b547f091143aa649b0f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 352808,
                    "digest": "sha256:822f538d9a7e7bd504fa5c310721d4ec731077bfc74620c06acf08454b4f2234"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9316040,
                    "digest": "sha256:ef0965a605fdc66093ab9a22121e0a2302732d41712c9058fd3b9b2e13d35bbd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1986,
                    "digest": "sha256:781b88c7fcf63ce19dccc6190bca116859344769f498a89db436e62cbd0577da"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 10152,
                "digest": "sha256:37bae68cf07fb53b7699984fc453548246bc5e7cf5b2575326903807b45b6f13"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 28261433,
                    "digest": "sha256:3f2411103a12c8e169df7a9ea00ff26ab07501858e3eff315a2e11c219e78ce1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30640,
                    "digest": "sha256:4da04088b2c299c17ae8a78858846c6fd4a6c36717baa816974cc75bef632871"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:ab1184837b6f6f4a130c8b4eb72f576b86c4c46b3e33dada4740a966948d98e6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 164,
                    "digest": "sha256:354c6da61dcc176c5b363ded571bea1de41b718131658fa0e563f2a749028cd1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 294,
                    "digest": "sha256:e183940068c5246e3d37c18ebcf5264a220fbe3899010efd0bcca4ba9181adac"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 249081954,
                    "digest": "sha256:64d108cf666b8eabf282ef3b09d10ec225aac184bd12f4703a3148a45dff6381"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:b878648cf40cfeb8a694ccb2e08e4a5b8d238c333d5e59a5b4368357b72df255"
                }
            ]
        }
    },
    "tags": [
        "1.16.0",
        "1.16.1",
        "1.17.0",
        "1.17.1",
        "1.17.2",
        "1.18.0",
        "1.18.1",
        "1.18.2",
        "1.18.3",
        "1.18.4",
        "1.18.5",
        "1.19.0",
        "1.19.1",
        "1.19.2",
        "1.19.3",
        "1.20.0",
        "1.20.1",
        "1.20.2",
        "1.20.3",
        "1.20.4",
        "1.20.5",
        "1.21.0",
        "1.21.1",
        "1.22.0",
        "1.22.1",
        "1.22.2",
        "1.22.3",
        "1.23.0",
        "1.24.0",
        "1.24.1",
        "1.25.0",
        "1.25.2",
        "1.26.1",
        "1.27.1",
        "1.28.1",
        "1.29.1",
        "1.29.2",
        "1.30.2",
        "1.31.2",
        "1.32.1",
        "1.33.0",
        "1.33.1",
        "1.34.0",
        "1.35.1",
        "1.35.2",
        "1.36.0",
        "1.37.0",
        "1.37.1",
        "1.37.2",
        "1.38.0",
        "1.39.0",
        "1.40.0",
        "1.40.1",
        "1.40.2",
        "1.40.3",
        "1.40.4",
        "1.41.0",
        "1.42.0",
        "1.42.1",
        "1.42.2",
        "1.43.0",
        "1.43.1",
        "1.43.3",
        "1.44.0",
        "1.44.1",
        "1.45.0",
        "1.46.0",
        "1.46.1",
        "1.46.2",
        "1.47.0",
        "1.48.0",
        "1.48.1",
        "1.48.2",
        "1.49.0",
        "1.50.0",
        "1.50.1",
        "1.50.2",
        "1.51.0",
        "1.51.1",
        "1.51.2",
        "1.51.3",
        "1.52.0",
        "1.53.0",
        "1.54.0",
        "1.55.0",
        "1.56.0",
        "1.57.0",
        "1.58.0",
        "1.59.0",
        "1.60.0",
        "1.60.1",
        "1.60.2",
        "1.61.0",
        "1.62.0",
        "1.63.0",
        "1.64.0",
        "1.64.1",
        "2.2.3",
        "latest"
    ],
    "configs": {
        "1.16.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:71658e71043fe7af54a283a77040725a1a01263c98fda2376c5e4e4fe2a39f60",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "720cdca0b0df6522f35f950c297541c5c238327085cde3b725885104a37140be",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:71658e71043fe7af54a283a77040725a1a01263c98fda2376c5e4e4fe2a39f60",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-05T18:12:12.86444382Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-05-15T21:20:46.673133744Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b82101f178f1bebe33d5ac8f661a31ef8671c27500cba74a448dcb6544a6fd57 in / "
                },
                {
                    "created": "2019-05-15T21:20:47.619372603Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:20:48.385137597Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-15T21:20:49.098601969Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:20:49.509833844Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:07:25.582665867Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:07:26.470520915Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:11:52.678387773Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-05T18:12:09.804576146Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:12:10.979752202Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T18:12:12.86444382Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:090c86fe5d9605c87318190fd6d50481af4748e9f34f89949084533db7db4a44",
                    "sha256:7b2c97f6886e3b615f1a27688a28642cc47837e59f3fa3ddc77d146cf474ac04",
                    "sha256:1735bbaa856e57eac06efc2362788ae6f20a6054dfef71494b3ab1002d19b859",
                    "sha256:fe9e60df9ecb6b55790e4a1c32abcdc81f363985626c74659af1c064eed65ebb",
                    "sha256:53fd764ff5646a848184c0822510ea6bf2b6646714e6fcf619592e3d027f28a0"
                ]
            }
        },
        "1.16.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:219244872018e55be7a747333c0625e995b1a45b189531a2186bccd0e8126b06",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d03b817a6baddcba1d364dcd02d07cfd26606e10e5789d84d08400761635fb23",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:219244872018e55be7a747333c0625e995b1a45b189531a2186bccd0e8126b06",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-14T07:48:17.097122636Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-05-15T21:20:46.673133744Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b82101f178f1bebe33d5ac8f661a31ef8671c27500cba74a448dcb6544a6fd57 in / "
                },
                {
                    "created": "2019-05-15T21:20:47.619372603Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:20:48.385137597Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-15T21:20:49.098601969Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:20:49.509833844Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:43:16.587991718Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:43:17.491533332Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:47:55.6143557Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.3-Linux-x86_64/* /usr     && rm -rf cmake-3.14.3-Linux-x86_64     && rm cmake-3.14.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-14T07:48:13.983300663Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:48:15.18523315Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:48:17.097122636Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:090c86fe5d9605c87318190fd6d50481af4748e9f34f89949084533db7db4a44",
                    "sha256:7b2c97f6886e3b615f1a27688a28642cc47837e59f3fa3ddc77d146cf474ac04",
                    "sha256:1735bbaa856e57eac06efc2362788ae6f20a6054dfef71494b3ab1002d19b859",
                    "sha256:fa9ca049a8c8dbb61186882a517338a0ec8be607da4b6b21542ca5bc145efb58",
                    "sha256:aac402ced71ea78922c67ccd2e3274bfee8ae1d1b85a11069bb4df0c35109f8a"
                ]
            }
        },
        "1.17.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:41cc92d7e281f619969b2181341d07d6d1056e90c707b5781cf10d7829be0111",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a09cf5c2daa00c07552d8fdfbbf736b3b0055604f7872a09b55a3ea52ba1bbc7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:41cc92d7e281f619969b2181341d07d6d1056e90c707b5781cf10d7829be0111",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-15T08:16:45.065322775Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-06-18T22:52:33.902635237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3be43e0fdf0de92d585df42af7bfa7fab5072d1173bd42c7469fd49462cad3c in / "
                },
                {
                    "created": "2019-06-18T22:52:35.338688897Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-06-18T22:52:36.773114084Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-06-18T22:52:38.030306706Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-06-18T22:52:38.286225826Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:11:40.084139079Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:11:40.677422556Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:16:23.062746938Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-15T08:16:41.988891123Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:16:43.188416278Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:16:45.065322775Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cbf274cbb0e197475c36f490c57ff3b0979941f8f1f6f5e5cb7ef47ebfac6224",
                    "sha256:a5ba2df23eedb19bec9913162d5eb5dc99b46aa25b6bf84356337f6cf3abcab9",
                    "sha256:9c8c5614d11f89ec03f114ae4fa7737703c6628a6b46ded991adb099cd0e7530",
                    "sha256:22b00b44988b4707d5480f4d959fbf7c72bd6b6a70e3ff7c125e5886b5fd0aa4",
                    "sha256:9c433922b10fc607de03b94d11c6f6103e29e479104478473a8c862f6e2bb021",
                    "sha256:6d7cf2fcb3a11e94a35f02baded767a11591d33f59a600ff89a484ee3b174c75"
                ]
            }
        },
        "1.17.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:88906f66271011d9099179c3e2aef67935c24191755ae9895bbb7e707bd0a016",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7ebd68bf19ca315fe3fe50348e03bf8776594b4b875ac27b9bed72cf6aa883e3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:88906f66271011d9099179c3e2aef67935c24191755ae9895bbb7e707bd0a016",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-22T14:59:46.597225438Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-06-18T22:52:33.902635237Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d3be43e0fdf0de92d585df42af7bfa7fab5072d1173bd42c7469fd49462cad3c in / "
                },
                {
                    "created": "2019-06-18T22:52:35.338688897Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-06-18T22:52:36.773114084Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-06-18T22:52:38.030306706Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-06-18T22:52:38.286225826Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:55:04.650562979Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:55:05.483288871Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:59:25.176692918Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-22T14:59:43.528826365Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:59:44.719959907Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-22T14:59:46.597225438Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cbf274cbb0e197475c36f490c57ff3b0979941f8f1f6f5e5cb7ef47ebfac6224",
                    "sha256:a5ba2df23eedb19bec9913162d5eb5dc99b46aa25b6bf84356337f6cf3abcab9",
                    "sha256:9c8c5614d11f89ec03f114ae4fa7737703c6628a6b46ded991adb099cd0e7530",
                    "sha256:22b00b44988b4707d5480f4d959fbf7c72bd6b6a70e3ff7c125e5886b5fd0aa4",
                    "sha256:11af52c996c82f5217740887c28ab78fec83f3e6d5aa1801fea6d2f1abedd191",
                    "sha256:5117e7540eae5b0043120fc0e848d8459ef6742d73d1200867fc5d9cce016cb0"
                ]
            }
        },
        "1.17.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8b3753bd116465fdc1b3bc58db7794d7dcbbeb37205e77f74454bb503cfefc46",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d16676ac73d0143fe35bbac6399429093578ff5cf938a0c5543e69da8f4632dd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8b3753bd116465fdc1b3bc58db7794d7dcbbeb37205e77f74454bb503cfefc46",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-25T14:58:33.040229468Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-07-23T15:21:50.684015484Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e7de0c937513ffc0047f70983e7626fb2af6e265d0bd07a3b31c271afcc23ab0 in / "
                },
                {
                    "created": "2019-07-23T15:21:51.410974954Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:52.103662047Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:52.774621047Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:52.962713163Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:50:58.552842838Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:50:59.489046925Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:58:15.019634965Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-25T14:58:30.027051511Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:58:31.219234453Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T14:58:33.040229468Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:57cf2c222cbacce36797fa5d22cea021b5ebb7609c1933f7d8b0e1a024917f14",
                    "sha256:164629091d76daef319d05f8285a99025dd52348d61b0fcc387f21c18ac0049e",
                    "sha256:a6874c1e2aea0813767b2b66cdcc8aa72cfa6c66e3dd53d4ad099354488a6677",
                    "sha256:b0cb7a195dc5e7e5f9129162ae986792a1e37866977e749c19d4d3f8155a0765",
                    "sha256:6985227e41f1b9d843e67b099e055a57426c8f856a7a036f906dcf841d2ecd8b",
                    "sha256:87d3c9e4a70b5730c0139e132bc2e076f2fbd3d53b2a87277c1283f8aba45318"
                ]
            }
        },
        "1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ac144d2ecfc8966af6b7dc15cf38a9446b04306a48af3ba44a67645038aa385c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "88e1941d204bf992495ba6d2532947e3628eecdcc55ee7702c7da2352ec7b39c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ac144d2ecfc8966af6b7dc15cf38a9446b04306a48af3ba44a67645038aa385c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-30T12:08:39.529861369Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-07-23T15:21:50.684015484Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e7de0c937513ffc0047f70983e7626fb2af6e265d0bd07a3b31c271afcc23ab0 in / "
                },
                {
                    "created": "2019-07-23T15:21:51.410974954Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-07-23T15:21:52.103662047Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:21:52.774621047Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:21:52.962713163Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:03:37.539644598Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:03:38.566612844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:08:18.266197544Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-30T12:08:36.304098853Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:08:37.566244911Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:08:39.529861369Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:57cf2c222cbacce36797fa5d22cea021b5ebb7609c1933f7d8b0e1a024917f14",
                    "sha256:164629091d76daef319d05f8285a99025dd52348d61b0fcc387f21c18ac0049e",
                    "sha256:a6874c1e2aea0813767b2b66cdcc8aa72cfa6c66e3dd53d4ad099354488a6677",
                    "sha256:b0cb7a195dc5e7e5f9129162ae986792a1e37866977e749c19d4d3f8155a0765",
                    "sha256:3fc23cd2ca4f105060138cbcc484ccb92170b32052fe0d47c5a434dfb3c52bfa",
                    "sha256:25f7811cd3b43c830589becce04ebc08decb7272ce07b3ee030d6e83e6763e4a"
                ]
            }
        },
        "1.18.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:58b11786f19e05fda921cf38f6895f16586dad8b11e1698b4020f306e26c7bc7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "48f09c5802c165d03ee16ef07d5e9089f8d2cf74c3874105c9c10e85fa2c1815",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:58b11786f19e05fda921cf38f6895f16586dad8b11e1698b4020f306e26c7bc7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-19T07:39:04.540253118Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-08-15T07:28:50.906226588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fcc7c52abc98c93b76bc530fe6074d4959674e21a3847b453480ead04c293baa in / "
                },
                {
                    "created": "2019-08-15T07:28:51.717482022Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-08-15T07:28:52.435082899Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-08-15T07:28:53.147211234Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-08-15T07:28:53.314076133Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:34:16.877502745Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:34:17.444137646Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:38:42.951702522Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-19T07:39:01.505187253Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:39:02.698587185Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T07:39:04.540253118Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:139a91f3e8b5c609893fb25e34937b7e9d92c8036abda439482c7ed590f2e786",
                    "sha256:2aeece176eae74c124c51a76f489e31fa21e2e0746cad21026d785c943b0f2bf",
                    "sha256:57d81fc8e67e6412efff31fd0a6edb23664e6e51d48e258340e13afefa747030",
                    "sha256:af4d899c8c9bc5f42d690755f12f162f18041f3eefa2e6995a71803e227cc17a",
                    "sha256:cabbe4daf741bcc8f214765876969201507253b0d32ccee1017c51a6629f9252",
                    "sha256:f7a65f72bbbc18ec9a3c4457ce83d5cd95837f760de42d0385286f809e744f67"
                ]
            }
        },
        "1.18.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:06e5af8b3df6d745a6fc7fb81f043df795057b081453d4e2af44ddfd2d4b4ffd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "543a1943b1f7e028d80e4a76d132e0ba52dd54d239d1617cbe00c19f94016fdd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:06e5af8b3df6d745a6fc7fb81f043df795057b081453d4e2af44ddfd2d4b4ffd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-31T20:32:40.724203195Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-08-15T07:28:50.906226588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fcc7c52abc98c93b76bc530fe6074d4959674e21a3847b453480ead04c293baa in / "
                },
                {
                    "created": "2019-08-15T07:28:51.717482022Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-08-15T07:28:52.435082899Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-08-15T07:28:53.147211234Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-08-15T07:28:53.314076133Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:27:21.795954488Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:27:22.514655179Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:32:15.30541419Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-31T20:32:37.046175896Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:32:38.686351561Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T20:32:40.724203195Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:139a91f3e8b5c609893fb25e34937b7e9d92c8036abda439482c7ed590f2e786",
                    "sha256:2aeece176eae74c124c51a76f489e31fa21e2e0746cad21026d785c943b0f2bf",
                    "sha256:57d81fc8e67e6412efff31fd0a6edb23664e6e51d48e258340e13afefa747030",
                    "sha256:af4d899c8c9bc5f42d690755f12f162f18041f3eefa2e6995a71803e227cc17a",
                    "sha256:feaae90e863d87e7cf2ca386d638c111921e85656b831982607d15629f974afe",
                    "sha256:514bc5774dfabfeae33c270bc774a26bcee8ef077352aac025f264eb5d1d4d9a"
                ]
            }
        },
        "1.18.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a905c55e501fea97cadb28e46156b99e64f1b15b7d8efb1d54d48884e4bde65c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e606f80f7fa9d399a93d9f2124ad6725507371b47bc57dc58e710c9a9a7dba7e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a905c55e501fea97cadb28e46156b99e64f1b15b7d8efb1d54d48884e4bde65c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-10T11:53:41.121320212Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-08-15T07:28:50.906226588Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:fcc7c52abc98c93b76bc530fe6074d4959674e21a3847b453480ead04c293baa in / "
                },
                {
                    "created": "2019-08-15T07:28:51.717482022Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-08-15T07:28:52.435082899Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-08-15T07:28:53.147211234Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-08-15T07:28:53.314076133Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:40:06.862073635Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:40:08.06042034Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:53:19.68764113Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-10T11:53:37.915393867Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:53:39.165747137Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T11:53:41.121320212Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:139a91f3e8b5c609893fb25e34937b7e9d92c8036abda439482c7ed590f2e786",
                    "sha256:2aeece176eae74c124c51a76f489e31fa21e2e0746cad21026d785c943b0f2bf",
                    "sha256:57d81fc8e67e6412efff31fd0a6edb23664e6e51d48e258340e13afefa747030",
                    "sha256:af4d899c8c9bc5f42d690755f12f162f18041f3eefa2e6995a71803e227cc17a",
                    "sha256:b6830b5bf6013edc8a8c97ecfa7597347e37259bd66340c2eacc19b317f3ec95",
                    "sha256:000023a8457d3628c6e3fdb6b0cbe33a1c8c77721b038eb9498834104357a95f"
                ]
            }
        },
        "1.18.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a8095ab8ebeb82e159e2094a541bdad16006affbe7b1b1368c9f974bb116db02",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ed06a1321b4b08386acc4b24e8cd2c07cfd1557efa816bb3f534743b45ac82b6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a8095ab8ebeb82e159e2094a541bdad16006affbe7b1b1368c9f974bb116db02",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-23T12:39:45.038502744Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:46.208578917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c699e4fec72161ed3a09ab9dc94c2a96034b73bcc5698e93b6e66c32d53b82c in / "
                },
                {
                    "created": "2019-09-18T23:20:47.003418218Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:47.694165021Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:48.366404589Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:48.530746972Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:34:24.359323599Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:34:25.683464483Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:39:23.671178263Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz     && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.14.5-Linux-x86_64/* /usr     && rm -rf cmake-3.14.5-Linux-x86_64     && rm cmake-3.14.5-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-23T12:39:41.566822047Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:39:42.97056331Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T12:39:45.038502744Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b07c260893deb7a01e191b346310ed2d4adff5703faf00a068e868e369f7e0c",
                    "sha256:570b5c8b57d476c497ff9dccdbb356f0de52aff0db1dc560f1e85d8e95e69cf7",
                    "sha256:95a6a0237af795b7d57e2e7fa49e8bc90f69670ccb54c57b645164263d14e8e1",
                    "sha256:aca85e48b2461987bbd18418d7b1ade68eb5bc789edfa3bf88cebfbab10ef93a",
                    "sha256:ea5740479b19d8fd8eb0211b9a7a9d9dcd16fd7d83a9c7f1b777118c7daca6f4",
                    "sha256:e3cf7221d5b07759f95e75da867f909c2a319f56444c4a70fc6d19a2f33a44d3"
                ]
            }
        },
        "1.18.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:74d0b6c35abcec64dbc258d4f743d18c9dab93327b38077318befa309fefa509",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "32cab4d23fec9ea4614ed81d8984660b6b30d6bb5efd05cb16d2201ca5cf74ef",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:74d0b6c35abcec64dbc258d4f743d18c9dab93327b38077318befa309fefa509",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-27T07:06:52.812120813Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:46.208578917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c699e4fec72161ed3a09ab9dc94c2a96034b73bcc5698e93b6e66c32d53b82c in / "
                },
                {
                    "created": "2019-09-18T23:20:47.003418218Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:47.694165021Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:48.366404589Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:48.530746972Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:01:26.088618476Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:01:26.595625106Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:06:32.371382277Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-27T07:06:49.617377321Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:06:50.846150272Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:06:52.812120813Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b07c260893deb7a01e191b346310ed2d4adff5703faf00a068e868e369f7e0c",
                    "sha256:570b5c8b57d476c497ff9dccdbb356f0de52aff0db1dc560f1e85d8e95e69cf7",
                    "sha256:95a6a0237af795b7d57e2e7fa49e8bc90f69670ccb54c57b645164263d14e8e1",
                    "sha256:aca85e48b2461987bbd18418d7b1ade68eb5bc789edfa3bf88cebfbab10ef93a",
                    "sha256:17d80c5d869f82f99900305f0da48f2238ecd43e36ca8d4793d9cff001012e8c",
                    "sha256:7fadccca05ef313a639897998bfdf6eab597823a33a160345ce2470eb79f66d5"
                ]
            }
        },
        "1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6e77c34bf9114726f5e491853ce81ff12b2d20392761e7d4c7940a7b86887ea2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "695eb6f94039c5a423e55e6eb2bc5ed22b77d9b3b5ff3cb5b7bab0fd673bfcf7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6e77c34bf9114726f5e491853ce81ff12b2d20392761e7d4c7940a7b86887ea2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-30T09:34:43.34058301Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:46.208578917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c699e4fec72161ed3a09ab9dc94c2a96034b73bcc5698e93b6e66c32d53b82c in / "
                },
                {
                    "created": "2019-09-18T23:20:47.003418218Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:47.694165021Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:48.366404589Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:48.530746972Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:29:29.690141467Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:29:30.568758184Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:34:20.437516305Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-30T09:34:39.954539475Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:34:41.194518641Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T09:34:43.34058301Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b07c260893deb7a01e191b346310ed2d4adff5703faf00a068e868e369f7e0c",
                    "sha256:570b5c8b57d476c497ff9dccdbb356f0de52aff0db1dc560f1e85d8e95e69cf7",
                    "sha256:95a6a0237af795b7d57e2e7fa49e8bc90f69670ccb54c57b645164263d14e8e1",
                    "sha256:aca85e48b2461987bbd18418d7b1ade68eb5bc789edfa3bf88cebfbab10ef93a",
                    "sha256:12f3912005881a49e77f1a19fbd611671fd68ce7459ccd818cc709411280c9f9",
                    "sha256:4967cde5435a5bad533ab41ccd74d07b02d052c812652b047f1542d1d64802b1"
                ]
            }
        },
        "1.19.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e8ec3de2e62dc95a673cb8937a9354740448749ea93fc4214ca5d5657b6514f9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e068a27b7d3da295372d9399c16a6bfff3ec02312a5fb7917ce01dea39fe3d3a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e8ec3de2e62dc95a673cb8937a9354740448749ea93fc4214ca5d5657b6514f9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-03T14:28:38.041949927Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:20:46.208578917Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4c699e4fec72161ed3a09ab9dc94c2a96034b73bcc5698e93b6e66c32d53b82c in / "
                },
                {
                    "created": "2019-09-18T23:20:47.003418218Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-09-18T23:20:47.694165021Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:20:48.366404589Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:20:48.530746972Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:23:35.571684712Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:23:36.472246326Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:28:16.222336273Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-03T14:28:35.004939894Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:28:36.17447253Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T14:28:38.041949927Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0b07c260893deb7a01e191b346310ed2d4adff5703faf00a068e868e369f7e0c",
                    "sha256:570b5c8b57d476c497ff9dccdbb356f0de52aff0db1dc560f1e85d8e95e69cf7",
                    "sha256:95a6a0237af795b7d57e2e7fa49e8bc90f69670ccb54c57b645164263d14e8e1",
                    "sha256:aca85e48b2461987bbd18418d7b1ade68eb5bc789edfa3bf88cebfbab10ef93a",
                    "sha256:4e72c7b987cd9a8cdc4a00ebdc489f36bb2caa3f312d5995dbd5a6418d3e0776",
                    "sha256:c23bd367dc8a4ef4f7e9af50a3050912c4df64b5a40697f8ceb92e2846bd5573"
                ]
            }
        },
        "1.19.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7528036720bf8c551cd93b43b47f70f8e61b73ebfcb19f81517589cc028f4374",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "87da65a31cbb25114b8886fa246f8ab7ab195e6c833ff7da8d7906872ededcf9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7528036720bf8c551cd93b43b47f70f8e61b73ebfcb19f81517589cc028f4374",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T07:33:00.025864023Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-18T18:49:04.580802845Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:743d9d609edca11e6d57779dfa21cfcbdefad8c41538c67fd9da33824e0791f1 in / "
                },
                {
                    "created": "2019-10-18T18:49:05.351048074Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-18T18:49:06.085168096Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:49:06.780768407Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:49:06.947517551Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:26:43.894059475Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:26:45.662459115Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:32:44.676350098Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T07:32:56.342166478Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:32:58.10714459Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T07:33:00.025864023Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e4cd282edf17c7b68a460199ffbe678c04567365b3e4a246f0f5759980250467",
                    "sha256:986a5be1fdfe196bf09c9b1a9f3f5d8b01950b13d17d061b464e64ff848fc379",
                    "sha256:f1bbc256e464f44f60e66efdf435fc65e485eda68c7805c127b9308239d9698e",
                    "sha256:0a3242a235153c4ba82890669e219f95f855f3715d4a87b07db80f31f8226bc2",
                    "sha256:858d4a166de9cc4ed56c706848f2c07f8ff4ac396d3dd31d739d8d761d41a536",
                    "sha256:97f64d87e4f29e2bd7f898d6e783e20c551df005775da71d28c081756d22b736"
                ]
            }
        },
        "1.19.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da77d2607af7f47ca1f1c38f965bf6ca4836131341d54afdbc7a2acc20aa32ba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "907e7ed7f129e5a1d8150a071742a98e3a67be211721cf3bd94aa9db20b2e001",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:da77d2607af7f47ca1f1c38f965bf6ca4836131341d54afdbc7a2acc20aa32ba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T13:30:21.301170649Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-18T18:49:04.580802845Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:743d9d609edca11e6d57779dfa21cfcbdefad8c41538c67fd9da33824e0791f1 in / "
                },
                {
                    "created": "2019-10-18T18:49:05.351048074Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-18T18:49:06.085168096Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:49:06.780768407Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:49:06.947517551Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:25:09.850622534Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:25:10.541965819Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:29:59.836927489Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T13:30:18.222954379Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:30:19.448283582Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T13:30:21.301170649Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e4cd282edf17c7b68a460199ffbe678c04567365b3e4a246f0f5759980250467",
                    "sha256:986a5be1fdfe196bf09c9b1a9f3f5d8b01950b13d17d061b464e64ff848fc379",
                    "sha256:f1bbc256e464f44f60e66efdf435fc65e485eda68c7805c127b9308239d9698e",
                    "sha256:0a3242a235153c4ba82890669e219f95f855f3715d4a87b07db80f31f8226bc2",
                    "sha256:3c951e1318046ca38e722d5c734c34142de3c5c849a0be7e88065de9066c399b",
                    "sha256:e8936c81259a29c47bd79df502d223e455e43125c63854cd81ebfbf7e843a0c4"
                ]
            }
        },
        "1.20.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:57e835b6de4f998f0fa3ae6bcc4c9b33c869fc22b7e7745fbab3b3737019885b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6c4d00ab90c138655d46b6f366792d224be19a7bd79c4c1207c8a1a6b5b776ec",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:57e835b6de4f998f0fa3ae6bcc4c9b33c869fc22b7e7745fbab3b3737019885b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-04T11:35:45.882189979Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:30:37.162095088Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:30:37.628118208Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:35:23.676141801Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-04T11:35:42.782025546Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:35:43.927873418Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T11:35:45.882189979Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:b880c35fd4fd738b583769d5d41b6dcb62bf848734080e0a3bebd7929033cfb8",
                    "sha256:a84fc07f188dfe3cfeb0b08f6145ee4f22a7b9911f483ea845c48a83ddec6d63"
                ]
            }
        },
        "1.20.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:970abf237d10e4b9fa41364d7dffd74ba64703164854a5b283366669fa207857",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c63ece994b8f6d522b147a6308f9017c8022d2f6b7cd551da8075189b2876b6e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:970abf237d10e4b9fa41364d7dffd74ba64703164854a5b283366669fa207857",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-05T11:13:16.350264805Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:08:12.289310927Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:08:13.479376827Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:12:55.525360594Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-05T11:13:13.259323939Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:13:14.47763462Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:13:16.350264805Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:d094242e8700c245edf1b44034baeb616ee499e510ceec03a7f3932e4c94ce8d",
                    "sha256:0dba1f705575a922c254bb1b2209f5b4cc2d376178c39ce99a88f7408bee0be2"
                ]
            }
        },
        "1.20.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:46180672b4343346744b53d786566f6b17e07c1123245bce7da04dcc2b1de0eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d70a94fc46fc724814b3406c4035de14bddf58a780d1ac32e01c1f56f3f79cf8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:46180672b4343346744b53d786566f6b17e07c1123245bce7da04dcc2b1de0eb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-06T09:39:10.134645381Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:26:44.432629444Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:26:45.518828844Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:38:48.986374108Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-06T09:39:07.2282162Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:39:08.352592367Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T09:39:10.134645381Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:f7942e947838d9e0d4304cd8385e314a1dcd6ec337155a51baaa83ce3a21e4ab",
                    "sha256:8e6c4f9d024775c7e033c664e248a83f59d163463d5b96d52619f250e02057a9"
                ]
            }
        },
        "1.20.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:65930f0b0ce7081ac5fff93f27c1f29b3f36100cc370a49897510bceba618de6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0a67a36877252eaf6dc97f34dde15b3bb73b58594f551bdf71ce8cf8b7f63c13",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:65930f0b0ce7081ac5fff93f27c1f29b3f36100cc370a49897510bceba618de6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-11T15:24:07.290277268Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:19:02.098605294Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:19:02.577724663Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:23:47.052684324Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-11T15:24:04.34730952Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:24:05.506307689Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T15:24:07.290277268Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:8e91cfd52bccff4da338ce828eb688b1b092fa4f582f964adddf589b132d4751",
                    "sha256:5b1fb416667e2a3ca153f42ab3f191b64ca120ff19d168bc3c98ca954b5528cf"
                ]
            }
        },
        "1.20.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7851fa05234278c2146d3e5a5015ade65ed011dfa7bd4ae968009fa055c7561d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f9fd62f0e490ed22adb8d7c333350fc96ead05130fcb4bda6280268f780cc4ef",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7851fa05234278c2146d3e5a5015ade65ed011dfa7bd4ae968009fa055c7561d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-19T15:24:12.393802445Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:18:55.441005851Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:18:56.433035641Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:23:51.79156966Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-19T15:24:09.269175912Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:24:10.500166373Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T15:24:12.393802445Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:eec010db1c7344d42109030c4d541bc88e5ba8279932b096dd91677f59402fa5",
                    "sha256:c67846329e30a5f969d9f6adf1bc6488d92e83d62b513a923463a15740b0b347"
                ]
            }
        },
        "1.20.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f95aa34bd80f3feee09647504c2392f9cf879f2c1927bc6773402627bb57d5d1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1e04c6d0fb5392972194ddc08e50ddc773918401d1f5aef5c54dfd4b483e5870",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f95aa34bd80f3feee09647504c2392f9cf879f2c1927bc6773402627bb57d5d1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-03T14:20:04.152594304Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:14:58.697438438Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:14:59.447803289Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:19:45.014609682Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-03T14:20:01.154126056Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:20:02.360699253Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:20:04.152594304Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:56f9e6941a0a0e35ef1a1ba7eb8f1fd9ace27b7b5c32a368b69989c141008587",
                    "sha256:050164a4452ef190976ce05050e36ec80e671650ddad1ab5fc88b566602bb6e1"
                ]
            }
        },
        "1.21.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a82f4ec59f7ed0c626b41be213dd305078a87fd1c03897065d0b525bf942ded5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7c024c0816384a65806ece4b2d6491684032cf1cad0e1fda6e5755fe2a274387",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a82f4ec59f7ed0c626b41be213dd305078a87fd1c03897065d0b525bf942ded5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-10T11:29:19.442824987Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:20:51.197614837Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f450b57fc821cd65bd59da8799f753e86ea8f3e5cd7cf0ede5e5512327aa61e1 in / "
                },
                {
                    "created": "2019-10-31T22:20:51.974872317Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2019-10-31T22:20:52.714725507Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:20:53.414584289Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:20:53.566435378Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:24:32.462394374Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:24:33.504221776Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:28:58.317563452Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz     && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.15.3-Linux-x86_64/* /usr     && rm -rf cmake-3.15.3-Linux-x86_64     && rm cmake-3.15.3-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1     && pyenv global 3.7.1     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-10T11:29:16.517839542Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:29:17.683800967Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T11:29:19.442824987Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:3809a3354f7f9f6e370ec404594112d04386f38c52f13185c36ad6824940b3a1",
                    "sha256:8e2b859bc4af3354979e26b03bf7b74376381219c2794ad9e16192b967de8446",
                    "sha256:469beb966f1e3a25b99630dd786b8efb569eb5991607915f7be944d0dc2ab31f",
                    "sha256:58aeadd045551b8311f69b54b65f8f98b6c4cbd3278d19c3d1bbaf83868020ea",
                    "sha256:99cacf80fe638adedb023567366169c12cb17a5fe291f74d7529a447f8aa9da0",
                    "sha256:5cfff0e52bdf7ae5f14b626f67ae92957d5cdb886968a9cd94fd7b79fe5adfde"
                ]
            }
        },
        "1.21.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:3f15ee2baffecb54c14447fef0d7aeac4270f94bf73d69ab512fcafda5de0360",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "10c4b8971d6ce565ed2abe441f73dd2b830c6f490edf9852e7bc5dc9bf65025d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3f15ee2baffecb54c14447fef0d7aeac4270f94bf73d69ab512fcafda5de0360",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-01-24T19:25:31.492563006Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2020-01-16T01:20:56.203685854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8d7cb00bd95f07ddb881fb10a625cff9db36796913fcf8e5dc6a1ef47a74ae45 in / "
                },
                {
                    "created": "2020-01-16T01:20:57.000007967Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:57.706700202Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:58.410773793Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:58.56272017Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:58.61630279Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:21:59.228462862Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:19.108322782Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.1-Linux-x86_64/* /usr     && rm -rf cmake-3.16.1-Linux-x86_64     && rm cmake-3.16.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-01-24T19:25:28.688088371Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:29.79641385Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-24T19:25:31.492563006Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4cbbc216bd6a8a6d3412dd3922d421ce85ce33fc706db20fbd75cc2fb921c7ae",
                    "sha256:efb37b70f734861976c6101d09cf3190d5b94f7b1f851ca289975ce03a6e02c7",
                    "sha256:1f705bb004bc6a8e4c187d48242652dd43b556283f324650c0eb52741c283066",
                    "sha256:9497c30cbf1209988295048a71088b8ec7c0f7eabb903a0ed00fea531ce4a265",
                    "sha256:b5bb5cabac733879f0d3691562a6c32b07aecc5d837cc2bed5eba38e2786e600",
                    "sha256:504e4adbb44a2a2aeedb2bb9784ba3e08de9c53b127cf5e5d0c7d68eed421144"
                ]
            }
        },
        "1.22.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2c7aef8f9c167163984cf09c290e4261506d4428d1e80cfbc223377e2595b59d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "03f05fb67f5421c11ac4e10eb8b5bce4dcc5dcccdf8226d33cbd962948a82bda",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2c7aef8f9c167163984cf09c290e4261506d4428d1e80cfbc223377e2595b59d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-07T20:53:13.275386127Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-01-16T01:20:56.203685854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8d7cb00bd95f07ddb881fb10a625cff9db36796913fcf8e5dc6a1ef47a74ae45 in / "
                },
                {
                    "created": "2020-01-16T01:20:57.000007967Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:57.706700202Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:58.410773793Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:58.56272017Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:49:31.993403487Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:49:32.245741206Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:53:02.173161057Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.1-Linux-x86_64/* /usr     && rm -rf cmake-3.16.1-Linux-x86_64     && rm cmake-3.16.1-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-07T20:53:10.940249218Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:53:11.891956068Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T20:53:13.275386127Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4cbbc216bd6a8a6d3412dd3922d421ce85ce33fc706db20fbd75cc2fb921c7ae",
                    "sha256:efb37b70f734861976c6101d09cf3190d5b94f7b1f851ca289975ce03a6e02c7",
                    "sha256:1f705bb004bc6a8e4c187d48242652dd43b556283f324650c0eb52741c283066",
                    "sha256:9497c30cbf1209988295048a71088b8ec7c0f7eabb903a0ed00fea531ce4a265",
                    "sha256:f3e796096d3b324985e67caaf727c4f1eba0bfd15880b53b3973e2b9484ded27",
                    "sha256:03d2df1b019cc214433c8fb809a13f70698e9e90a9cd946c9b98a17cffce1021"
                ]
            }
        },
        "1.22.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:779e37dcc508323e1e163ab4a6ec9d3061bb16400c7646be6330c431453e15f6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f4dd3b488c9972eac03d70e778febdc85995fb7a0b0501018660388cb051cbc7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:779e37dcc508323e1e163ab4a6ec9d3061bb16400c7646be6330c431453e15f6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-12T14:11:02.730438249Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-01-16T01:20:56.203685854Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8d7cb00bd95f07ddb881fb10a625cff9db36796913fcf8e5dc6a1ef47a74ae45 in / "
                },
                {
                    "created": "2020-01-16T01:20:57.000007967Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-01-16T01:20:57.706700202Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:20:58.410773793Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:20:58.56272017Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:07:16.755540407Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:07:17.258929407Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:10:51.195249404Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-12T14:11:00.56674332Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:11:01.447034731Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:11:02.730438249Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4cbbc216bd6a8a6d3412dd3922d421ce85ce33fc706db20fbd75cc2fb921c7ae",
                    "sha256:efb37b70f734861976c6101d09cf3190d5b94f7b1f851ca289975ce03a6e02c7",
                    "sha256:1f705bb004bc6a8e4c187d48242652dd43b556283f324650c0eb52741c283066",
                    "sha256:9497c30cbf1209988295048a71088b8ec7c0f7eabb903a0ed00fea531ce4a265",
                    "sha256:c1001d23df1ad7231f301b5d5fe9cc84b1fea984ed7e2865826939545ef582cd",
                    "sha256:661450185bd7cb4dc96b695dca1ba238ff038d9cfce49aad7f2c18f0b0d1381c"
                ]
            }
        },
        "1.22.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4ecedeb57a9edcf58a62871fa5aa94ea1b4ea4f4c69bc10578ad4fcaca1513f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "099de5fbc000ebd375c6902c86edc63f5c4733fb45f86963d183b224e9899178",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e4ecedeb57a9edcf58a62871fa5aa94ea1b4ea4f4c69bc10578ad4fcaca1513f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-26T18:28:09.252863283Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:21:11.205805367Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49bd1c0bfe89a93a193774bfd334bc1151f0dca95849f81d1ac353673399585c in / "
                },
                {
                    "created": "2020-02-21T22:21:12.93485305Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:21:14.43583162Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:21:15.758873649Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:21:16.055141833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:25:03.104215261Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:25:03.321007319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:27:58.491753558Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-26T18:28:07.35797192Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:28:08.137365621Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T18:28:09.252863283Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:634b4695a7c1807938e5b1653eeb5b5a489912307f0b8860e4eb5edbe46a1c52",
                    "sha256:58b94a2cb2b199da3a87966eb50418cd94ae8f3de5eb897863edf861a2b64aa7",
                    "sha256:5506ae244a4ddd468df72903e0e4a32cdbd0166f389dea267cd378dc97d82017",
                    "sha256:1a38a7750b8dd6af03538fdc77d0104e37c82809d64ef934673a38a7d10f2d99",
                    "sha256:01723864a171e6b250c3f92f70aa9f95bb9c0615f5f3d4cc600816a5cff35204",
                    "sha256:9d26bf82aca2ab383abf97f379fd8dc736bf5424464096755148b4072b9e75c4"
                ]
            }
        },
        "1.22.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a469f2a07f41355f6cced591f1ac3ba1726506ec015bce7e93c1b7eb3995ffab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a547e71dde20815549ca85ebfd99d9e0af3f499b538e327957b92778182198f9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a469f2a07f41355f6cced591f1ac3ba1726506ec015bce7e93c1b7eb3995ffab",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-09T22:02:13.402344833Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:21:11.205805367Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49bd1c0bfe89a93a193774bfd334bc1151f0dca95849f81d1ac353673399585c in / "
                },
                {
                    "created": "2020-02-21T22:21:12.93485305Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:21:14.43583162Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:21:15.758873649Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:21:16.055141833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:58:24.146386058Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T21:58:24.421850555Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:02:02.201986703Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-09T22:02:11.066484294Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:02:11.978084149Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:02:13.402344833Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:634b4695a7c1807938e5b1653eeb5b5a489912307f0b8860e4eb5edbe46a1c52",
                    "sha256:58b94a2cb2b199da3a87966eb50418cd94ae8f3de5eb897863edf861a2b64aa7",
                    "sha256:5506ae244a4ddd468df72903e0e4a32cdbd0166f389dea267cd378dc97d82017",
                    "sha256:1a38a7750b8dd6af03538fdc77d0104e37c82809d64ef934673a38a7d10f2d99",
                    "sha256:8f6201110e0f44f108dc3d349627a7eb5038e850d4293ea21a2bf39af4c2ba86",
                    "sha256:b6ea15ef62d77a310256ced516a8e1ae3a494374df38b0001bebf3f7ac427b47"
                ]
            }
        },
        "1.23.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf05fd371277fe3a1e4fe35f542d8a1ef1937209364c10f7edd966bb021473cd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "55fc341e48c6c8e7ddae5769226d73059f0aed5bc3d50aa70ee1af84187b6383",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bf05fd371277fe3a1e4fe35f542d8a1ef1937209364c10f7edd966bb021473cd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-12T17:58:46.671918033Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:21:11.205805367Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:49bd1c0bfe89a93a193774bfd334bc1151f0dca95849f81d1ac353673399585c in / "
                },
                {
                    "created": "2020-02-21T22:21:12.93485305Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-02-21T22:21:14.43583162Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:21:15.758873649Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:21:16.055141833Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:55:19.504689808Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:55:20.240184779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:58:36.232565495Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-12T17:58:44.648935549Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:58:45.434415555Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T17:58:46.671918033Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:634b4695a7c1807938e5b1653eeb5b5a489912307f0b8860e4eb5edbe46a1c52",
                    "sha256:58b94a2cb2b199da3a87966eb50418cd94ae8f3de5eb897863edf861a2b64aa7",
                    "sha256:5506ae244a4ddd468df72903e0e4a32cdbd0166f389dea267cd378dc97d82017",
                    "sha256:1a38a7750b8dd6af03538fdc77d0104e37c82809d64ef934673a38a7d10f2d99",
                    "sha256:3bf36384b9a06dedb548a2bba27e05441d6f6780c45af0de9b3eb1e94037401a",
                    "sha256:451b23cf78715e2acfcdcb91b42d86ba8859b438957cebfad021042260293747"
                ]
            }
        },
        "1.24.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97a240133a1fd744ca392c365340e9838cbf1fb25cd26c912448f47970519fce",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "619dca511967617a8e97cdf54252eaaf8c3ff9f773457aa3a885c81f161095c5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:97a240133a1fd744ca392c365340e9838cbf1fb25cd26c912448f47970519fce",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-16T17:05:19.401036083Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-03-20T19:20:34.200290542Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:537f9883fb90d19383082b8ac20c17b581db9045a48fa28b83cab73fe317047d in / "
                },
                {
                    "created": "2020-03-20T19:20:35.087356956Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-03-20T19:20:35.896375229Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-03-20T19:20:36.666791568Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-03-20T19:20:36.847728128Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:01:40.407969393Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:01:41.277397505Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:05:07.876370224Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-16T17:05:17.292703842Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:05:18.125703515Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:05:19.401036083Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:494ede39043c7b42ed834231b358390070e053fc9479fa86e51cd78d7ab24f37",
                    "sha256:8589afe1a3fed8b1a9c2c6489bda2b3b15c83e7f2968f7612f86d20f109c10ac",
                    "sha256:df4bca4dec0b317fd6661287fc358f020115121c158f859635c5ac33089c55df",
                    "sha256:5e0200b1c3138aa85d6436e022e9ef1d68946d9020348a8e34e2c1e31b940f6b",
                    "sha256:6f5f408399bea7d03de243e519cba1cc7f91b6eada7f587edfbf87c83c7a67a3",
                    "sha256:d8934ab00ae5d6a8112a7346f1705ad0e46ebb79aa8a9719439ebb8e284b22d9"
                ]
            }
        },
        "1.24.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db094eb9b97a206a673fdcd7b85c5d4d85eaab94b6c3a0af687fedb3f35cc1fc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ad2b67fdeada961c1d8774ab24372a3c0acc3080aec4852a9080bbd3744dae35",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:db094eb9b97a206a673fdcd7b85c5d4d85eaab94b6c3a0af687fedb3f35cc1fc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-21T17:58:56.507566944Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-03-20T19:20:34.200290542Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:537f9883fb90d19383082b8ac20c17b581db9045a48fa28b83cab73fe317047d in / "
                },
                {
                    "created": "2020-03-20T19:20:35.087356956Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-03-20T19:20:35.896375229Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-03-20T19:20:36.666791568Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-03-20T19:20:36.847728128Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:55:25.371025862Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:55:26.254585554Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:58:45.862845031Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-21T17:58:54.491603498Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:58:55.295208774Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T17:58:56.507566944Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:494ede39043c7b42ed834231b358390070e053fc9479fa86e51cd78d7ab24f37",
                    "sha256:8589afe1a3fed8b1a9c2c6489bda2b3b15c83e7f2968f7612f86d20f109c10ac",
                    "sha256:df4bca4dec0b317fd6661287fc358f020115121c158f859635c5ac33089c55df",
                    "sha256:5e0200b1c3138aa85d6436e022e9ef1d68946d9020348a8e34e2c1e31b940f6b",
                    "sha256:32e769bc78e3eb660a6d0c99612168dcc1e5aaf91b4e4911b8e82896e4992b72",
                    "sha256:86779f42a4b87004ba7557779d78d16cb9dd23538464d8c2d2112bbc51262d02"
                ]
            }
        },
        "1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2fb7a3918f6fb0d3788bde6a673d555886cbaa5dec0994e9c1dfe4e8515f3e67",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "60485d834f9c90ff39a0452dfd6ea8beee3727734dc03d50a9ee8eaf323c8fb9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2fb7a3918f6fb0d3788bde6a673d555886cbaa5dec0994e9c1dfe4e8515f3e67",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-08T20:14:04.344605115Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:10:29.152603374Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:10:29.408650619Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:13:54.072100652Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-08T20:14:02.352119921Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:14:03.138070506Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:14:04.344605115Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:0bbe213b22650448c073c3321ac10147ec8cd5149ca917af8daa9818653457b6",
                    "sha256:efe67c848c32c33269782c72fa8f85c36c9b7110761b803f3db7ac34304a7339"
                ]
            }
        },
        "1.25.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0104ec4d258b38a20f9535ab873943b420d71de1eaa12e76a660dae01047339e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3fbecbd15b3b1bb6585e91dc64b85b82cb69a45d50b9934c2fb636271d6622e5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0104ec4d258b38a20f9535ab873943b420d71de1eaa12e76a660dae01047339e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-19T20:10:03.296710972Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:07:23.470318294Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6203de69efa7cd1d5e942920e3cc9f09b2ed93963d731f60779777fb174aded6 in / "
                },
                {
                    "created": "2020-04-24T01:07:25.168510482Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-04-24T01:07:26.843559801Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:07:28.2513679Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:07:28.642630208Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:06:30.09285505Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:06:30.337220027Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:09:52.507274786Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-19T20:10:01.201097907Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:10:02.031794861Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:10:03.296710972Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a4507fabd147fb46a7cba44bfea25af1f72eb325bfc7e52f3eafb38492629585",
                    "sha256:d63c88281d4ec6105ebf1e94aba80e0723ea7d4078bc2468e2bcacd45f7e3181",
                    "sha256:64e2edb867c5e244fedadae512fb04994d7a0f80d04d9771d883c62fd4183753",
                    "sha256:7f2ca18163c53776ef6f9a0d3c76e285120f6d598d77326fe77c5e00a9ca3365",
                    "sha256:71059ff83b86d8305c6e94a1c6445571d2d9965ed90a415740cccf3c9aaef8a0",
                    "sha256:820e7987e4e9f018d3c9236bef040ee20a945b5ab4fc99d8cddc4786426beda2"
                ]
            }
        },
        "1.26.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aa2b37b8a692b87d241e06a04e4d4545dadc50b91bffc1c48e15ac3e1e5782ba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "434d42e99e6fb8db29cc408de2d0a2f97b3c82e744ab8c933b096893b47a502a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:aa2b37b8a692b87d241e06a04e4d4545dadc50b91bffc1c48e15ac3e1e5782ba",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-06-23T16:06:05.674957194Z",
            "docker_version": "3.0.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:02:14.118950285Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:02:14.382340423Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:05:54.809276822Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-06-23T16:06:03.341974829Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:06:04.274856494Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:06:05.674957194Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:56a2bf5cff6b44e2e9468a28b249fbd2c5f11b99f2f194b5cc3bd305fff53811",
                    "sha256:20bd1db93808b0549c94de0ead8a2d5dad4ce91122eccb02c268c3f0fc38c6d4"
                ]
            }
        },
        "1.27.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:952ca9d28cacbbaa5d8efe5f66bbcb3e0ca54778347658fffe0f3012945c0a6b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ec225754c32b5d0701f5236b91bc4d08565d8da798d73d55af7de9c3fd5c4a55",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:952ca9d28cacbbaa5d8efe5f66bbcb3e0ca54778347658fffe0f3012945c0a6b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-07-23T17:57:25.055593356Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:53:43.07965881Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:53:43.371404087Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:57:13.979291587Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-07-23T17:57:22.552348972Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:57:23.443455689Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T17:57:25.055593356Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:f80abbd31f927adf3e9b7eb5f690aabe9c632f3e331651dba0617cf5984e4631",
                    "sha256:6694260b614ca4506fd9f6f02dedba779018b8862d2f28543a7fcdac668f8437"
                ]
            }
        },
        "1.28.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:746509c7e0f15ebb0813b3dbe16f2c0a094eb28be72f681e00cf9f39b43f4226",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "869783cb5a03f249d258310275d2954207d26aa889c5515591218734b99ae7e5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:746509c7e0f15ebb0813b3dbe16f2c0a094eb28be72f681e00cf9f39b43f4226",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-08-11T17:12:52.424975552Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:09:08.908735979Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:09:09.254493909Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:12:41.818043172Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-08-11T17:12:49.856469133Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:12:50.844283682Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:12:52.424975552Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:bd30f37109b4dae11c857fc6fce3164be6667b74f46bcbd3c601062a1065416e",
                    "sha256:61164e6af5d6f9e8c1968130004683f0ab9bea7f797f5b863fdbdf22a47c3b9e"
                ]
            }
        },
        "1.29.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e61ce0d9fefcc3cf42256417b482a2a032cc9f563fb7ee2c00a25896b019f2e0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c922ea406aff051a5b9365021644fea87a88e179b0c0b961a8bdf419c5da11b8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e61ce0d9fefcc3cf42256417b482a2a032cc9f563fb7ee2c00a25896b019f2e0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-18T15:27:24.289827461Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:23:45.748997858Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:23:46.289881113Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:27:13.517269009Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-18T15:27:21.82474518Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:27:22.808911946Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T15:27:24.289827461Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:b61b755341466d920c6e07193caabcf9f45154bd117bfb29c3b494a295a7746b",
                    "sha256:456d20dd095f6b61e772f6a0f38047da3a2d7db0d73518e673c39bbe6a6693c4"
                ]
            }
        },
        "1.29.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:187f604f2aac27143d17523fb4df572670bcded3bc0340f05f1b70ebbdddcfb2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fa563d0407fc86169c7185986eda28741ea1cbfd5bd68d409d543da5acf81537",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:187f604f2aac27143d17523fb4df572670bcded3bc0340f05f1b70ebbdddcfb2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-25T14:26:19.247361961Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:23:05.924435315Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:23:06.247889455Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:26:08.184584688Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-25T14:26:17.016662511Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:26:17.815905199Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:26:19.247361961Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:cf6eed8e07ea1471c9942a1b56d61aa9f99d40ca3ea66392807c83078db7c1a1",
                    "sha256:6815cd46b74c25c2999710e672bb251abcfe5f59d9b0e750e78bc216e83034a6"
                ]
            }
        },
        "1.30.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:21dd6a3e15a83c59027d153c5f42cbc9d68ac3129b3d0d21de7d02b470e51e9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8dbd79eed80079bbb6b261ebe737c4329a07d88d211596190052ca24db813351",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:21dd6a3e15a83c59027d153c5f42cbc9d68ac3129b3d0d21de7d02b470e51e9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-10-19T14:51:40.68600124Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:47:44.217049488Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:47:45.288150797Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:51:29.77083475Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-10-19T14:51:38.27296678Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:51:39.220121954Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:51:40.68600124Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:46324a22b3104bd335c2a1731768ddf5a9b47e30c2e5890ccf8bc514620a05b5",
                    "sha256:f8f92083c98fb5bebcfcfa9227763e9d70413cf6805d8805dfad19056bd15472"
                ]
            }
        },
        "1.31.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35d5f18c38add828be88fca46f5ef9a4c88493f783b60c6fe3a127687fbece12",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "21b0838656b4c7887645f1d4ce21fb00c0052831a0ccd961dc55abf3aea484b9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:35d5f18c38add828be88fca46f5ef9a4c88493f783b60c6fe3a127687fbece12",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-11-12T15:50:36.895578012Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:47:09.877224469Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:47:10.271239201Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:50:25.66989621Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz     && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-3.12/Help     && cp -fR cmake-3.16.4-Linux-x86_64/* /usr     && rm -rf cmake-3.16.4-Linux-x86_64     && rm cmake-3.16.4-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-11-12T15:50:34.721616032Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:50:35.551806384Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:50:36.895578012Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:02e656a05311235c9cc75b314f57efdd0e6d4462acc95d94b59cf2ab038d5b1e",
                    "sha256:71dadc8845bb2e6ac35421d0dccef0b648dea92eb073d78cb88b0140d8f9c4be"
                ]
            }
        },
        "1.32.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:aac6b14b2fd873472b09f2cabe5278a23b8861bbc2d834d54b83a7c916c8b71d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3ea28640c0b63e8c4fa01c767f33a7d689e1837d95a5d3512bdaaeddbf1a0b8f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:aac6b14b2fd873472b09f2cabe5278a23b8861bbc2d834d54b83a7c916c8b71d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-04T16:06:01.339108785Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:02:02.989848182Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:02:03.283219411Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:02:05.00010963Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:825d00d72bd1643b5813524e8c379916a78a3c145fe53109a9d75a40019ead84 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-01-04T16:05:49.355361349Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-04T16:05:59.018695574Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:05:59.869353065Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:06:01.339108785Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:642d9a76a0a37324d426fa935e6fdd257595dd645cbb029f2920042a65ac9ae8",
                    "sha256:38c7e7feff4bd8ca279a900960fa6265a1529f8bacb507dedc17544e3b5046f5",
                    "sha256:e4c278c4f64c4fd82cc4b5f66a03a2c2f6a8f385d71a3962dca01f376426c727"
                ]
            }
        },
        "1.33.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a829677fb4205252b00ae1cef0232656c75b1d656b453440e284525b39fec4d9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "af12c24d81d363fee02a2d53b0ea974925557eaa3533a8b9dff5d49a4b8aebac",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a829677fb4205252b00ae1cef0232656c75b1d656b453440e284525b39fec4d9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-20T12:13:37.81308854Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:09:42.631967659Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:09:43.324882873Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:09:45.000225893Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-01-20T12:13:26.164614782Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-20T12:13:35.614042127Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:13:36.465975667Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:13:37.81308854Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:dcf89c17956fc0140ded1bf81d1f5bcb955314b3bee261bac3a692da241ac861",
                    "sha256:b48b605dd7e42a93957a51eda362aed3cf7a8f9f1df6b902b35960233ddc9003",
                    "sha256:f48a591fe984ebc285c3377778385586f7ce2bed2c2e47cf908a2e44de344505"
                ]
            }
        },
        "1.33.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:66a2be9bdb1e7022f7e0a63ec333240edb6df4ed6e51ab752364eec3e914d0fb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ad3afdf7e1a1ea47bdc2f2163e78d2f5d9ce2becc5e81d9ffb51085287a7bd60",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:66a2be9bdb1e7022f7e0a63ec333240edb6df4ed6e51ab752364eec3e914d0fb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-02-17T17:33:33.303523687Z",
            "docker_version": "20.10.2+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:29:33.313855395Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:29:34.252696252Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:29:36.000301925Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-02-17T17:33:21.509929917Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-02-17T17:33:31.075881952Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:33:31.916961903Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T17:33:33.303523687Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a47d40ce98b20f1842a84c14d29fea5aa13f059ce8264d9c6b03848771bfb6ca",
                    "sha256:9bca42ef667b99ee43336c0158e8093069e439bd2fe3c83ede9041bebe59cb8b",
                    "sha256:53bed2abacd32754e6a6fc66585f8a85dcf8c9c8e72ea561e849203ef3a80b8f"
                ]
            }
        },
        "1.34.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ffebd5845e33f8a348e43fa21df0a33d72978a76c23322a0aa368285b4b105ea",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "04a7ea4c61db6221526b029ac141388b7ceb04cd90aef745f5d37307b546d190",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ffebd5845e33f8a348e43fa21df0a33d72978a76c23322a0aa368285b4b105ea",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-03-02T18:06:08.80667786Z",
            "docker_version": "20.10.3+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:15.755492075Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:16.302776635Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:18.000199112Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-03-02T18:05:56.820083524Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-03-02T18:06:06.366170257Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:06:07.305815621Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:06:08.80667786Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:b500dde1531ac5e400dd1f272295e8b6d3943e6cc438923ef2359cadac1e5ec0",
                    "sha256:3b685d95f58e30543efc713635f7edded40521e09167499043cbf08ae3808189",
                    "sha256:f33bf99b7c790b77590cd8553e5d86436a090d36c43809c8b404fd48de97a7bc"
                ]
            }
        },
        "1.35.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:00d4105e0ed4492d2630487d0431f6a4bc9a5fbb2d992a87dbfe9b846fb45dcf",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b044249e13b694b4278a333eb3ab97cd6442d5a62e1add32efe39174b684f4bc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:00d4105e0ed4492d2630487d0431f6a4bc9a5fbb2d992a87dbfe9b846fb45dcf",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-04-15T16:03:14.363247287Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:21.170483036Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:21.46654087Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:58:23.000188334Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-04-15T16:03:07.940593402Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-04-15T16:03:11.854608879Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:03:12.954876472Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:03:14.363247287Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:da6d76254c23d3792507423185a25793e3a54c3a117410e00ff0330b36174161",
                    "sha256:e884069868cb7919d604d7a3ec1132d294d5a39fc150e9396e7fa168c1de46c9",
                    "sha256:620f5d9f7dd0a26dc9682708cb6388c175cc3a1584fa3a3994c850a561230b74"
                ]
            }
        },
        "1.35.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:936145e4cb36f4ba1410c8d160c315e954d99f599e40c8b904e5c58e2a222730",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "82c23e6f06ca04224f78db4355661193cb18a5babebebf55833ec2e12293d0e3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.35.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:936145e4cb36f4ba1410c8d160c315e954d99f599e40c8b904e5c58e2a222730",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T21:41:21.336064865Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:44.908344335Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:45.298475541Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:46.274257835Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:37:48.000236338Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-05-24T21:41:17.569311266Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T21:41:18.798195457Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:41:19.873801153Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:41:21.336064865Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:f502757d86b290cffe6fc6ef0c12b82b78ddbd5949af82ca90b7b16c00d3809a",
                    "sha256:0d1712d0fbcf516e64e4ce8406488398b07033049f014b398562c0da8c50b8e6",
                    "sha256:8d543d0d58fab5301b30ca800b278a3c3b2a114326b64dae471aaa0b376378af"
                ]
            }
        },
        "1.36.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4da55483ca9a83725380eb62c83247ae12d84b4785be876adaf12fc84c368c9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8f7c216664f36758c911c2635005b6a6112d2bf891e6b21a11798dd4c049a888",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.36.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:4da55483ca9a83725380eb62c83247ae12d84b4785be876adaf12fc84c368c9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T20:47:33.361341482Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:51.46211983Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:52.309251008Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:53.26906968Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:55.000168826Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-05-24T20:47:29.602876418Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T20:47:30.840402206Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:47:31.879334894Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:47:33.361341482Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:1ad7fc5a0f397c5efb4603b97a00be3e280d4b1a13f11ab14a418ead66227bcf",
                    "sha256:2827b349668db4e5d584136ae9864683e55bb903dfe1ebf56610b8dd8b4369fb",
                    "sha256:cd9b1c94c17ee31dfbcc6883f3827ed7fca17873a43b043319caa7ab2690ac37"
                ]
            }
        },
        "1.37.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fd305a16cd9a8c681af8890141520217940570b2e033d0ac8ae628633101cecc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ec7cd5eb970060f258f2338b28b9fbe8043c52757b5539f0570f7bc9731b8491",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fd305a16cd9a8c681af8890141520217940570b2e033d0ac8ae628633101cecc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-01T19:00:43.860820399Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:35.026947962Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:35.345938371Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:36.338148021Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:56:38.000223531Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-06-01T19:00:39.864758973Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-01T19:00:41.324276933Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:42.329908327Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T19:00:43.860820399Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:e681126d03c88a94002a6002391fa48eb09992077b4e86fafbbeef45ffe3a859",
                    "sha256:fafff6115763f86272004cf5da34c461084fcbdb107196e8e088f0fadc1b6e08",
                    "sha256:4e05d06b8f8a61af0fe19a946d0cc84aeeb80a05aab5dc1f29b2837ac425476d"
                ]
            }
        },
        "1.37.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:91a19e53c430ac50e0202302c8fad5945b64f43f944dc20001bfad0a30fd29f1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5bca5a9d055bed39d396afa2fd95d7bb6a084d445fa415e41bc1a3f0ac76ba3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:91a19e53c430ac50e0202302c8fad5945b64f43f944dc20001bfad0a30fd29f1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-08T12:55:33.655106639Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:52:01.285065698Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:52:02.283362509Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:52:03.27955653Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:52:05.00018809Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-06-08T12:55:30.284524501Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-08T12:55:31.493222424Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:55:32.339682868Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:55:33.655106639Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:70db8009653ef87b2297e8f6559d9be2b918293aac9c888820bcb9f1fa858d57",
                    "sha256:6b77b90da1c474e21dfce2a297528b9146a9c05cf6c0157f4aa88c8b2ea4494d",
                    "sha256:737eda4715fd5d64dde27dbdccfa1d20fe966247819dd7640d66abdaf03af5d3"
                ]
            }
        },
        "1.37.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:959ba09f57834cea0c77ea55f56f81bce84a84721c57a48457c4a93f089bfb53",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "00eadb836a8ba736843695fd7567a2a5b40dfff39a5f80272afa96f87bf59d0f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:959ba09f57834cea0c77ea55f56f81bce84a84721c57a48457c4a93f089bfb53",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T19:29:10.745075957Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:15.462353416Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:16.333198115Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:17.30194852Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:25:19.000178396Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-07-07T19:29:07.121970341Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T19:29:08.404584213Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:29:09.336577751Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:29:10.745075957Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:e5a835cb7a8df51fa60a244cef77fe920451be6e699e9084462cfd91a6fb569d",
                    "sha256:12c8de0bb150c88643734eb1e544617ca7e2d3ac5d069cda73a915a08286552d",
                    "sha256:a93deb8addcde0cf353386d045e979ca03053e8c8df5cf5b08fd562960a6e699"
                ]
            }
        },
        "1.38.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dcbce3a33015b67fb440e58f29e715a070720370af66e5bc5e5e9f7cbf90c67e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c1da10581c604ebef7dcf7c41d2fbd9bc58685118ff8c04d7842b95790b91dab",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.38.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:dcbce3a33015b67fb440e58f29e715a070720370af66e5bc5e5e9f7cbf90c67e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T20:54:02.333469703Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:22.55161828Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:23.31783311Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:24.313702103Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:50:26.00020049Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-07-07T20:53:58.545202128Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T20:53:59.753490999Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:00.86163428Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:54:02.333469703Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:2e2249d2bedfd1e169f94ba9806a0140e92c13c5b07ecbaab81883027ff4b133",
                    "sha256:2bdbac53644465667af1aa8b2ff6a73404e10c625aca0e1c1e9968ac7587612c",
                    "sha256:f0a9c0982a5dce9855be4295557728651da68eba342c7ae6267d05edbccede19"
                ]
            }
        },
        "1.39.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:489d15f7419636c01d2d03c31b925092bebdc39c16f869a816f646ca6d192168",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e3545ffbed7b93793a989de50d9a13da3c3f4a13b9ff031d5f1a81d79c9cadc1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.39.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:489d15f7419636c01d2d03c31b925092bebdc39c16f869a816f646ca6d192168",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-08-04T08:02:44.316301667Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:23.939182556Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:24.255576951Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:25.271299955Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:27.0001968Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-08-04T08:02:41.128430754Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-08-04T08:02:42.235877785Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:43.071663736Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:44.316301667Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:18cd879f52a45900ef2c4c6ebc5e69f3b6cd195383e53652ee9b17cb6d8521f5",
                    "sha256:abc85c1f995f5f565f48e0c402816620fe990a8c00dec30d0e2acfbf9d3cd227",
                    "sha256:11605c1b7b81c64acc91f80f5d5973fd620d4a937fcb3d5a3e0ac65e152bb9df"
                ]
            }
        },
        "1.40.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9faeda4f0c60a4a9bccb3fd87f7f6938d6186bdfdbe2896d5cf02ff27f21908c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "fdecdae0cbdcd4457c9e51adc0098cd202107ba27723054e8a6efa812a23d416",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9faeda4f0c60a4a9bccb3fd87f7f6938d6186bdfdbe2896d5cf02ff27f21908c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-09T20:58:56.410657831Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:07.77245267Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:08.199400879Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:09.205020395Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:55:11.001035377Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-09-09T20:58:53.090398068Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-09T20:58:54.350856723Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:58:55.206409676Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:58:56.410657831Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:c9e6ca1aee2b17c9cc2fffdb2fc17ea6bf0fd0e1ed475d031ec35639ff21f37f",
                    "sha256:209ca55029d1b0a36e24e004cd5aed399357912eefb6b2e60d0ac685dfa1e95e",
                    "sha256:70e847f68ba4d7b7f958c9ac53ef2c6bfe2e09a6f7c3588147de483305e4f839"
                ]
            }
        },
        "1.40.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c95affd973285c957d5b00277ac91fd802841f2b72cf82598019127bdc727da5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8e9bf7ade7193db58730855b36bc3e065e2e50621cf2cc41bd0a0f828416208a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c95affd973285c957d5b00277ac91fd802841f2b72cf82598019127bdc727da5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-28T12:23:35.188009034Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:52.839307058Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:53.1768874Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:54.190520951Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:19:56.000324033Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-09-28T12:23:32.172563248Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-28T12:23:33.33744993Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:23:34.058701677Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:23:35.188009034Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:0ac251f469f684c2aa756955c7b211aff6130b7ecdefcb846e118e236d8eda9f",
                    "sha256:65123c59a9929d15427d79d5f45aef3270c7a75d426c3863f7bdbe9c11f75aa4",
                    "sha256:f65f0ffdf6f549c656066682535a6ff0df7a051dead2bcb5782f6ecac7a3e234"
                ]
            }
        },
        "1.40.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:974f9a579db0d67c47ffe0c842b7e2d5a96b3a22b56ff691aebd4ce2323aff79",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "56e98644d82a7f08bd5080cf645116e147767e59ce8e089ae3ae669cab3f0509",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:974f9a579db0d67c47ffe0c842b7e2d5a96b3a22b56ff691aebd4ce2323aff79",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-29T17:32:50.664582185Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:51.17383527Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:52.203424393Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:53.210132464Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:28:55.000112193Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-09-29T17:32:47.406242532Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-29T17:32:48.646639134Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:32:49.42981455Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:32:50.664582185Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:89f5071b107958df50fa30b8f73e81f95d1a3bd71b73233c4817f306a8b8a208",
                    "sha256:a434b5e975444e1fd6033ecb40cfb775065e7b8980eecf68bcb8896f10ee852f",
                    "sha256:e66e81f89ff9967c11c11f17a164579fe461e5c029be0ac5f2e9553b80ebaef2"
                ]
            }
        },
        "1.40.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c1fa08d88c53b42d1ef43967a08789921bb08c4d6d38b6ec40193faaae734afc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "082eb8b70333c1080565db2b205eb9a602a9b81cdd9bd8767e894025a101be2f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c1fa08d88c53b42d1ef43967a08789921bb08c4d6d38b6ec40193faaae734afc",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-07T19:50:56.419028672Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:41.729749331Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:42.171330298Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:43.161783205Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:47:45.000848551Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-10-07T19:50:53.012475319Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-07T19:50:54.038869001Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:54.721181711Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:56.419028672Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:8cf78f66fd236296170e65653f752e7a8b618ba03456ae9c739b1a6d48735d03",
                    "sha256:d34170902902ab8bd35bd61d1502da4e06948a81c1f005967cf48813bd278294",
                    "sha256:2424e99a049e4decf4bf6c5be2e8fcee1471d01c7e752e0b16904ebdb658aa1e"
                ]
            }
        },
        "1.40.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ff8d660b955e77bc7e9ada52af12a6195eb2e7348b3ad1bbbee6a3eae2698676",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "602c698f7c6f69a49e5c1707fa5d9024d1c7b8e1b250751d19b1da13aef5d6c6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.4",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ff8d660b955e77bc7e9ada52af12a6195eb2e7348b3ad1bbbee6a3eae2698676",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-19T13:50:43.817616217Z",
            "docker_version": "20.10.9+azure-1",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:46:25.712693445Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:46:26.201968559Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:46:27.21885914Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:46:29.000107174Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-10-19T13:50:38.833725832Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-19T13:50:40.452003369Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:50:41.53550108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:50:43.817616217Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:3163215736872e1fb44333db5bf91284529737437d12d9f76cd7fca4010b802c",
                    "sha256:2318ac5e5c7a6114e2b808ceceeef1a458928c9d2a289b80629653e6aa7fa205",
                    "sha256:fbbf60d9de260518906b26e99951a0c1f30a1dd341ed7c45bda3dee9a66263f4"
                ]
            }
        },
        "1.41.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:97af8e206728d54e488dc721306942c0de1665c1a4d01bbca4cd929fb81108ed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "85b277fa9b9882d68b6cdadb0fcda3edafce88b7cd233f8bb5af7be3054ea717",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.41.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:97af8e206728d54e488dc721306942c0de1665c1a4d01bbca4cd929fb81108ed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T17:40:42.490724345Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:22.663891089Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:23.165617348Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:24.162894536Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:37:26.000238928Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-03T17:40:38.68727304Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T17:40:39.724356729Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:40.684975132Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:40:42.490724345Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a67bf850be8775cc08799be19e872e5b755923768b25bcf2d8803ac1c020f081",
                    "sha256:04c88a1a375ffe53c08bfeadf5975b97988eecce205b0a9e841f2c6776dde2ea",
                    "sha256:ebe64aa29567cbe18a5be920c6bf4503bb80d8be3b6ea16bee99098ce36c72b7"
                ]
            }
        },
        "1.42.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ffcbb96fc2602cb80cc91568eba114430e96df4b5017e37d89370cc63770446",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2253f427ce4020170383789c1bd6ad81d6474ba09c81e467ce62108e0b6830cc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6ffcbb96fc2602cb80cc91568eba114430e96df4b5017e37d89370cc63770446",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T18:16:13.723219413Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:10.476005109Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:11.211853187Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:12.236392994Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:14.000566733Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-03T18:16:09.558102581Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T18:16:10.840653226Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:16:11.861011637Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:16:13.723219413Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:63c482867639f5e3421ede47307e513cc6a2c73147beaa32a909b32930f73535",
                    "sha256:414487b2bc925eac147b8c762918a473e23d5497549046f73a30b72a3e6c7c08",
                    "sha256:f39be9c7ec1c6a87bb5f4301fc398032d0617df07c4e951674d3bf3690d0bede"
                ]
            }
        },
        "1.42.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:b37ef836eb81c98ef93eed521f72a56e3cea4ba282f6d8c9b49e7e23fdc3bbb7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "56e1b3b8d9426bb90b5976f848b8c519b07f2cddfa30305f5acb5184e1e8bcc0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b37ef836eb81c98ef93eed521f72a56e3cea4ba282f6d8c9b49e7e23fdc3bbb7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-08T21:35:18.480587731Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:55.189852256Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:56.184668086Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:57.191258469Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:59.000359591Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-08T21:35:15.051343569Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-08T21:35:16.164855327Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:35:16.894720767Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:35:18.480587731Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:89a76895ecae21bbb615c3c6ced868b9041d0202dc502225a1c899f3b6970489",
                    "sha256:12ce9fbeed3d36ccf56745e6470e2f7fad9e645b45c090a71ba51ead90122629",
                    "sha256:b18172f65aac3f50892e83e707d9814bffe6fcbe2370c33bf56eb7ef4e9b4ed0"
                ]
            }
        },
        "1.42.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9077e3e4505229afd9af1a054c3afed52cfc0c1def473468b0eadd9d91f3d9dd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "79db3422b3441d933071cf8b2e3fecfa9910127c30d9473fc4f595744efa37ef",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9077e3e4505229afd9af1a054c3afed52cfc0c1def473468b0eadd9d91f3d9dd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-30T18:01:05.55306218Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:53.963906277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:54.211944453Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:55.21591489Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:56:57.000814062Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-11-30T18:01:02.023676623Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-30T18:01:03.29973766Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T18:01:04.213153606Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T18:01:05.55306218Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:90f14af52bac89b27ae507c01638c341eeca9d3f58693de11e3a593b54463648",
                    "sha256:e28ecd2ad1f1103480a2bb0763a9c30ed519cfb41dee7d12b4a61cfd2cb301b3",
                    "sha256:3c83bcf6ea3d56f1bb146745c6a9ea5dbad144a711b701772eacba56611c8ce7"
                ]
            }
        },
        "1.43.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:076212a9224ea48c60af7f918d6b610866d27d27a0bf2241380330f0ab195635",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8c5519cb23a469331614076bc775ab3afdce0cfeb17af51aea1b4a5dc2f55b84",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:076212a9224ea48c60af7f918d6b610866d27d27a0bf2241380330f0ab195635",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-06T09:27:07.216816481Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:28.910692842Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:29.197602615Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:30.212275422Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:23:32.000290194Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-12-06T09:27:04.144958342Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-06T09:27:05.276238966Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:27:06.041915985Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:27:07.216816481Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:62a946dce200d0bbe70633ce1398413f7dea1a5de06a54c9bc4b29194fc54697",
                    "sha256:ad0daaf9cbcbe072faf6258a6eeb6fe9fa05a948ddb00a275ecbda285856ad5d",
                    "sha256:283339c26895a03a5a16d453055747df961c8b755ad105c211a8d703a2a7ef2a"
                ]
            }
        },
        "1.43.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e4769cc73c2a1cb6f7eabdb7c649afa9fca5ce7a6f0e9a1c8d3d9a1c9199129d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9d198b01c19b4f243fc887240f9ff0c9e97464a3dfdcfeede1ff63a77d697270",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e4769cc73c2a1cb6f7eabdb7c649afa9fca5ce7a6f0e9a1c8d3d9a1c9199129d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-30T12:33:20.174851012Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:39.156072376Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:39.347470678Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:40.189474566Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:29:42.001115505Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2021-12-30T12:33:16.701123122Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        binutils=2.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        libc6-dev=2.*        linux-libc-dev:i386=5*        g++-9-multilib        libgmp-dev=2:6.*        libmpfr-dev=4.*        libmpc-dev=1.*        nasm=2.*        dh-autoreconf=19        ninja-build=1.*        libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=8.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-30T12:33:17.871032395Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:33:18.767980511Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:33:20.174851012Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:8b5d2db27426d18f199356130406e04af7b2cfaa6ac7bef44e08f8472e47febf",
                    "sha256:a675f08c07a99726b487b6144c7c9de842651bac01b5335c73dde0f6bbb4b6c9",
                    "sha256:c20489b5a714ff42b78c8f2ccb256d50bb2d4d86c8e9e7192f4a32bdca7f3ee3"
                ]
            }
        },
        "1.43.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:974e78cdb9d8607a345471296f1902435c718f62988b0d9b8d7845b9b9bdd50e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a76bf09b68c851513298405f3e4d57cbad3994b00a624ccf6571afffc3e5b097",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:974e78cdb9d8607a345471296f1902435c718f62988b0d9b8d7845b9b9bdd50e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-01-28T10:40:56.278291156Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:55.1248417Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:55.309653035Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:56.191047207Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:58.000320982Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-01-28T10:40:52.791496511Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-01-28T10:40:54.12927818Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:40:55.013807047Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:40:56.278291156Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:673d72d37f75362e7f44528c2b3512f1ae11516b4327b0d605ddbd20f3532d61",
                    "sha256:e51b0412b80f6d1bf7aed0da0ff599dc713a8ef3565f3a4a623ff199897dea67",
                    "sha256:5afab7c10cc3667bcdb27ff68207d94da08716daaedad72a3ec1713460de5d3d"
                ]
            }
        },
        "1.44.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cb3ea519ad43a1c97a17956e3ffe979ed284c52dceb8ba0aceaf40a6f367a5dd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3922da737a235479a164f9369ac1660c8ca5e0ea129e62cb70569fd554c392ec",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:cb3ea519ad43a1c97a17956e3ffe979ed284c52dceb8ba0aceaf40a6f367a5dd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-02-01T11:13:28.674379491Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:09:21.095033022Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:09:21.315791497Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:09:22.206260766Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:09:24.000271261Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-02-01T11:13:24.769497523Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-02-01T11:13:26.309645593Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:13:27.26441675Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:13:28.674379491Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:6fa376cd03c7b843e3dfb2cc40d494e95ece98f5804aa11365860bb50b798a3d",
                    "sha256:856585731a9c014941595d007cefa82c3e5790e2014f85cc6af9235a491f9b3b",
                    "sha256:98214f88f913d7be83c8e7a71e3fa593a1888de21491853a0ab26960351c495b"
                ]
            }
        },
        "1.44.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fa1b193d323e96eb8f0fdd141fe8c1f878d2db7f5488edb505f5c1fe65ef6ff2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b4ddc893e41e8b1c51c1536bcf114fcceab58cef93256915ce09bd213a8ddc25",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fa1b193d323e96eb8f0fdd141fe8c1f878d2db7f5488edb505f5c1fe65ef6ff2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-18T15:18:12.623862735Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-18T15:18:05.253686043Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-18T15:18:11.6780024Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:11.802329205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:18:12.623862735Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:88b9787f44ec7b4c7b194fd743943118b4665b34956ee4bea6f82ecfcf59a19f",
                    "sha256:5a2dc8b9109a0e4134d88543be6e5e177450d81acd8838ff848e74f21c3c97c8"
                ]
            }
        },
        "1.45.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:909d003b4ca57e4356fce12232d2c9508c497d3df5bc1e733ff90579b400dc2c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "27dbd9d2c7a4f87a9fd8d978ca7e5eda20162149537065f43cc555e4ba2a5c4e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.45.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:909d003b4ca57e4356fce12232d2c9508c497d3df5bc1e733ff90579b400dc2c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T15:55:21.994406194Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-31T15:55:14.720678672Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T15:55:21.032500125Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:21.161107078Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:55:21.994406194Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:d9f6570271f0995d7d1610be26cc879a50ed1e96e8344bcf578f983e892a6492",
                    "sha256:3e3a0b9c4ac3eee858870a6ffbe958060c6c6e8a6dc4ab30b10736ad5440d1a3"
                ]
            }
        },
        "1.46.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f400045abc7fe43fddcf56420add59120877e2076d2289e078b3f414ae23be4e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ba68b02ad8817b450c72ea68e642ce8e782479e70e5ab845929e7eec1bd4fa43",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f400045abc7fe43fddcf56420add59120877e2076d2289e078b3f414ae23be4e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T16:31:22.476453542Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-31T16:31:15.092854929Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T16:31:21.515976068Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:21.643003358Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:31:22.476453542Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:87160a85bc664c917d14aef910ab6ec3f39ed2f7fe56909f7a7530e716dc14be",
                    "sha256:942386bad916dd293f9dcd73739cf680611e8e80b8eff518d94c083713b3a155"
                ]
            }
        },
        "1.46.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:03245a8c9645d45aaff28ccc96803ae020cc97b3328761b024ff92ffe290df9c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0f45056c87e477244d1389d5934884ba7c713fc561054a2ef7f7e806944e5004",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:03245a8c9645d45aaff28ccc96803ae020cc97b3328761b024ff92ffe290df9c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T17:06:23.394965066Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-03-31T17:06:16.057311919Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd 1001 -g 1001     && groupadd 1000 -g 1000     && groupadd 2000 -g 2000     && groupadd 999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5     && pyenv global 3.7.5     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T17:06:22.491032734Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:22.605800654Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:06:23.394965066Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:8ccd5e910cdf5c709c7348c107dc628eb0c6de657bd219aa7fe239af42ea1f80",
                    "sha256:f69b3bb0390c6fae78485e5e51c895898cec6f2c6ad89dcb50e43bcbd7583196"
                ]
            }
        },
        "1.46.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40e8c576a869862d7df4d59e33fbca9f51b59f0fcd8c943dc52445240cf0b807",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4bcda1425e04098cbd9e3a1b9de2286a9d91ce1b938bdee2b3b4e24805d2286e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:40e8c576a869862d7df4d59e33fbca9f51b59f0fcd8c943dc52445240cf0b807",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-05-18T11:44:06.195408536Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-05-18T11:43:58.748822359Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-05-18T11:44:05.262272916Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:44:05.38134315Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:44:06.195408536Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:0f314a89edce9653343a83a07dd4efd699bf4c371dccfad1bcafa62688c06d16",
                    "sha256:f162fafa396a931446690100e826869b50c9fdcf02349b2f85c03ae19f9a6a34"
                ]
            }
        },
        "1.47.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:de06b5bd24577f47ae1f96341326b02dae5f7e32e35628413b0f451387952d63",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8afe3d1b1fe52e124dace12f062dfc9f44acc3de130931392b129dc72b97d7f3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.47.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:de06b5bd24577f47ae1f96341326b02dae5f7e32e35628413b0f451387952d63",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:05:56.733982093Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T14:05:49.267854079Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:05:55.788947182Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:55.921343679Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:05:56.733982093Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:4dd6ebc3f9f3e24f0f94837f08e25f4b4fe929a3ced0703b2da0ac90191816a4",
                    "sha256:9cdad3d1a63925eaab10dec485ebfb845c8dd805b135d953c2335a92369d8714"
                ]
            }
        },
        "1.48.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0a3256788a1427017b262db8b209aa8b759b88591f16ac7c8853e4d6faaf3ce0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9be17dc27d3ee2316a294d1f4444fbce8f230e68aa4722839b35db3fde3df354",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0a3256788a1427017b262db8b209aa8b759b88591f16ac7c8853e4d6faaf3ce0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:42:29.674930942Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T14:42:22.425158766Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:42:28.744902587Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:28.866601919Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:42:29.674930942Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:e28990413a7bafb64e08b7203f21673aaebb5e6c87ee9dff4703c31ae4da3ef8",
                    "sha256:eb8254161a3b4df0113f63238baddac67961802cb94c852045a42de0a4f93ab6"
                ]
            }
        },
        "1.48.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1890c7b744782034bb780b283436b62050ab231280dd4866809bed32d4471239",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ac3986a3698b347e12251f2075cd55022b27cb5e5bb9ae9561fa7d7ea1fb8e6d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1890c7b744782034bb780b283436b62050ab231280dd4866809bed32d4471239",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T15:17:47.121932364Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T15:17:39.656748152Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T15:17:46.123090718Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:17:46.254776909Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:17:47.121932364Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:9991d06af377781196c101d220265ea2b55c8c72638fe626ab5da33a649a65a8",
                    "sha256:c5ce48b577e701c9c189163bf2f5ed6bc1d7d8595edc73eab78f74ec81845bed"
                ]
            }
        },
        "1.48.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf3c13393f127be8aec3d8532e65f9c5aa874e406900e32986220ef91cca9198",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "248ff32896381147a34911f319c562b261a131b0c9e27e581fefac35cc168e7a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bf3c13393f127be8aec3d8532e65f9c5aa874e406900e32986220ef91cca9198",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T16:08:59.990216249Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-06-29T16:08:57.317516427Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T16:08:58.983670932Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:08:59.132382835Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:08:59.990216249Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:f58e4eeda8bcf48018fe3d6b4a0e5d4ae12790ea68800cc5500ae7d3ecdee63c",
                    "sha256:ef308cc2944d9e52b3e6aadb83d22fdb26544a5145ff0065c9bb4e607fc9cb47"
                ]
            }
        },
        "1.49.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f4629839d48553b4d3d8fae6079f416a44db6b0e8e8a591274cf9607f2b07358",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c9f5d5afe18bb4f46c84adebd598f4477101159ebbf742f6e9c389328094d1f4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.49.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f4629839d48553b4d3d8fae6079f416a44db6b0e8e8a591274cf9607f2b07358",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:09:18.49765907Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T11:09:11.185275445Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:09:17.593551446Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:09:17.712482523Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:09:18.49765907Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:87af86e67c741cd49c591f8ec77391561913a7ea2de391ef0d14974b2be477cf",
                    "sha256:81006852c24adfa9136f75a1c1b125f2d9839212e9d47f599a332bec394d9dd4"
                ]
            }
        },
        "1.50.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:98048398a8e412500ca7d9a530cd9d3036828c9202e87329456f93657d0384ed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "32eaaf426da43149a359522807cd627517a35e0413eff3229a33c33f204a3621",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:98048398a8e412500ca7d9a530cd9d3036828c9202e87329456f93657d0384ed",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:44:33.057208912Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T11:44:25.571433874Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:44:32.106647228Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:32.23481913Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:44:33.057208912Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:131fa8aaa1fd71c734915a767a0db1792d9eac97dcd93880ac821c48d0c248ad",
                    "sha256:a5f05ce64d2f95871438fd5095a0f71eec5ddb37c5ddbe768d65bd7225a01462"
                ]
            }
        },
        "1.50.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:df39326be45dcf5969790341fc3d687c5a1d2df718b57234783b97f36f4c1a69",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7497ee9fc0a64094ffaba56f24e9faad508f1915edec62b6717588e2657c8f71",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:df39326be45dcf5969790341fc3d687c5a1d2df718b57234783b97f36f4c1a69",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T12:18:35.045017378Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T12:18:32.956769449Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T12:18:34.072730797Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:34.191548682Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:18:35.045017378Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:b8dc43f76e31c3ab55d74837ef7fa4fc976c389e58df2441137f2cd7b9adca9c",
                    "sha256:6b7213e6f956bcaad5ca81c551c6d12090095607737fe6ef3f040e6580e50bcf"
                ]
            }
        },
        "1.50.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ba24128cda5ecb24cd0d9e3698d8f6035d59c759789f5b2b912a32fe759adbe4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "888e94764498f886fe5de438f225a75e9a0a43e25bd489fc5cb81e813e8aec31",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ba24128cda5ecb24cd0d9e3698d8f6035d59c759789f5b2b912a32fe759adbe4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:09:49.409752965Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T13:09:47.05615768Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:09:48.329899191Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:48.476447292Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:49.409752965Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:2b5d73f435fb806872a2d680266a0dada65c5e4466593fb4370c130e36d7607a",
                    "sha256:493f9edd8c22e804475eec2510a63d9dd978e2172bb696d35b728966684b67cb"
                ]
            }
        },
        "1.51.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6b18e0e205b6a32210b794e96aceb8330f8cebbc734dbc8c47cb7e23e703b03f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ddb9362779e3eea6921b3ceaef078241dd285b39911d8fa50a01f6bb067c4c4e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6b18e0e205b6a32210b794e96aceb8330f8cebbc734dbc8c47cb7e23e703b03f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:45:25.295340598Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T13:45:22.52689249Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:45:24.25953667Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:24.389370954Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:45:25.295340598Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:382ca4917771b998559b2b2797ff1edb25eeaddb84075d5e0074947c0d48fdcf",
                    "sha256:22df26941d5d7b1ab99dee9b7c5f3050bbad30224a117a21c542a66fc4995726"
                ]
            }
        },
        "1.51.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:32f3f7d172aaa3ebfe6d38e2df03756ea8be32ecb744e6e8f56c1895e9f37490",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "724fca097e54e2b9ac83e208725f9814aa1b608adb165995249f7f0a8693c6f2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:32f3f7d172aaa3ebfe6d38e2df03756ea8be32ecb744e6e8f56c1895e9f37490",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T14:20:34.602857904Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T14:20:29.471786907Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T14:20:33.666361848Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:33.784178277Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:20:34.602857904Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:a243c95613762e87cd24b76a71baa2c25bc705472cecee33e6145df5e3ae2507",
                    "sha256:c20c2d513ef6be6e4820ed0a9c5426600383b0ccfa46e34410721b45c7f3a06b"
                ]
            }
        },
        "1.51.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fa890c47917b5e08f735096f691649f4d67390d2322adb5d46f4525cb5535e14",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c900fbbd85148cd669c04a4b9486eb33f0ab10e12cbd34f146454ec6f2b73d4a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fa890c47917b5e08f735096f691649f4d67390d2322adb5d46f4525cb5535e14",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T15:15:22.622306577Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-08-31T15:15:15.232922799Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T15:15:21.657965451Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:21.779208972Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:15:22.622306577Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:e9ebad339e813751798d9a0d9b91e6726d3c2d752ce5df86e6a46b88e4db6700",
                    "sha256:3d3db0376e51d3bdfc2e7e5c40da4eba435502af53fc91a06aaa1f54dcd087ff"
                ]
            }
        },
        "1.51.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f7fcda694160a6ea63628a6fb320a7d7665cd7a9470bf7efc8d4eec74e0cf304",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "d1b13059fe04ebde439a540c509bfd09bbce13965190322e53f6d9888d7cd939",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f7fcda694160a6ea63628a6fb320a7d7665cd7a9470bf7efc8d4eec74e0cf304",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:16:45.698024256Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-11-30T15:16:38.431690644Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:16:44.710118173Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:44.839589752Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:45.698024256Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:44cb21b6fcbdd0263fdb34fa8af6aa5cfdff9a371ebd9c54824542433bdff78b",
                    "sha256:4cd537982a4e0a85730e6feab21949e44a71bc1524f8c7aeba8a6a8d5ac500dd"
                ]
            }
        },
        "1.52.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f3a6d4a3eb61821856655f8eb304268740b728692cad1273171cd46b25cf552f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5d5e7de601f0e57973d2825010c814e4774cd53de1a4ea2c77472afc3c383642",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.52.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f3a6d4a3eb61821856655f8eb304268740b728692cad1273171cd46b25cf552f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:51:45.652501335Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-11-30T15:51:38.262313333Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:51:44.641843899Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:44.773894993Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:51:45.652501335Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:9db726d3db97594df0b223034ccf5d37bfd6579def8e95aa9e4eae0b733b448d",
                    "sha256:41f2320e5138f0ed597b1778db70820efcb4f4a868cc8aa8ede9db8e1c5f512d"
                ]
            }
        },
        "1.53.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d9c36d2fb1cb6d51b1ace4de1b3019279eb558d2a664d5b30089c21c25e11d87",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "32ee9680f64a671eeb94d5a9f61eec0acc7e7c89f0e33ddee2a8495d1dffe439",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.53.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d9c36d2fb1cb6d51b1ace4de1b3019279eb558d2a664d5b30089c21c25e11d87",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T16:28:45.075288732Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2022-11-30T16:28:37.832778209Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T16:28:44.134293922Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:44.250285158Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:28:45.075288732Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:bdb9b01d5b86c1d1bd1da4967ba93ca9595e22fb7bf8e174ef2b6e19f629a590",
                    "sha256:0f9ba32608ff2d4cca50add880add7c90cf8cdebeff40c18d1674a685bc610e6"
                ]
            }
        },
        "1.54.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:56e3cefe67f4dada4b5ddffef84441ce31f617d4d18ee7e0231f6c56735f848d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6312ff3338b5fce4aac5536df2858ceb25711bd494a5f98e361b272f489b1226",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.54.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:56e3cefe67f4dada4b5ddffef84441ce31f617d4d18ee7e0231f6c56735f848d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:08:36.213718084Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T07:08:29.04678199Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:08:35.283354694Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:35.399952571Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:08:36.213718084Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:5b7939da0e66cdaaebf71e798cf53e0bd58f5da6647528bd6d361b3a4aa92da7",
                    "sha256:a670a6ad6c1d2ce595a54e655aaefd27bbb2eddcc841ccca44cba890805a09d2"
                ]
            }
        },
        "1.55.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:47bf519a23c9b84d58fa489906baaa627120e4b656cefbd8b77ef6e52e6b8f38",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6ee55d4c24da6e734cf790efdc2044a61e14b391a536a49e9a24c8066e38524a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.55.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:47bf519a23c9b84d58fa489906baaa627120e4b656cefbd8b77ef6e52e6b8f38",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:42:40.624069806Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T07:42:33.399552986Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:42:39.710366772Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:42:39.825337608Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:42:40.624069806Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:6199f84be72e341104f79fd6deee82d5a51c019f0f8297d04569adf278186768",
                    "sha256:b4412d8c33522eed1a205ab8f04de74a076cdde0d178d18729a272e0028fdcea"
                ]
            }
        },
        "1.56.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2bccc178a7bd7604985ee8c239ea7116b4ddd71e18a7b1fede5d8ac5e4be99e6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "54db81cf5c3f8280c3b7ccd7ca63e75083500da50910f2e7c9b11f21f8f1a8ff",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.56.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2bccc178a7bd7604985ee8c239ea7116b4ddd71e18a7b1fede5d8ac5e4be99e6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T08:16:55.882498128Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T08:16:48.709989635Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T08:16:54.947227101Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:16:55.064310152Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:16:55.882498128Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:f404c572b8cdee98e2742b56bd8c5a0395274e2be2bd3ab60bc8b4351cdf4060",
                    "sha256:5792f888b819fc809d3b2d8b326b0b1a8c159112071656c18277d7a54eecfaf8"
                ]
            }
        },
        "1.57.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d413ae1edf36185573e2cd08bddede6316bba6c0f6d0559a41d6aa29e7a8f349",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3868daea2edd9b00a76823ffc6857511806cec7d1b4cb884bccdd0a74e3933ed",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.57.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d413ae1edf36185573e2cd08bddede6316bba6c0f6d0559a41d6aa29e7a8f349",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T09:07:50.330021673Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-12T09:07:43.154560708Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T09:07:49.313420863Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:49.45138666Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:50.330021673Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:2baaa45de8e08caa280722a1ff1f6fb25323ea560a9d5540e09157c133e550cb",
                    "sha256:e217412debfa3ac0296805aeda66319e3616781e117dc1a8895304905f1c87f1"
                ]
            }
        },
        "1.58.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e5777bfd893f40c0b174b25d7a65a99856ae53382abf06424d266a2bfee9dee0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ba84186370082519e7f5131aa812ff335059a5b7f433b74d9463f3ad80b0e1b1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.58.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e5777bfd893f40c0b174b25d7a65a99856ae53382abf06424d266a2bfee9dee0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-30T20:35:21.120333361Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-01-30T20:35:13.603539911Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-30T20:35:19.977051488Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:35:20.135770171Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:35:21.120333361Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:6d6631f07ff1fb2b3525c4a8b422bd264251b8a90f448bbe1685cc21f67a25bf",
                    "sha256:af8821584cce786e8891af3c00754d61459892609c30f912c35c8819668a0434"
                ]
            }
        },
        "1.59.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-06-01T15:53:35.763786132Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:47:02.139701698Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:47:02.139701698Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:47:02.139701698Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:47:02.139701698Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:35.151371715Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:35.151371715Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:53:35.231054165Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:53:35.763786132Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:26edd45d266ebb241a9d0ca57e97dad6c0dbe648630aeee17d58bd387785ab48",
                    "sha256:5d0d3e47ac048e5ec3c23dd33a41205822f9a2b5637f12617d3f3099dfed5e29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ad5b228889c6dd885321180ca46d561061cbe2a262ffc9f71400feae9c5425e4"
                ]
            }
        },
        "1.60.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-06-01T16:29:25.408339784Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:23:44.333413795Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:23:44.333413795Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:23:44.333413795Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:23:44.333413795Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:29:24.861904731Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:29:24.861904731Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:29:24.890265086Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:29:25.408339784Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:66153e3ea0e8eb12667e51ff3d5caa04fe13d6731aec8ca9413e725ebae34b26",
                    "sha256:28ef7eae880b0b841459ce89fc3c779f8c3a8837d607683d0d5844fc13fdc3cd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b1112b8dce93059c960e87c35a6039e6127fdbc18844b4a34d645857633ea8d"
                ]
            }
        },
        "1.60.1": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-08-03T11:50:12.7313863Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:45:37.427544958Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:45:37.427544958Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:45:37.427544958Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:45:37.427544958Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:50:12.065404921Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:50:12.065404921Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:50:12.104405746Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:50:12.7313863Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:b0270508a01518a9e319d0796e2a55ca424b09f49e8490090d594d2db0a6d297",
                    "sha256:9d699de4233ffc7721ad3fedbe6cb91d57f9792971f0904f90679ff4095accb8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:007696e0af0b1160744652129b6a45ca0be8395977475d23b1ad1ba35c1a254c"
                ]
            }
        },
        "1.60.2": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2023-09-28T10:40:25.028416493Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:34:59.551088822Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:34:59.551088822Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:34:59.551088822Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:34:59.551088822Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:40:24.38795082Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:40:24.38795082Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:40:24.413662993Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:40:25.028416493Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:71225ecf8bcf59e21bb2217427ef86ad2b0b9748fced0cbd890f5f5b17642084",
                    "sha256:be445aee40731ade4fff566214ccbbcde27693e418cbb6b8b1f9fbebc1aac03c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:512cbda14f999559bca381adecaf5ad233457f26ba6f52a8f5c2567f7be19eb3"
                ]
            }
        },
        "1.61.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-01-10T15:57:22.998231095Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:52:21.255027911Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:52:21.255027911Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:52:21.255027911Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:52:21.255027911Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:57:22.417802832Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        gfortran-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:57:22.417802832Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:57:22.453541942Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:57:22.998231095Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:23313cf699c99bab3e41c10bb6029b348ed1e0a1c202789efdb0c3e5a5de398f",
                    "sha256:dba380912f63d30cdf77f6bb02f093acc901178f425e5a82d41fa7ccae135d90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e302c99d1d59000783dc36ba53a3f8296686e1ff1ca291a477e1826d2c40ea2"
                ]
            }
        },
        "1.62.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-03-21T07:45:11.333197631Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:37:36.339139068Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:37:36.339139068Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:37:36.339139068Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:19.966758318Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        linux-libc-dev        g++-9        gfortran-9        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:23.308979989Z",
                    "created_by": "RUN /bin/sh -c wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:25.31849807Z",
                    "created_by": "RUN /bin/sh -c curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:44:11.014740826Z",
                    "created_by": "RUN /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:44:33.871464203Z",
                    "created_by": "RUN /bin/sh -c chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:44:43.914003602Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:44:43.914003602Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:45:10.745302787Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.62.0 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:45:10.745302787Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:45:10.764991262Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:45:11.333197631Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.62.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:68e0bf949f56593c4cbaa2b8aa13a7e1f043b2a9c0ee3f7805e3b8fd35f5c53a",
                    "sha256:9f7ea32257b5f473ef93e0182529757398e694e6aae2760f94b4af1ed9111b90",
                    "sha256:6f977b19391a67e2f03689ebe5b386e9ab48f133533d79fb9407030d29f77884",
                    "sha256:acb0f030144840f8a9f454a4975f1ae73e1f085e03f456116126e44c77b98508",
                    "sha256:27bc9a406ced276f5febd71b7e5f51a2dc342c71822bb9eeb793d7e145783d9c",
                    "sha256:a30099df75f181411116131ec8ad9e93455a617eb113840611f123fd1b7bc6df",
                    "sha256:19476a5190858b9d8f25b67cdb2eed98f8eba2a8acb29f51227a94c959e65df5",
                    "sha256:c4d903064a50d1d5264171d41ac37a93d3529495b2f98138520fb5863286db11",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:544c232b4a7db29547ce6017c33361b24f52a89c1a4b91e597d8322926b62f0a"
                ]
            }
        },
        "1.63.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-03-27T16:02:14.88213674Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        linux-libc-dev        g++-9        gfortran-9        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:58:06.803755505Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64     && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T16:01:07.750980391Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:39.167247042Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T16:02:14.234505226Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.63.0 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:02:14.234505226Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T16:02:14.27832913Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:02:14.88213674Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.63.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3siZGlnZXN0Ijoic2hhMjU2OjAwNTJkMmQ3YTcyZGUxNTZmZGRlNmNlZDgxODdiYWJkOGFmMWUyY2Q4ZDIzN2Y5NjU2YWQwYWYzYzZhZGY5OWYifSx7ImxheWVycyI6W3sibGF5ZXIiOjUsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTg6MDAuMzkxMDAyNzZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MGUwZDRkNmExMjEwYzg3ODJkMGM4NjQ3M2Q2ZmMyMGMxZDBlZDBiNmI3ZDNiY2I4OGU0YzU1YWMwZWY4ZjNkYiIsImlucHV0cyI6W1t7ImxpbmsiOjd9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NywiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1ODowOS4zODkyNDIxMVoifV0sImRpZ2VzdCI6InNoYTI1NjoxOTdjNWRhYTM1ODRkNTIwNzMxNDYyN2EyZTgwNDA4NmJiYzgyOTg3Mjk3OGVlMjJmNmNlZDJjNmFjNjM5MjU4IiwiaW5wdXRzIjpbW3sibGluayI6MTB9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6OSwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMTozOS4xNzQ5MTE3OTRaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MjgwNjQyMTEwMzMxOTBmNzI2NWIxOTM1MGExMGNjYzk0YWNmMjAxZGI5MzczYzNlZjM5OTZiMjE3ZGRmN2M5ZCIsImlucHV0cyI6W1t7ImxpbmsiOjZ9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTMsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTY6MDI6MTQuODg4Nzg1ODU5WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjViMGY2MzNmZDQ2N2RiMmI3YzAzNDM5ZDg4MmExNzgzYWQzYmNlNTAyMmQ2YjM4ZjljYjBhNGU5ZDc0MGJkN2UiLCJpbnB1dHMiOltbeyJsaW5rIjo5fV1dfSx7ImRpZ2VzdCI6InNoYTI1Njo2MzBiOTZmYmFjMWIxYzI1NWJjMTUxNDIxNDVjYWFhMDJkNGFiM2E2ZDVkMjZjZWQ5NGFjZmQ1YjM4N2Q2MGZmIn0seyJsYXllcnMiOlt7ImxheWVyIjo4LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE2OjAxOjA3Ljc2NDc3ODEzOVoifV0sImRpZ2VzdCI6InNoYTI1Njo4ODM2NGZkYzFhZmVjZGU4YTgyYzg0ZDI1NDA3YjQ5ZjAwNThiMDI0MmVjODkwNzg0ZDkyNzFjOGE1NjdhM2Y5IiwiaW5wdXRzIjpbW3sibGluayI6Mn1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo0LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjQ5OjU3LjY4MDU5ODM4MloifV0sImRpZ2VzdCI6InNoYTI1Njo5NDk4ZjVmY2JhYmUwMzBlYjljNmIxNTNjMWMxODJlNjgwMzAzODU3ZjlkNjIxNTMzYTMwOGNmNGU0NGMyMTcyIiwiaW5wdXRzIjpbW3sibGluayI6MH1dLFt7ImxpbmsiOjV9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTAsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTY6MDE6NDYuNDI5OTg4MDU3WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmE4ZGYyNmM5M2Y5ZjMwMTIyMmI3YjJhMDE3ZTdhODgzMDJmMTMwNWY4ZGIzZjA1N2M2OTYzZTQ5NjUwZDQzMTYiLCJpbnB1dHMiOltbeyJsaW5rIjozfV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjEyLCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE2OjAyOjE0LjI4Mzc1NDQ4WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmRlNDE5ZjU1NWE4NmIzMTk3YmFhYTM5Y2I4NWMzMTNjOTM5OThkNmM3YTZlNDkwN2ExYTJlNzljY2IyYTYwYzIiLCJpbnB1dHMiOltbeyJsaW5rIjoxMX1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo2LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjU4OjA2LjgwOTk2Njk3NloifV0sImRpZ2VzdCI6InNoYTI1NjpkZWMwMWU0MDgxZmZhNjc2ODQ0NjA1NGI4ODRlOTJiOTA5ZWFiYTY5NmE4NjdjMDFkODc3NWFjYjQ0MjRlOGIzIiwiaW5wdXRzIjpbW3sibGluayI6MX1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMSwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMjoxNC4yNDM5NTgzODlaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZTNkYzkyYjU2ZTJjMjFlOWMyNDA5OWYwMDVjNmU4NDc0Yjc3MTI1YjA5NTI3YWZkMGJkMmJhNThjZjY1YjcxZSIsImlucHV0cyI6W1t7ImxpbmsiOjh9XV19XQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:bad72a91f2a5927822f918ae7bfd196d0ff711f6563bbc4623d02a0518218ed3",
                    "sha256:740c642e11e99cf852fc965d3867d93a194eccf9829934f557b02acb091bab7f",
                    "sha256:e678f440494e149cdb4dcfe1c634bbd84351d80425084d3e6952bf4553a9c64f",
                    "sha256:18538abbab7a5f6aaa88e36958888a22af57838e18b11c46dfe68b7912fae27c",
                    "sha256:75493e56c3d7d894d24062d10ab376742930b6f1cab534dcfb6bf974945afa58",
                    "sha256:bd53fcd96ddaf33bf3d821387a9b2d26418163160d3967de5863132277842aa3",
                    "sha256:51b05378484f8eb86d092b6538ad36f42415e19baad3f21a12745b49b6578b52",
                    "sha256:696f37cefbf460aa4d810615864d570356bfb6598e7cdb0df7ba1b48d9f71bea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3c22ee843ded5450bbaadf18589a7fd0867bed9841824bef9b67320b0bbc4b5f"
                ]
            }
        },
        "1.64.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-04-04T14:24:34.784924852Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        linux-libc-dev        g++-9        gfortran-9        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:58:06.803755505Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64     && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T16:01:07.750980391Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:39.167247042Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-04T14:24:34.268128968Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.0 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-04T14:24:34.268128968Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-04T14:24:34.290192607Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-04T14:24:34.784924852Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3siZGlnZXN0Ijoic2hhMjU2OjAwNTJkMmQ3YTcyZGUxNTZmZGRlNmNlZDgxODdiYWJkOGFmMWUyY2Q4ZDIzN2Y5NjU2YWQwYWYzYzZhZGY5OWYifSx7ImxheWVycyI6W3sibGF5ZXIiOjUsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTg6MDAuMzkxMDAyNzZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MGUwZDRkNmExMjEwYzg3ODJkMGM4NjQ3M2Q2ZmMyMGMxZDBlZDBiNmI3ZDNiY2I4OGU0YzU1YWMwZWY4ZjNkYiIsImlucHV0cyI6W1t7ImxpbmsiOjh9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NywiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1ODowOS4zODkyNDIxMVoifV0sImRpZ2VzdCI6InNoYTI1NjoxOTdjNWRhYTM1ODRkNTIwNzMxNDYyN2EyZTgwNDA4NmJiYzgyOTg3Mjk3OGVlMjJmNmNlZDJjNmFjNjM5MjU4IiwiaW5wdXRzIjpbW3sibGluayI6MTF9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6OSwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMTozOS4xNzQ5MTE3OTRaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MjgwNjQyMTEwMzMxOTBmNzI2NWIxOTM1MGExMGNjYzk0YWNmMjAxZGI5MzczYzNlZjM5OTZiMjE3ZGRmN2M5ZCIsImlucHV0cyI6W1t7ImxpbmsiOjd9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTEsImNyZWF0ZWRBdCI6IjIwMjQtMDQtMDRUMTQ6MjQ6MzQuMjczMDMyMDk2WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjJkNzM1YWQ0ZTRjMTA2MjFhOWFjZWYwY2I4ZTJiZmQzMTUwY2E3ZmY1OWJkMjllNzhjMTcyYTdkOWIwMDg0MGQiLCJpbnB1dHMiOltbeyJsaW5rIjo5fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjEzLCJjcmVhdGVkQXQiOiIyMDI0LTA0LTA0VDE0OjI0OjM0Ljc5MjEwMjE3WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjUwYmNmMWUxOTE5M2Q5ODA2NjljNzc1MGNkZmRkYjFhYjllMWZmODcwMzQ5M2NlMjdmYjc2NWNmNDA2ZTcyYTMiLCJpbnB1dHMiOltbeyJsaW5rIjoxMH1dXX0seyJkaWdlc3QiOiJzaGEyNTY6NjMwYjk2ZmJhYzFiMWMyNTViYzE1MTQyMTQ1Y2FhYTAyZDRhYjNhNmQ1ZDI2Y2VkOTRhY2ZkNWIzODdkNjBmZiJ9LHsibGF5ZXJzIjpbeyJsYXllciI6OCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMTowNy43NjQ3NzgxMzlaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ODgzNjRmZGMxYWZlY2RlOGE4MmM4NGQyNTQwN2I0OWYwMDU4YjAyNDJlYzg5MDc4NGQ5MjcxYzhhNTY3YTNmOSIsImlucHV0cyI6W1t7ImxpbmsiOjJ9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo0OTo1Ny42ODA1OTgzODJaIn1dLCJkaWdlc3QiOiJzaGEyNTY6OTQ5OGY1ZmNiYWJlMDMwZWI5YzZiMTUzYzFjMTgyZTY4MDMwMzg1N2Y5ZDYyMTUzM2EzMDhjZjRlNDRjMjE3MiIsImlucHV0cyI6W1t7ImxpbmsiOjB9XSxbeyJsaW5rIjo2fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjEwLCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE2OjAxOjQ2LjQyOTk4ODA1N1oifV0sImRpZ2VzdCI6InNoYTI1NjphOGRmMjZjOTNmOWYzMDEyMjJiN2IyYTAxN2U3YTg4MzAyZjEzMDVmOGRiM2YwNTdjNjk2M2U0OTY1MGQ0MzE2IiwiaW5wdXRzIjpbW3sibGluayI6M31dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMiwiY3JlYXRlZEF0IjoiMjAyNC0wNC0wNFQxNDoyNDozNC4yOTQyNDU1NThaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZGU0MTlmNTU1YTg2YjMxOTdiYWFhMzljYjg1YzMxM2M5Mzk5OGQ2YzdhNmU0OTA3YTFhMmU3OWNjYjJhNjBjMiIsImlucHV0cyI6W1t7ImxpbmsiOjR9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NiwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1ODowNi44MDk5NjY5NzZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZGVjMDFlNDA4MWZmYTY3Njg0NDYwNTRiODg0ZTkyYjkwOWVhYmE2OTZhODY3YzAxZDg3NzVhY2I0NDI0ZThiMyIsImlucHV0cyI6W1t7ImxpbmsiOjF9XV19XQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:bad72a91f2a5927822f918ae7bfd196d0ff711f6563bbc4623d02a0518218ed3",
                    "sha256:740c642e11e99cf852fc965d3867d93a194eccf9829934f557b02acb091bab7f",
                    "sha256:e678f440494e149cdb4dcfe1c634bbd84351d80425084d3e6952bf4553a9c64f",
                    "sha256:18538abbab7a5f6aaa88e36958888a22af57838e18b11c46dfe68b7912fae27c",
                    "sha256:75493e56c3d7d894d24062d10ab376742930b6f1cab534dcfb6bf974945afa58",
                    "sha256:bd53fcd96ddaf33bf3d821387a9b2d26418163160d3967de5863132277842aa3",
                    "sha256:51b05378484f8eb86d092b6538ad36f42415e19baad3f21a12745b49b6578b52",
                    "sha256:41ff074cf52083a39692d823ca42a8e4661e39a8cb3b3089e168e0c6a0109696",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:74793cdfbc134e8c7cf147ec779092e946099adec948e6fd53d5caeeabef2854"
                ]
            }
        },
        "1.64.1": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-05-21T08:05:45.796663882Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        linux-libc-dev        g++-9        gfortran-9        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:58:06.803755505Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64     && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T16:01:07.750980391Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:39.167247042Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T08:05:45.259175455Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.1 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T08:05:45.259175455Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T08:05:45.280563912Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T08:05:45.796663882Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3siZGlnZXN0Ijoic2hhMjU2OjAwNTJkMmQ3YTcyZGUxNTZmZGRlNmNlZDgxODdiYWJkOGFmMWUyY2Q4ZDIzN2Y5NjU2YWQwYWYzYzZhZGY5OWYifSx7ImxheWVycyI6W3sibGF5ZXIiOjUsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTg6MDAuMzkxMDAyNzZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MGUwZDRkNmExMjEwYzg3ODJkMGM4NjQ3M2Q2ZmMyMGMxZDBlZDBiNmI3ZDNiY2I4OGU0YzU1YWMwZWY4ZjNkYiIsImlucHV0cyI6W1t7ImxpbmsiOjd9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NywiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1ODowOS4zODkyNDIxMVoifV0sImRpZ2VzdCI6InNoYTI1NjoxOTdjNWRhYTM1ODRkNTIwNzMxNDYyN2EyZTgwNDA4NmJiYzgyOTg3Mjk3OGVlMjJmNmNlZDJjNmFjNjM5MjU4IiwiaW5wdXRzIjpbW3sibGluayI6MTF9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTMsImNyZWF0ZWRBdCI6IjIwMjQtMDUtMjFUMDg6MDU6NDUuODAwMjIwNzU5WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjFmYzA1NWZlYmM0OWRlZDFjYzQxMzUyNmY2ZmUzNTQ2M2FhNDBjMTA2Y2MwNjU3NzM2ZjFmMzE4MDFmMDUwMTEiLCJpbnB1dHMiOltbeyJsaW5rIjoxMH1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo5LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE2OjAxOjM5LjE3NDkxMTc5NFoifV0sImRpZ2VzdCI6InNoYTI1NjoyODA2NDIxMTAzMzE5MGY3MjY1YjE5MzUwYTEwY2NjOTRhY2YyMDFkYjkzNzNjM2VmMzk5NmIyMTdkZGY3YzlkIiwiaW5wdXRzIjpbW3sibGluayI6Nn1dXX0seyJkaWdlc3QiOiJzaGEyNTY6NjMwYjk2ZmJhYzFiMWMyNTViYzE1MTQyMTQ1Y2FhYTAyZDRhYjNhNmQ1ZDI2Y2VkOTRhY2ZkNWIzODdkNjBmZiJ9LHsibGF5ZXJzIjpbeyJsYXllciI6OCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMTowNy43NjQ3NzgxMzlaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ODgzNjRmZGMxYWZlY2RlOGE4MmM4NGQyNTQwN2I0OWYwMDU4YjAyNDJlYzg5MDc4NGQ5MjcxYzhhNTY3YTNmOSIsImlucHV0cyI6W1t7ImxpbmsiOjJ9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo0OTo1Ny42ODA1OTgzODJaIn1dLCJkaWdlc3QiOiJzaGEyNTY6OTQ5OGY1ZmNiYWJlMDMwZWI5YzZiMTUzYzFjMTgyZTY4MDMwMzg1N2Y5ZDYyMTUzM2EzMDhjZjRlNDRjMjE3MiIsImlucHV0cyI6W1t7ImxpbmsiOjB9XSxbeyJsaW5rIjo1fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjEwLCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE2OjAxOjQ2LjQyOTk4ODA1N1oifV0sImRpZ2VzdCI6InNoYTI1NjphOGRmMjZjOTNmOWYzMDEyMjJiN2IyYTAxN2U3YTg4MzAyZjEzMDVmOGRiM2YwNTdjNjk2M2U0OTY1MGQ0MzE2IiwiaW5wdXRzIjpbW3sibGluayI6NH1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMSwiY3JlYXRlZEF0IjoiMjAyNC0wNS0yMVQwODowNTo0NS4yNjI5NTI4MjdaIn1dLCJkaWdlc3QiOiJzaGEyNTY6YWFhNTc0YmNiMjkyOTM1YmZkMmFmMTY4MmZmZjJiODVkNmEyZmYxNjdmNzZkNTE0MWI1ZjJiNTZjNjhmZjRlNSIsImlucHV0cyI6W1t7ImxpbmsiOjh9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTIsImNyZWF0ZWRBdCI6IjIwMjQtMDUtMjFUMDg6MDU6NDUuMjg0NDQ0ODQ5WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmRlNDE5ZjU1NWE4NmIzMTk3YmFhYTM5Y2I4NWMzMTNjOTM5OThkNmM3YTZlNDkwN2ExYTJlNzljY2IyYTYwYzIiLCJpbnB1dHMiOltbeyJsaW5rIjo5fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjYsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTg6MDYuODA5OTY2OTc2WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmRlYzAxZTQwODFmZmE2NzY4NDQ2MDU0Yjg4NGU5MmI5MDllYWJhNjk2YTg2N2MwMWQ4Nzc1YWNiNDQyNGU4YjMiLCJpbnB1dHMiOltbeyJsaW5rIjoxfV1dfV0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:bad72a91f2a5927822f918ae7bfd196d0ff711f6563bbc4623d02a0518218ed3",
                    "sha256:740c642e11e99cf852fc965d3867d93a194eccf9829934f557b02acb091bab7f",
                    "sha256:e678f440494e149cdb4dcfe1c634bbd84351d80425084d3e6952bf4553a9c64f",
                    "sha256:18538abbab7a5f6aaa88e36958888a22af57838e18b11c46dfe68b7912fae27c",
                    "sha256:75493e56c3d7d894d24062d10ab376742930b6f1cab534dcfb6bf974945afa58",
                    "sha256:bd53fcd96ddaf33bf3d821387a9b2d26418163160d3967de5863132277842aa3",
                    "sha256:51b05378484f8eb86d092b6538ad36f42415e19baad3f21a12745b49b6578b52",
                    "sha256:e48c5b6f37226585689aa47b0eae35b13222f469dfca7634ba73e7e8756d3123",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:96f254f0dbfbe067898825e3b4ebedfbb52a9157245f9bb7ceae78993e764188"
                ]
            }
        },
        "2.2.3": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "ArgsEscaped": true,
                "OnBuild": null
            },
            "created": "2024-04-18T06:46:26.030117551Z",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:57.660306191Z",
                    "created_by": "COPY sources.list /etc/apt/sources.list # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev        linux-libc-dev        g++-9        gfortran-9        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:00.370906726Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:58:06.803755505Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64     && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:58:09.384256117Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T16:01:07.750980391Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}     && pyenv global ${PYTHON_VERSION}     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:39.167247042Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T16:01:46.423090706Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-18T06:46:25.435176538Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=2.2.3 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-18T06:46:25.435176538Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-18T06:46:25.465060397Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-18T06:46:26.030117551Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=2.2.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3siZGlnZXN0Ijoic2hhMjU2OjAwNTJkMmQ3YTcyZGUxNTZmZGRlNmNlZDgxODdiYWJkOGFmMWUyY2Q4ZDIzN2Y5NjU2YWQwYWYzYzZhZGY5OWYifSx7ImxheWVycyI6W3sibGF5ZXIiOjUsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTg6MDAuMzkxMDAyNzZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MGUwZDRkNmExMjEwYzg3ODJkMGM4NjQ3M2Q2ZmMyMGMxZDBlZDBiNmI3ZDNiY2I4OGU0YzU1YWMwZWY4ZjNkYiIsImlucHV0cyI6W1t7ImxpbmsiOjZ9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NywiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1ODowOS4zODkyNDIxMVoifV0sImRpZ2VzdCI6InNoYTI1NjoxOTdjNWRhYTM1ODRkNTIwNzMxNDYyN2EyZTgwNDA4NmJiYzgyOTg3Mjk3OGVlMjJmNmNlZDJjNmFjNjM5MjU4IiwiaW5wdXRzIjpbW3sibGluayI6MTB9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6OSwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMTozOS4xNzQ5MTE3OTRaIn1dLCJkaWdlc3QiOiJzaGEyNTY6MjgwNjQyMTEwMzMxOTBmNzI2NWIxOTM1MGExMGNjYzk0YWNmMjAxZGI5MzczYzNlZjM5OTZiMjE3ZGRmN2M5ZCIsImlucHV0cyI6W1t7ImxpbmsiOjV9XV19LHsiZGlnZXN0Ijoic2hhMjU2OjYzMGI5NmZiYWMxYjFjMjU1YmMxNTE0MjE0NWNhYWEwMmQ0YWIzYTZkNWQyNmNlZDk0YWNmZDViMzg3ZDYwZmYifSx7ImxheWVycyI6W3sibGF5ZXIiOjgsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTY6MDE6MDcuNzY0Nzc4MTM5WiJ9XSwiZGlnZXN0Ijoic2hhMjU2Ojg4MzY0ZmRjMWFmZWNkZThhODJjODRkMjU0MDdiNDlmMDA1OGIwMjQyZWM4OTA3ODRkOTI3MWM4YTU2N2EzZjkiLCJpbnB1dHMiOltbeyJsaW5rIjoyfV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjQsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NDk6NTcuNjgwNTk4MzgyWiJ9XSwiZGlnZXN0Ijoic2hhMjU2Ojk0OThmNWZjYmFiZTAzMGViOWM2YjE1M2MxYzE4MmU2ODAzMDM4NTdmOWQ2MjE1MzNhMzA4Y2Y0ZTQ0YzIxNzIiLCJpbnB1dHMiOltbeyJsaW5rIjowfV0sW3sibGluayI6NH1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNjowMTo0Ni40Mjk5ODgwNTdaIn1dLCJkaWdlc3QiOiJzaGEyNTY6YThkZjI2YzkzZjlmMzAxMjIyYjdiMmEwMTdlN2E4ODMwMmYxMzA1ZjhkYjNmMDU3YzY5NjNlNDk2NTBkNDMxNiIsImlucHV0cyI6W1t7ImxpbmsiOjN9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTEsImNyZWF0ZWRBdCI6IjIwMjQtMDQtMThUMDY6NDY6MjUuNDQxOTQ1NzgzWiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmFkOGJiZmJjYzZmZTE0YjdkMmE1ZThlMzk1N2E4MzczNGIxNWI4MzA0MzU3ODQ4ZjhkNTliMDhjMmFkOWQ1MTIiLCJpbnB1dHMiOltbeyJsaW5rIjo3fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjEyLCJjcmVhdGVkQXQiOiIyMDI0LTA0LTE4VDA2OjQ2OjI1LjQ3NTU3MzU2N1oifV0sImRpZ2VzdCI6InNoYTI1NjpkZTQxOWY1NTVhODZiMzE5N2JhYWEzOWNiODVjMzEzYzkzOTk4ZDZjN2E2ZTQ5MDdhMWEyZTc5Y2NiMmE2MGMyIiwiaW5wdXRzIjpbW3sibGluayI6OH1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo2LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjU4OjA2LjgwOTk2Njk3NloifV0sImRpZ2VzdCI6InNoYTI1NjpkZWMwMWU0MDgxZmZhNjc2ODQ0NjA1NGI4ODRlOTJiOTA5ZWFiYTY5NmE4NjdjMDFkODc3NWFjYjQ0MjRlOGIzIiwiaW5wdXRzIjpbW3sibGluayI6MX1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMywiY3JlYXRlZEF0IjoiMjAyNC0wNC0xOFQwNjo0NjoyNi4wMzQ5ODUxOTlaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZWI5YTFiODI2MWE5NWM0NDVkMGMyNzg2MWJlZjIwYTUyNjk1MmJiZWQxNmU1M2IyMDdhNDI5OWMyM2ZiZjk5MiIsImlucHV0cyI6W1t7ImxpbmsiOjl9XV19XQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:bad72a91f2a5927822f918ae7bfd196d0ff711f6563bbc4623d02a0518218ed3",
                    "sha256:740c642e11e99cf852fc965d3867d93a194eccf9829934f557b02acb091bab7f",
                    "sha256:e678f440494e149cdb4dcfe1c634bbd84351d80425084d3e6952bf4553a9c64f",
                    "sha256:18538abbab7a5f6aaa88e36958888a22af57838e18b11c46dfe68b7912fae27c",
                    "sha256:75493e56c3d7d894d24062d10ab376742930b6f1cab534dcfb6bf974945afa58",
                    "sha256:bd53fcd96ddaf33bf3d821387a9b2d26418163160d3967de5863132277842aa3",
                    "sha256:51b05378484f8eb86d092b6538ad36f42415e19baad3f21a12745b49b6578b52",
                    "sha256:031d31e70ff5863392cd00c69251cf3f03005b04a9aabe093cddaa69cdc66bc4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:55209ac840162fd782f15bb8f4a1d0b50c158280cdb376c4b801f94d21c517f1"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fadcd43c16cf7de93747ee53060213084b91f8f9057cb7c2bbef56758dcd65db",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2a976c8b06eea14ae3b2a2260633201f1161e7d1b9b5b499c15deec9d630f956",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.59.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fadcd43c16cf7de93747ee53060213084b91f8f9057cb7c2bbef56758dcd65db",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-02-16T16:56:23.817165663Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2020-06-17T01:20:42.474061851Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f7e262b5b83427ba392961a76f015b60b140c12e8313ec3a5764b9829926a687 in / "
                },
                {
                    "created": "2020-06-17T01:20:43.287346214Z",
                    "created_by": "/bin/sh -c [ -z \"$(apt-get indextargets)\" ]"
                },
                {
                    "created": "2020-06-17T01:20:44.029476112Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:20:44.786380017Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:20:44.963475221Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.387864043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.517575814Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.650301903Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:54:54.803322931Z",
                    "created_by": "/bin/sh -c #(nop) COPY file:81fa3774a0828ce274f304ecafacf136ee463858d18a5ef1a48f00fcd36ef186 in /etc/apt/sources.list "
                },
                {
                    "created": "2023-02-16T16:56:16.396862688Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        binutils        wget        git        libc6-dev-i386        libc6-dev        linux-libc-dev:i386        g++-9-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        nasm        dh-autoreconf        ninja-build        libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive     && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-9 100     && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-9 100     && update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100     && update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100     && update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100     && ln -s /usr/include/locale.h /usr/include/xlocale.h     && rm -rf /var/lib/apt/lists/*     && wget --no-check-certificate --quiet https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        --exclude=bin/cmake-gui        --exclude=doc/cmake        --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim     && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr     && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64     && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz     && curl -fL https://getcli.jfrog.io | sh     && mv jfrog /usr/local/bin/jfrog     && chmod +x /usr/local/bin/jfrog     && groupadd -f conan-1001 -g 1001     && groupadd -f conan-1000 -g 1000     && groupadd -f conan-2000 -g 2000     && groupadd -f conan-999 -g 999     && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999     && printf \"conan:conan\" | chpasswd     && adduser conan sudo     && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers     && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer     && chmod +x /tmp/pyenv-installer     && /tmp/pyenv-installer     && rm /tmp/pyenv-installer     && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100     && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13     && pyenv global 3.7.13     && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py     && pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools     && chown -R conan:1001 /opt/pyenv     && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf     && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100     && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100     && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100     && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100     && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-16T16:56:22.838921473Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:22.965862205Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:56:23.817165663Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5dcc29bf7dbcc3fbea2c039636d215331b7d0c51db193240694a22e051f5797f",
                    "sha256:17c102c58c0a36e294655a9ca0b945b0bdd6cfc111a20dd9d980500f792397f0",
                    "sha256:94745e629538d315dff1bdedf683c0b0fa1b456770c89b9444d7fb001980317c",
                    "sha256:2cdcad29c69de0a8ea4c99341cae4d63aa7e49827ba482b805a9a5801ddcc5ba",
                    "sha256:a24f7b613ced58183b026229860cfa83b875d80597398e720bb83ce0d7066a78",
                    "sha256:75fb2915ac49120e03274f1043e21b6cad2347012d3f079f878fce56be40c50a",
                    "sha256:bc5df7005f09eadac56f73fccf5d3ff1f309006884d8750bb2fb474c1221f5cc"
                ]
            }
        }
    }
}