{
    "manifests": {
        "1.10.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7604,
                "digest": "sha256:4e1c425a3a123781d323303840d780f3458759565ee45e63280ae9b9f6b145d9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43412182,
                    "digest": "sha256:7b8b6451c85f072fd0d7961c97be3fe6e2f772657d471254f6d52ad9f158a580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ab4d1096d9ba178819a3f71f17add95285b393e96d08c8a6bfc3446355bcdc49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:e6797d1788acd741d33f4530106586ffee568be513d47e6e20a4c9bc3858822e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:e25c5c290bded5267364aa9f59a18dd22a8b776d7658a41ffabbf691d8104e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279288070,
                    "digest": "sha256:939ad2fc309e6c03a214544de3b5e15304d1ef21864f902e30908e2fefca96c4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:bb0a306197d3b996d0c2276bd04a651dbbaba6c235b271c8f51b17081f54d315"
                }
            ]
        },
        "1.10.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7624,
                "digest": "sha256:d0c1501714e16b0b2f6af1f8fa1f14d2f47b7c2fccbb6770720196cbca859dba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43412182,
                    "digest": "sha256:7b8b6451c85f072fd0d7961c97be3fe6e2f772657d471254f6d52ad9f158a580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ab4d1096d9ba178819a3f71f17add95285b393e96d08c8a6bfc3446355bcdc49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:e6797d1788acd741d33f4530106586ffee568be513d47e6e20a4c9bc3858822e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:e25c5c290bded5267364aa9f59a18dd22a8b776d7658a41ffabbf691d8104e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279525948,
                    "digest": "sha256:15b23188048ce144ce3f49b6841e935d747febd42a72eac25f66f973e8e1f0cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:72c51452c55e0ab13276acae428c523daba979c9f75625774d8244a6b47f6e18"
                }
            ]
        },
        "1.10.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7626,
                "digest": "sha256:220f4510c92744cee7a3bc2a7fd553967509207188e20f8ff3f12f0d5cf27485"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43412182,
                    "digest": "sha256:7b8b6451c85f072fd0d7961c97be3fe6e2f772657d471254f6d52ad9f158a580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ab4d1096d9ba178819a3f71f17add95285b393e96d08c8a6bfc3446355bcdc49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:e6797d1788acd741d33f4530106586ffee568be513d47e6e20a4c9bc3858822e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:e25c5c290bded5267364aa9f59a18dd22a8b776d7658a41ffabbf691d8104e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 280025765,
                    "digest": "sha256:2d871bd2527b993d7e003d71f841ad9277e2abb593ecdf2e01763e93d2cdf40d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1979,
                    "digest": "sha256:912526700adeee59b62cdf73311de8352084eefa4543319a3c7c084e7a208f9a"
                }
            ]
        },
        "1.11.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7625,
                "digest": "sha256:6f27ec19ee697fb33b2904287bac184edb6c54bd9bef662018ffa5f424f848ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43412182,
                    "digest": "sha256:7b8b6451c85f072fd0d7961c97be3fe6e2f772657d471254f6d52ad9f158a580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ab4d1096d9ba178819a3f71f17add95285b393e96d08c8a6bfc3446355bcdc49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:e6797d1788acd741d33f4530106586ffee568be513d47e6e20a4c9bc3858822e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:e25c5c290bded5267364aa9f59a18dd22a8b776d7658a41ffabbf691d8104e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279996748,
                    "digest": "sha256:e961dd75896e2aafe47d9777ea2c52eeb82c268f5dea8e206045e23de7cb3012"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1980,
                    "digest": "sha256:0082cf7d033b0dac5aec85d68b8bc12c9415c458ce87df062f94e2cf83c82ca1"
                }
            ]
        },
        "1.11.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7769,
                "digest": "sha256:1a75db3d37483dd912f374ab93e279a2dd09e76a046472ee092f02a0c08de6ba"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43442989,
                    "digest": "sha256:b849b56b69e770db0ae9e71f818f5be89ba0e30c14133c8a0c7b2ca0eeac15b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:42986ef25bcd19ccfcb5964cdffc5704dcb663c9c7bbb494707c9aa7b1c4f1d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:d927c1b717ec274345e85adaa6f1074974d943fd3481cd64e9488ad9841e3016"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:15b86ea202330d8a60b52809277c566a318663dc824319ddfca663e6c90ae7bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193865441,
                    "digest": "sha256:71974b742fbd740cf39cb345504b22a660bb700bb7233f11da07eaa109bb6f39"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:c8697063ee25d3bb2997079d0211ca69cc2115ee61e6548942c17bf7907df601"
                }
            ]
        },
        "1.11.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7769,
                "digest": "sha256:b1976c33cd736c3a221b8971ae7c96a667ad25956f170f0f354695d9710826d6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43442989,
                    "digest": "sha256:b849b56b69e770db0ae9e71f818f5be89ba0e30c14133c8a0c7b2ca0eeac15b4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 845,
                    "digest": "sha256:42986ef25bcd19ccfcb5964cdffc5704dcb663c9c7bbb494707c9aa7b1c4f1d5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:d927c1b717ec274345e85adaa6f1074974d943fd3481cd64e9488ad9841e3016"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:15b86ea202330d8a60b52809277c566a318663dc824319ddfca663e6c90ae7bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193871459,
                    "digest": "sha256:0dc16460803cb7b5b4fa889fd6a3b50e6ec15520dd0359f6d78afcf8590e03fe"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:9ba598704f597902fb487c20475376b6b2fc24260e2b9e3c5b89684daccc7053"
                }
            ]
        },
        "1.12.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7767,
                "digest": "sha256:6c0820d794f6294464f3bcd23fbec26ee9a0fddec9305ebe1b11c1cfe77b919d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43521448,
                    "digest": "sha256:7b722c1070cdf5188f1f9e43b8413157f8dfb2b4fe84db3c03cb492379a42fcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5fbf74db61f1459176d8647ba8f53f8e6cf933a2e56f73f0e8da81213117b7e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:ed41cb72e5c918bdbd78e68f02930a3f1cf1d6079402b0a5b19de8508e67b766"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:7ea47a67709ebea8efed59fbda703dbd00a0d2cae7e2808959744bfa30bfc0e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 193959841,
                    "digest": "sha256:55b64f6ae6802c990c5cc0e1277a701a7770d03339f5afdf252dfbadf6134ad9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:cb0b76fc4046206bdf7192166774841494bdec3a773e3bf4dd9aec891d2490e2"
                }
            ]
        },
        "1.12.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7767,
                "digest": "sha256:54492fb185a76a9f551a74861df12349b78e965a570778fb5b8a91a54f8edf5a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43521448,
                    "digest": "sha256:7b722c1070cdf5188f1f9e43b8413157f8dfb2b4fe84db3c03cb492379a42fcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5fbf74db61f1459176d8647ba8f53f8e6cf933a2e56f73f0e8da81213117b7e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:ed41cb72e5c918bdbd78e68f02930a3f1cf1d6079402b0a5b19de8508e67b766"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:7ea47a67709ebea8efed59fbda703dbd00a0d2cae7e2808959744bfa30bfc0e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197015120,
                    "digest": "sha256:2c44ec115590a9f1ad1d523b2dc49b9990c219b2b8a11b8e0005ab67a0ddde60"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:de26ccfba5d99048461aee622915ff18839ddb66815e1ac53c212a940bf6d617"
                }
            ]
        },
        "1.12.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7765,
                "digest": "sha256:fc2129c4e094047a4c64084d64e2111de1220e07bc3754e5ac913ed00cd55b52"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43521448,
                    "digest": "sha256:7b722c1070cdf5188f1f9e43b8413157f8dfb2b4fe84db3c03cb492379a42fcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5fbf74db61f1459176d8647ba8f53f8e6cf933a2e56f73f0e8da81213117b7e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:ed41cb72e5c918bdbd78e68f02930a3f1cf1d6079402b0a5b19de8508e67b766"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:7ea47a67709ebea8efed59fbda703dbd00a0d2cae7e2808959744bfa30bfc0e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197014844,
                    "digest": "sha256:d28de1093e2bb47ed7eabf70a3e49b21238321148577acb9cc681be79fb24c31"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:5a8e6f1719ebedbcd3efe7397e98f02c78db3b17d4fee5d375df48e0a4ac78aa"
                }
            ]
        },
        "1.12.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7875,
                "digest": "sha256:a805813cbaf004e641c66d1b6e6c4d55c15e9316f82aa03a88e9366b23071101"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43521448,
                    "digest": "sha256:7b722c1070cdf5188f1f9e43b8413157f8dfb2b4fe84db3c03cb492379a42fcc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:5fbf74db61f1459176d8647ba8f53f8e6cf933a2e56f73f0e8da81213117b7e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:ed41cb72e5c918bdbd78e68f02930a3f1cf1d6079402b0a5b19de8508e67b766"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:7ea47a67709ebea8efed59fbda703dbd00a0d2cae7e2808959744bfa30bfc0e9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 202609594,
                    "digest": "sha256:d0b2bf702d3170984c29a479918df8d2c5e367336fa2e36e5bfe1d953391a717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:e09c96daed5d6ae09ddf4799e7f0b8251e195556dc0e3b752d4fa88f543dca04"
                }
            ]
        },
        "1.13.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7871,
                "digest": "sha256:d8eb1ef9c09ff98368d23b702820ccfd2a2aa7ce838a766957dfc7ce23f2113c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 194955191,
                    "digest": "sha256:9cd6ab14ca98dcf3064bf0b6009a9a4aee07586c27276d8035ed6d39e17d0950"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:bf653a50110ae8e3ec53a4fe11caf06a835d5ce9c887272ed6758bc5ece1059d"
                }
            ]
        },
        "1.13.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7894,
                "digest": "sha256:a503668ed4c15375f0cdde8cf8dd7cdd2b004c48a7ac5c77caa21079d9dc7fe4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195835185,
                    "digest": "sha256:462ec279db3397ef2c04625cd112abc6d81c46cdd2d5f9c192607c097ccead38"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:af6317dacc862a43fc71030e28fcf08ed2d5df40ef5b50c56f53b2a08742fdc7"
                }
            ]
        },
        "1.13.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7895,
                "digest": "sha256:daf9cc0626ef4eb6e4b6bf6e81628f38bc381ff60ef5fde5603f62c675e16a73"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195832617,
                    "digest": "sha256:25e6b97a870c2ca75d43531238de6c91d244210395eff1526f7fb05df61f80a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:a7fdf29254d361c666fea8589cd9e33e610b6e83abbcded8c14ab44bce2db32c"
                }
            ]
        },
        "1.13.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7895,
                "digest": "sha256:502f9ac8a70ce161be68694255acffbbb91ab6186597d660c2743f144ed1d259"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195833505,
                    "digest": "sha256:337ba01d8bea77f5cc346377d1614441f3626425dddacc24193356104094d885"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:d39238a8187e7f5b4a02250cab3e7de061f039a51608bb81186bded2bbf6d1cf"
                }
            ]
        },
        "1.14.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7895,
                "digest": "sha256:232502e871de74177f405469f052f4233d523fd9fe1af217283a2adae0714ba1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195495364,
                    "digest": "sha256:d953ab87464544ebfedcaf16f4195a03398ee51609cc2cb385f0ee0fc7fbe74c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:c0d62f8f7779ea1ae2af13f2f40c80f79581e9a4a8a8c46b9783ef473e83f098"
                }
            ]
        },
        "1.14.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7894,
                "digest": "sha256:161ce1138330ed3a321e1c5c8ff44252601644c2a1229d39467caae05c3c0755"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195503082,
                    "digest": "sha256:daabe5230a9fc26ce650751525ea36b91984ad990089f8e61b5276ec29377b6e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:21bcd451e732380c6ed9f2e4f5615dc5acd0afbae6c6fa42e25a119e271f2982"
                }
            ]
        },
        "1.14.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7892,
                "digest": "sha256:4e11411b75c21afc2c2e73758603f5557765b4fb5f8fd6ec1311ee6f27ee713a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195514074,
                    "digest": "sha256:66682e5ae1086927dd3e9ab72022df04338f5ebdf42edabf3471664f0f4bece3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:c02a8155541c600aaf34b74052ac42d4509ad49c2bb1a4c8c9c08b0f16494f17"
                }
            ]
        },
        "1.14.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7893,
                "digest": "sha256:433e5b9a23226ef9530e9b78bb781bbfb4131d4e87676dde58a875940b1bf2f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43561487,
                    "digest": "sha256:34667c7e4631207d64c99e798aafe8ecaedcbda89fb9166203525235cc4d72b9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:d18d76a881a47e51f4210b97ebeda458767aa6a493b244b4b40bfe0b1ddd2c42"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:119c7358fbfc2897ed63529451df83614c694a8abbd9e960045c1b0b2dc8a4a1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:2aaf13f3eff07aa25f73813096bd588e6408b514288651402aa3d0357509be7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195513962,
                    "digest": "sha256:9bfa4be57a42affe89d4b741667eaf31d94565436c10da326ecfb01f0e89fc59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:b77c28caa0714db83358ca9a050c5ff9266781dc4293e5dd69a9d9c1d5242c7a"
                }
            ]
        },
        "1.14.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7838,
                "digest": "sha256:5f02fb831159d9d3b7b1a55ffec03ba56b5b1bdfdb46c7a165e773dadd19b40d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43752517,
                    "digest": "sha256:7e65918542624be36faca5e547a5b84c4eca21dd4e979c9309f4ad79b95d00ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:089d60cb4e0a6a5f884454ad8f9ea43021ac8c4a8584698f8751fab2437450e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525,
                    "digest": "sha256:9c461696bc0925124c5fe76298c2590a4d4b4009eab16a2346c0010269007f74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 166,
                    "digest": "sha256:45085432511a479b977e19d3334f4948200141d06802c222e743e3d3bafabd05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195521134,
                    "digest": "sha256:427cf97a68507b7a0fef6152d1a153012dede687468cb8d5d2e64f4c9ca60263"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:1b0a1323cc2ab0e342ad0929227e41e1b1980627ffb126787373bf484ddf8848"
                }
            ]
        },
        "1.14.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7837,
                "digest": "sha256:7756e3a72359242e5cd7c4c2dd48af41d8947acb1a891534d84f3fe3fa794fcd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43752517,
                    "digest": "sha256:7e65918542624be36faca5e547a5b84c4eca21dd4e979c9309f4ad79b95d00ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:089d60cb4e0a6a5f884454ad8f9ea43021ac8c4a8584698f8751fab2437450e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525,
                    "digest": "sha256:9c461696bc0925124c5fe76298c2590a4d4b4009eab16a2346c0010269007f74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 166,
                    "digest": "sha256:45085432511a479b977e19d3334f4948200141d06802c222e743e3d3bafabd05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195506863,
                    "digest": "sha256:cea1f0e2cf2aa9d3924986c8c25cb3045341ab3d1c5d4f2e3ce54e4851963363"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:bb23a7f9b13a0c35968a28d087a403973ee3e119ce983e3494781c16df9fd94a"
                }
            ]
        },
        "1.15.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7835,
                "digest": "sha256:2b688ee44e7872d51e86dd059f5feb6eb94b5fe21775b0c3ba5305fa53944064"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43752517,
                    "digest": "sha256:7e65918542624be36faca5e547a5b84c4eca21dd4e979c9309f4ad79b95d00ce"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:089d60cb4e0a6a5f884454ad8f9ea43021ac8c4a8584698f8751fab2437450e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525,
                    "digest": "sha256:9c461696bc0925124c5fe76298c2590a4d4b4009eab16a2346c0010269007f74"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 166,
                    "digest": "sha256:45085432511a479b977e19d3334f4948200141d06802c222e743e3d3bafabd05"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195530666,
                    "digest": "sha256:0ec1be71b602122771be8729e85243c5602004685f8eec21be2c0cd79cf193ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:c5c6b8fd2bd3a90f6c608613f7384dfb7152d9229ceb42c5f656a344994cdda7"
                }
            ]
        },
        "1.15.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7837,
                "digest": "sha256:5c2a9eb5939f5ea48450825b5ecac94ee835d9225923b93a86fc4891794c49a4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43767987,
                    "digest": "sha256:9ff7e2e5f967fb9c4e8099e63508ab0dddebe3f820d08ca7fd568431b0d10c0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:59856638ac9f32d4caa0f5761b2597fe251642786fdfe1b917ddbb074b890c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:6f317d6d954b9a59c54b2cb09e1f30cd3e872796e431cd2ceac5ed570beb2939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:a9dde5e2a643eca8fde0eed52f4aed31f3ecd9c1b2f24d5e3729cd8d2ae68177"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195553908,
                    "digest": "sha256:16b2fc146a2448d16c06953aeea84f1f833ea769b2e08c5e9c6956aa00a9f158"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:784546a503b03b9aa91d945298b0d47216f3b6f70a2569f2140fb42525aaaee9"
                }
            ]
        },
        "1.15.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7838,
                "digest": "sha256:9972f9a41e42b3639ab3051c67f8e260c86ca489a0cd1b7e767a627beac7291c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43767987,
                    "digest": "sha256:9ff7e2e5f967fb9c4e8099e63508ab0dddebe3f820d08ca7fd568431b0d10c0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:59856638ac9f32d4caa0f5761b2597fe251642786fdfe1b917ddbb074b890c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:6f317d6d954b9a59c54b2cb09e1f30cd3e872796e431cd2ceac5ed570beb2939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:a9dde5e2a643eca8fde0eed52f4aed31f3ecd9c1b2f24d5e3729cd8d2ae68177"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195554607,
                    "digest": "sha256:5c375a60d2a30549a1a64ca2ac9b9ab82eec8ad9e2494af4bc0d83df03fdc256"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:e8552e86ac77a15090731fe93c7b239940e1d81a545c5edee2febbfd4c8f85d2"
                }
            ]
        },
        "1.16.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7819,
                "digest": "sha256:9d0c51f7948143af4fd990ec7fbc976e4c13ad172acca5f8b22c9ae5cc3ed453"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43767987,
                    "digest": "sha256:9ff7e2e5f967fb9c4e8099e63508ab0dddebe3f820d08ca7fd568431b0d10c0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:59856638ac9f32d4caa0f5761b2597fe251642786fdfe1b917ddbb074b890c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:6f317d6d954b9a59c54b2cb09e1f30cd3e872796e431cd2ceac5ed570beb2939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:a9dde5e2a643eca8fde0eed52f4aed31f3ecd9c1b2f24d5e3729cd8d2ae68177"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195800941,
                    "digest": "sha256:fb788c9e23a993d97e4ef96ca76e87d9fd0708033aa1494696cecd50f86fae83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:2d71a6890058f67f303978d80f193baaa08072349da7d9d1d967f5284b21ee4c"
                }
            ]
        },
        "1.16.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7819,
                "digest": "sha256:1a296c2fdcec60b598396bbf0ed1591a621c7fa54dfe6595e3470cb92f1086d9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43767987,
                    "digest": "sha256:9ff7e2e5f967fb9c4e8099e63508ab0dddebe3f820d08ca7fd568431b0d10c0e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:59856638ac9f32d4caa0f5761b2597fe251642786fdfe1b917ddbb074b890c29"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:6f317d6d954b9a59c54b2cb09e1f30cd3e872796e431cd2ceac5ed570beb2939"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:a9dde5e2a643eca8fde0eed52f4aed31f3ecd9c1b2f24d5e3729cd8d2ae68177"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195802389,
                    "digest": "sha256:4790981b4b99a45ff77697139556781bb30aa1507bd4ad5d8fc0373aec39d628"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:83d2ccae8fb5e81f93a267ead44d005b065115e7fb1926c4ee86fe34573de4df"
                }
            ]
        },
        "1.17.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:b2d670909b6b492a12670b5844f0a7aefe26b2453ec2cdcaa0d4ac7a072219b5"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43837758,
                    "digest": "sha256:35b42117c431dd1e13679a09c3c68bb983578a1cbe0a8d8980f507567ebce76c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:ad9c569a8d989555892683a932df468cfe294859186790d3f2fb704c3a022e96"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:293b44f451623251bf75ce5a72d3cee63706972c88980232217a81026987f63e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:0c175077525d1ddec01cb7cf003c2d8b4b6650ae15b504a64914f5eed8d28e50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195836433,
                    "digest": "sha256:c538707b395b8c1945ee0974811258268d0c64b6e92ae994d46d30d47113b56c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:075dbf1bd145520d46005e412c040ada0e99024515e58cbdee765b0cfe84ec5c"
                }
            ]
        },
        "1.17.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:a2da9789f3a3eaa6442e87ee4957246bb1c107cd8afc9030c4a9a79851662062"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43923852,
                    "digest": "sha256:f7277927d38a1e97097bad567848b648a4b75175b63343f472259f7aa429f3b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:8d3eac894db4dc4154377ad28643dfe6625ff0e54bcfa63e0d04921f1a8ef7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:edf72af6d6272f4361985009d4a191da77c0cbe241e0ba44255f7a8f0fd7dbcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3e4f86211d23962822c21275a30ae579dbce9a4233ad31549f8253730395f77c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195831703,
                    "digest": "sha256:34b87fa7f4ab1bfce579f37083ef51bf326771fcf5d6d06c19e68fdfb7bc0f83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1976,
                    "digest": "sha256:8900158a000c94480d54d07b233d13b01a650a23c2a2ac324177af1958a37af7"
                }
            ]
        },
        "1.18.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7818,
                "digest": "sha256:2bd685c5a92c9d9b9fec9960df45af04a15185fd65fc47fe72d0151283ca3694"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43923852,
                    "digest": "sha256:f7277927d38a1e97097bad567848b648a4b75175b63343f472259f7aa429f3b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:8d3eac894db4dc4154377ad28643dfe6625ff0e54bcfa63e0d04921f1a8ef7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:edf72af6d6272f4361985009d4a191da77c0cbe241e0ba44255f7a8f0fd7dbcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3e4f86211d23962822c21275a30ae579dbce9a4233ad31549f8253730395f77c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195864973,
                    "digest": "sha256:e3ef4c5e19cd54d88bcb8c34fce27b7413b7761d26f3e6b24399efe2e1223c43"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:5db403f886cab201ec3bf64cff21c085df2561c51c057583da4fb1f7b023c8d1"
                }
            ]
        },
        "1.18.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:f59917fa130c80676aeec5199a6d4a49e8052253c6d436e99db91cc12af323eb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43923852,
                    "digest": "sha256:f7277927d38a1e97097bad567848b648a4b75175b63343f472259f7aa429f3b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:8d3eac894db4dc4154377ad28643dfe6625ff0e54bcfa63e0d04921f1a8ef7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:edf72af6d6272f4361985009d4a191da77c0cbe241e0ba44255f7a8f0fd7dbcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3e4f86211d23962822c21275a30ae579dbce9a4233ad31549f8253730395f77c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195863805,
                    "digest": "sha256:5c577e98affd3c950c4d0437249dcca932fe8a71b40c80df4530da2c57bb2a32"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:7c04199e4b9ff37a13ae93d3a971b1ce59f51ee9c0054f332c2e3086abe20961"
                }
            ]
        },
        "1.18.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:9c879b38ef73ad6611093d4af0723929cff9033c162111cae053fa12e497aaf8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43923852,
                    "digest": "sha256:f7277927d38a1e97097bad567848b648a4b75175b63343f472259f7aa429f3b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:8d3eac894db4dc4154377ad28643dfe6625ff0e54bcfa63e0d04921f1a8ef7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:edf72af6d6272f4361985009d4a191da77c0cbe241e0ba44255f7a8f0fd7dbcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3e4f86211d23962822c21275a30ae579dbce9a4233ad31549f8253730395f77c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195854881,
                    "digest": "sha256:e94c799f3b5989d872186aecda477593b013123564e7995f7210f3eb84528527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:7c9b9c97780b480344b08512250abf4c898b6810cd9397297f6318838d5bf550"
                }
            ]
        },
        "1.18.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7819,
                "digest": "sha256:b2e90e1307f0e5f2d9a2950e2389d62f735156fc2be0e8da6d5e9378a16dd22c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43923852,
                    "digest": "sha256:f7277927d38a1e97097bad567848b648a4b75175b63343f472259f7aa429f3b2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:8d3eac894db4dc4154377ad28643dfe6625ff0e54bcfa63e0d04921f1a8ef7f8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:edf72af6d6272f4361985009d4a191da77c0cbe241e0ba44255f7a8f0fd7dbcb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3e4f86211d23962822c21275a30ae579dbce9a4233ad31549f8253730395f77c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195844828,
                    "digest": "sha256:407e92f70fba79a49ef3b2534addb25fec4b0e25c782da802ceb793f344fd9cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:600ce6c423f68bf3d76eb31576b4adbf1076afdd569c89693c435a6e0146c21d"
                }
            ]
        },
        "1.18.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7815,
                "digest": "sha256:9f592e1865e13932d089e394ddd872af25c29429f049ade79464c0c80f7a535f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44018839,
                    "digest": "sha256:16c48d79e9cc2d6cdb79a91e9c410250c1a44102ed4c971fbf24692cc09f2351"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532,
                    "digest": "sha256:3c654ad3ed7d66e3caa5ab60bee1b166359d066be7e9edca6161b72ac06f2008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 856,
                    "digest": "sha256:6276f4f9c29df0a2fc8019e3c9929e6c3391967cb1f610f57a3c5f8044c8c2b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:a4bd43ad48cebce2cad4207b823fe1693e10c440504ce72f48643772e3c98d7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195806087,
                    "digest": "sha256:1a31e8e70397740b99b8d362c8fc3161ddf80509c2bf88c845f6bc48bbd004c7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:9712816d12d88382c0405a013bf6df16ad49d52928815b06f7997466c6620633"
                }
            ]
        },
        "1.18.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7815,
                "digest": "sha256:64467a94d6ff5801fed3bc27e3232ec93988932b4374e8558fe30df1d58d2ddc"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44018839,
                    "digest": "sha256:16c48d79e9cc2d6cdb79a91e9c410250c1a44102ed4c971fbf24692cc09f2351"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532,
                    "digest": "sha256:3c654ad3ed7d66e3caa5ab60bee1b166359d066be7e9edca6161b72ac06f2008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 856,
                    "digest": "sha256:6276f4f9c29df0a2fc8019e3c9929e6c3391967cb1f610f57a3c5f8044c8c2b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:a4bd43ad48cebce2cad4207b823fe1693e10c440504ce72f48643772e3c98d7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196912834,
                    "digest": "sha256:ea89ef21b86afbc8072c70e857a7772000f3330f7d20e77d4764734ccb4695e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:483005a55bc457b41b99a91a12caaaf3d7a946877f5a1d8abd3467ae84bea748"
                }
            ]
        },
        "1.19.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7817,
                "digest": "sha256:3ef36b12390a83f6ed75c88605c276b2eec0773a6bf0ccbfec6f0a42f9008695"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44018839,
                    "digest": "sha256:16c48d79e9cc2d6cdb79a91e9c410250c1a44102ed4c971fbf24692cc09f2351"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532,
                    "digest": "sha256:3c654ad3ed7d66e3caa5ab60bee1b166359d066be7e9edca6161b72ac06f2008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 856,
                    "digest": "sha256:6276f4f9c29df0a2fc8019e3c9929e6c3391967cb1f610f57a3c5f8044c8c2b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:a4bd43ad48cebce2cad4207b823fe1693e10c440504ce72f48643772e3c98d7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196927726,
                    "digest": "sha256:d6b4a7167f4176b3bd1c78bdc06ea33a2bb94b2db155132797d3ff59c6cb3377"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:3e9019fdafeac8fd3cd3e96c4cd61d80958d4478eb31d14254d3d5b5197f8bf7"
                }
            ]
        },
        "1.19.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7814,
                "digest": "sha256:244208f87a5f65d67dbdda9b38b5ef0734ba2435757703c93a2b342e83e6bf42"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44018839,
                    "digest": "sha256:16c48d79e9cc2d6cdb79a91e9c410250c1a44102ed4c971fbf24692cc09f2351"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 532,
                    "digest": "sha256:3c654ad3ed7d66e3caa5ab60bee1b166359d066be7e9edca6161b72ac06f2008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 856,
                    "digest": "sha256:6276f4f9c29df0a2fc8019e3c9929e6c3391967cb1f610f57a3c5f8044c8c2b6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:a4bd43ad48cebce2cad4207b823fe1693e10c440504ce72f48643772e3c98d7a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196936520,
                    "digest": "sha256:787bbad096a5ddacf9b9349368baa2e1587f21871e623dc3d1a1568c347958ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1977,
                    "digest": "sha256:2dd00b6a937622e691c99c69d2320bb1039585d47cb469798e09cb3931df45e2"
                }
            ]
        },
        "1.19.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7817,
                "digest": "sha256:4b37a7079e58fd9d9eda4c799dd07f74a80b11e60bf906153f6ada5fd18724ae"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44109331,
                    "digest": "sha256:a1298f4ce99037bf3099adffe30b6a0096c592788fb611f1a2be2f8a494b8572"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 531,
                    "digest": "sha256:04a3282d9c4be54603a46a0828ff0d7a992a72289c242c2301e704f658f00717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 840,
                    "digest": "sha256:9b0d3db6dc039e138ede35bcf3a318c5b14545265d8fc6b55da49c5b57ffc32c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:8269c605f3f1f60eacd23c11d08771ee696182b7523ed09793980f5d9020ff7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196921719,
                    "digest": "sha256:d6df71df95e9d4fd14f9a5f228ad98d766a5939b20aa082dda2ad5184c13a8fc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:4d674124073a69124e869274cf28376a186a5687473fff59f246bb5623e2c319"
                }
            ]
        },
        "1.19.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7819,
                "digest": "sha256:cc8b443208c9feda94139acf317587b896fc416a9678f1e2687bba19484e5cf0"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44109331,
                    "digest": "sha256:a1298f4ce99037bf3099adffe30b6a0096c592788fb611f1a2be2f8a494b8572"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 531,
                    "digest": "sha256:04a3282d9c4be54603a46a0828ff0d7a992a72289c242c2301e704f658f00717"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 840,
                    "digest": "sha256:9b0d3db6dc039e138ede35bcf3a318c5b14545265d8fc6b55da49c5b57ffc32c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:8269c605f3f1f60eacd23c11d08771ee696182b7523ed09793980f5d9020ff7c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196922407,
                    "digest": "sha256:d003cda114c6ec30932591cf88dc735bc409f92b430e2c6513a31372a5b0a09e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:4898a1e5340e20a9f5a1cd2600b1c435df7a5e667b319cc6fd89681a8a080826"
                }
            ]
        },
        "1.20.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:20601f7d74b822814bfabb59d18223a976cd8b91f797c5bbce96e1884818278a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44144090,
                    "digest": "sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196953162,
                    "digest": "sha256:9dbaa3fba2657dbd418fdc67b35f37eb9e8607fc9889e82cced23ed737e3d693"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1970,
                    "digest": "sha256:3cc29573fe38f327b75276ffce3d0132f321aba01bd17bf8517d10ef3be9a8f2"
                }
            ]
        },
        "1.20.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7819,
                "digest": "sha256:0833d2c43d2423e96f77639ed1b784cc130017ad5621e2f035b581ffc7a4b369"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44144090,
                    "digest": "sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196952667,
                    "digest": "sha256:826c3988fbfeb3ab82c55aea2604f51c72c8483a945a445b662cae2ecca2da67"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1971,
                    "digest": "sha256:d296a1256c111ca0b6f00a92366ce61f4b6ce97360dd612780b27efb37ffd79f"
                }
            ]
        },
        "1.20.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7819,
                "digest": "sha256:71d7ac5bc93c5d3c47868366095d9294a9f85a651e1fbe9364a946a44cb5c98e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44144090,
                    "digest": "sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197492745,
                    "digest": "sha256:7ce2813c4cafcd1c5a0f59434da093669895ddbc448916f29faf6bf0379c22e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:4e2c224e59424ea36d4522a6ba8fe2c24720175d8c74471d5399c56f290879aa"
                }
            ]
        },
        "1.20.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:52c7dce9a5dfb18da03d625b6cf19ab05fc8c644aa33b53bfdcaea1d17b2f08e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44144090,
                    "digest": "sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197493021,
                    "digest": "sha256:b2e8eede470623b3efca19267770a55a0cdf863997169bd98fddbb54a52d9aef"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1968,
                    "digest": "sha256:307e016cf00d0acc5430578554c58e21d12178c8c76700cd8602444b93727942"
                }
            ]
        },
        "1.20.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:0c3c4efa2ea860c806ec6b596817ba77aa362d74078258e8c1b3e3ce1d1896c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44144090,
                    "digest": "sha256:e80174c8b43b97abb6bf8901cc5dade4897f16eb53b12674bef1eae6ae847451"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:d1072db285cc5eb2f3415891381631501b3ad9b1a10da20ca2e932d7d8799988"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:858453671e6769806e0374869acce1d9e5d97f5020f86139e0862c7ada6da621"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:3d07b1124f982f6c5da7f1b85a0a12f9574d6ce7e8a84160cda939e5b3a1faad"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197492984,
                    "digest": "sha256:836a7f29cd955165246a1e36dd39fc9854a6b7eebc8b8cccf0d04ae0ca610bf8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1972,
                    "digest": "sha256:dc9b8db71b59941728761af955453a3c46ec5bb85ba48eaee8a85f5a86e2293d"
                }
            ]
        },
        "1.20.5": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7817,
                "digest": "sha256:ea00ce4e8bc70ceff7f5b680242586225c5db08b693e68f3a4bc193ff86ba76f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44145376,
                    "digest": "sha256:976a760c94fcdd7d105269ae621e8269e7bb25a58c52ae667b4029a6bc7e33cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:c58992f3c37bb64aeba18910408cda9a7a63e212fe27e95065a8d54130ca5926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:0ca0e5e7f12e6eb512246aea5579fcb771fe7203bc60944384d5cd7962f87ddb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f2a274cc00ca5f671b1740c43672dbc96504760cee585e7604029a3fe56854a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196937263,
                    "digest": "sha256:381a947b51bf154f97ad6fa602119588918dfed8b1831257c364bc8463b211d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:68a10d37804037fb75bd93978530f3607f2548057aacad7a1059669c6ca3f9ef"
                }
            ]
        },
        "1.21.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7818,
                "digest": "sha256:1d92b6cfdc3640e75e76d5898c59ae3bd83e4f50affdb536404620e6b6352611"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44145376,
                    "digest": "sha256:976a760c94fcdd7d105269ae621e8269e7bb25a58c52ae667b4029a6bc7e33cb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:c58992f3c37bb64aeba18910408cda9a7a63e212fe27e95065a8d54130ca5926"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:0ca0e5e7f12e6eb512246aea5579fcb771fe7203bc60944384d5cd7962f87ddb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:f2a274cc00ca5f671b1740c43672dbc96504760cee585e7604029a3fe56854a8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 195612240,
                    "digest": "sha256:e919a7494c32c4d7d3d1e5b129cc3269fe49078d7e610364c9dccf6eefc29e55"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1972,
                    "digest": "sha256:4032d4ea1e71b8a9e22cb931c9f559b60e443dbbb11e1b900e34a55988a76014"
                }
            ]
        },
        "1.21.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7820,
                "digest": "sha256:8e341d8eaa7a81c690d0552a3ca8b7c84f6cbd328a25cc55ca5a7af237c3a7cd"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44149770,
                    "digest": "sha256:0a01a72a686c389637334de1e2d0012da298960366f6d8f358b8e10dc3b5e330"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525,
                    "digest": "sha256:cc899a5544da1a6cfb970d2484d32c063f8df26a430d92f39c98e72261e226f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:19197c55075519928dd2ff059745665a2c9b72f4e8af6f7a1ce662e696d339bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:716d454e56b61d1343a01f3b1829574333e2e3df20e77d1958d7b0b939ea1b61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196335513,
                    "digest": "sha256:953942f11db4a302b47a3ad9b7209eb6cbcb0cac777ecf0db307276f6763c46c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:f118a9240fee0183bee43edaae1c615ed522a7d949c811a9204190de649e5bfa"
                }
            ]
        },
        "1.22.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7826,
                "digest": "sha256:06c1f50a49a3fb681fe154cc80bc4fbe48e972b96b0aeff7c79f5cd0f73027db"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44149770,
                    "digest": "sha256:0a01a72a686c389637334de1e2d0012da298960366f6d8f358b8e10dc3b5e330"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525,
                    "digest": "sha256:cc899a5544da1a6cfb970d2484d32c063f8df26a430d92f39c98e72261e226f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:19197c55075519928dd2ff059745665a2c9b72f4e8af6f7a1ce662e696d339bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:716d454e56b61d1343a01f3b1829574333e2e3df20e77d1958d7b0b939ea1b61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196300797,
                    "digest": "sha256:7c2239019301d819070c7d5b55cbf15c723d9c5ad65279cc81cca0c22e45848d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:695b755fa0a9f431486c1aaaaf42243b2d0cd418619655ff978d574138d9076b"
                }
            ]
        },
        "1.22.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7826,
                "digest": "sha256:dee53c1349200c50e1d7dca590760761cd50c47bdfa121a0cb16008a940d7335"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44149770,
                    "digest": "sha256:0a01a72a686c389637334de1e2d0012da298960366f6d8f358b8e10dc3b5e330"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 525,
                    "digest": "sha256:cc899a5544da1a6cfb970d2484d32c063f8df26a430d92f39c98e72261e226f2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 844,
                    "digest": "sha256:19197c55075519928dd2ff059745665a2c9b72f4e8af6f7a1ce662e696d339bd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:716d454e56b61d1343a01f3b1829574333e2e3df20e77d1958d7b0b939ea1b61"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196300832,
                    "digest": "sha256:eb22d39176eb57a5294151a1f44e3828626663ccaaed3a0bd457ae3f35e22163"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1973,
                    "digest": "sha256:7d220d744709507ae15360427f39b99e5840f70bbdd6691a98e82345b7b535e8"
                }
            ]
        },
        "1.22.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:d770486fd8067d3b6e1df4f1238e1acff161872a3789bd2fe1cc7f2a46503a45"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44191726,
                    "digest": "sha256:fe703b657a32e0046dce0ad2cb17172cbec8ba302edf370f5f28962bdb6216a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:f9df1fafd224fae3ba34a68dfc401f75bf6bc0c016fe36c61661ca5c7ad729ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:a645a4b887f9613f80fae43432e46423f196a9952d11bb620bef2add7c4ed4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:57db7fe0b522b7a6069e769606e5ed0913a64e1e0d0030382a922ccf9449211e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196243044,
                    "digest": "sha256:ec1db5e2de313018efe77b9c474d7477c6e5c5876711f627c3faf8deacac77ed"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:395a37eb456534afcbbc482ed43924079e06e14d20042413dc177768fa85b23f"
                }
            ]
        },
        "1.22.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:4e6de9efe13970845e28ac2ddf08eeb1dc741b44112c8ac860b85e16769e615f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44191726,
                    "digest": "sha256:fe703b657a32e0046dce0ad2cb17172cbec8ba302edf370f5f28962bdb6216a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:f9df1fafd224fae3ba34a68dfc401f75bf6bc0c016fe36c61661ca5c7ad729ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:a645a4b887f9613f80fae43432e46423f196a9952d11bb620bef2add7c4ed4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:57db7fe0b522b7a6069e769606e5ed0913a64e1e0d0030382a922ccf9449211e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196271398,
                    "digest": "sha256:63de58b894fcbd6afcf21d27619d67d12c0ddda92022f560cd5ee075b9b6023e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1975,
                    "digest": "sha256:0470e4accd59d14904cb5241ad0b78fc3ec0a8ee068a0b8863cdb6dedbc8752d"
                }
            ]
        },
        "1.23.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:04766b727f72b3be4c907fa43662e6b374961f280b682e57db9ddabfb7e98523"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44191726,
                    "digest": "sha256:fe703b657a32e0046dce0ad2cb17172cbec8ba302edf370f5f28962bdb6216a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:f9df1fafd224fae3ba34a68dfc401f75bf6bc0c016fe36c61661ca5c7ad729ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:a645a4b887f9613f80fae43432e46423f196a9952d11bb620bef2add7c4ed4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:57db7fe0b522b7a6069e769606e5ed0913a64e1e0d0030382a922ccf9449211e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196287239,
                    "digest": "sha256:ed1f9f0d643207add1d0d4ed863ec7dc84420b8126639ebef2e8929b606b01ab"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1974,
                    "digest": "sha256:03ea9fe617e7257567ed920de025e847ed84c19251bad335828d71233b942259"
                }
            ]
        },
        "1.24.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:50d8d925d2658ba6190f95a91629d691c5b88b5476d563839ae3b2179b6bd5c8"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44191726,
                    "digest": "sha256:fe703b657a32e0046dce0ad2cb17172cbec8ba302edf370f5f28962bdb6216a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:f9df1fafd224fae3ba34a68dfc401f75bf6bc0c016fe36c61661ca5c7ad729ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:a645a4b887f9613f80fae43432e46423f196a9952d11bb620bef2add7c4ed4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:57db7fe0b522b7a6069e769606e5ed0913a64e1e0d0030382a922ccf9449211e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196264304,
                    "digest": "sha256:b90f68e36b055fe59d2bcbe4ca19ff18daa4ecdf26007c51898a5d5a0953a561"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1953,
                    "digest": "sha256:718e1016c564750f9959ecc5f556426bbe55e312a08df38e5215ed060806284a"
                }
            ]
        },
        "1.24.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:8afa543b3ea9a33a1b97eb7d011046a52c4552b61d0e8f9b0e3a77177f906227"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44191726,
                    "digest": "sha256:fe703b657a32e0046dce0ad2cb17172cbec8ba302edf370f5f28962bdb6216a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:f9df1fafd224fae3ba34a68dfc401f75bf6bc0c016fe36c61661ca5c7ad729ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 850,
                    "digest": "sha256:a645a4b887f9613f80fae43432e46423f196a9952d11bb620bef2add7c4ed4ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:57db7fe0b522b7a6069e769606e5ed0913a64e1e0d0030382a922ccf9449211e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196266559,
                    "digest": "sha256:dd44dafad2b3a8ff661e716adef5e1ba8cb1c4fb3eddd5f42006b6b264099956"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:08226f05b89a02f07b4fc4b744f6b27005e771c2fe639f9b10bce73f1582fd00"
                }
            ]
        },
        "1.25.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:33a453cfce772ba50882631b9f117be1c98de5d45f59c16adfe14038c70ecb73"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44247132,
                    "digest": "sha256:e92ed755c008afc1863a616a5ba743b670c09c1698f7328f05591932452a425f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:b9fd7cb1ff8f489cf082781b0e1fe0c13b840e20147e8fc8204b4592da7c2f70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 853,
                    "digest": "sha256:ee690f2d57a128744cf4c5b52646ad0ba7a5af113d9d7e0e02b62c06d35fd14c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:53e3366ec435596bed2563cc882ba47ec25df6be2b1027e3243e83589c667c1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196325053,
                    "digest": "sha256:b54b38b242c074299c08f9fb77279e1439e7f1704507daacabe56b2212a7d6dd"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:b6706c6b0f1e38d9846bd8d22fb52149aaf11387ae2cb4833c3b266aef67ae9e"
                }
            ]
        },
        "1.25.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:08579aa9f8ce9fe2d17319b968c58b683e709d4e8fcdcb954f7cf10c93a80552"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44247132,
                    "digest": "sha256:e92ed755c008afc1863a616a5ba743b670c09c1698f7328f05591932452a425f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:b9fd7cb1ff8f489cf082781b0e1fe0c13b840e20147e8fc8204b4592da7c2f70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 853,
                    "digest": "sha256:ee690f2d57a128744cf4c5b52646ad0ba7a5af113d9d7e0e02b62c06d35fd14c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:53e3366ec435596bed2563cc882ba47ec25df6be2b1027e3243e83589c667c1e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196339629,
                    "digest": "sha256:239301631be7e3898ffd6c65306094ab085be39dde1115288aa68e2e2a58ea62"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:0f69d00b292434425fe3ea928dcdde2b34be6695435771266afac241877422c6"
                }
            ]
        },
        "1.26.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7827,
                "digest": "sha256:801c4b8927ec7dd8188f81d1f9abbcf40329495ca1e89862b8634500a166da23"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44320272,
                    "digest": "sha256:b5e173e44934e01d8d2674bc8b1da00f761c4fe796e0fb2bee1bd1129d2e4ae1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 531,
                    "digest": "sha256:29047100b0407dff554ea80b8005380d62b13a66d7fe2e2adb07b9c091b9f2c0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 855,
                    "digest": "sha256:15743a713c2a4033877dab08fb3989280f8c856234227158a4011811c7991372"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:4b6bc9e2987763aa991b7dfd742be04c7b3bb04448982ffe88e58d55c93b76d4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196316967,
                    "digest": "sha256:37c77d2c6828a119957db1e23fb1d71878f752fce04841850a94428cc3c7bcb0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:0b4f72f6198c34d2d1b68581531ead0a71ae8b9dbb63f8f161743a0753be35fd"
                }
            ]
        },
        "1.27.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7829,
                "digest": "sha256:add43bd57cc53431029f3e7795de140b7e1d7a97e99faa5e9537dc074b205987"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44374155,
                    "digest": "sha256:6aa38bd67045d3ed7e7a73ca42e06fadbfd139a26693bf2dc8b9ccc318d87c3c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:981ae4862c056451e69578c614f07a5b552995d3fc1cf17d5dc78a26e8455d5a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:5bad8949dcb16a7693551042e056cef1e767ac0a23625a2eb9ae33ac44ac80f9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:ca9461589e708efab1c30577ec50f06db05714523e2976c7da421b0b418312e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 201195678,
                    "digest": "sha256:b3ae4e3dbaa173979db7875a21c86235ef5ed4f7e9a7ac450add5ea12ff77157"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:307c3873ef05ab5608c32f4fa70321181fe038c561710ce7f7d2ccfbb802303c"
                }
            ]
        },
        "1.28.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7828,
                "digest": "sha256:ad5526229d677aa06b0ad54a5d9f4f8d8137550e3b64019d1a62fddf2a8d7cc2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44401021,
                    "digest": "sha256:7b378fa0f9085667ced1c76c9919cde8663becf2218e8d20e2df8d0824311531"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 529,
                    "digest": "sha256:4d77b1b29f2e9b6f141b9d8f74b601f40eb998544783f4a0a3cdc384873c1a4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 847,
                    "digest": "sha256:7c793be88baee3f3204444e4d4e49c4e44c1709d40182c131cd5681c94e17227"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:ecc05c8a19c0cf83f2f44263c967c3fe81fffc4b41b592ad088fb1534c206e70"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196341124,
                    "digest": "sha256:09b02038b0c92389552051ac2ce9264174c9e5b17fd6ed36c17d683b5c3627d6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:e964ddd14a7bef7d2dbea0d7e8e488a7e1e010f4af4bcdf3e5c5b9cd42c57576"
                }
            ]
        },
        "1.29.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7829,
                "digest": "sha256:2169a100f56325863e402e034d5120a5b9714117b961dac19934fa3c384c700f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44490811,
                    "digest": "sha256:001ecc9468da6632359722ccefa732463486659ee07daacd31602ec3bf4d862f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:f2b9667498691604756cf3601ba44360f2b1f6ba8b5745eee963847d2a4ea736"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:abe474042557a4bffb655cd6079656d79e2ecfb0d0fad367c610ca1ec65d0e86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:e1bf2fb0fbbc55e614a3391455d772eae373e0136b7cba4d79dd72f28fb347f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196394829,
                    "digest": "sha256:3005e1b48d58002aaf9f13a8253f743348de1edd431b396299f9b37604d626ee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1948,
                    "digest": "sha256:f844ecf90e5fa44e55915b1903c68c8bcbf63a7d30ca1659ad8f168cbf02c6e5"
                }
            ]
        },
        "1.29.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7829,
                "digest": "sha256:b25f7f6e5af862443a108b473b4f8c1f43c6b4f7507baaa976edcc773d0ef750"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44490811,
                    "digest": "sha256:001ecc9468da6632359722ccefa732463486659ee07daacd31602ec3bf4d862f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:f2b9667498691604756cf3601ba44360f2b1f6ba8b5745eee963847d2a4ea736"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:abe474042557a4bffb655cd6079656d79e2ecfb0d0fad367c610ca1ec65d0e86"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:e1bf2fb0fbbc55e614a3391455d772eae373e0136b7cba4d79dd72f28fb347f0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196391881,
                    "digest": "sha256:d2507df4a8332f35c3b36a1e1bc9091da556acdba5ad75778e10e95bef478979"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:a91c322b39eb9caed19143e231906d384f83f17cf30eaf51a2f9661b5b0c10a2"
                }
            ]
        },
        "1.30.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7829,
                "digest": "sha256:22937f72d7121108886ded2f759a46279d3099439ff63e5c9659ba3ef01b99c7"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 44517215,
                    "digest": "sha256:4f53fa4d2cf0e29c6a522433e0ac71a7ce0fdab158481052b2198b5518b83248"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:6af7c939e38e8e3160fbbdcc26a32669529b962c79f7337df0a26bf0e9a76d59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:903d0ffd64f6ca1355d2b2df702fc674f5663981dfd100fe4588fb390dd3382c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:04feeed388b71fdca5cc3bce619d65a34f8a1a3e5b0ef03f8392d499970818eb"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 196380169,
                    "digest": "sha256:7382ceb2b191896a19903a3e1419cfd73c7a72e9d3fa515b3808423bfbc54a20"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:d9c2d9822e6263d9a47cf955cc44cac852ca9d94a3c731218eed33c71d538014"
                }
            ]
        },
        "1.31.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7828,
                "digest": "sha256:0da35a0653bdd3c7d2f3230c63bab2b9bfd0943876c12ab5411d2288998afd10"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45825714,
                    "digest": "sha256:2c11b7cecaa5d3e2a57e290921ababbfb8572b549015168d4cbd91c340d2c566"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:04637fa562525a9366f00e8f4b08d04a347bded1ee513738451ef9d42b4dfc4e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:d6e6af23a0f38c4a6511147d2a9dc06a07a7afa0669000cb62720c7eafe031ae"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:b4a424de92ad71639c5cabadcdab0493e4067eb2f9cf109ffef40db178349238"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 198134546,
                    "digest": "sha256:e17c07fc1759f73a4f126ddd57093093ced5482c382b75d3366a56b1b957d565"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:c8bc0c89de98187c3455f4abcae913b646171c065d30c8d8c51fcb034519af02"
                }
            ]
        },
        "1.32.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8137,
                "digest": "sha256:7f2094fd5deff12ff4ed4e0a30d5ab8c554b364c484ba295173a7e72f4a721c1"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45838270,
                    "digest": "sha256:be8ec4e48d7f24a9a1c01063e5dfabb092c2c1ec73e125113848553c9b07eb8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:33b8b485aff0509bb0fa67dff6a2aa82e9b7b17e5ef28c1673467ec83edb945d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 533,
                    "digest": "sha256:d887158cc58cbfc3d03cefd5c0b15175fae66ffbf6f28a56180c51cbb5062b8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167,
                    "digest": "sha256:05895bb28c18264f614acd13e401b3c5594e12d9fe90d7e52929d3e810e11e97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 197212307,
                    "digest": "sha256:5bafd3c14a407f48a3dda7d9f5ab22409ce67e59d262c04a9c1da71025e1d36c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:f0c70c9fd4e11fb15841e3cdd5177565aba522d6d30a9fe7a8c9e006847a9021"
                }
            ]
        },
        "1.33.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8384,
                "digest": "sha256:1ada495fc5ed1bfd4053a470bce99251120b9ee50927b088edd7a8be24d13067"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45838270,
                    "digest": "sha256:be8ec4e48d7f24a9a1c01063e5dfabb092c2c1ec73e125113848553c9b07eb8c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:33b8b485aff0509bb0fa67dff6a2aa82e9b7b17e5ef28c1673467ec83edb945d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 533,
                    "digest": "sha256:d887158cc58cbfc3d03cefd5c0b15175fae66ffbf6f28a56180c51cbb5062b8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 167,
                    "digest": "sha256:05895bb28c18264f614acd13e401b3c5594e12d9fe90d7e52929d3e810e11e97"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 205993695,
                    "digest": "sha256:e67fae473bc051392ad80001405276d380ea201ac903e67d6786cbe7198c0267"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:859718b930c26b58a8e05c126a707f44fa0a2d1558c16ba582147a46070a3682"
                }
            ]
        },
        "1.33.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8384,
                "digest": "sha256:f336302f786568590e3bf3e87b868af4b35030965392a8cc9a15439fed8c1a5b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45962352,
                    "digest": "sha256:4007a89234b4f56c03e6831dc220550d2e5fba935d9f5f5bcea64857ac4f4888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:5dfa26c6b9c9d1ccbcb1eaa65befa376805d9324174ac580ca76fdedc3575f54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:0ba7bf18aa406cb7dc372ac732de222b04d1c824ff1705d8900831c3d1361ff5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:4c6ec688ebe374ea7d89ce967576d221a177ebd2c02ca9f053197f954102e30b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206100543,
                    "digest": "sha256:33a18cff802f36ae07a6b05f1a4df699680398d31cf0643dbf2f08a7ab1a7a15"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:4284b39a240822daa7708275e0d72714d7f312ed7712ce715e4af82429ba1643"
                }
            ]
        },
        "1.34.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8384,
                "digest": "sha256:dda1a9bd8afde35cb89c4183397a7080a9d5da0019554a6488ab81f88ac6e08f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45962352,
                    "digest": "sha256:4007a89234b4f56c03e6831dc220550d2e5fba935d9f5f5bcea64857ac4f4888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:5dfa26c6b9c9d1ccbcb1eaa65befa376805d9324174ac580ca76fdedc3575f54"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 527,
                    "digest": "sha256:0ba7bf18aa406cb7dc372ac732de222b04d1c824ff1705d8900831c3d1361ff5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:4c6ec688ebe374ea7d89ce967576d221a177ebd2c02ca9f053197f954102e30b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206116383,
                    "digest": "sha256:01e44538ad0a80cd8c7fc1ae4bf167d23d146c1f666843e2ea1fa1ac6eebb188"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:4930a23d44f4e5edb823d818350f5e0361661fe9b32c14a53be0ee942644b279"
                }
            ]
        },
        "1.35.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8384,
                "digest": "sha256:39fa4d7450d3df690611198759dea3139b263ba56538e3ddc2fb40a159f992ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 45962352,
                    "digest": "sha256:4007a89234b4f56c03e6831dc220550d2e5fba935d9f5f5bcea64857ac4f4888"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 846,
                    "digest": "sha256:c1de0f9cdfc1f9f595acd2ea8724ea92a509d64a6936f0e645c65b504e7e4bc6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:c8ee6ca703b866ac2b74b6129d2db331936292f899e8e3a794474fdf81343605"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:b39e2761d3d4971e78914857af4c6bd9989873b53426cf2fef3e76983b166fa2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206165301,
                    "digest": "sha256:960e1cf76a4b3b28b90f0f351bff70c0e2a99f7be146dde59db400f7f4ee479c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:2fa963b94be34856b6da4107f1e1fbb10122477e2aca462f467a4d427ae6bf94"
                }
            ]
        },
        "1.35.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8613,
                "digest": "sha256:a6e67205e825f4e4f3840842d2750e9f6b6208987ec07620488e8b412e96f241"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46461779,
                    "digest": "sha256:80bce60046fa9e5ccbe54c9bd4bfa3f379ce7bc43bed493ae92389050de04024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:55a738a1554069bc9050c0a60b57fc93e98069e59822677a483cc74cafaf2bf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:e19cf0706c6229033d11dbf952b3eb96ad70e1f32527960aeb3c83ad86f16551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:de4cdd6c27d1f17cf5ff350e76b7efe80aceff4dc99fd518065bf048abd6494a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211057262,
                    "digest": "sha256:8c1b85b84c9d54f857d83539b169d9869168c91699490c385a6b9797b70b83b0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:6389adb8d86b20dfdab810fce06d2b0ca63f2b1c38fb1a8ccb3ebd236850e1ff"
                }
            ]
        },
        "1.36.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8613,
                "digest": "sha256:faef3adc7c8ec97e0bb885c861380c33ce7eaea3e9d645f1f438152adb0c213d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46461779,
                    "digest": "sha256:80bce60046fa9e5ccbe54c9bd4bfa3f379ce7bc43bed493ae92389050de04024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:55a738a1554069bc9050c0a60b57fc93e98069e59822677a483cc74cafaf2bf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:e19cf0706c6229033d11dbf952b3eb96ad70e1f32527960aeb3c83ad86f16551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:de4cdd6c27d1f17cf5ff350e76b7efe80aceff4dc99fd518065bf048abd6494a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211066355,
                    "digest": "sha256:9972151b13331dde9c0336280d1e0d39fe33622ff1bf5caf553ee5bd176ce387"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:03875acee75c3ff7bd5a6fe031c20fafac27a799e0f0f647576309ac23521c71"
                }
            ]
        },
        "1.37.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8614,
                "digest": "sha256:c997985543076605de3be5acad3bf9bc0cf748ea5de34400caa3858878d79097"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46461779,
                    "digest": "sha256:80bce60046fa9e5ccbe54c9bd4bfa3f379ce7bc43bed493ae92389050de04024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:55a738a1554069bc9050c0a60b57fc93e98069e59822677a483cc74cafaf2bf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:e19cf0706c6229033d11dbf952b3eb96ad70e1f32527960aeb3c83ad86f16551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:de4cdd6c27d1f17cf5ff350e76b7efe80aceff4dc99fd518065bf048abd6494a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211099609,
                    "digest": "sha256:9e1a00286e2fa852cdcc71f8b819c941a6551f120c9ca3d1bff5cf94aaa0c008"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:aa11b39b240d9cae908f8e9823f0b04e9f944b3b45c34be65e411d72ce9b07ee"
                }
            ]
        },
        "1.37.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8611,
                "digest": "sha256:94cadf615b64901f2cbe4193016e4cca8a8ef62eb8241f30d175a6738da1e7e3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46461779,
                    "digest": "sha256:80bce60046fa9e5ccbe54c9bd4bfa3f379ce7bc43bed493ae92389050de04024"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 852,
                    "digest": "sha256:55a738a1554069bc9050c0a60b57fc93e98069e59822677a483cc74cafaf2bf7"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 526,
                    "digest": "sha256:e19cf0706c6229033d11dbf952b3eb96ad70e1f32527960aeb3c83ad86f16551"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:de4cdd6c27d1f17cf5ff350e76b7efe80aceff4dc99fd518065bf048abd6494a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 211090189,
                    "digest": "sha256:26ce0c0c8fdf5188ef15b53e936f5a40c91644e7454ed5b5e3b23fdf3d1d8de6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:a8d1cdfbaa633c34c5d3249765b766369b049bb345d9fcff6f609acc080a6fd9"
                }
            ]
        },
        "1.37.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8526,
                "digest": "sha256:ee61b63c17bdc15ab5a7b3443abae20e15ff864805c5b16c2a7612b0d5195f11"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46496785,
                    "digest": "sha256:61e03ba1d4149ac4eb681c6bf75aef8ac4b3f0d6fbb08e9623c4089889396fc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:4afb39f216bd4e336f9b78584bae0f6bcb77150107471d8d67d3b8abfbdea46a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:e489abdc9f902f737bfef2c0c7ff5c35ca9b3ca11e73405a472f31a25f2dcc69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:999fff7bcc2450fcf1210182802f3907e35cd7cf7569568bd2a179b9144d9c57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206928881,
                    "digest": "sha256:a012bbc9ded297dcfe3eaf775b57026353ff99a8c8452f6ecbb934772e1d0af9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:5e0c07d7f7810a63408e4b94032e1b648c4e98155dea5ae7faff53c38a4c7f36"
                }
            ]
        },
        "1.38.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8526,
                "digest": "sha256:514c0ec758348b1536751f617ad4238c057dea9d1f76a21eec1a848e12c7d5ad"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46496785,
                    "digest": "sha256:61e03ba1d4149ac4eb681c6bf75aef8ac4b3f0d6fbb08e9623c4089889396fc8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 849,
                    "digest": "sha256:4afb39f216bd4e336f9b78584bae0f6bcb77150107471d8d67d3b8abfbdea46a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:e489abdc9f902f737bfef2c0c7ff5c35ca9b3ca11e73405a472f31a25f2dcc69"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 169,
                    "digest": "sha256:999fff7bcc2450fcf1210182802f3907e35cd7cf7569568bd2a179b9144d9c57"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206935075,
                    "digest": "sha256:a74cd9210d824126d30ad70072389b6c981bd8b040f09e981f501a0f643d1eb8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:277e6663cf3f0e3a40c2a216cf87d1bdeae9b8baa06cb5564295da413ada4fb4"
                }
            ]
        },
        "1.39.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8528,
                "digest": "sha256:82cd78f5ec64ff9946077b3cc77796f278627c83e0d0dde65f5fe2bbc6523381"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497362,
                    "digest": "sha256:52818491084148fa3469964bbcc3576686018a3b16b2e29be0407565c4c80b44"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 853,
                    "digest": "sha256:8a9df81d603d28f2a294b2f11b4f60d07b5b833b2ad7d6659a3f59b10cff2696"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:636d9303bf663657be8e6796d720913bb985b5343da7949749ae1e72b54a88d8"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:672b5bdcef61237567b311ad3d349f5eae18ba839ce2b204858a3083437a0a59"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206856884,
                    "digest": "sha256:ec1af63a71db383e3db20c210a8e50c66f572f12ecdf9efdffe9d4583cd4355b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1947,
                    "digest": "sha256:5b4a46f37b2260b97a8a22d1158da5dccd1c6534816e22d516396ade5eb03569"
                }
            ]
        },
        "1.40.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8527,
                "digest": "sha256:66c447634bbd575c7f581820dead74ba9692a1a74acd7e8e0c0b6df193c1871e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206786891,
                    "digest": "sha256:616912ec1ba8746269a4ca53754e5c0529a4b3fcee011b2094c8cf7046ea828f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:49a5d5110b6837cab2179b7befa824b161af6e1e918eb36923ad66276630f04c"
                }
            ]
        },
        "1.40.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8525,
                "digest": "sha256:7303291ba7933df7322bdd76f9e6db488ad57b6cd038bbe732e0c970ad135265"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206817733,
                    "digest": "sha256:4ad74bb2008834af007bc9b88ee2a5b0dff56d4243fb7fc03477f22b81022112"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:e966e21b5532c9aa88343d44f7997a97909132146b84a73d6fa3b0effc55f92a"
                }
            ]
        },
        "1.40.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8526,
                "digest": "sha256:e28f7eecc51636e21634397ec0a8df0928d261ee0019800531df31dcf0c87e94"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206815703,
                    "digest": "sha256:818eeef6ced07cbce066108399e44b3f38b1553068a7eec7ac184c13657b15e3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:6c9e2d6dd27e9917cb267d9a208a1b5830c0436033be92ca6c338eafbd0217c2"
                }
            ]
        },
        "1.40.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8526,
                "digest": "sha256:98e4cb6c47cc24c0fe77287d84ba672461404427c26aa968cdc489a1f46b62d9"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206829911,
                    "digest": "sha256:a9e82d8f03c1da0630b0cb3d360cfa27c9357d4191c3756e64a1411236384cc9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:60c74c0c583342f14f84791cb59441c3d81a38ba4d806f625a9e065ccb5f95c5"
                }
            ]
        },
        "1.40.4": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8528,
                "digest": "sha256:00e6b4dedab961ee784f1fb4ce013561ee367087d63acdaa57fb50cd99ebaf3a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 207024942,
                    "digest": "sha256:e65cc158c5f416ec920414ed27761bbf8a51ff2a7f7bd97f7d5d8fb20eae6012"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:0b6be3e5bec73c0f4d1f6b341f80ae678d8d31b148c47f5f9ec0ceaaa3350ea1"
                }
            ]
        },
        "1.41.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8530,
                "digest": "sha256:c9ee43d6f6fa9ab963a41b19fa30bd867886d41e6ee77dacb9c26cab45bf63ec"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206618436,
                    "digest": "sha256:d409d45527a0d760397c271be07fafb0c55bee918b776d99de726dab024ed9e0"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:9d1dd5f1660c249249b8c94782bec31a82269a2453fd55473b5c5bac93b5d3c4"
                }
            ]
        },
        "1.42.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8527,
                "digest": "sha256:6df1f8e654de205248803555377c997d75beaad8b36e8db953b9a623e6204920"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206629679,
                    "digest": "sha256:71fab7ebba00f75e78eef1a4b9384407fd0f265475ba3ebcbe350ae028942e72"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:5db79d3438b3fb33658432b74abab2db9f82ee5b436fe71063dacda3251635db"
                }
            ]
        },
        "1.42.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8530,
                "digest": "sha256:56cafe7e601ba97b7b4df94f5627187e80b1a8667d71579f7bfc6c2f0187f177"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206629235,
                    "digest": "sha256:328801c364347c9fa093ee635d9d08ecf51fbd6f5938605885fa4e50e797ffee"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:aa8bf4834f7331f0eed93e516ebdd5a7183c7f3e8ba25afa09b94f0117a6ea99"
                }
            ]
        },
        "1.42.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8529,
                "digest": "sha256:94d8c6d0faa00ff29b47b78e05f654fb8ab8a3dcddce7d68b26cb8f6ce22c0f2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206637134,
                    "digest": "sha256:aa105900e3198f5c9b7c2fc9413e364b3aaa84ea1bd32656e823a239f4077659"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1952,
                    "digest": "sha256:7384043585a2d6cd9f5885307f7101e19f268c308679aa494af407286a8933c6"
                }
            ]
        },
        "1.43.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8530,
                "digest": "sha256:f4140d8300667635a3bf67b91582b32e529c9fc17679500f0cebe5464591901f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206647398,
                    "digest": "sha256:87de8bf3b8a0dcf76e02bb2154876f9ea9417efc307068be018cfcf4efc7d7cc"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:9ee073e739c2c07ad1b0205bc8a97fbfae57d15737b254d275c64a89f8ab5d75"
                }
            ]
        },
        "1.43.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8529,
                "digest": "sha256:84b6cb7c6cbcee0d0b93efb6125376195c59d58670c5b653da4ae6d4260d8d32"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 206658228,
                    "digest": "sha256:6224073c1ea9babd1aaee12737b2541914e01d33b2f6331e6999556ba0421527"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1949,
                    "digest": "sha256:e57ad6b18e2d2421b441de803010465af51f701e2522491f2965e8a39a7c347d"
                }
            ]
        },
        "1.43.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8728,
                "digest": "sha256:d389e5899e756fb6ec97f8e370533685408f94584e0fb52bfb3c48cb48ba81c6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230319334,
                    "digest": "sha256:3c7d3a4cf63b3c454af94a280a7a33556d39390b34149cbc82d231eb2c0c15af"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1951,
                    "digest": "sha256:f048bed64f8fe3df874d48a6980566742c6707e997e86a1f80ff6708a9cb2006"
                }
            ]
        },
        "1.44.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8728,
                "digest": "sha256:24865474680dc8f435322f461752752f7d27f56efcd0aee1cd22ca1f7d5edf1e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228683972,
                    "digest": "sha256:9958da6efbd208951f61ae0aaa2717b5699e47f4e08b6243137d7b57ca23e2a9"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1950,
                    "digest": "sha256:4309c460e27c7f0274c1555ba6f061c50e347b91865c7299fe735c82c7adbb9c"
                }
            ]
        },
        "1.44.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8718,
                "digest": "sha256:7c5b58d9f4bdb09c24205d1e96ddf196ee8d74fcb1e5ee12b4d94ffbce334116"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228770665,
                    "digest": "sha256:81d1ee1907c393a98f4885f728ae172fefb8d7ac88fdfd6bea2ec4a4272f6cf3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:9dff5175013808455800c0535f471943d3f485de4389219d310a4a1163662a85"
                }
            ]
        },
        "1.45.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8720,
                "digest": "sha256:bf67f8a90c89235c4bba34c4276a2ded76b417eab3a2facdb9ed3faa9b57d941"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228782726,
                    "digest": "sha256:a195f822cd70a85f16598c7b36370b236a351171b88bcd753ef42c645325f16e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:c077b34ad52eba86c706f88151e1d5660003a29cc662638488c3d820ee9cecc6"
                }
            ]
        },
        "1.46.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8720,
                "digest": "sha256:cbc806ed5123cceb55ca8706e2517009aaa8a5df7ddeee6284c53200f7f93e53"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228780620,
                    "digest": "sha256:6e6a55212327dfa14765713790909b1c3f06295aa97763bea83d8be23a103d37"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:f4e3ff9fc1963e9c68c5f9ff4a2dd2fff262aeef37fb7ac0e64352c744b75b29"
                }
            ]
        },
        "1.46.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8720,
                "digest": "sha256:2a068233b74ad21e2c95bebae3b4f9ebd32066811169876bcfaa2e0dac804deb"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 228784632,
                    "digest": "sha256:4bcee63c11ddb3a68e6fcfda25ffa8c1fbdadbbb3e504829010b9968542fa820"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:ac2fee8376b4ba60edfbe0a9913fb2e612665655e3d791d44397e5c7a5e6702a"
                }
            ]
        },
        "1.46.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8759,
                "digest": "sha256:60dd3206c75052fad1dcf3ec6cc17cd90247e1dc6c6e36fa861cc1e0b7c46e0b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 230269932,
                    "digest": "sha256:283b9721b1c095adcf465c6f91d6827f124150aae196ceffdb0cfa0e6efa6599"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:ee03a288ebd4dd3413709398021c79dfab1591c9ff5931fa3f5a5e4cb3be58bd"
                }
            ]
        },
        "1.47.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:d41664b1d07c026a9430bcd06982874e6b9c36878633f0633f6082172848af48"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226012733,
                    "digest": "sha256:60abfc1374e9741b10a06b8d5330066ec65c321939308a53b547d6f4a2898780"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:97bc12a73b964a2808525b58846d8e7efdc945506bc5adfaf2bf9395dacbcfa7"
                }
            ]
        },
        "1.48.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:d8879a4dcb84b2d3116fa47e395ac29610e851a9af2e4f3bde76b8084fe8f291"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226030248,
                    "digest": "sha256:9508221d4560b9290da00ea0e75b55d432495b603a394f69e2c937921d3a9657"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:48b8e0ce8c0d75f514ed4c18f007497827173fc3613027e00d87447bcfd39585"
                }
            ]
        },
        "1.48.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9270,
                "digest": "sha256:09f4111185b2d649e5a523c7308e1a63c70c44b8c386518ba891ee7b34cf7e21"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226031426,
                    "digest": "sha256:bdb1197428bdf791dd0aedc566a3194d508a4af824802b40bae703fbbdf2ef5b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:a699fc976d707f17fd49103561fe9f7c85c00731cc5c5d805d3139ae7e17aa89"
                }
            ]
        },
        "1.48.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:ea064b378163975f861427707473cacaf941f5f67f48be660e03e42a384a0468"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226028192,
                    "digest": "sha256:17eab479eacab0533390cd2a489ed387678895f606c7c96c900d3e6e4e2ef453"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:fb54a04a132a3e55998ac17bbd77bc9fe30e8266169f07a9ba36dfb46fe9357e"
                }
            ]
        },
        "1.49.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9269,
                "digest": "sha256:f05a77d0ae812fb093a670b00713fcbd31850d496b834128747f22c61fbae19b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226398406,
                    "digest": "sha256:70da357f057d99420d22e6c15692d523bd8d0069d3a2b217021883d00afbd64b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:f3a87b9c0eed136fc4902b875285ca150901d3e86380c73396f5e1cbe9756e00"
                }
            ]
        },
        "1.50.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:6c9673643b6d292fd543113b52f5a64e0f46ce2c91034abb3a12e7b7f3f71737"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226403660,
                    "digest": "sha256:06c1fffe7a88ca67904b28de009c2651047e17a497098e42e1e8eaf4993400d2"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:527cf283b0208c1ee82d873c5de62de6d830a45240f315b04d7ae9577df35424"
                }
            ]
        },
        "1.50.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:8c675fa0435cbded6ad0227b2f4c8c848788738850059e7be8082e4c762b30d6"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226398989,
                    "digest": "sha256:73c165cacfd1419157ad53ec6286f6aa8b7d81bcd4cb38161769221a40f80795"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:5ba841d161b923553715601dc961ba96edcfd000dd1a63f9f4bd938b6584736f"
                }
            ]
        },
        "1.50.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9270,
                "digest": "sha256:9692aeea5f5a0c4e4a7e736e78fd882d2577a74406c6606b8a166c320cdcc18c"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226406033,
                    "digest": "sha256:8531007f58c34660e7a3f54f14967f1677703e4bb3cc62714820ca3f44778d95"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:6b92a7b1347c086c27e901a93c942bb114698a3101c08057438ea207ece6473b"
                }
            ]
        },
        "1.51.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9270,
                "digest": "sha256:1adefb1548d618a7ec961a6ac30ff33b205913f51664830413354921aa647c4d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226408202,
                    "digest": "sha256:314c945dd52417330709da5b63be7b87f0256dddeae07e5eceab866941a2713d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:606c3e8a52106f9c4936dab074ef8b6d83cced6f875f079d56979c64d2c1f8f1"
                }
            ]
        },
        "1.51.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:8d9c88cdc45830cde10907f915a05898e92498830786e3fbf6fe28d5ab669508"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226407877,
                    "digest": "sha256:74b889909f5ef6510c4985540a73989ffd1249f18936a93b929c72588f0317cf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:a5a75961ec3e438a3369ac1412cc71e277f42c03e9899563123d431708b8d224"
                }
            ]
        },
        "1.51.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:907d457a5991cb4debf31406265f741de5c9cade4971655d30fd1df6020319b4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 226409302,
                    "digest": "sha256:5d17cc940aedcd7708c45ba7877e584e3c2bfa46e693e29b6dc0e2c1622d5083"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:f40d47bfc001f1ad532408999af7e7fe4369e12d2f9d0ce4e9891c1707c69c68"
                }
            ]
        },
        "1.51.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9269,
                "digest": "sha256:f24ed3f84328dd46e9c09f4718c0729f518e651143e56b2c3d26dbbddd2b4502"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229019024,
                    "digest": "sha256:dffdb889ff2d464b65d717b3bd75e8c415af6977f1d0df3b10fcb7285d049196"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:578979f8c815c70876e27f3cf47a6b9f398b09e005d373ed544016ef6ecdf23d"
                }
            ]
        },
        "1.52.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9270,
                "digest": "sha256:ae2d1741f64f5c5fd5968ae92f057b152707ed78d0640186e7a08356a5e4655f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229026733,
                    "digest": "sha256:0655c8a6f3c915603a18f78ae3447d3b030ffdf6931b5a3b7d3a90e179f11e2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:8816921ab74190c977a4bb6704cf4a1ca1966647cd872f86942176f1ff642250"
                }
            ]
        },
        "1.53.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9270,
                "digest": "sha256:b952397903e25d342f78386f1e420d4a5cf9c505cfe7867e4f54730249ab9802"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229022947,
                    "digest": "sha256:a6adf099e129bf5afb4f875de699ea8c7d76c6a32c95e25b480379f14bf6717c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:5b767f165efc898173adc0295d55a24229404051dd6b2236d027ff1fe378d767"
                }
            ]
        },
        "1.54.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:360c59f24ec92630f9627e16010b3b6fcd742db5ac1cb2778652368ecb87ffb3"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229230634,
                    "digest": "sha256:e4ee01dd75c6d5de021fb499a0b8181cd0fadfd5bd4c994474908040e902efb5"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:dbf02981e4549d5946d3d1bf7b993ae0abac1cb1e9e1d66fe8f3ac75117d1f00"
                }
            ]
        },
        "1.55.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:afcb287eb11919ff3812f7fb9bed17f9038e37d04bb86bcb3c07dc631a86e053"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229216252,
                    "digest": "sha256:ca5ba4d562c961d5bb662006699c8d7fdb167d602fd4b4f1e64c0c39a52fd236"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:db0fdc09fb061051dd2006ff5972bd427d5dd49701edcfc370ea3d2eab2f983b"
                }
            ]
        },
        "1.56.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:423139bd1045bb26de33f495e3fca0ae28a52555a2c49b2a92e3040f381fd60b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229231378,
                    "digest": "sha256:ab3b61a66c96d44068dbd2c6fa0f4057f48ee10668bc2c8d7ad194f0da1d1d2c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:deb9507f9d8856db9ad129c81c29bd2708a9de1fe2ebb93cf4b3633055acf4c1"
                }
            ]
        },
        "1.57.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9270,
                "digest": "sha256:b6ae8e40094b66e4c10e2d102fd2745efc85f8a5713a3fa30d42df5cb4c1da1d"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229215988,
                    "digest": "sha256:ec3ebde4132e03a759597b93d46ead99aa6a350054f372b9cdcec864ab9650f3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:d99fad89e7a7a6a1849f7899b97e6c528425266423f5922ab308e7a528e17401"
                }
            ]
        },
        "1.58.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9271,
                "digest": "sha256:c4e0874674219b86c66fd7166750e31a038f4f3206ab7204ee9ccbeb2165421a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229387241,
                    "digest": "sha256:fbee4646d8b750cd21763dad7d20df6e9822651cb975bcc1f44717448c8f925d"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:120b9a4f2a3e1d0f97cae0b3ebaca8680cceccb1242c0bc4c2445e12ee87da4f"
                }
            ]
        },
        "1.59.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8270,
                "digest": "sha256:368131294488405d3ce9f54df3ff30889ee561237ad3565b570c2f3f90643a4f"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231243415,
                    "digest": "sha256:6cd6c8d680855afe07330b5156cfde145e160b4986c308b6ed59053cac17c612"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:29749900a126e78b53f62e652f7ec1a64ac2acb637311c404d7eab7181b2b98f"
                }
            ]
        },
        "1.60.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8270,
                "digest": "sha256:a31e7e9b969826f1fc86211fb14eb69495a0e14988e46bab9118c946276fa754"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231246638,
                    "digest": "sha256:18748473503b17f74c148a96dba0787f315f78e99b768f6ed8494f2b7a48542f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:33e1f7977f739166af6d3bfcff97355267d69d6a867edfe609ea92db7779f27f"
                }
            ]
        },
        "1.60.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8265,
                "digest": "sha256:ac7232f38f0d5fb1b6a956d042a9dd77e09b528fb240b3c8d63b20246b9e3271"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231217135,
                    "digest": "sha256:9ae70bb4008b8ea2a3ced521d2cba6e35e6b548014b5f75f3c3073f307bb3119"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:86bcf0bbb683e19e78e066e9fe28ed501fc0e3506d75a3e249805a12074040c1"
                }
            ]
        },
        "1.60.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8270,
                "digest": "sha256:c7e9ce839e7cbdf2d01d68599e83c6d0859230b07799381e32d2e2865d446be4"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 231599012,
                    "digest": "sha256:88a9a3e4af0c19afeffca22973ff7db8df0fd9872da98f0f1026690a40cc5b8f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:391d011d897cc5e8091772255eeeffaa704cbf391c54e15311a585cfba80e398"
                }
            ]
        },
        "1.61.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 8339,
                "digest": "sha256:c006a38e3076a75ad1db00cad6bfdf0fc32d096192a1dc079e27e95d5e06520b"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 244983426,
                    "digest": "sha256:3b10875906be59cc58eae24b87959d4e672281a9b89bf5d46cada60c65155411"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1984,
                    "digest": "sha256:c2056afb8741cf9566a5d55f990c6f41e733722e3c69c22774d9d24bcdbf4a57"
                }
            ]
        },
        "1.62.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9280,
                "digest": "sha256:43ccaac20f6a2b6b9aac0eb1d42839d2bf694dca873997c31c38c242bf600459"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 183315115,
                    "digest": "sha256:f10e0a41fe0ab76d44273e6490d189faf470b199715740ec7c1c0667b594527b"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23510134,
                    "digest": "sha256:eed31110885e51df91526071cf64cd83f23cbf8e3c78612b046c131e488e1ba3"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663121,
                    "digest": "sha256:1e021114e71fc7a695a87bd35ed6572cd15a52e070a00b0185951cd52c968a3f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48353220,
                    "digest": "sha256:a37f380d17882a94653671e443a03177e9096372ad75ab857ecc98eecb9dc14f"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30158699,
                    "digest": "sha256:fa084d6fed9b58ce8e7dfa1366838dbfe8a468e5d62c04984364331189e5d517"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 406366,
                    "digest": "sha256:b3e0397d7a5d03d0f6bdc99c04a19723a2e5fe512b9df8ffe3b1fd2bf40d5a8a"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12917920,
                    "digest": "sha256:df9497a4b1431fa9091947ffd01eca83ee370f067aa20ffe186397e1d2a6154c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1983,
                    "digest": "sha256:a99e6728352e3f8f5725a1675b3c298cfed405295900870e20745e70fd929047"
                }
            ]
        },
        "1.63.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11535,
                "digest": "sha256:75a518e72eeece8a6e04ec0d94781e1d2a8a7bfa2a8681d0eff5dd7428ac9e96"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 183314877,
                    "digest": "sha256:0a72541139ea2bd044e49fb5ca6bc4d7611eb9d0a13d300263e97416889cbee4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511932,
                    "digest": "sha256:c1bd0f3a30312cb485732eae34933d8f55fb3eeb4c4295b0ccbf182ad55d168e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663121,
                    "digest": "sha256:20715e6142c92734c848905c794fd29cb99136431b77c291bee7f5b35e8aac58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48195492,
                    "digest": "sha256:2396eaafe37261b92b712081d9f1ce390c68f9578ff82d40a672759c2c6c8aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30064439,
                    "digest": "sha256:622b7d26e0a4757a11f2b2532a63c09c068f117766ede24b2444b6e58c9b8658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 406420,
                    "digest": "sha256:829293b37653e2e4a901a68a9c63f92a477e9371cf5df4c60a836310c594647c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12879860,
                    "digest": "sha256:cca7e3b55454914762f75a661f40bda2f19d5d5b2bc0e10b5c3993b79d937b83"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1981,
                    "digest": "sha256:77436e3b56fd10df345dc119f6aec43f5c84b208b46b208b2e9b040b9b54a2e0"
                }
            ]
        },
        "1.64.0": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11720,
                "digest": "sha256:6267445d1f46389f6152f78e6808fba566250780913542706c581869c62dad50"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 183314877,
                    "digest": "sha256:0a72541139ea2bd044e49fb5ca6bc4d7611eb9d0a13d300263e97416889cbee4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511932,
                    "digest": "sha256:c1bd0f3a30312cb485732eae34933d8f55fb3eeb4c4295b0ccbf182ad55d168e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663121,
                    "digest": "sha256:20715e6142c92734c848905c794fd29cb99136431b77c291bee7f5b35e8aac58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48195492,
                    "digest": "sha256:2396eaafe37261b92b712081d9f1ce390c68f9578ff82d40a672759c2c6c8aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30064439,
                    "digest": "sha256:622b7d26e0a4757a11f2b2532a63c09c068f117766ede24b2444b6e58c9b8658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 406420,
                    "digest": "sha256:829293b37653e2e4a901a68a9c63f92a477e9371cf5df4c60a836310c594647c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12881969,
                    "digest": "sha256:9909c3eabedc1733ad856112a2c82ff75817e0a3985be78af2fb09140d6bd283"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:010e60055ade4c2294b88faba703255a07cf8f2a1eee9e105c25f961ab871cc0"
                }
            ]
        },
        "1.64.1": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11720,
                "digest": "sha256:e78f446f1594a8c7dacb4b7afe27d40de0145492b4a3917e21543a20be8e9f7a"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 183314877,
                    "digest": "sha256:0a72541139ea2bd044e49fb5ca6bc4d7611eb9d0a13d300263e97416889cbee4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511932,
                    "digest": "sha256:c1bd0f3a30312cb485732eae34933d8f55fb3eeb4c4295b0ccbf182ad55d168e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663121,
                    "digest": "sha256:20715e6142c92734c848905c794fd29cb99136431b77c291bee7f5b35e8aac58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48195492,
                    "digest": "sha256:2396eaafe37261b92b712081d9f1ce390c68f9578ff82d40a672759c2c6c8aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30064439,
                    "digest": "sha256:622b7d26e0a4757a11f2b2532a63c09c068f117766ede24b2444b6e58c9b8658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 406420,
                    "digest": "sha256:829293b37653e2e4a901a68a9c63f92a477e9371cf5df4c60a836310c594647c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 12891360,
                    "digest": "sha256:6b8f587b6d014e25f046f947b8a2c62f171ad89440dc2315d426b6e6e6a66397"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:bf531132a50c4aa2a9f9f6f220034b7611dcf94b7b8b24c04548d5e9f90afbde"
                }
            ]
        },
        "1.9.2": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 7605,
                "digest": "sha256:2d305dfcfeea4c604d6bbdd08dcbac411da92e4f2e7b885e70a79474d7969bf2"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 43412182,
                    "digest": "sha256:7b8b6451c85f072fd0d7961c97be3fe6e2f772657d471254f6d52ad9f158a580"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 848,
                    "digest": "sha256:ab4d1096d9ba178819a3f71f17add95285b393e96d08c8a6bfc3446355bcdc49"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 619,
                    "digest": "sha256:e6797d1788acd741d33f4530106586ffee568be513d47e6e20a4c9bc3858822e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 168,
                    "digest": "sha256:e25c5c290bded5267364aa9f59a18dd22a8b776d7658a41ffabbf691d8104e36"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 279217156,
                    "digest": "sha256:236ecfb16953bab05b603d10f68c4f324da54c64c9c1e2750746a68bf820150c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:65798149d51045ada449a69ace64908062fb30869a650e606dad6fdd9ead91e0"
                }
            ]
        },
        "2.2.3": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 11718,
                "digest": "sha256:e4716242210f75d0b18099461255e21201ab4d415416114edfa61a69ed73ca6e"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 183314877,
                    "digest": "sha256:0a72541139ea2bd044e49fb5ca6bc4d7611eb9d0a13d300263e97416889cbee4"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 23511932,
                    "digest": "sha256:c1bd0f3a30312cb485732eae34933d8f55fb3eeb4c4295b0ccbf182ad55d168e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 7663121,
                    "digest": "sha256:20715e6142c92734c848905c794fd29cb99136431b77c291bee7f5b35e8aac58"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 48195492,
                    "digest": "sha256:2396eaafe37261b92b712081d9f1ce390c68f9578ff82d40a672759c2c6c8aaf"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 30064439,
                    "digest": "sha256:622b7d26e0a4757a11f2b2532a63c09c068f117766ede24b2444b6e58c9b8658"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 406420,
                    "digest": "sha256:829293b37653e2e4a901a68a9c63f92a477e9371cf5df4c60a836310c594647c"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 9315794,
                    "digest": "sha256:aba4f3d2eb89bbbbe8169bcc8a6cbc768f2a2444da64772621842d09780edeb6"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 32,
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1985,
                    "digest": "sha256:86d49e3d678c72388c38b94c45e311eabbfeab7d2a91c332e9d314a34bea2558"
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "size": 9267,
                "digest": "sha256:b6e8e1cf6f9ef1cc17a07450676039d208ce8e9e47c11a63a662d2a9e3f11402"
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 46497548,
                    "digest": "sha256:58690f9b18fca6469a14da4e212c96849469f9b1be6661d2342a4bf01774aa50"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 857,
                    "digest": "sha256:b51569e7c50720acf6860327847fe342a1afbe148d24c529fb81df105e3eed01"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 528,
                    "digest": "sha256:da8ef40b9ecabc2679fe2419957220c0272a965c5cf7e0269fa1aeeb8c56f2e1"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 170,
                    "digest": "sha256:fb15d46c38dcd1ea0b1990006c3366ecd10c79d374f341687eb2cb23a2c8672e"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 229398827,
                    "digest": "sha256:d1b4c8354b1b8742df296a727107f3c039704471ad8b93cbc7a727688b11b116"
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "size": 1982,
                    "digest": "sha256:3a60b3c022b20e7770a76610c7965a2898f3aab5a4ceeebd8f43c170f0e32c6c"
                }
            ]
        }
    },
    "tags": [
        "1.10.0",
        "1.10.1",
        "1.10.2",
        "1.11.0",
        "1.11.1",
        "1.11.2",
        "1.12.0",
        "1.12.1",
        "1.12.2",
        "1.12.3",
        "1.13.0",
        "1.13.1",
        "1.13.2",
        "1.13.3",
        "1.14.0",
        "1.14.1",
        "1.14.2",
        "1.14.3",
        "1.14.4",
        "1.14.5",
        "1.15.0",
        "1.15.1",
        "1.15.2",
        "1.16.0",
        "1.16.1",
        "1.17.0",
        "1.17.2",
        "1.18.0",
        "1.18.1",
        "1.18.2",
        "1.18.3",
        "1.18.4",
        "1.18.5",
        "1.19.0",
        "1.19.1",
        "1.19.2",
        "1.19.3",
        "1.20.0",
        "1.20.1",
        "1.20.2",
        "1.20.3",
        "1.20.4",
        "1.20.5",
        "1.21.0",
        "1.21.1",
        "1.22.0",
        "1.22.1",
        "1.22.2",
        "1.22.3",
        "1.23.0",
        "1.24.0",
        "1.24.1",
        "1.25.0",
        "1.25.2",
        "1.26.1",
        "1.27.1",
        "1.28.1",
        "1.29.1",
        "1.29.2",
        "1.30.2",
        "1.31.2",
        "1.32.1",
        "1.33.0",
        "1.33.1",
        "1.34.0",
        "1.35.1",
        "1.35.2",
        "1.36.0",
        "1.37.0",
        "1.37.1",
        "1.37.2",
        "1.38.0",
        "1.39.0",
        "1.40.0",
        "1.40.1",
        "1.40.2",
        "1.40.3",
        "1.40.4",
        "1.41.0",
        "1.42.0",
        "1.42.1",
        "1.42.2",
        "1.43.0",
        "1.43.1",
        "1.43.3",
        "1.44.0",
        "1.44.1",
        "1.45.0",
        "1.46.0",
        "1.46.1",
        "1.46.2",
        "1.47.0",
        "1.48.0",
        "1.48.1",
        "1.48.2",
        "1.49.0",
        "1.50.0",
        "1.50.1",
        "1.50.2",
        "1.51.0",
        "1.51.1",
        "1.51.2",
        "1.51.3",
        "1.52.0",
        "1.53.0",
        "1.54.0",
        "1.55.0",
        "1.56.0",
        "1.57.0",
        "1.58.0",
        "1.59.0",
        "1.60.0",
        "1.60.1",
        "1.60.2",
        "1.61.0",
        "1.62.0",
        "1.63.0",
        "1.64.0",
        "1.64.1",
        "1.9.2",
        "2.2.3",
        "latest"
    ],
    "configs": {
        "1.10.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fafd6d009b47b01005822a5e161e192e6aa0264d7f570f984073f9941e2db668",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "11247e7bf30dbbc7d0d5a11dba0a51e99d9849510a25b9f49019b1144a33e91d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fafd6d009b47b01005822a5e161e192e6aa0264d7f570f984073f9941e2db668",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-10T09:21:20.01405565Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:23:51.037171729Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:efec03b785a78c01a6ade862d9a309f500ffa9f5f9314be26621f7fda0d5dfb8 in / "
                },
                {
                    "created": "2018-11-19T21:23:51.855666335Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:23:52.559321408Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:23:53.235657088Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:23:53.455319926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:16:27.439373775Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:16:27.614925824Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:21:13.395787892Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        vim=2:7.4.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        valgrind=1:3.11.*        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan        && chown -R conan:1001 /opt/pyenv        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-10T09:21:19.110801134Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:21:19.282501659Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-10T09:21:20.01405565Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:41c002c8a6fd36397892dc6dc36813aaa1be3298be4de93e4fe1f40b9c358d99",
                    "sha256:647265b9d8bc572a858ab25a300c07c0567c9124390fd91935430bf947ee5c2a",
                    "sha256:819a824caf709f224c414a56a2fa0240ea15797ee180e73abe4ad63d3806cae5",
                    "sha256:3db5746c911ad8c3398a6b72aa30580b25b6edb130a148beed4d405d9c345a29",
                    "sha256:9e933d05c91240824a4463e5f8d3d8b448fb8aed62d710af904675b2b8abc47f",
                    "sha256:8cdee360ae56b417c55b156566609dbbe0e5575d6cffd8abeff1618ebc2f1ef2"
                ]
            }
        },
        "1.10.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1559e1f581637dff276fdbd20e77dc7d91fef2d11fb951ce5ab39b5c71ce3714",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3482bf0ff2d61d82127b6a8ec80f58f3aa2f1140ceab88637ad975cc2040eb1b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1559e1f581637dff276fdbd20e77dc7d91fef2d11fb951ce5ab39b5c71ce3714",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-17T11:18:56.740251123Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:23:51.037171729Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:efec03b785a78c01a6ade862d9a309f500ffa9f5f9314be26621f7fda0d5dfb8 in / "
                },
                {
                    "created": "2018-11-19T21:23:51.855666335Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:23:52.559321408Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:23:53.235657088Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:23:53.455319926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:14:47.220284591Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:14:47.374614812Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:18:50.368348433Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        vim=2:7.4.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        valgrind=1:3.11.*        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-17T11:18:55.8922177Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:18:56.059843806Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T11:18:56.740251123Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:41c002c8a6fd36397892dc6dc36813aaa1be3298be4de93e4fe1f40b9c358d99",
                    "sha256:647265b9d8bc572a858ab25a300c07c0567c9124390fd91935430bf947ee5c2a",
                    "sha256:819a824caf709f224c414a56a2fa0240ea15797ee180e73abe4ad63d3806cae5",
                    "sha256:3db5746c911ad8c3398a6b72aa30580b25b6edb130a148beed4d405d9c345a29",
                    "sha256:2ab7cbd661a8be9f99aef1758f94df844759b9ae39ceeef1c998d59d6c23b455",
                    "sha256:188451229a35d9486150ba295428e2e3fe0e9aaca466a05d81fa0370e8421118"
                ]
            }
        },
        "1.10.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90f43a573ae6668a488a74aa52b435bf0596dfdcfb8ef167c151138e708048d1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b5735f6c7eaac16985e0ac976f67bfa3acd4eaafcef35ca01769093721d1db3c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:90f43a573ae6668a488a74aa52b435bf0596dfdcfb8ef167c151138e708048d1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-17T15:55:13.693612137Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:23:51.037171729Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:efec03b785a78c01a6ade862d9a309f500ffa9f5f9314be26621f7fda0d5dfb8 in / "
                },
                {
                    "created": "2018-11-19T21:23:51.855666335Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:23:52.559321408Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:23:53.235657088Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:23:53.455319926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:51:08.636812792Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:51:08.785454637Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:55:08.962344227Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        vim=2:7.4.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        valgrind=1:3.11.*        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-17T15:55:12.868969008Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:55:13.045039166Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-17T15:55:13.693612137Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:41c002c8a6fd36397892dc6dc36813aaa1be3298be4de93e4fe1f40b9c358d99",
                    "sha256:647265b9d8bc572a858ab25a300c07c0567c9124390fd91935430bf947ee5c2a",
                    "sha256:819a824caf709f224c414a56a2fa0240ea15797ee180e73abe4ad63d3806cae5",
                    "sha256:3db5746c911ad8c3398a6b72aa30580b25b6edb130a148beed4d405d9c345a29",
                    "sha256:e27681ac504df1fe4fde57d78e1161c9991cb1c738895f348b8585019ef2fce4",
                    "sha256:064d7786e270716d2603d655606a3bb947b684d2c81b73077aabf5c394c320fb"
                ]
            }
        },
        "1.11.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab5ae4d363ddffaa444b63392b77feb6f149b90685cf42001f7f6c806efb053f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "454484af57947b7e6fa298250926b33258eda913e40bc76d12d6b4cb4ba25e16",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ab5ae4d363ddffaa444b63392b77feb6f149b90685cf42001f7f6c806efb053f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-20T12:21:28.182116071Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:23:51.037171729Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:efec03b785a78c01a6ade862d9a309f500ffa9f5f9314be26621f7fda0d5dfb8 in / "
                },
                {
                    "created": "2018-11-19T21:23:51.855666335Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:23:52.559321408Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:23:53.235657088Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:23:53.455319926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-20T12:17:16.329335903Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-20T12:17:16.502063845Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-20T12:21:24.11247415Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        vim=2:7.4.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        valgrind=1:3.11.*        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-20T12:21:27.306015757Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-20T12:21:27.482089137Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-20T12:21:28.182116071Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:41c002c8a6fd36397892dc6dc36813aaa1be3298be4de93e4fe1f40b9c358d99",
                    "sha256:647265b9d8bc572a858ab25a300c07c0567c9124390fd91935430bf947ee5c2a",
                    "sha256:819a824caf709f224c414a56a2fa0240ea15797ee180e73abe4ad63d3806cae5",
                    "sha256:3db5746c911ad8c3398a6b72aa30580b25b6edb130a148beed4d405d9c345a29",
                    "sha256:805740a3183fb93455b3b30d0be02e538bcd771a880b51db9dd85e8a7377caa8",
                    "sha256:dff7e6d63f28e4e673d3a1160647d530ab4ddb7272bdb4e6e58a79378fc30be5"
                ]
            }
        },
        "1.11.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a266759b0c84108cd022a1dc951f71b3fc954c7c3ddfbf51ddf410b7a3cf1d05",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3cac1237708a4e4c9fa107bbb4e98cd427083b109acd634186ea25b30a6f2309",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a266759b0c84108cd022a1dc951f71b3fc954c7c3ddfbf51ddf410b7a3cf1d05",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-02T09:39:47.430388582Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-12-28T23:25:34.612476212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7f95be7c8278786d52495288f3e55febaa3341412888e021c65f07ae6885d1ff in / "
                },
                {
                    "created": "2018-12-28T23:25:38.939265817Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-12-28T23:25:39.651562846Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-28T23:25:40.451716047Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-12-28T23:25:40.631263429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:35:36.178555691Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:35:36.331572663Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:39:41.828990086Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-02T09:39:46.546398666Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:39:46.731259434Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-02T09:39:47.430388582Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8241afc74c6f5ca20c3bd7f3ddb3e5621d637ee85aaf40de440bf465b2a9984f",
                    "sha256:27712caf437141a6f663701ae94737c677e67febb4f7feca9521d424b2f15504",
                    "sha256:b097f5edab7b98568f202972e3aa9dff7c27f7f47d5f0b664bd3f9954d714e0d",
                    "sha256:428c1ba1135447a82bd52058d55028390a03e1b6341f97166483067e6a77b164",
                    "sha256:89c7a1024a0a6db217dca602cf15c6b30b07b091e8aa6597031d81f8ef064add",
                    "sha256:c8ae875db0ff7095676619f43ea697b867755312d28471633859015c58c393fb"
                ]
            }
        },
        "1.11.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:95adef250500a468be7789122143f562c8a085705eff21463f1dd1529add5a33",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "94fb264723753bd8bc624e2c929bd9a732db8a7b34f6ce47dba025df8c47dc19",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:95adef250500a468be7789122143f562c8a085705eff21463f1dd1529add5a33",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-14T13:24:45.776181798Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-12-28T23:25:34.612476212Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7f95be7c8278786d52495288f3e55febaa3341412888e021c65f07ae6885d1ff in / "
                },
                {
                    "created": "2018-12-28T23:25:38.939265817Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-12-28T23:25:39.651562846Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-12-28T23:25:40.451716047Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-12-28T23:25:40.631263429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:20:45.063753837Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:20:45.248934927Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:24:40.159617438Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-14T13:24:44.852319136Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:24:45.023731367Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-14T13:24:45.776181798Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8241afc74c6f5ca20c3bd7f3ddb3e5621d637ee85aaf40de440bf465b2a9984f",
                    "sha256:27712caf437141a6f663701ae94737c677e67febb4f7feca9521d424b2f15504",
                    "sha256:b097f5edab7b98568f202972e3aa9dff7c27f7f47d5f0b664bd3f9954d714e0d",
                    "sha256:428c1ba1135447a82bd52058d55028390a03e1b6341f97166483067e6a77b164",
                    "sha256:f469b69f3491c7c9ba1270664be20afb541afef64b8036f99e3df99d750d5322",
                    "sha256:38eafadd6b8ef6721a923b7d2017ad910e29e21d1e622401ad74084744be3ddf"
                ]
            }
        },
        "1.12.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a00e2e9ae70f62a5c143a431f3f9409aa5319e08f766e55b00c987b6527065d0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8bef277b5a668654319a89c98054b741dde694431e996833337efbee39160a01",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a00e2e9ae70f62a5c143a431f3f9409aa5319e08f766e55b00c987b6527065d0",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-01-30T18:18:04.449210738Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-01-22T22:48:13.94332672Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:916a45030dee881bbc8bbabf8bcfcc8828c29ce1c318000950bbe84c57f9df73 in / "
                },
                {
                    "created": "2019-01-22T22:48:15.859378283Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:48:17.356617037Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:48:19.058810509Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:48:19.590431377Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:12:22.066483465Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:12:22.25389805Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:17:58.940993589Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-01-30T18:18:03.563008359Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:18:03.735731857Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-01-30T18:18:04.449210738Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0de2edf7bff41238438e25b6f2de055b97c7fb6fe095cd560c2095b8dd70fc99",
                    "sha256:b2fd8b4c3da7e720f748179985ff20f537d504a9f4b0df09ac7611b390addab8",
                    "sha256:f67191ae09b8f583063c9f2e369ce3743a4f4eca91e2f7c4c3e4f5a7fba6b24a",
                    "sha256:68dda0c9a8cd82911fa164ad1461ded7901784ddc4f221c3bd0ae6acbea7ad36",
                    "sha256:55e5586328898612ed438fdaf69c4b3dce5973e5a7884be26258271f97895ebc",
                    "sha256:79c1effdfe3a54f453930a934ea65403e1189a4afcaa83c13e9b77b61993dcba"
                ]
            }
        },
        "1.12.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5cbd600213741a0853f0e771b0ec70c7cf129a237a40592a63ed911e76739abd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ddfd38e284f1245863a9a421965ff42d32e7c2f7d4c7a7a08bb188d0662f0759",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5cbd600213741a0853f0e771b0ec70c7cf129a237a40592a63ed911e76739abd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-02-05T17:08:34.782421171Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-01-22T22:48:13.94332672Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:916a45030dee881bbc8bbabf8bcfcc8828c29ce1c318000950bbe84c57f9df73 in / "
                },
                {
                    "created": "2019-01-22T22:48:15.859378283Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:48:17.356617037Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:48:19.058810509Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:48:19.590431377Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:01:33.674908358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:01:33.855810116Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:08:29.125330878Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-02-05T17:08:33.827708728Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:08:34.04252402Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-05T17:08:34.782421171Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0de2edf7bff41238438e25b6f2de055b97c7fb6fe095cd560c2095b8dd70fc99",
                    "sha256:b2fd8b4c3da7e720f748179985ff20f537d504a9f4b0df09ac7611b390addab8",
                    "sha256:f67191ae09b8f583063c9f2e369ce3743a4f4eca91e2f7c4c3e4f5a7fba6b24a",
                    "sha256:68dda0c9a8cd82911fa164ad1461ded7901784ddc4f221c3bd0ae6acbea7ad36",
                    "sha256:297347f416ae63efed8b12bbfbb1e7c47d9bf04c9993aede3257336918f251d9",
                    "sha256:68b5b38bb9b13f66e388dc45535df521e60a6c7f22319bc6bc8bd76a3721284e"
                ]
            }
        },
        "1.12.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8fe5f5b82999aae9130f7ab79831f2514c90d2157c700da2e036dbfd156f2912",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5df78edcced7688160b52b037b353514e741997b1220bdefb548f2b018cc7dc8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8fe5f5b82999aae9130f7ab79831f2514c90d2157c700da2e036dbfd156f2912",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-02-08T15:51:51.55800841Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-01-22T22:48:13.94332672Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:916a45030dee881bbc8bbabf8bcfcc8828c29ce1c318000950bbe84c57f9df73 in / "
                },
                {
                    "created": "2019-01-22T22:48:15.859378283Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:48:17.356617037Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:48:19.058810509Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:48:19.590431377Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:47:29.198027573Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:47:29.40481374Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:51:45.891562214Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-02-08T15:51:50.625102687Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:51:50.813368429Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-02-08T15:51:51.55800841Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0de2edf7bff41238438e25b6f2de055b97c7fb6fe095cd560c2095b8dd70fc99",
                    "sha256:b2fd8b4c3da7e720f748179985ff20f537d504a9f4b0df09ac7611b390addab8",
                    "sha256:f67191ae09b8f583063c9f2e369ce3743a4f4eca91e2f7c4c3e4f5a7fba6b24a",
                    "sha256:68dda0c9a8cd82911fa164ad1461ded7901784ddc4f221c3bd0ae6acbea7ad36",
                    "sha256:de15ac1812e5fdc4623bc6855b3765018986c417f219cc1c91a74ec53554ddb8",
                    "sha256:3c36a7617f076df553f9265eadcdc3ad16bc319b300a9d8d09aa8fdb6f5f87cf"
                ]
            }
        },
        "1.12.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40bc6acccc2e38c6dbc6f199a5977378a94ac21117f11eec82982f50d39e7767",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8041a0db1ee2576fc87255f6fd081f8ee7777253d7b41b41c83d90f16258cdfa",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:40bc6acccc2e38c6dbc6f199a5977378a94ac21117f11eec82982f50d39e7767",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-05T14:05:42.745938928Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2019-01-22T22:48:13.94332672Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:916a45030dee881bbc8bbabf8bcfcc8828c29ce1c318000950bbe84c57f9df73 in / "
                },
                {
                    "created": "2019-01-22T22:48:15.859378283Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-01-22T22:48:17.356617037Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-01-22T22:48:19.058810509Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-01-22T22:48:19.590431377Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:01:25.965915437Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:01:26.133439445Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:05:36.940868805Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-05T14:05:41.817964939Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:05:41.997753816Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-05T14:05:42.745938928Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0de2edf7bff41238438e25b6f2de055b97c7fb6fe095cd560c2095b8dd70fc99",
                    "sha256:b2fd8b4c3da7e720f748179985ff20f537d504a9f4b0df09ac7611b390addab8",
                    "sha256:f67191ae09b8f583063c9f2e369ce3743a4f4eca91e2f7c4c3e4f5a7fba6b24a",
                    "sha256:68dda0c9a8cd82911fa164ad1461ded7901784ddc4f221c3bd0ae6acbea7ad36",
                    "sha256:c1ba0192c73ddedda8283acf5fd854c255ce21aa28c6f6bff5ed79cdaa0a0251",
                    "sha256:104da28e7e5ad5640ff3d3aecb2b7b5adb73d2e11ef2478d2d6be9c91cb89f18"
                ]
            }
        },
        "1.13.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dda667a98d50df36595bfa0f23977672c33240519f9ac031e2c1508e5d8373fd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5ef0b36e3c36e5ad5988659394650c18742dc87302c1f9d1d025ecaa6eee4ae",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:dda667a98d50df36595bfa0f23977672c33240519f9ac031e2c1508e5d8373fd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-13T18:16:06.327043232Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:10:50.730673417Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:10:51.630689999Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:15:43.188429836Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-13T18:16:02.718712546Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:16:04.117915014Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-13T18:16:06.327043232Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:f9b31c28cad14cdece936d8c46900e1647009ef42dfafd6d0563a85c6e0d733f",
                    "sha256:b85c325a637255aad4b4cf645328a12372786d4eb4ac15cde8acf86340808ef3"
                ]
            }
        },
        "1.13.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ee299e97ba8f0f96eb0d9d7aee06326040981d9dc34490268434a25520bf813",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "564a4f46da7bcf832b414792aac6e2bd1054df95ad47d67cdac3ed5cc479497b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6ee299e97ba8f0f96eb0d9d7aee06326040981d9dc34490268434a25520bf813",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-18T16:37:52.311802905Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:33:25.600287171Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:33:26.657953687Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:37:32.241762819Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-18T16:37:48.912825729Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:37:50.23664576Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-18T16:37:52.311802905Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:0ba1a786f35c6d2d6cc6c5cfec5f90b44f9a9e06722e8a11fbb9dcd770be0ac7",
                    "sha256:0fa4c31385ddc6f0f778494a0de844b23bffba8109d7a0b226d84dab7f5ff676"
                ]
            }
        },
        "1.13.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c47397c2574914682ae7095a0900b2d5dfd73019e8b05df3fa94c2c83527e22",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c31a6b90685714b470e35ed8099b4aafd4a50398ba6eff13047112aff4b70298",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7c47397c2574914682ae7095a0900b2d5dfd73019e8b05df3fa94c2c83527e22",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-27T14:06:51.393426755Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:01:50.047745097Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:01:50.792269145Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:06:26.836891782Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-27T14:06:47.537457884Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:06:49.052235469Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T14:06:51.393426755Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:f14af8053372bc614ffdd90bc9dcc9bfbdd62fd0b25c985fa963ef01129314e1",
                    "sha256:e9715869b951c683b17dffca97abdc5e1494926ae0900f9a9ba4e273c6f702df"
                ]
            }
        },
        "1.13.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afea4545d1de3ff618f65793c52a6cf1ce1fed42645ce31f58ae8b3d6050b59c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "89da94d613885f09f2dea4d0ed522201f3c04e1c99368560385368cd3278596d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:afea4545d1de3ff618f65793c52a6cf1ce1fed42645ce31f58ae8b3d6050b59c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-27T16:02:53.868676398Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T15:58:21.432651011Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T15:58:22.665530166Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:02:30.953439859Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-27T16:02:50.376866822Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:02:51.778919144Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-27T16:02:53.868676398Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:cd4dcee55301adf21aa76e5d72c25bb6066be7377b54e435c80526fd95152e38",
                    "sha256:5ca64dddf0135715e07f836fd721b306bb71d6158c41eebae869abceffa9eb18"
                ]
            }
        },
        "1.14.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d05c53c2436ec1da8b262a7597b49ac9f54c2d275001ac960d9cc6555fa0e96d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6c1c7946057c07f12a9f5e2152a443d78ac181ccb8829a00bffcbdb8d5b8deca",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d05c53c2436ec1da8b262a7597b49ac9f54c2d275001ac960d9cc6555fa0e96d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-03-28T15:31:55.953179392Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:26:55.932168222Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:26:56.739236335Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:31:31.820456512Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-03-28T15:31:52.166220518Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:31:53.631490553Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-03-28T15:31:55.953179392Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:59851541c2b5d9e19a525711ff557bc33f8052c9021820575408f10b7ba5add8",
                    "sha256:0e550561173f52449e55ac193e34f9916006389c48f0d5a3b9ca2c0527f09ca5"
                ]
            }
        },
        "1.14.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1464e84ad753e3708c84a2faee802e095700236375f953cce71d9df4fa031e39",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "af68f1092af400beaac5cef4d8a6753f21a182b8702597b545d70a9abd5210ac",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1464e84ad753e3708c84a2faee802e095700236375f953cce71d9df4fa031e39",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-01T10:19:44.916661709Z",
            "docker_version": "18.09.2",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:15:10.60749131Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:15:11.586348336Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:19:23.147617767Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-01T10:19:41.591856157Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:19:42.843748636Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-01T10:19:44.916661709Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:315116cb941e56a3882e99b3b8376d7e21ece9925d7a72bff3a7962b32aa9a9f",
                    "sha256:622bb4d4b01c70a1ce6de58b9238ebf5195643679ddb1b33b1fa43f8452eaccb"
                ]
            }
        },
        "1.14.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f979c45ffadba6579a92b21afdaf1b72a7ed170ca87bc8fdb63413b6558346a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e9a753bf8a6af0a196c619236d55eb1edb1ea3f58cd30bcfa25d80dde6a65bbd",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:9f979c45ffadba6579a92b21afdaf1b72a7ed170ca87bc8fdb63413b6558346a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-11T09:46:33.291879594Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:41:34.406830127Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:41:35.629579869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:46:10.64554938Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-11T09:46:29.587592063Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:46:30.940465182Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T09:46:33.291879594Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:52406e99f530409a00b3365db06dc04532c918325e77d409ae840760b745f326",
                    "sha256:e49861f41cfed4d96a196ad816896be2fe08a06814bbdc0ae78cde5d96966ef9"
                ]
            }
        },
        "1.14.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:07ad933901f1310dac47a34fbbac326640382d0317393ab4baa9a12f018c2e0d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "92d525c6641e822b333d2ac2102bf987545432614c2094dbb2f87e96d09cee27",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:07ad933901f1310dac47a34fbbac326640382d0317393ab4baa9a12f018c2e0d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-11T11:11:36.387355484Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-03-12T00:21:09.45873267Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c02de920036d851cccaedd7f9ed93d48c960ada8e7e839bd2e79ab7b0d7a12d6 in / "
                },
                {
                    "created": "2019-03-12T00:21:10.40723287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-03-12T00:21:11.204753278Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-03-12T00:21:11.955281083Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-03-12T00:21:12.127405662Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:07:00.617429175Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:07:01.561839075Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:11:15.693679895Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-11T11:11:32.938093282Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:11:34.282943185Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-11T11:11:36.387355484Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:aa54c2bc12290df2851a94b8834cae75e4627219d2b423d4d3db8b0a497e79a2",
                    "sha256:7dd604ffa87f445fdbebbe22c0c5b78ec330ff285a144fdcfa03bab877354af8",
                    "sha256:2f0d1e8214b249aa5664ceca4c302d0c0fd96381488d490392c444b51a84a9d3",
                    "sha256:297fd071ca2fe18046aaf97628e31f0013f552422e283aff622343ae10ed08ab",
                    "sha256:c9538d889b7c5b8beb917a6222489702986ff3cdb7d6729d18fecb1c8e5acf23",
                    "sha256:84d303a94484856943b093a5f52ffecdd32b7d9588a2e78293090d814fbabb71"
                ]
            }
        },
        "1.14.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:773c59e27d2db5f80155f523f6a593e8c25a34a55544c8246cee1c021c85644d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "049bffd3e32a30571dfff3126419b2f63e8ecbb6647b4451df01499ab082f529",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:773c59e27d2db5f80155f523f6a593e8c25a34a55544c8246cee1c021c85644d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-04-29T07:48:46.140093377Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-04-26T22:22:27.29833619Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb81ec6d9e1940968c44e3fe988a8d07474c05b5b0ea60ace0bd2e4fbf180f3b in / "
                },
                {
                    "created": "2019-04-26T22:22:28.185523762Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:22:28.919682352Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:22:29.639563802Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:22:29.819289958Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:44:15.807814439Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:44:16.513510325Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:48:25.194867886Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-04-29T07:48:42.901771783Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:48:44.174101592Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-04-29T07:48:46.140093377Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a0c1e01578b7e57d891b82a53a9debdb52dc642c581de3e9231d395989d39a03",
                    "sha256:89ec57aea3bfda4030b9046bd998a74dd64bb8a7fcecca13ceafdc126d9d3dba",
                    "sha256:7ccfaa7554e3812178273aa374570a24ee1fca986c44df2bf29681d9b971f525",
                    "sha256:d908c11b1a82a8e558053856d5092771a5ce72c47b2942ed64f6d7debefe5a1c",
                    "sha256:68fcd065b4e09a4f7412d32c609715727a64d7da112afc929468ece49178d379",
                    "sha256:174f05a9b357dc656d50e42150af991138bb6e73425af8f9203bfe337fc7d1f5"
                ]
            }
        },
        "1.14.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c829fb13e71e3a7e6a6253a54de861c78f2fda43e3e9710ab61a69dded8d227f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6cfb20b6fb40a25373632c6b90f51005b16d6fc0cf31141135659a6f325bb9ff",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c829fb13e71e3a7e6a6253a54de861c78f2fda43e3e9710ab61a69dded8d227f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-03T08:38:03.622589831Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-04-26T22:22:27.29833619Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb81ec6d9e1940968c44e3fe988a8d07474c05b5b0ea60ace0bd2e4fbf180f3b in / "
                },
                {
                    "created": "2019-04-26T22:22:28.185523762Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:22:28.919682352Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:22:29.639563802Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:22:29.819289958Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:33:17.155064358Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:33:17.83722351Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:37:39.745866654Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-03T08:38:00.039769525Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:38:01.372280943Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-03T08:38:03.622589831Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a0c1e01578b7e57d891b82a53a9debdb52dc642c581de3e9231d395989d39a03",
                    "sha256:89ec57aea3bfda4030b9046bd998a74dd64bb8a7fcecca13ceafdc126d9d3dba",
                    "sha256:7ccfaa7554e3812178273aa374570a24ee1fca986c44df2bf29681d9b971f525",
                    "sha256:d908c11b1a82a8e558053856d5092771a5ce72c47b2942ed64f6d7debefe5a1c",
                    "sha256:b1e8e2bb7f3da52b78b604a9fc76b155e66a1d96c03828c4a8da89bf07f73a88",
                    "sha256:9817c2ecba56e3ae693b96120490815213616287a2e12c79ecf010ae327d6e99"
                ]
            }
        },
        "1.15.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cffde39a49fc50afe1fe16e9df545a7f10532e79ff9b43caeb6e5d87d4ba807",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ddfbe2b7979b76ba332f2edafc9d10853ff38dbeec71e4968481424a6844982c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:4cffde39a49fc50afe1fe16e9df545a7f10532e79ff9b43caeb6e5d87d4ba807",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-13T13:33:44.60319246Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-04-26T22:22:27.29833619Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:eb81ec6d9e1940968c44e3fe988a8d07474c05b5b0ea60ace0bd2e4fbf180f3b in / "
                },
                {
                    "created": "2019-04-26T22:22:28.185523762Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-04-26T22:22:28.919682352Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-04-26T22:22:29.639563802Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-04-26T22:22:29.819289958Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:29:08.384695992Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:29:09.595912309Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:33:23.643715889Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-13T13:33:41.300138613Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:33:42.61304078Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-13T13:33:44.60319246Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:a0c1e01578b7e57d891b82a53a9debdb52dc642c581de3e9231d395989d39a03",
                    "sha256:89ec57aea3bfda4030b9046bd998a74dd64bb8a7fcecca13ceafdc126d9d3dba",
                    "sha256:7ccfaa7554e3812178273aa374570a24ee1fca986c44df2bf29681d9b971f525",
                    "sha256:d908c11b1a82a8e558053856d5092771a5ce72c47b2942ed64f6d7debefe5a1c",
                    "sha256:28c81b57e8ce9539850b34c58078ecd8b44a3a8bdf120593e8aa31196cfa7322",
                    "sha256:1d965909b56fe792b8bb9e7bfcbfc5623ecbd5c789bc36d861e8c156593a11e6"
                ]
            }
        },
        "1.15.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12bef5ff189f282786b283022cede45341547bdd0e460d3b6575396a4d7c8948",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "57fc4dc32c5832e50554bb779b021a1f8a6763f2d02403221bdcae3e19513c94",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:12bef5ff189f282786b283022cede45341547bdd0e460d3b6575396a4d7c8948",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-05-24T17:26:59.666477857Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-05-15T21:21:22.63799589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a65e0467dbedc0992151651c136374c16f65d9905eac9d04d0925039ada64e4c in / "
                },
                {
                    "created": "2019-05-15T21:21:23.428023277Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:21:24.118711509Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-15T21:21:24.838789762Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:21:24.995514303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:22:43.833984929Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:22:44.541618112Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:26:39.045386422Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-05-24T17:26:56.488728378Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:26:57.76592321Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-05-24T17:26:59.666477857Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:739482a9723dbee6dbdad6b669090e96d5f57e2aa27c131015cce8969d0d4efa",
                    "sha256:e15278fccccab1f49ca48ed430acc3859d7a072a5cf1ca6491898ebc1035ec05",
                    "sha256:49652298c7790339b0d8f9ec4dd4692ace5edb1fba4aa6d8703d4c1943d43246",
                    "sha256:4c54072a50349809bcd1e8d196112308935a6cb41a6b3eff007a7a7a2a1d38f5",
                    "sha256:f542480a21fd72c994402c226b6bdefb9db56cb1567ab9596c12fbc4214aaafb",
                    "sha256:87716c430f3c992f67388eb7794122e8884dbb8f851f3b7b7acc5c3f1b2f5d30"
                ]
            }
        },
        "1.15.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81f75f65f4df074494c9e2a1fa3efbaf48446b674b7e324ff0d15ca2f57031a9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "464e479ba3435fb8129449c54e17d101a90dc221073cacbdddfb5b9d72350a69",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:81f75f65f4df074494c9e2a1fa3efbaf48446b674b7e324ff0d15ca2f57031a9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-03T12:13:03.532765588Z",
            "docker_version": "3.0.4",
            "history": [
                {
                    "created": "2019-05-15T21:21:22.63799589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a65e0467dbedc0992151651c136374c16f65d9905eac9d04d0925039ada64e4c in / "
                },
                {
                    "created": "2019-05-15T21:21:23.428023277Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:21:24.118711509Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-15T21:21:24.838789762Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:21:24.995514303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:08:26.786493382Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:08:27.541420292Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:12:41.062669555Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-03T12:12:59.914064808Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:13:01.261553212Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-03T12:13:03.532765588Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:739482a9723dbee6dbdad6b669090e96d5f57e2aa27c131015cce8969d0d4efa",
                    "sha256:e15278fccccab1f49ca48ed430acc3859d7a072a5cf1ca6491898ebc1035ec05",
                    "sha256:49652298c7790339b0d8f9ec4dd4692ace5edb1fba4aa6d8703d4c1943d43246",
                    "sha256:4c54072a50349809bcd1e8d196112308935a6cb41a6b3eff007a7a7a2a1d38f5",
                    "sha256:1352c7a3d3a4b06f958b3223269170c72af43d8f4fbe7331fcdf5968ae762550",
                    "sha256:1f56ba088ca46bc77e096500045cc4824dca3672b808b36d364ff33a03388f80"
                ]
            }
        },
        "1.16.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:982943da04d21a3123876060685a3635f74b935ef9d88af75e6881ba829765a4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9b594f2075a7493955c87bc71b1ca0ec67acd310b2e3dfddc176e6e691b0d486",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:982943da04d21a3123876060685a3635f74b935ef9d88af75e6881ba829765a4",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-05T17:46:34.184656772Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-05-15T21:21:22.63799589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a65e0467dbedc0992151651c136374c16f65d9905eac9d04d0925039ada64e4c in / "
                },
                {
                    "created": "2019-05-15T21:21:23.428023277Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:21:24.118711509Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-15T21:21:24.838789762Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:21:24.995514303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:42:01.875311351Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:42:02.607013451Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:46:12.254467169Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-05T17:46:30.924488079Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:46:32.251358405Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-05T17:46:34.184656772Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:739482a9723dbee6dbdad6b669090e96d5f57e2aa27c131015cce8969d0d4efa",
                    "sha256:e15278fccccab1f49ca48ed430acc3859d7a072a5cf1ca6491898ebc1035ec05",
                    "sha256:49652298c7790339b0d8f9ec4dd4692ace5edb1fba4aa6d8703d4c1943d43246",
                    "sha256:4c54072a50349809bcd1e8d196112308935a6cb41a6b3eff007a7a7a2a1d38f5",
                    "sha256:262e218c893e3fe2fc1502723e651cd66351b18acd12e59c9a5303cf2d4814f4",
                    "sha256:bf871deaed64be8bc9efd64f7390dd0d65d8984347aff950efa103170b555b6e"
                ]
            }
        },
        "1.16.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:02dfbd027864717554e50496c85437a8c8636ab8d9cc4e45b8b3f68eceba3159",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ba22d97521a530abb89a2270540d1397bc36a46cb023820c2fa39903a477a815",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:02dfbd027864717554e50496c85437a8c8636ab8d9cc4e45b8b3f68eceba3159",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-06-14T07:26:42.581768187Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-05-15T21:21:22.63799589Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a65e0467dbedc0992151651c136374c16f65d9905eac9d04d0925039ada64e4c in / "
                },
                {
                    "created": "2019-05-15T21:21:23.428023277Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-05-15T21:21:24.118711509Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-05-15T21:21:24.838789762Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-05-15T21:21:24.995514303Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:21:32.121514025Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:21:32.702045869Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:26:20.903461226Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.3-Linux-x86_64/* /usr        && rm -rf cmake-3.14.3-Linux-x86_64        && rm cmake-3.14.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-06-14T07:26:39.098680708Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:26:40.500874342Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-06-14T07:26:42.581768187Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:739482a9723dbee6dbdad6b669090e96d5f57e2aa27c131015cce8969d0d4efa",
                    "sha256:e15278fccccab1f49ca48ed430acc3859d7a072a5cf1ca6491898ebc1035ec05",
                    "sha256:49652298c7790339b0d8f9ec4dd4692ace5edb1fba4aa6d8703d4c1943d43246",
                    "sha256:4c54072a50349809bcd1e8d196112308935a6cb41a6b3eff007a7a7a2a1d38f5",
                    "sha256:42d75d04559029203db5cc581b554f44a82deb101b408c52c2c93cbc4471feae",
                    "sha256:db157c13be6bc133b46ed667754dcf22982c0aa4324a96ec012b56ce77a405db"
                ]
            }
        },
        "1.17.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6f7cc1c247fc480ef2573341427752c7f328a375a02f4255472df5e29958aee9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e4c608d90550f4fda68b8a4ddb50c05b45ae958fe3ca0c0d209b650b060764b7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6f7cc1c247fc480ef2573341427752c7f328a375a02f4255472df5e29958aee9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-15T08:56:10.282093861Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-06-18T22:53:31.663161397Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:24352f4a071cb97b3f111253f3db695ba473c5e7985544889af3e34408ce32ff in / "
                },
                {
                    "created": "2019-06-18T22:53:33.632053267Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-06-18T22:53:35.312835777Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-06-18T22:53:37.062293701Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-06-18T22:53:37.298681215Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:51:31.142113344Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:51:31.715292185Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:55:48.404237854Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-15T08:56:06.937821031Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:56:08.341275969Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-15T08:56:10.282093861Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1ea5a27b0484f2a227275fbb913d281461d9f356134a56002574904c3cfdea04",
                    "sha256:24ab7de5faec98f9068e68257ce51c43cb98044a108e3f7f107e60bba3ad2ef4",
                    "sha256:10e46f329a252698b52d88487165156ba4a52e5b62e75e10436e4353ae6ca687",
                    "sha256:92d3f22d44f3a9ffaa7bbdf9d7ba902a66d39ab8d72e791b60b63a5b813ffa31",
                    "sha256:d330f694a412a0f328a8431311061007875d438bac57e1d0b3e5162d1980c815",
                    "sha256:e158505f77c1791570975d2dddc3d5661cae5d2de5feea8adbf326a78e6e7bda"
                ]
            }
        },
        "1.17.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a5bc1455197c4079b9fc8245de0cfb0ab2787f97f618775004f2f4dd165b7166",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6261174a775f3676326a2ed528f9b04b36388107c143fd0993fff20cfd1f334b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a5bc1455197c4079b9fc8245de0cfb0ab2787f97f618775004f2f4dd165b7166",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-25T15:43:53.050004362Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-07-23T15:22:31.648568069Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 in / "
                },
                {
                    "created": "2019-07-23T15:22:32.444207677Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:22:33.179492618Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:22:33.883423097Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:22:34.054269174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T15:37:01.591283127Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T15:37:02.565465565Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T15:43:34.935224522Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-25T15:43:49.791791476Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T15:43:51.109530227Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-25T15:43:53.050004362Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f749b9b0fb213e9897417a985aaa9753d41bff474e1d0c0d1d266c4512eaf031",
                    "sha256:2558e637fbff95178cb4b43e0ca5f20a04ddeaf9673053bfa4dc10c72833d15a",
                    "sha256:aeda103e78c90b573700d64f6660efda378b59fe3e636ebfa28a0a105e2e2168",
                    "sha256:e79142719515e5304607fdd9adeb31db96b7acf00cabadac2678b056ed83bca6",
                    "sha256:1c941bca425b49ed7fcb4b882a7be093f140e90efe5383d8a6e670aa3d5511e7",
                    "sha256:8ce744de7e8171d657abfc84903894cf08c9f3d9d8e81f1484b97db6b74fef54"
                ]
            }
        },
        "1.18.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db42e02d167f5cc8504bc0e8dbe9d226692da5718b027fc1df32f08127ae1fa6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "35edc5c5acd67cd4fb81c0948ff8ed4e107922e4da63e5918b9492e5efcfb632",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:db42e02d167f5cc8504bc0e8dbe9d226692da5718b027fc1df32f08127ae1fa6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-07-30T12:48:33.800206746Z",
            "docker_version": "3.0.5",
            "history": [
                {
                    "created": "2019-07-23T15:22:31.648568069Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 in / "
                },
                {
                    "created": "2019-07-23T15:22:32.444207677Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:22:33.179492618Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:22:33.883423097Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:22:34.054269174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:44:03.929070793Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:44:04.5804125Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:48:13.493471116Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-07-30T12:48:30.512674129Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:48:31.856331371Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-07-30T12:48:33.800206746Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f749b9b0fb213e9897417a985aaa9753d41bff474e1d0c0d1d266c4512eaf031",
                    "sha256:2558e637fbff95178cb4b43e0ca5f20a04ddeaf9673053bfa4dc10c72833d15a",
                    "sha256:aeda103e78c90b573700d64f6660efda378b59fe3e636ebfa28a0a105e2e2168",
                    "sha256:e79142719515e5304607fdd9adeb31db96b7acf00cabadac2678b056ed83bca6",
                    "sha256:cdedfcb5140bd25cede87ae64e619b76cc3c2186c11945da02711c063d5ab9aa",
                    "sha256:0bbd6b76817f21627b7d834ac86db59c71016fec18ce14c90af1f76a59f83f7f"
                ]
            }
        },
        "1.18.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5db9d48bc06513dd9231c9c5f2a6d3a36d9f54a65d140748cf68e5bc73a6716a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8f18bec79230f2baba1811dffcad51a340786653f1928481fdd636ab1f0dd72c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5db9d48bc06513dd9231c9c5f2a6d3a36d9f54a65d140748cf68e5bc73a6716a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-19T08:20:03.888216438Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-07-23T15:22:31.648568069Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 in / "
                },
                {
                    "created": "2019-07-23T15:22:32.444207677Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:22:33.179492618Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:22:33.883423097Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:22:34.054269174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T08:15:20.662623375Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T08:15:21.563566689Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T08:19:41.758308687Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-19T08:20:00.454485192Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T08:20:01.855764761Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-19T08:20:03.888216438Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f749b9b0fb213e9897417a985aaa9753d41bff474e1d0c0d1d266c4512eaf031",
                    "sha256:2558e637fbff95178cb4b43e0ca5f20a04ddeaf9673053bfa4dc10c72833d15a",
                    "sha256:aeda103e78c90b573700d64f6660efda378b59fe3e636ebfa28a0a105e2e2168",
                    "sha256:e79142719515e5304607fdd9adeb31db96b7acf00cabadac2678b056ed83bca6",
                    "sha256:f6d8d32e5b8d6da5bc215adef9cbb9291aba0706ba23b3329ac64d308b3e5dd4",
                    "sha256:3b9ff232e8c9e43d5006411004c6d238b9606874c216e8c5ab21ead2e5d3a0a4"
                ]
            }
        },
        "1.18.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cb71486d95454f2c629cc2a593c3e256551e2a6a79cacccb0adc9c3c738e4ab5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "38516bfa8c3e081b9b423c02aff95995ea86c5a06b91394376cb2268ee00879d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:cb71486d95454f2c629cc2a593c3e256551e2a6a79cacccb0adc9c3c738e4ab5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-08-31T21:14:17.453728939Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-07-23T15:22:31.648568069Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 in / "
                },
                {
                    "created": "2019-07-23T15:22:32.444207677Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:22:33.179492618Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:22:33.883423097Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:22:34.054269174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T21:09:49.152771689Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T21:09:49.702114263Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T21:13:58.315880064Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-08-31T21:14:14.159441711Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T21:14:15.505339874Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-08-31T21:14:17.453728939Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f749b9b0fb213e9897417a985aaa9753d41bff474e1d0c0d1d266c4512eaf031",
                    "sha256:2558e637fbff95178cb4b43e0ca5f20a04ddeaf9673053bfa4dc10c72833d15a",
                    "sha256:aeda103e78c90b573700d64f6660efda378b59fe3e636ebfa28a0a105e2e2168",
                    "sha256:e79142719515e5304607fdd9adeb31db96b7acf00cabadac2678b056ed83bca6",
                    "sha256:e591472cfb9ab4e0dc10552f87c53c52161e757dfe05baafdf8d97681ee04cf3",
                    "sha256:1ec595254e622e49f9bfff6bbb46a7c5413c3a647bc9dff99d72d8a585c889e9"
                ]
            }
        },
        "1.18.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:f0b6bd1bd106d616a1d634c13ff5d8f1b917d9ada4ed1347e3ab21d8dff26610",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "87a50ed492dbfc603d6485e2cc7416454863fef0314550d613e461c6cb49f925",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:f0b6bd1bd106d616a1d634c13ff5d8f1b917d9ada4ed1347e3ab21d8dff26610",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-10T12:47:32.559258682Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-07-23T15:22:31.648568069Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:603693e48cdc7f0c5c62119923aadbb266e5df5a5002fc0f61295858f91690e8 in / "
                },
                {
                    "created": "2019-07-23T15:22:32.444207677Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-07-23T15:22:33.179492618Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-07-23T15:22:33.883423097Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-07-23T15:22:34.054269174Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T12:33:10.261380753Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T12:33:11.09448473Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T12:47:12.846097001Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-10T12:47:29.126225394Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T12:47:30.522392283Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-10T12:47:32.559258682Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f749b9b0fb213e9897417a985aaa9753d41bff474e1d0c0d1d266c4512eaf031",
                    "sha256:2558e637fbff95178cb4b43e0ca5f20a04ddeaf9673053bfa4dc10c72833d15a",
                    "sha256:aeda103e78c90b573700d64f6660efda378b59fe3e636ebfa28a0a105e2e2168",
                    "sha256:e79142719515e5304607fdd9adeb31db96b7acf00cabadac2678b056ed83bca6",
                    "sha256:ea1c9b7a0c7242ee45cce91f0f3519aba01f29a97f366bb6ea08b0f1032c1ef0",
                    "sha256:7f3c1bc2356e17a44da9156994a4dff6d5a207b8fe9dfa4bfd0d2176afce9fc5"
                ]
            }
        },
        "1.18.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:d4a5dd35b62d214dd32047d1b2e5459c1731430da8794c6b2b69a6e672cd110d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b7c5975c2776ff9d68b96865835f339615cd44495dc5742e4dd83f93bb332bd6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:d4a5dd35b62d214dd32047d1b2e5459c1731430da8794c6b2b69a6e672cd110d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-23T13:21:03.39265228Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:21:10.097848774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f in / "
                },
                {
                    "created": "2019-09-18T23:21:10.8809111Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-18T23:21:11.615118807Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:12.310156059Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:12.48276169Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T13:16:10.826410186Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T13:16:11.542512323Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T13:20:41.285391258Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.5-Linux-x86_64.tar.gz        && tar -xzf cmake-3.14.5-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.14.5-Linux-x86_64/* /usr        && rm -rf cmake-3.14.5-Linux-x86_64        && rm cmake-3.14.5-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-23T13:20:58.571281113Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T13:20:59.971512399Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-23T13:21:03.39265228Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ea69392465ad72ace1216ca2f49a372c7d6f10ec031ab53a94a17699c9ab4185",
                    "sha256:cb81b9d8a6c94953649603953d798fe2f2149eedad9c4108377d33d52b4f7709",
                    "sha256:90109bbe5b7686d39d031b5b0e51d4dac69c5cb112f96ed785f56cc0119290ef",
                    "sha256:9acfe225486b3167970823d286270ce8645c4a565c3a7a19e66bd5c585b6c599",
                    "sha256:b43c423630e6ac892c91534fe26791d481f670fb01dce024c1302db7a2648688",
                    "sha256:e26797493c89f506808d18244d1433c08d3c90c445b6c5311e6a63988214ea16"
                ]
            }
        },
        "1.18.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:bf06242e55ec8c9832507a45f2dbcff3714b4de715aab98a7495c5e8cfa35f1c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a5a1ec4c250d689fbbe06b849d683aa4734b289280a7e7df74ee3055f5b6a22c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bf06242e55ec8c9832507a45f2dbcff3714b4de715aab98a7495c5e8cfa35f1c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-27T07:46:58.524479041Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:21:10.097848774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f in / "
                },
                {
                    "created": "2019-09-18T23:21:10.8809111Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-18T23:21:11.615118807Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:12.310156059Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:12.48276169Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:42:03.936312788Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:42:04.5832471Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:46:36.799308343Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-27T07:46:55.033227556Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:46:56.415360706Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-27T07:46:58.524479041Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ea69392465ad72ace1216ca2f49a372c7d6f10ec031ab53a94a17699c9ab4185",
                    "sha256:cb81b9d8a6c94953649603953d798fe2f2149eedad9c4108377d33d52b4f7709",
                    "sha256:90109bbe5b7686d39d031b5b0e51d4dac69c5cb112f96ed785f56cc0119290ef",
                    "sha256:9acfe225486b3167970823d286270ce8645c4a565c3a7a19e66bd5c585b6c599",
                    "sha256:bc040cba206189dbe4d53d9043c437a2a6a7b824d452c9ab1e7c3cc3a78573f0",
                    "sha256:5e64ac6daa128c79544fd4d974049124606134bc30ecd793c463a4b6397daed5"
                ]
            }
        },
        "1.19.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e201b4053e1befc9e159fea46bb12f19ea6377da8c79a79ae520aa0f4e1192f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cc782055058a7fde1b404441cbceb4f52115dc3aed5b8ee8e0f405e1aa0607a3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e201b4053e1befc9e159fea46bb12f19ea6377da8c79a79ae520aa0f4e1192f3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-09-30T10:14:24.058593103Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:21:10.097848774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f in / "
                },
                {
                    "created": "2019-09-18T23:21:10.8809111Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-18T23:21:11.615118807Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:12.310156059Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:12.48276169Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T10:09:22.656602409Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T10:09:23.671668926Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T10:14:03.777427391Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-09-30T10:14:20.704373992Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T10:14:22.052840554Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-09-30T10:14:24.058593103Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ea69392465ad72ace1216ca2f49a372c7d6f10ec031ab53a94a17699c9ab4185",
                    "sha256:cb81b9d8a6c94953649603953d798fe2f2149eedad9c4108377d33d52b4f7709",
                    "sha256:90109bbe5b7686d39d031b5b0e51d4dac69c5cb112f96ed785f56cc0119290ef",
                    "sha256:9acfe225486b3167970823d286270ce8645c4a565c3a7a19e66bd5c585b6c599",
                    "sha256:7ed37516953e30e84873ba2589c0d1ebe05de7db03de0a52c4f04dfd1260bb73",
                    "sha256:f4391b924420fc9eccc487c1127e98eec1e073011174d754ad0a0464f68c1d12"
                ]
            }
        },
        "1.19.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:0ea145d2a828f6022779e78c77e6dfb1b1480778a8ee1bb1242007bd2fe770f6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4bccdfa5602114cac3450649aba942b4446210f03c8bcf170e2d873d6b4c566a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0ea145d2a828f6022779e78c77e6dfb1b1480778a8ee1bb1242007bd2fe770f6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-03T15:10:12.347965997Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-09-18T23:21:10.097848774Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a5b5bea2fa5358461649feb68a28ec3e9ec4547164744e8eb7f4112c1969f64f in / "
                },
                {
                    "created": "2019-09-18T23:21:10.8809111Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-09-18T23:21:11.615118807Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-09-18T23:21:12.310156059Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-09-18T23:21:12.48276169Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T15:05:38.720624485Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T15:05:39.528967598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T15:09:49.82649372Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-03T15:10:09.12465367Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T15:10:10.36985393Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-03T15:10:12.347965997Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ea69392465ad72ace1216ca2f49a372c7d6f10ec031ab53a94a17699c9ab4185",
                    "sha256:cb81b9d8a6c94953649603953d798fe2f2149eedad9c4108377d33d52b4f7709",
                    "sha256:90109bbe5b7686d39d031b5b0e51d4dac69c5cb112f96ed785f56cc0119290ef",
                    "sha256:9acfe225486b3167970823d286270ce8645c4a565c3a7a19e66bd5c585b6c599",
                    "sha256:bb9e08f8e9195e447d2199009253faa28d39256339fe4af786bb2f7ddd81b58a",
                    "sha256:7a7c6bd16ca40bc1741ff4cddc1ebb493280cacc071391c541725acb28d0fb5d"
                ]
            }
        },
        "1.19.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:85fd75a6fc6601eb592c3a24b5c8603e25a8024f9643867b59a749d22ef2536c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3e2a29fc6e95e9d47c14dc2d6080a283b9be5cedfe51dcd7f122739d344d49b6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:85fd75a6fc6601eb592c3a24b5c8603e25a8024f9643867b59a749d22ef2536c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T08:15:16.005738593Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-18T18:49:36.502487482Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6d0a70c6da1ad3872e509888a7a48e355bcb89a671f3f6f8dda97d368b8f51e9 in / "
                },
                {
                    "created": "2019-10-18T18:49:37.255797353Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T18:49:37.926904516Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:49:38.84762853Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:49:38.998535742Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T08:10:36.731330043Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T08:10:37.5304459Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T08:14:52.940220136Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T08:15:12.617565995Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T08:15:13.942747135Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T08:15:16.005738593Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:29f36b5893dca1c48e1c9c6706934438fdfb39cfb2df46e2dbb0f625b40e8b85",
                    "sha256:7f083f9454c0b3c48c717b5c15fec9f28bba236fe64dd03a439a32424333d0fd",
                    "sha256:9513cdf4e497446c1a3033e1fa655e47be4449b93226dc40f7c3fa5ebeffd56d",
                    "sha256:ccdb13a20bf21efcb5948ef412693dc9deeac1a19611e4ebf8454c2c8af27ae0",
                    "sha256:a0444949d9f4fcefac8f7392c987181c3424c3ed4b5e38053ad55fcd7a8d5341",
                    "sha256:f063a4ea7332654ee285e94931088b20ed5fca3127410d7d853d728451d19111"
                ]
            }
        },
        "1.19.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5d85d73d87c92b11ae3aebfcbcb47c755ce1f1be3cfdf2683689c360ab3ed8c7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e319b56085d1d870b8d578d704a1bcfb6f429dff95b0cc189e69c967a1d5e65c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5d85d73d87c92b11ae3aebfcbcb47c755ce1f1be3cfdf2683689c360ab3ed8c7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-10-29T14:14:09.248994977Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-18T18:49:36.502487482Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6d0a70c6da1ad3872e509888a7a48e355bcb89a671f3f6f8dda97d368b8f51e9 in / "
                },
                {
                    "created": "2019-10-18T18:49:37.255797353Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-18T18:49:37.926904516Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-18T18:49:38.84762853Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-18T18:49:38.998535742Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T14:09:26.288116118Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T14:09:26.880866319Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T14:13:47.739674221Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-10-29T14:14:05.840500329Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T14:14:07.189580579Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-10-29T14:14:09.248994977Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:29f36b5893dca1c48e1c9c6706934438fdfb39cfb2df46e2dbb0f625b40e8b85",
                    "sha256:7f083f9454c0b3c48c717b5c15fec9f28bba236fe64dd03a439a32424333d0fd",
                    "sha256:9513cdf4e497446c1a3033e1fa655e47be4449b93226dc40f7c3fa5ebeffd56d",
                    "sha256:ccdb13a20bf21efcb5948ef412693dc9deeac1a19611e4ebf8454c2c8af27ae0",
                    "sha256:f1b7b6b21d4b200a5b43b3c3d8a0251b8816c0fcbc955481b775802b399e491a",
                    "sha256:af300c01f825b39951df3d7f322c9b60fd6d121d499003986617d0fcef18489e"
                ]
            }
        },
        "1.20.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:35e14e5a62c366e0b55f8bfb7523b5d20b7d21231aefe92d92a4094183993cb1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dc49d139199ef0bd0aaafe4d751544935bdd9d98426e2c32eccc061d13314b46",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:35e14e5a62c366e0b55f8bfb7523b5d20b7d21231aefe92d92a4094183993cb1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-04T12:18:09.466874151Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:21:27.262885663Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9511990749b593a6f98fcc4d7dfe03df7b2c79be69f7a9ea96b52a6a8065829d in / "
                },
                {
                    "created": "2019-10-31T22:21:28.075866007Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-31T22:21:28.783511314Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:21:29.466635812Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:21:29.640561379Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T12:13:16.448567068Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T12:13:17.579819987Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T12:17:48.207736372Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-04T12:18:05.966601628Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T12:18:07.360562054Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-04T12:18:09.466874151Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:788b17b748c23d38ec62e913e87b084b7e3efda49843b3c0809b1857559b553e",
                    "sha256:a5a5f8c62487121247923a4df970f2094725ac2fea8c1347236466c4a3265ae0",
                    "sha256:903669ee720750938f08f95f7c8f1022d7fd7c57602af847b316f0b39efbd01c",
                    "sha256:bc72fb2e7b7487b3b9f9135437319525feaf1fab6ba61dab7e2e961e5c1dbb8b",
                    "sha256:b59dc7caba41fc68ae0c61922f4580eb32ce571847b21d44f5c8151265a8164c",
                    "sha256:60960b4c5ad40dab8daa298905cee1ed75f0d6fed12b80363897ab7398912120"
                ]
            }
        },
        "1.20.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:1823e45437a6892b56c6d9b3afa080034e1a1569e95b12cd35154031f2830a43",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ff45524183302b713f85528434f4fb2ad3642c32d041decde575a6334428bd1f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1823e45437a6892b56c6d9b3afa080034e1a1569e95b12cd35154031f2830a43",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-05T12:00:03.955096247Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:21:27.262885663Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9511990749b593a6f98fcc4d7dfe03df7b2c79be69f7a9ea96b52a6a8065829d in / "
                },
                {
                    "created": "2019-10-31T22:21:28.075866007Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-31T22:21:28.783511314Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:21:29.466635812Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:21:29.640561379Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:55:38.348643913Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:55:39.504145234Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T11:59:42.502242464Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-05T12:00:00.74979549Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T12:00:01.977706097Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-05T12:00:03.955096247Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:788b17b748c23d38ec62e913e87b084b7e3efda49843b3c0809b1857559b553e",
                    "sha256:a5a5f8c62487121247923a4df970f2094725ac2fea8c1347236466c4a3265ae0",
                    "sha256:903669ee720750938f08f95f7c8f1022d7fd7c57602af847b316f0b39efbd01c",
                    "sha256:bc72fb2e7b7487b3b9f9135437319525feaf1fab6ba61dab7e2e961e5c1dbb8b",
                    "sha256:b199040aa249ca095ae1d67b11414ead215e49a1f8137526518a885b70593360",
                    "sha256:3059047c6f54ff912bdf9b8bb60cb9749136fc535b3429a0c70aad7a6d2d468e"
                ]
            }
        },
        "1.20.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7e329a2d669b3be4829733302b02be6cac48289b643be16c645fbf2f9b8b60b6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "80472b7cc43b8f9c5f9e6f4048d9618fb77e4cd62328cc56d9dee6b0a2f51ec4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7e329a2d669b3be4829733302b02be6cac48289b643be16c645fbf2f9b8b60b6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-06T10:33:59.749092901Z",
            "docker_version": "3.0.6",
            "history": [
                {
                    "created": "2019-10-31T22:21:27.262885663Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9511990749b593a6f98fcc4d7dfe03df7b2c79be69f7a9ea96b52a6a8065829d in / "
                },
                {
                    "created": "2019-10-31T22:21:28.075866007Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-31T22:21:28.783511314Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:21:29.466635812Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:21:29.640561379Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T10:21:16.026198586Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T10:21:16.577996514Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T10:33:37.16145264Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-06T10:33:56.221592572Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T10:33:57.511222642Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-06T10:33:59.749092901Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:788b17b748c23d38ec62e913e87b084b7e3efda49843b3c0809b1857559b553e",
                    "sha256:a5a5f8c62487121247923a4df970f2094725ac2fea8c1347236466c4a3265ae0",
                    "sha256:903669ee720750938f08f95f7c8f1022d7fd7c57602af847b316f0b39efbd01c",
                    "sha256:bc72fb2e7b7487b3b9f9135437319525feaf1fab6ba61dab7e2e961e5c1dbb8b",
                    "sha256:66c98884b0c947a373c256adf8c2ff87e80dab8f01f2d85d88639305252bf9f4",
                    "sha256:ae11155520e139c25b1355c5a32e8d90b3b56156982edf1a47a4ecd6570255cc"
                ]
            }
        },
        "1.20.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:7fa9ca6fc1b9048b68820d3004c56ef1dd5ae2a580dffc9cd8d9b764ec81fca6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0a2ffdb046422a2d1ae057f3e5792843de6476eda424155cd20ad5e0b3fb2cf9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:7fa9ca6fc1b9048b68820d3004c56ef1dd5ae2a580dffc9cd8d9b764ec81fca6",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-11T16:07:30.331127332Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:21:27.262885663Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9511990749b593a6f98fcc4d7dfe03df7b2c79be69f7a9ea96b52a6a8065829d in / "
                },
                {
                    "created": "2019-10-31T22:21:28.075866007Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-31T22:21:28.783511314Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:21:29.466635812Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:21:29.640561379Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T16:02:37.999154277Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T16:02:38.522923151Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T16:07:10.413169919Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-11T16:07:26.906025764Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T16:07:28.284293279Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-11T16:07:30.331127332Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:788b17b748c23d38ec62e913e87b084b7e3efda49843b3c0809b1857559b553e",
                    "sha256:a5a5f8c62487121247923a4df970f2094725ac2fea8c1347236466c4a3265ae0",
                    "sha256:903669ee720750938f08f95f7c8f1022d7fd7c57602af847b316f0b39efbd01c",
                    "sha256:bc72fb2e7b7487b3b9f9135437319525feaf1fab6ba61dab7e2e961e5c1dbb8b",
                    "sha256:739f21082b6a5d3105f773e9320545bd3a6446cbae2c442716d9912ec7d3a687",
                    "sha256:f0db83c30205b8bd92d7c4b454fce2c8f27ca1cd112d52e0e3493f86b542ae61"
                ]
            }
        },
        "1.20.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:cddb5b00660e944c4a810617af86b93098c15c2f70e3a1366ffc8a721b842f45",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "14eb3e31b30729cb7656aaed523238175d4e60504d0b0fa79349ec390faba6c2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:cddb5b00660e944c4a810617af86b93098c15c2f70e3a1366ffc8a721b842f45",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-11-19T16:12:25.780858241Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-10-31T22:21:27.262885663Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9511990749b593a6f98fcc4d7dfe03df7b2c79be69f7a9ea96b52a6a8065829d in / "
                },
                {
                    "created": "2019-10-31T22:21:28.075866007Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-10-31T22:21:28.783511314Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-10-31T22:21:29.466635812Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-10-31T22:21:29.640561379Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T16:07:56.438414514Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T16:07:57.481220501Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T16:12:06.352145055Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-11-19T16:12:22.673618383Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T16:12:23.919741557Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-11-19T16:12:25.780858241Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:788b17b748c23d38ec62e913e87b084b7e3efda49843b3c0809b1857559b553e",
                    "sha256:a5a5f8c62487121247923a4df970f2094725ac2fea8c1347236466c4a3265ae0",
                    "sha256:903669ee720750938f08f95f7c8f1022d7fd7c57602af847b316f0b39efbd01c",
                    "sha256:bc72fb2e7b7487b3b9f9135437319525feaf1fab6ba61dab7e2e961e5c1dbb8b",
                    "sha256:d26f8c418cca6928c5438e4eecc28852cca641879f7a2b184faaeda90530f89d",
                    "sha256:a1e4bb963ad48515fe6111a1188edd7809cc1c7f733645c7d5cc2fa6ddd1c342"
                ]
            }
        },
        "1.20.5": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:db045a409a0f40163b2949d06c825e6c7aa88b2acd0cb17fd4d201a04a042961",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cbe658fab2caa489d79a7fd307dda5355f8a443d02e37154ee81ed914b7ae6c0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:db045a409a0f40163b2949d06c825e6c7aa88b2acd0cb17fd4d201a04a042961",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-03T15:01:22.875750655Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-11-27T00:22:54.5365217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4eb02fc768cad452a37e8df30bbfcc728f3e6e7ca33af177fd4de06fd07c2098 in / "
                },
                {
                    "created": "2019-11-27T00:22:55.325468833Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-27T00:22:56.055152744Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-11-27T00:22:56.793017958Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-11-27T00:22:56.968871541Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:57:08.722469375Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T14:57:09.474327967Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T15:01:05.76237706Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-03T15:01:19.853946529Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T15:01:21.046839145Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-03T15:01:22.875750655Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7082d7d696f8489bc9030e119acc56e210b6314bc8ac91aa69ed11c57c9243ba",
                    "sha256:1b039d138968f3020729c79dbd6d21ad08d392669a1b65f133fa831a2a996a1a",
                    "sha256:48817fbd6c9229f1ce54d41457fce1e9c1949233aa55bbc56b7d5cabb3f20974",
                    "sha256:aa7f8c8d5f39c24f06fded84c11b4b22d7c6f1c153b644d7e56f879ce63ef2b6",
                    "sha256:bfd514b62a3bb4b5aabe01278f0e1ad98a5a06c1ab13346a0f27989b47295add",
                    "sha256:6de0a86b5e777e9406078d497c898a911d3c2f95ebe62a6e6f77eea684ae4bd9"
                ]
            }
        },
        "1.21.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:50c7950e2148893941b3b9398b03089770ebfb2da0600b75b1a45c2a38f62028",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "49404c64726f13b88278f82317da7a0ab8781b9b8bf994f72272fe5e2ca2252f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:50c7950e2148893941b3b9398b03089770ebfb2da0600b75b1a45c2a38f62028",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2019-12-10T12:11:54.965907935Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2019-11-27T00:22:54.5365217Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4eb02fc768cad452a37e8df30bbfcc728f3e6e7ca33af177fd4de06fd07c2098 in / "
                },
                {
                    "created": "2019-11-27T00:22:55.325468833Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2019-11-27T00:22:56.055152744Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2019-11-27T00:22:56.793017958Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2019-11-27T00:22:56.968871541Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T12:07:20.589528112Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T12:07:21.527711496Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T12:11:32.672539171Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.3-Linux-x86_64.tar.gz        && tar -xzf cmake-3.15.3-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.15.3-Linux-x86_64/* /usr        && rm -rf cmake-3.15.3-Linux-x86_64        && rm cmake-3.15.3-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2019-12-10T12:11:51.721775487Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T12:11:53.025742772Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2019-12-10T12:11:54.965907935Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7082d7d696f8489bc9030e119acc56e210b6314bc8ac91aa69ed11c57c9243ba",
                    "sha256:1b039d138968f3020729c79dbd6d21ad08d392669a1b65f133fa831a2a996a1a",
                    "sha256:48817fbd6c9229f1ce54d41457fce1e9c1949233aa55bbc56b7d5cabb3f20974",
                    "sha256:aa7f8c8d5f39c24f06fded84c11b4b22d7c6f1c153b644d7e56f879ce63ef2b6",
                    "sha256:f98cdea78ea609116bbd1bb8b2e4789665836b8584489a107233f88b77b15c15",
                    "sha256:6283d2a9124dfec5605949c9123eebd973bf27dfbf86be8ff3e2e51d6da04a9d"
                ]
            }
        },
        "1.21.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e33b50de71dde8bf5989e6aab9f16c3505f76dd933e2fdef7aef0759212bfaaf",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "aa6c1189b896d8866dc7637ae7b1fe983d0943f4645093195e7d5def47fb7483",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e33b50de71dde8bf5989e6aab9f16c3505f76dd933e2fdef7aef0759212bfaaf",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-01-23T21:25:24.597688313Z",
            "docker_version": "3.0.8",
            "history": [
                {
                    "created": "2020-01-16T01:21:30.194975521Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b2eb5cd0b37ca0154f3c5ad9212f5bc7244a35806395a9c76a96723d708b83a in / "
                },
                {
                    "created": "2020-01-16T01:21:31.095867331Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T01:21:31.869897724Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:21:32.633809912Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:21:32.807767366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T21:21:47.421147479Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T21:21:48.317642025Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T21:25:12.580106126Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.1-Linux-x86_64/* /usr        && rm -rf cmake-3.16.1-Linux-x86_64        && rm cmake-3.16.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-01-23T21:25:22.241221425Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T21:25:23.197576274Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-01-23T21:25:24.597688313Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:96eda0f553ba9988a216cea7cf016d18d5f036677d411883b642c4c8c70e301b",
                    "sha256:bd95983a8d99e89ec7c7558839a72a79e92ce8c5a6697ad704e341d0d3c43cd5",
                    "sha256:293b479c17a5448de0814a3c614ac15a0d192a7c2c56f53478f6e3d5cc5cb345",
                    "sha256:fa1693d66d0b743e6ef621392026f411dad99750ec16926ffd78104a82a123e7",
                    "sha256:f7e1e5c749f02b3adc2725914a67714b72159247d80d4fe3a2e72c04334da69a",
                    "sha256:07c6b196c921874f908e3d8924e1de8196337adb4f647637725ec6c2616703e8"
                ]
            }
        },
        "1.22.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:87d274d17ca99b56d2cc97db77cae3d1315735d526a07f09a1ede907d004ff0a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "819fa4471d288925bbb340e0030ee0b3f9ed3d86824b16d25ec2efb3bafa7de9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:87d274d17ca99b56d2cc97db77cae3d1315735d526a07f09a1ede907d004ff0a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-07T21:41:44.601750843Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-01-16T01:21:30.194975521Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b2eb5cd0b37ca0154f3c5ad9212f5bc7244a35806395a9c76a96723d708b83a in / "
                },
                {
                    "created": "2020-01-16T01:21:31.095867331Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T01:21:31.869897724Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:21:32.633809912Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:21:32.807767366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T21:38:15.366394989Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T21:38:16.308797779Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T21:41:32.393851828Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.1-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.1-Linux-x86_64/* /usr        && rm -rf cmake-3.16.1-Linux-x86_64        && rm cmake-3.16.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-07T21:41:42.256202162Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T21:41:43.17737388Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-07T21:41:44.601750843Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:96eda0f553ba9988a216cea7cf016d18d5f036677d411883b642c4c8c70e301b",
                    "sha256:bd95983a8d99e89ec7c7558839a72a79e92ce8c5a6697ad704e341d0d3c43cd5",
                    "sha256:293b479c17a5448de0814a3c614ac15a0d192a7c2c56f53478f6e3d5cc5cb345",
                    "sha256:fa1693d66d0b743e6ef621392026f411dad99750ec16926ffd78104a82a123e7",
                    "sha256:493d68b4665aedda02f78e606a87c5a8ff822b06a719828ed61b1ac7a962a05b",
                    "sha256:6f8d09ee04a20799292a52cceb7fad8e0a02bbd1aaa0d7190ae13cc6c420b1be"
                ]
            }
        },
        "1.22.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:8a77b7fe595eb3ba1baf26d2d7b432d7655046a46959b7dca1ccbf263732100a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6dce6a236c138f6997869065ec49bdc73f64777a7397c2db6954b0d46dc12fe5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8a77b7fe595eb3ba1baf26d2d7b432d7655046a46959b7dca1ccbf263732100a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-12T14:50:34.995907116Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-01-16T01:21:30.194975521Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4b2eb5cd0b37ca0154f3c5ad9212f5bc7244a35806395a9c76a96723d708b83a in / "
                },
                {
                    "created": "2020-01-16T01:21:31.095867331Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-01-16T01:21:31.869897724Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-01-16T01:21:32.633809912Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-01-16T01:21:32.807767366Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:47:02.995241083Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:47:03.327532964Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:50:22.826457317Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-12T14:50:32.62817574Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:50:33.595250375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-12T14:50:34.995907116Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:96eda0f553ba9988a216cea7cf016d18d5f036677d411883b642c4c8c70e301b",
                    "sha256:bd95983a8d99e89ec7c7558839a72a79e92ce8c5a6697ad704e341d0d3c43cd5",
                    "sha256:293b479c17a5448de0814a3c614ac15a0d192a7c2c56f53478f6e3d5cc5cb345",
                    "sha256:fa1693d66d0b743e6ef621392026f411dad99750ec16926ffd78104a82a123e7",
                    "sha256:fbb02be86d17b83b565683d40da62b36bbe1ef2fd08bfd801f6868234a652a74",
                    "sha256:b3aebf06df65afbb91e13460bd3a35bbc1f79dd18826ddc1aa4574cb4e4800bb"
                ]
            }
        },
        "1.22.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fdb5302b6a8e28f7c1c7841f6210d1220267b671a39ac633cdf8bbe9387118d5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ec0938ee5ffe528bd9ccf869514e45bf36770c06206dce28278fb52d73ab5b64",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fdb5302b6a8e28f7c1c7841f6210d1220267b671a39ac633cdf8bbe9387118d5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-02-26T19:05:16.483238277Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:22:27.031833311Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f70668251e2e58cee0ff0c22ee805f8a269ac6f8934c07f7e89dca6cc1de3aa in / "
                },
                {
                    "created": "2020-02-21T22:22:27.897701561Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-21T22:22:28.699171961Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:22:29.691913341Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:22:30.050974423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T19:02:11.612417166Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T19:02:12.280210874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T19:05:05.508243884Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-02-26T19:05:14.347438431Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T19:05:15.179075636Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-02-26T19:05:16.483238277Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9e6f810a2aabaa90d8e79f52847c74617a94e78fe223f4f067d84a6bd63b9393",
                    "sha256:0040d8f00d7e5afc3a96cbc5f10b21d355e5f0efc03f5eb0e523c5c05fb69356",
                    "sha256:aa6685385151f01c1a936ff0b2219539b0f92ebdce8030ff262c88c9ebd294c6",
                    "sha256:4ae3adcb66cbcfca0b15c25b144694f6899737dca6867387dfb789e5ba4f1249",
                    "sha256:11bb568295b9cc6b55f1a0af76c195db63139e68a527e9dae0699929dcf0d5a8",
                    "sha256:70e3e2d7042a4afee0aa0438bdfe994e5f4042442ae248415f96c796b4c9aec2"
                ]
            }
        },
        "1.22.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:fe936fb8dca353db4ea0c121bd5f177d5d894f3221feb5aa63c179e891b0282e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b52a2cd876d529b1ef73245d811b31d2e9da5785dec5a779ba79655299f0ead7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fe936fb8dca353db4ea0c121bd5f177d5d894f3221feb5aa63c179e891b0282e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-09T22:45:40.423981523Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:22:27.031833311Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f70668251e2e58cee0ff0c22ee805f8a269ac6f8934c07f7e89dca6cc1de3aa in / "
                },
                {
                    "created": "2020-02-21T22:22:27.897701561Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-21T22:22:28.699171961Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:22:29.691913341Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:22:30.050974423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:42:23.832677175Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:42:24.288534589Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:45:29.240621903Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-09T22:45:38.144893397Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:45:39.064532508Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-09T22:45:40.423981523Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9e6f810a2aabaa90d8e79f52847c74617a94e78fe223f4f067d84a6bd63b9393",
                    "sha256:0040d8f00d7e5afc3a96cbc5f10b21d355e5f0efc03f5eb0e523c5c05fb69356",
                    "sha256:aa6685385151f01c1a936ff0b2219539b0f92ebdce8030ff262c88c9ebd294c6",
                    "sha256:4ae3adcb66cbcfca0b15c25b144694f6899737dca6867387dfb789e5ba4f1249",
                    "sha256:0d92e7b2fc04f07128348221585a47fe08ae63a1aeee605fd34a2a4c6b9f5e96",
                    "sha256:48198b1cfdf2ea72206b1961a5eee9dbb2f1eca1a5b32408e944921ca06cbb82"
                ]
            }
        },
        "1.23.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:2fca8577dc0a13531d41a7638c82e08b0b2634114e3a731d290d44a0b05f0fe8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "37c967254fddd7ea8e530f3762c1fa126b43e82c2fa1ebcd7649be0dae2cdcdc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2fca8577dc0a13531d41a7638c82e08b0b2634114e3a731d290d44a0b05f0fe8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-03-12T18:39:51.910062549Z",
            "docker_version": "3.0.10+azure",
            "history": [
                {
                    "created": "2020-02-21T22:22:27.031833311Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f70668251e2e58cee0ff0c22ee805f8a269ac6f8934c07f7e89dca6cc1de3aa in / "
                },
                {
                    "created": "2020-02-21T22:22:27.897701561Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-21T22:22:28.699171961Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:22:29.691913341Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:22:30.050974423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T18:36:15.519170542Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T18:36:16.333410253Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T18:39:39.981459787Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-03-12T18:39:49.228395431Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T18:39:50.353787677Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-03-12T18:39:51.910062549Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9e6f810a2aabaa90d8e79f52847c74617a94e78fe223f4f067d84a6bd63b9393",
                    "sha256:0040d8f00d7e5afc3a96cbc5f10b21d355e5f0efc03f5eb0e523c5c05fb69356",
                    "sha256:aa6685385151f01c1a936ff0b2219539b0f92ebdce8030ff262c88c9ebd294c6",
                    "sha256:4ae3adcb66cbcfca0b15c25b144694f6899737dca6867387dfb789e5ba4f1249",
                    "sha256:7453daaf7000bf6d5c81a6dfb8b95a5377b983473561def8572f9e77092dd8bb",
                    "sha256:3f346613f6fe9eae9deabbad48e39807c0055c6efaeb57eec2be50a178dd7bea"
                ]
            }
        },
        "1.24.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5112c49bff8a70762da7f1955dda6f076ee89aa47eb5555fcb1bcd84a88f0f8c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "41e6f3eea0ba8085a02df2373baed67883abecc19c2943b310c61d605f8cd1f8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5112c49bff8a70762da7f1955dda6f076ee89aa47eb5555fcb1bcd84a88f0f8c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-16T17:49:06.981027437Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-02-21T22:22:27.031833311Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f70668251e2e58cee0ff0c22ee805f8a269ac6f8934c07f7e89dca6cc1de3aa in / "
                },
                {
                    "created": "2020-02-21T22:22:27.897701561Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-21T22:22:28.699171961Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:22:29.691913341Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:22:30.050974423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:45:31.372515471Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:45:32.316869275Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:48:54.836744639Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-16T17:49:04.503847881Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:49:05.564403818Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-16T17:49:06.981027437Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9e6f810a2aabaa90d8e79f52847c74617a94e78fe223f4f067d84a6bd63b9393",
                    "sha256:0040d8f00d7e5afc3a96cbc5f10b21d355e5f0efc03f5eb0e523c5c05fb69356",
                    "sha256:aa6685385151f01c1a936ff0b2219539b0f92ebdce8030ff262c88c9ebd294c6",
                    "sha256:4ae3adcb66cbcfca0b15c25b144694f6899737dca6867387dfb789e5ba4f1249",
                    "sha256:e61a78fd9e7ec2c477eb3c6a8ae3ef4bd1f96c385fa5e905302ad9d118b37e34",
                    "sha256:55ede82b4cbba17fca4c0b3d03985d550473eaae54dd1566809d7b1bee94662a"
                ]
            }
        },
        "1.24.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:456512785b469a7caf59272b4d1c6c42a07556a01fa7b11caf0e802aaa8ee45b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e8440de500f344e089cf6316e528965f93dbddf73ca2b79fde7c1e5c66c12f8f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:456512785b469a7caf59272b4d1c6c42a07556a01fa7b11caf0e802aaa8ee45b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-04-21T18:36:32.984036171Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-02-21T22:22:27.031833311Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1f70668251e2e58cee0ff0c22ee805f8a269ac6f8934c07f7e89dca6cc1de3aa in / "
                },
                {
                    "created": "2020-02-21T22:22:27.897701561Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-02-21T22:22:28.699171961Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-02-21T22:22:29.691913341Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-02-21T22:22:30.050974423Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T18:33:06.830622333Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T18:33:07.294627831Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T18:36:21.137537102Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-04-21T18:36:30.698993262Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T18:36:31.622625191Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-04-21T18:36:32.984036171Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9e6f810a2aabaa90d8e79f52847c74617a94e78fe223f4f067d84a6bd63b9393",
                    "sha256:0040d8f00d7e5afc3a96cbc5f10b21d355e5f0efc03f5eb0e523c5c05fb69356",
                    "sha256:aa6685385151f01c1a936ff0b2219539b0f92ebdce8030ff262c88c9ebd294c6",
                    "sha256:4ae3adcb66cbcfca0b15c25b144694f6899737dca6867387dfb789e5ba4f1249",
                    "sha256:5c3fd8bc6dd82ab0c4aa43788543da9b469b72cb07bca6320049414ce9da507e",
                    "sha256:6a44446f53e0cf92b239b5f5bb1237e0a7bd617e3da53521af4e95ba7e755d5d"
                ]
            }
        },
        "1.25.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:af2cab2447528e2f021637492365102d3a2c67e004b2189792a098b6ed8b5345",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "100d5f6e91b16cfdfa326230de3ef3687f58431d17b62fc95fb726256e42d92c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:af2cab2447528e2f021637492365102d3a2c67e004b2189792a098b6ed8b5345",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-08T20:56:00.899904123Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:08:29.930500697Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fe14d9555e739e4d006eecb273a2f4a53e6dbe93bd0db26d5f999168b5d4114 in / "
                },
                {
                    "created": "2020-04-24T01:08:31.812205621Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-24T01:08:33.600214229Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:08:35.236242131Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:08:35.618968339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:52:36.385826293Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:52:37.328936758Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:55:48.930635338Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-08T20:55:58.480094489Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:55:59.476443334Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-08T20:56:00.899904123Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b592b5433bbffb04389a0e6349cdba6af8d006779bbb93beb69aa77d59133be4",
                    "sha256:4a048ea09024fc68a2d21f8614d9e49f246efe0902dee85fb27ccc8ac17be73b",
                    "sha256:0d3833376c2f2b31bbaa02e419615355fd529b624b2cda1ef1dca0c856a25e73",
                    "sha256:64d2e4aaa54cf6b127584b366d73d4ab66ca40897cd88e1f9fe971e7f2e09082",
                    "sha256:0385d862c0080d25e306e8f908e27b66e792ba532e6d4485bf48ed6a7e9caf2e",
                    "sha256:a4ef0441c2663c8f9b69e624cb1d4c896b12e867b15de7e12716669faadbf321"
                ]
            }
        },
        "1.25.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:04d5fd463d668249456c5990c7468c75fbe523cab81eb0455a7c51dcd23fe6fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "3eb3be675858f56bb2603e722a3705ba75adbf6069d7a98b097b1dd85a512da1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:04d5fd463d668249456c5990c7468c75fbe523cab81eb0455a7c51dcd23fe6fe",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-05-19T20:51:24.703696403Z",
            "docker_version": "3.0.11+azure",
            "history": [
                {
                    "created": "2020-04-24T01:08:29.930500697Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4fe14d9555e739e4d006eecb273a2f4a53e6dbe93bd0db26d5f999168b5d4114 in / "
                },
                {
                    "created": "2020-04-24T01:08:31.812205621Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-04-24T01:08:33.600214229Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-04-24T01:08:35.236242131Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-04-24T01:08:35.618968339Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:47:47.083691273Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:47:47.400622973Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:51:12.972098766Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-05-19T20:51:22.215745848Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:51:23.243656282Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-05-19T20:51:24.703696403Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:b592b5433bbffb04389a0e6349cdba6af8d006779bbb93beb69aa77d59133be4",
                    "sha256:4a048ea09024fc68a2d21f8614d9e49f246efe0902dee85fb27ccc8ac17be73b",
                    "sha256:0d3833376c2f2b31bbaa02e419615355fd529b624b2cda1ef1dca0c856a25e73",
                    "sha256:64d2e4aaa54cf6b127584b366d73d4ab66ca40897cd88e1f9fe971e7f2e09082",
                    "sha256:23d67244b273182116453103967d9a9e9eff1508d36935b079e7633d5bc18037",
                    "sha256:92d5544eaed573b3edb8a07a1ccfeb72887fa71a4be2e060794a7f028d02280b"
                ]
            }
        },
        "1.26.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:c9e79246a8fcc4fac86005f63b54f8f61db57ca4562c73c527fdf8d6117d2e85",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "406c2979cff7f4f6f3ce42ea1d434088c2106c3ca10661decc16f22184555f61",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:c9e79246a8fcc4fac86005f63b54f8f61db57ca4562c73c527fdf8d6117d2e85",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-06-23T16:47:54.788677412Z",
            "docker_version": "3.0.13+azure",
            "history": [
                {
                    "created": "2020-06-17T01:21:26.801417571Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:52af30f80ba214985a59cb0ef7073c64f8514d58396c0de48f8d7056dec2a58a in / "
                },
                {
                    "created": "2020-06-17T01:21:27.632539151Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-06-17T01:21:28.428100651Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-06-17T01:21:29.139357935Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-06-17T01:21:29.312869639Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:43:33.200588355Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:43:33.535605386Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:47:42.759427095Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-06-23T16:47:52.444129288Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:47:53.387928755Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-06-23T16:47:54.788677412Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:88b486ee59d1151e41f4dcd3c80ce2c4ae113a6c03ba309bac442d57a1a9808c",
                    "sha256:0cf0b0655e84ee8286a7071ff8397f15015bcc117ec2c3c446c15dbbd3233180",
                    "sha256:f182989ffc12a65f2c064d46cdcc868eb988683a2d6d0edfba93846c7792711a",
                    "sha256:21dabaeb6afb4a49601ad0f68f49f2dbf930bdf92275385415ad9c8ce328fc87",
                    "sha256:6aa25c8d968b2948bddc4c332c2c64a612007939bdee79580fee46f83f7ff0ca",
                    "sha256:6408111fd1a01e1ba5f0175350764125689e74f61c9d09c542c00bdbfd09910c"
                ]
            }
        },
        "1.27.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:e89b5df276dfb980c71a91a02116763065ebb3366cea5946a18327d213bfdc1d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "28836b3bb42481fbe1e62ef38daf16060a3804eaff934da369b6c0f7671965ef",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e89b5df276dfb980c71a91a02116763065ebb3366cea5946a18327d213bfdc1d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-07-23T18:39:30.859076686Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-07-06T21:57:02.473534341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:47805a69cb7dd669e357d291ce27735c2d514348468b2d3e69c66161a4f80abd in / "
                },
                {
                    "created": "2020-07-06T21:57:03.362224266Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-07-06T21:57:04.175451628Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-06T21:57:04.951299484Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-06T21:57:05.128361365Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:36:08.951059749Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:36:09.314980889Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:39:19.025750224Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-07-23T18:39:28.242643115Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:39:29.210639911Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-07-23T18:39:30.859076686Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d908d9ad6713f19a130dee71aec5eba8e35c8ea1227015218d1d47178a55537b",
                    "sha256:631dfaad8559536b638e27a1577e63c11d94a97adef787fb8d189f690410f1e9",
                    "sha256:968d3b985bf4e525952ac19ddbabb0d727184e6e17e932b5abf87f43eb35be42",
                    "sha256:377c01c3f4e3503080d4b41ecae617af38176559012bb52486e5298cb8530a9f",
                    "sha256:0164d88cff755b0234a47856a36c6bbce4f6f513a9de632866e32d267160adcc",
                    "sha256:84b51e00dcb6892f76af09a89720c97347365ca72a46b6cd3e7dbd49f992cb8d"
                ]
            }
        },
        "1.28.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:6035c4d2913aebc2dd193cb4712f4eddde6d84375fb2904b43ad6b9dc0be7c6a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "95c913bdec0d3e5fc43db40fb1777ff6d7c5961509d3512f1d973b7f37337275",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6035c4d2913aebc2dd193cb4712f4eddde6d84375fb2904b43ad6b9dc0be7c6a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-08-11T17:54:36.338743273Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-07-24T14:39:06.238721928Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:513ae777bc4042f8446c0454f8cffc9a94f8429de963651d9a6dab95d4502007 in / "
                },
                {
                    "created": "2020-07-24T14:39:07.148025918Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-07-24T14:39:07.955564287Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-07-24T14:39:08.75363425Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-07-24T14:39:08.926693011Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:51:33.450370343Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:51:34.306484199Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:54:24.907151327Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-08-11T17:54:33.950353162Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:54:34.903059541Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-08-11T17:54:36.338743273Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:270e75e92418300ce45512eedf38049008e4f6e7c6f68e5ad62219d4c3acace2",
                    "sha256:8980490753a87f31fcf22a1e2204ba43c90eeb5a28d1bbc318b7468fa9753787",
                    "sha256:24cd7a0a307882d06cb0da9eac21a4ce0356a345e3d42d1e6a7352104884203f",
                    "sha256:22144637480e420480b7a169d149195fcec46b84073ad54e6a2aa41428a5b15c",
                    "sha256:22f514ac5f27a93903901bb19e4ab898bb622df34bea4b9a0ed761526ccc9603",
                    "sha256:6cce3f5af1aef2c6ccaa1bb69c380a52242fcb5eab43b54f0cf4bb2e502face9"
                ]
            }
        },
        "1.29.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:ec8d65af2c9c62c16e2ef439ead1c96287452443f79541f4cce98a8ecf95936f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "db1c8b51fba6ec0366da8bd39ddb1c8f45f2a43744ccb6c2bb5d8f2ecc63aafc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:ec8d65af2c9c62c16e2ef439ead1c96287452443f79541f4cce98a8ecf95936f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-18T16:13:42.801125968Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-16T22:22:41.973412452Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:22e6fa4e90b4c26ba962a4fe57e5784d8923885e6eb39435cb121c716c42f7ff in / "
                },
                {
                    "created": "2020-09-16T22:22:42.802972332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:22:43.606525939Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T22:22:44.318954266Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:22:44.487223495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T16:10:02.333528984Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T16:10:03.350059709Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T16:13:32.731284885Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-18T16:13:40.092776423Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T16:13:41.177898426Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-18T16:13:42.801125968Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7485cb8e24476c81cc9d102151ab103e8f0c9ac392aa0b012d904ff509c81f62",
                    "sha256:1785a10dd23856d649c57ca630f4fc36dd169a23a6475e35b35988ca9b272589",
                    "sha256:3a75fb064412419fdd311ab90323fd3b537d43c3d90581d1aa30da09932da21b",
                    "sha256:c5c475553a38dd3e805e6defe6598fdc4302085cae7144bad0e6070bc4fcd7d2",
                    "sha256:aba064e4d644ca868e39288c5aa91c67f2c66ae5fec49e876397acd91c22ef0f",
                    "sha256:40335a87dadd0f96e6140673c15a3fd4740a66d4f495e113ba5a07e63d165f92"
                ]
            }
        },
        "1.29.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:a0dcf361f64722bbb57b11b477a63022fed266273d6a4f95467baba2f8053be7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9da508504ec80fb1ba11609279f7648aee1160ae8f41f3a533b4d45d7af94f39",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a0dcf361f64722bbb57b11b477a63022fed266273d6a4f95467baba2f8053be7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-09-25T14:10:31.208724238Z",
            "docker_version": "19.03.12+azure",
            "history": [
                {
                    "created": "2020-09-16T22:22:41.973412452Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:22e6fa4e90b4c26ba962a4fe57e5784d8923885e6eb39435cb121c716c42f7ff in / "
                },
                {
                    "created": "2020-09-16T22:22:42.802972332Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-16T22:22:43.606525939Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-16T22:22:44.318954266Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-16T22:22:44.487223495Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:07:07.487251384Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:07:08.347874696Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:10:19.654062026Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-09-25T14:10:28.650553205Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:10:29.674579035Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-09-25T14:10:31.208724238Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7485cb8e24476c81cc9d102151ab103e8f0c9ac392aa0b012d904ff509c81f62",
                    "sha256:1785a10dd23856d649c57ca630f4fc36dd169a23a6475e35b35988ca9b272589",
                    "sha256:3a75fb064412419fdd311ab90323fd3b537d43c3d90581d1aa30da09932da21b",
                    "sha256:c5c475553a38dd3e805e6defe6598fdc4302085cae7144bad0e6070bc4fcd7d2",
                    "sha256:482de62b2ce6f9171f0217482f750b477b72549d4ae2b41e5de81b2aaa6c7624",
                    "sha256:480563a0eaf2bf9ce2c16e6a679abe83d158b4ea909033d8df84299d8a68a8ec"
                ]
            }
        },
        "1.30.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:5ccd5933bff762eddbe7499a44211c2d73573afb7c35e6be530607084802da4f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "f4d2f00e8c3f509e96f6859fdcf4c1d4b0c5333ebec44b9f157344e1ed3557b7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5ccd5933bff762eddbe7499a44211c2d73573afb7c35e6be530607084802da4f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-10-19T14:38:15.763665695Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-09-25T22:36:27.247856974Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:23a55d7e93b396e490b6d0893137e5c13e3e0a234e0feaea8b1cfd4079fb1882 in / "
                },
                {
                    "created": "2020-09-25T22:36:28.190239415Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-09-25T22:36:28.968355623Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-09-25T22:36:29.743958516Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-09-25T22:36:29.909909857Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:34:41.991526401Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:34:42.347918945Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:38:05.712113696Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-10-19T14:38:13.167300257Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:38:14.203886041Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-10-19T14:38:15.763665695Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f577d0e0bf7011714547f1ea1e3536cad7d8575a4a6357fae65b7e8a42914889",
                    "sha256:06859de2f3e3d883d9084ce20cc5fa30f2922cd747a092450d4dc8cb6de3f757",
                    "sha256:c4d7b15878d053813c138d72c06f0935000d7606e289de34929449258ef8efe4",
                    "sha256:e27729ee6e59f1aa0d0ad3a9740842630347cd51e1555306af7d85eef746d921",
                    "sha256:087755c078c6db3225458fe586c0e9da1b191fbaf851dff184b9505bfc758b94",
                    "sha256:3dde7bc6e0e4fe8a5f74127207ee761d099f8f5acf3fbf8a14608859e9548778"
                ]
            }
        },
        "1.31.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:da5c7e259a1aab21ce32581294612851a8aafdb669beb8dbaa0b7540d6ba5b9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "bde4e80330723e59d5803437238e7865d02b95eabb2b0ef29efa807c34af5604",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:da5c7e259a1aab21ce32581294612851a8aafdb669beb8dbaa0b7540d6ba5b9b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2020-11-12T15:36:53.136562953Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-10-23T17:33:08.164603767Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c1f3147c7b6710af5affd417ff822ee28df872d716003858d3d2e23d2277c981 in / "
                },
                {
                    "created": "2020-10-23T17:33:09.034952425Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-10-23T17:33:09.815143393Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-10-23T17:33:10.583461033Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-10-23T17:33:10.739469082Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:33:30.374181189Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:33:31.346198479Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:36:41.777647581Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.tar.gz        && tar -xzf cmake-3.16.4-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-3.12/Help        && cp -fR cmake-3.16.4-Linux-x86_64/* /usr        && rm -rf cmake-3.16.4-Linux-x86_64        && rm cmake-3.16.4-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2020-11-12T15:36:50.709520535Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:36:51.69762208Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2020-11-12T15:36:53.136562953Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:61727f5e6796a2d90ed9d0dc385a3c1a3b6ded69a5bc4709542a4f47e877ba03",
                    "sha256:eff16de3ff6467c1bc2afd0bae39c7ee86725e42f6a3cfb691c7688767c89ed9",
                    "sha256:62fdddf6a67c88f7d7f9f19c0ebd6651be77b93ce6d99ca67018df7714e775e3",
                    "sha256:9edaa71ce2334d676da80820de71477b34b1e04078dfe0c2ca735f5d951a4c70",
                    "sha256:6c52128948c438fdef9ea309e6fd752d99adff41b9d064d147dc9c9fa94986ec",
                    "sha256:74f7364afc6d8edf8fbdabd628334f2e7a8f7a5c68025799d5e76a7737c1de50"
                ]
            }
        },
        "1.32.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:a1a50392ad38441075b6102a12bf36febf67a9d02871dd9475f262ad770a9c8d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7fae53a0513e38d71205f79769770c53ebea3110c641c4e8284d455630a23d29",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:a1a50392ad38441075b6102a12bf36febf67a9d02871dd9475f262ad770a9c8d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-04T16:51:26.685351805Z",
            "docker_version": "19.03.13+azure",
            "history": [
                {
                    "created": "2020-11-25T22:26:11.152245057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8eef54430e581236e6d529a7d09df648f43c840e889d9ae132e5ed25d7bd2b88 in / "
                },
                {
                    "created": "2020-11-25T22:26:12.243684794Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:26:13.279253088Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-25T22:26:14.26660865Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:26:14.463543028Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:47:41.033526107Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:47:41.41149005Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:51:16.133874513Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-04T16:51:24.072104513Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:51:25.128428272Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-04T16:51:26.685351805Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:da2785b7bb163ff867008430c06b6c02d3ffc16fcee57ef38822861af85989ea",
                    "sha256:bbc674332e2e42ff92e896664df969c201a969b9ec096c5905aa725148d1c4f5",
                    "sha256:5b7dc8292d9bd9c2bec6b0ec05259f697171360b8b52fe9d61aaa42226d911b2",
                    "sha256:1a1a19626b20bd2320ad590b025f8ced47bab9d667bc256e378ff6df3674e2c4",
                    "sha256:baef6ffe0d19fcbea8aff0e4e575e7b0f4a4c4ad662e874e447a60cc124fea01",
                    "sha256:da01bb11051797a03fed3d3471bef32443901ea30c17d1da6f2bc3eb27d48eaf"
                ]
            }
        },
        "1.33.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:298b6da393f597a602630fdf44aca2e04b6b0348e92457cb75ca8ebd695e179b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1623081c7aff1feeeacc9212bd5596a31f3ebb28927ce394440c2b64dd16c71e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:298b6da393f597a602630fdf44aca2e04b6b0348e92457cb75ca8ebd695e179b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-01-20T12:57:44.047878485Z",
            "docker_version": "19.03.14+azure",
            "history": [
                {
                    "created": "2020-11-25T22:26:11.152245057Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:8eef54430e581236e6d529a7d09df648f43c840e889d9ae132e5ed25d7bd2b88 in / "
                },
                {
                    "created": "2020-11-25T22:26:12.243684794Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2020-11-25T22:26:13.279253088Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2020-11-25T22:26:14.26660865Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2020-11-25T22:26:14.463543028Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:54:06.563522827Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:54:07.341533777Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:57:32.07133902Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-01-20T12:57:41.543637853Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:57:42.549598557Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-01-20T12:57:44.047878485Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:da2785b7bb163ff867008430c06b6c02d3ffc16fcee57ef38822861af85989ea",
                    "sha256:bbc674332e2e42ff92e896664df969c201a969b9ec096c5905aa725148d1c4f5",
                    "sha256:5b7dc8292d9bd9c2bec6b0ec05259f697171360b8b52fe9d61aaa42226d911b2",
                    "sha256:1a1a19626b20bd2320ad590b025f8ced47bab9d667bc256e378ff6df3674e2c4",
                    "sha256:839ac468d1ff9dae1df6b6fe14419bb043ff3eb18a63b415914a439f2e78967a",
                    "sha256:ea5151325564af57dee63cbcf0a3f8119d05882246774ebc8f24698ef1a18f82"
                ]
            }
        },
        "1.33.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:fb7c7bb94493e9b37a085d71c4dff1e2cf63879e6719b9ccdce6b3b1508706f7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5265d90c79c51991131c850d4bd8cf388bd083b6fa2e1dc30b1b2616815048c1",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:fb7c7bb94493e9b37a085d71c4dff1e2cf63879e6719b9ccdce6b3b1508706f7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-02-17T18:11:09.826176167Z",
            "docker_version": "20.10.2+azure",
            "history": [
                {
                    "created": "2021-01-21T03:39:31.766807597Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:925571658dd8453e5c80d862f5791d6b26b3c2a8688937b11741f2f2c5cdbfd7 in / "
                },
                {
                    "created": "2021-01-21T03:39:32.940864478Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:39:34.413832583Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-21T03:39:35.94148924Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:39:36.244596743Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T18:07:25.446583337Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T18:07:26.370204144Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T18:10:57.548319182Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-02-17T18:11:07.159109633Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T18:11:08.241640267Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-02-17T18:11:09.826176167Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:935c56d8b3f96d6587f3640e491767688b790c458a01fef327188abcbbafdc9a",
                    "sha256:697949baa6589708187ff25708ee6c7cf2c6657399552a019598b1da7f617acf",
                    "sha256:e6feec0db89a854a83e704823cdd269ad82625cb57ecc06b4ede6095948f66db",
                    "sha256:5276d2b930fc59425e6cf44315e0ca0de5948865d615de79e34d5ff9bf3a9b96",
                    "sha256:4a15aeefa24d6575ea0ecc6db66227ce41269f651f1d061278203a6198eba72e",
                    "sha256:207886449b1c95b72b0f99438f62bb2bff33a77af48f9a201eaa3946fca88a78"
                ]
            }
        },
        "1.34.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:206e67f31c86368fec5b63e06255564b2d0f578b6c2660b6d582ad7f909aec41",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8cbf43738459ccae8b04e598e6c41e5d341cfe59b4e6657f7024e2b8beac3c27",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:206e67f31c86368fec5b63e06255564b2d0f578b6c2660b6d582ad7f909aec41",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-03-02T18:06:04.679287972Z",
            "docker_version": "20.10.3+azure",
            "history": [
                {
                    "created": "2021-01-21T03:39:31.766807597Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:925571658dd8453e5c80d862f5791d6b26b3c2a8688937b11741f2f2c5cdbfd7 in / "
                },
                {
                    "created": "2021-01-21T03:39:32.940864478Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-01-21T03:39:34.413832583Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-01-21T03:39:35.94148924Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-01-21T03:39:36.244596743Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:26.122091128Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:02:26.486880857Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:05:52.495174819Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-03-02T18:06:02.054963215Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:06:03.131290687Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-03-02T18:06:04.679287972Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:935c56d8b3f96d6587f3640e491767688b790c458a01fef327188abcbbafdc9a",
                    "sha256:697949baa6589708187ff25708ee6c7cf2c6657399552a019598b1da7f617acf",
                    "sha256:e6feec0db89a854a83e704823cdd269ad82625cb57ecc06b4ede6095948f66db",
                    "sha256:5276d2b930fc59425e6cf44315e0ca0de5948865d615de79e34d5ff9bf3a9b96",
                    "sha256:281439a15e3a1a3a2e650e90733e798a8cd0669165c50011d45526acefbc690e",
                    "sha256:132b8fae210b4157f45378bf81e7a82fe09c269bf0eb3ecc5cada9bb1e6a9925"
                ]
            }
        },
        "1.35.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:8d51006acf8f23b6f2f6b84812cc69fb3dd353ab757921b264b56f569e1aeba7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "81fc0517946923dfb7f9a35a1475bf6c0259b4706a6953a908698007a170afd6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8d51006acf8f23b6f2f6b84812cc69fb3dd353ab757921b264b56f569e1aeba7",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-04-15T16:01:37.751306455Z",
            "docker_version": "20.10.5+azure",
            "history": [
                {
                    "created": "2021-03-25T22:33:52.163561628Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:925571658dd8453e5c80d862f5791d6b26b3c2a8688937b11741f2f2c5cdbfd7 in / "
                },
                {
                    "created": "2021-03-25T22:33:53.308246479Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-03-25T22:33:54.285001153Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-03-25T22:33:55.207583169Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-03-25T22:33:55.391277586Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:57:55.45815309Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T15:57:55.774162343Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:01:31.515595909Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-04-15T16:01:35.454598331Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:01:36.382769772Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-04-15T16:01:37.751306455Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:935c56d8b3f96d6587f3640e491767688b790c458a01fef327188abcbbafdc9a",
                    "sha256:46e1f2649e2a60340daff1f3b88e9e102965e80141d32320b64985ad08b4b5ba",
                    "sha256:511cdf594715e62fdbef5a60b71e2dfeaf6895f8e8e42666374b3b1045ac357c",
                    "sha256:7b664579ad4c3bb1a95da6e6182a66d2e07731a174c7112b6578e65fc9d63663",
                    "sha256:5e60921046a2f177c2f17c208bd497542394cdd5b06baaf53f78cdbffbd77db0",
                    "sha256:aac204fcd11ec3d3b45c920f1a6944c5c2319b37f9b80a14475b7b9a164074fe"
                ]
            }
        },
        "1.35.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:bcdc4a11ee32f7d0d00e6ff28fead28d0caf4db16e52006b8e5bd1f84ff67b06",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e68e43c7b4f1a7cef4461082889bdc266bd899a5d5ea43e70076f9a5c219181e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.35.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bcdc4a11ee32f7d0d00e6ff28fead28d0caf4db16e52006b8e5bd1f84ff67b06",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T21:40:05.573884829Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:45:15.730477573Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5dd161b04353d3cbc2b258d66ef3c79a8307faa944953a1c7920a3d97468520c in / "
                },
                {
                    "created": "2021-05-19T19:45:16.989994827Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:17.919469565Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-19T19:45:18.871349441Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:19.046996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:39.277261553Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:39.656889372Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:36:40.361675752Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:01.399787327Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T21:40:02.878157655Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:03.94024777Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T21:40:05.573884829Z",
                    "created_by": "|1 CONAN_VERSION=1.35.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe04650404a9c6b7d2212bb2d08564e808e9eda46cd145555373e0d12ea61eb",
                    "sha256:1902cf049561556f6ddfe18ea6ea10bd67766d4aebac0647899f23b62394a2c6",
                    "sha256:43d05a2c9517d3da32bacd5cab0cb9efef467eb9a931180096885adbac5969b2",
                    "sha256:cdc4d0cd3d15da31d461e7fbb83ea286014aa5edea7e2b889699452c02b3160b",
                    "sha256:2a0e0ef428aa7138a9486444ce07d743dfce405666d086bce944fc707173680c",
                    "sha256:5b1ace1f0f7d4a6de3274240fcbcd205cf8934c77a4dd8ea3e81f54d50fff2cc"
                ]
            }
        },
        "1.36.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:db1759130ab7014b94921cb6a9d89526c683e4f3033369fd828d7fa2efd06dde",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0b92a7c4070aa61bf7d39a3e5ef6d35021acdfeac2eef6ca1bcd8018f4994434",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.36.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:db1759130ab7014b94921cb6a9d89526c683e4f3033369fd828d7fa2efd06dde",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-05-24T20:46:10.864092109Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:45:15.730477573Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5dd161b04353d3cbc2b258d66ef3c79a8307faa944953a1c7920a3d97468520c in / "
                },
                {
                    "created": "2021-05-19T19:45:16.989994827Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:17.919469565Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-19T19:45:18.871349441Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:19.046996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:01.127165496Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:01.471460411Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:43:02.357846537Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:46:07.093178442Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-05-24T20:46:08.484441425Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:46:09.47415783Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-05-24T20:46:10.864092109Z",
                    "created_by": "|1 CONAN_VERSION=1.36.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe04650404a9c6b7d2212bb2d08564e808e9eda46cd145555373e0d12ea61eb",
                    "sha256:1902cf049561556f6ddfe18ea6ea10bd67766d4aebac0647899f23b62394a2c6",
                    "sha256:43d05a2c9517d3da32bacd5cab0cb9efef467eb9a931180096885adbac5969b2",
                    "sha256:cdc4d0cd3d15da31d461e7fbb83ea286014aa5edea7e2b889699452c02b3160b",
                    "sha256:c784c720eed11272f9fc4414439678f0018626f6b39525f17ab3ffd7740b38b1",
                    "sha256:181a086c7343393d03709bb0eea2d65a02eda9586864c8b5ee60c84364db4dbd"
                ]
            }
        },
        "1.37.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:9c5061697a3b44147e388c05abc3f9ab9caed64f065f4049673dd49ff6d22fec",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "b04fa7c322292e5c680c223ffeac121a58f6c9c22b2293bc2229c0782a230108",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9c5061697a3b44147e388c05abc3f9ab9caed64f065f4049673dd49ff6d22fec",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-01T18:59:32.124127331Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:45:15.730477573Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5dd161b04353d3cbc2b258d66ef3c79a8307faa944953a1c7920a3d97468520c in / "
                },
                {
                    "created": "2021-05-19T19:45:16.989994827Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:17.919469565Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-19T19:45:18.871349441Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:19.046996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:55:37.510848872Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:55:37.905049474Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:55:38.395000385Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:59:27.857940492Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-01T18:59:29.426256625Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:59:30.544797568Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-01T18:59:32.124127331Z",
                    "created_by": "|1 CONAN_VERSION=1.37.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe04650404a9c6b7d2212bb2d08564e808e9eda46cd145555373e0d12ea61eb",
                    "sha256:1902cf049561556f6ddfe18ea6ea10bd67766d4aebac0647899f23b62394a2c6",
                    "sha256:43d05a2c9517d3da32bacd5cab0cb9efef467eb9a931180096885adbac5969b2",
                    "sha256:cdc4d0cd3d15da31d461e7fbb83ea286014aa5edea7e2b889699452c02b3160b",
                    "sha256:88ffb9411208e05beaf50157a1d0c7439571bb3a208a4303815339813f077e60",
                    "sha256:13ebfea99f3e624b55308d872a6ac5644cd54982171a08dfed69a46578179848"
                ]
            }
        },
        "1.37.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:59577279302039dd7c236fe931b0fe9d1070ee45eff6b39677c475c274e87f0b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "526e61e913ef042732be3fdd642916a397fd5d9ad0472180a099b476f8fbf646",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:59577279302039dd7c236fe931b0fe9d1070ee45eff6b39677c475c274e87f0b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-06-08T12:54:17.39808355Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-05-19T19:45:15.730477573Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:5dd161b04353d3cbc2b258d66ef3c79a8307faa944953a1c7920a3d97468520c in / "
                },
                {
                    "created": "2021-05-19T19:45:16.989994827Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-05-19T19:45:17.919469565Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-05-19T19:45:18.871349441Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-05-19T19:45:19.046996Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:03.069278131Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:03.388490611Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:51:04.301399348Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:13.67366952Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && wget -q --no-check-certificate -O /usr/local/bin/jfrog https://api.bintray.com/content/jfrog/jfrog-cli-go/\\$latest/jfrog-cli-linux-amd64/jfrog?bt_package=jfrog-cli-linux-amd64        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-06-08T12:54:14.877283374Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:15.890438108Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-06-08T12:54:17.39808355Z",
                    "created_by": "|1 CONAN_VERSION=1.37.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9fe04650404a9c6b7d2212bb2d08564e808e9eda46cd145555373e0d12ea61eb",
                    "sha256:1902cf049561556f6ddfe18ea6ea10bd67766d4aebac0647899f23b62394a2c6",
                    "sha256:43d05a2c9517d3da32bacd5cab0cb9efef467eb9a931180096885adbac5969b2",
                    "sha256:cdc4d0cd3d15da31d461e7fbb83ea286014aa5edea7e2b889699452c02b3160b",
                    "sha256:2256683ec08b0473e584457ba81a18df169a09f562fb10a74aa79bc7fcce23a9",
                    "sha256:2e4ec3b0997743ed7bf2f3352ee4408f2100c83de8609c0cd59940de9b366303"
                ]
            }
        },
        "1.37.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:41aee389e456b13e10348d115bc9be258c4a3ede7f287934baac4360ad4d934e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4f02777a68c90bd4fb7d90762f4aa3722c6878b60505192bc4e3c7769ff8eaf6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.37.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:41aee389e456b13e10348d115bc9be258c4a3ede7f287934baac4360ad4d934e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T19:28:12.233767794Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-17T23:32:06.473629926Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd75f16753c9c921fd05b1d0ed5b425d74d87405a76a0b3afcbf9723a50d1ce in / "
                },
                {
                    "created": "2021-06-17T23:32:07.796286055Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-06-17T23:32:08.760627721Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-06-17T23:32:09.722073932Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-06-17T23:32:09.91024228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:24.691318582Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:25.379326471Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:24:26.397174887Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:28:07.778182422Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T19:28:09.375868406Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:28:10.55407183Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T19:28:12.233767794Z",
                    "created_by": "|1 CONAN_VERSION=1.37.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:48ed8163532b6438a7c64d0740d0b1902683c146bc0895a0a12eb3317d278dde",
                    "sha256:04d694391e96c105b671692a9135fa5e61a5498a5c55b07df0dd4ae8186fe776",
                    "sha256:2788d2f5dd8f8427ca7fa6124ca8fdf034ba358e0db75d533f448e0292966a5b",
                    "sha256:d07b1c131bb82990f51d073a52ef1f71fa8cbbbee611afc4edaa4b2700c9e716",
                    "sha256:db347f8a573a759ab9c43f04dce2a867011181b1f67f04e20efb126a7ad42a95",
                    "sha256:75e5e6ced733c8c6b8a286084132798c7dfba675021fd222d2ae5417c1996eb1"
                ]
            }
        },
        "1.38.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:795aad5c81bbc8c0b4b06ac4d94dfc89a343e7c828c6131900b9300d83e82af1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "8696380898c858a81c7a936782947e28e7425b8196c911e55444bd5e33ef1aeb",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.38.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:795aad5c81bbc8c0b4b06ac4d94dfc89a343e7c828c6131900b9300d83e82af1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-07-07T20:53:07.669829531Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-06-17T23:32:06.473629926Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd75f16753c9c921fd05b1d0ed5b425d74d87405a76a0b3afcbf9723a50d1ce in / "
                },
                {
                    "created": "2021-06-17T23:32:07.796286055Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-06-17T23:32:08.760627721Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-06-17T23:32:09.722073932Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-06-17T23:32:09.91024228Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:56.35568446Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:57.372239167Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:49:58.357552947Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:53:03.824045333Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-07-07T20:53:05.217855314Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:53:06.192879443Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-07-07T20:53:07.669829531Z",
                    "created_by": "|1 CONAN_VERSION=1.38.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:48ed8163532b6438a7c64d0740d0b1902683c146bc0895a0a12eb3317d278dde",
                    "sha256:04d694391e96c105b671692a9135fa5e61a5498a5c55b07df0dd4ae8186fe776",
                    "sha256:2788d2f5dd8f8427ca7fa6124ca8fdf034ba358e0db75d533f448e0292966a5b",
                    "sha256:d07b1c131bb82990f51d073a52ef1f71fa8cbbbee611afc4edaa4b2700c9e716",
                    "sha256:5cd9635256fb6321ba0ba36ea13f045e4aa1fa42b084c7f8d22b3b804719d831",
                    "sha256:6dd90971980dd95a4198bdac5d9761a6bbe3ce53a21a70938d72ff9b69ffbe53"
                ]
            }
        },
        "1.39.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:130e6c357a1f61dad0e5b216e659a4e9db251dde5e2b27661daaf6633e08d82e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5ae0f8b4889db1aa623453e170e1bf7cd5caa7dc8c380e382e65ffa92a99dd0d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.39.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:130e6c357a1f61dad0e5b216e659a4e9db251dde5e2b27661daaf6633e08d82e",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-08-04T08:02:29.031691223Z",
            "docker_version": "20.10.6+azure",
            "history": [
                {
                    "created": "2021-07-26T21:22:15.275101746Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a94a87e268e99c78143fae5148bd1200bf0da90c0e7f42bd8c168bb205ccb105 in / "
                },
                {
                    "created": "2021-07-26T21:22:16.371388995Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-07-26T21:22:17.160255505Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-07-26T21:22:17.919045845Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-07-26T21:22:18.115844483Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:10.312116141Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:11.340429085Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T07:59:12.347134284Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:25.353632915Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-08-04T08:02:26.658602118Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:27.619443269Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-08-04T08:02:29.031691223Z",
                    "created_by": "|1 CONAN_VERSION=1.39.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:91cba8fa7129b5a8643b17097c4916de4276f2950a476cb346a0e021c551124a",
                    "sha256:c0eeb6e15fd7a6e5936f530b5feb56203d271673d230dd964542d909f966d07f",
                    "sha256:d35aa7fd29b61a85c88cbd5259805c078a8b3e1898bf55b56dfa891a978f093c",
                    "sha256:b0c360818224532c4be037d55751a1eb73f51889f3e00a882c90830c428e9f57",
                    "sha256:a48660159c01190299d4d2ab1df5fb07ca09a0cf2ee35d9aa90919f71bed11f2",
                    "sha256:a9786c8bfde26b1f91dcc86765d9b4e1a7f5f7060d09c9e8fa88193e420a7868"
                ]
            }
        },
        "1.40.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:960242de24574d4f5f75ee896dd452f4981c48085b9c778143f76dd29fc2a671",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "74983b9b00fcddbebc9fa178338b3b797dbc23665757b7ba525b537cbd9d00d6",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:960242de24574d4f5f75ee896dd452f4981c48085b9c778143f76dd29fc2a671",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-09T20:53:41.147613899Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:37.046564263Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:37.277639768Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:50:38.217377091Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:53:37.797902563Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-09T20:53:39.012250184Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:53:39.802348981Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-09T20:53:41.147613899Z",
                    "created_by": "|1 CONAN_VERSION=1.40.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:f611e979baea27c4a794f2997e6132bcd6836549ed59c092a5788c1b8eef4f23",
                    "sha256:8d72d5c8f5039712f7f2d1f865bcc65252a27a94ff9206f9457253354d5507e5"
                ]
            }
        },
        "1.40.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:3d89930cccc490019a4064a3c91a4b7a2471b2342529aec14b55fdaf69fdadd9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "957a122789badf38f11a0a06b457a72e9294e7b28339b02a8162056520d674d7",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:3d89930cccc490019a4064a3c91a4b7a2471b2342529aec14b55fdaf69fdadd9",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-28T12:20:34.79302857Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:17:03.874261244Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:17:04.126516268Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:17:04.381717046Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:20:31.264915426Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-28T12:20:32.572173198Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:20:33.488171681Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-28T12:20:34.79302857Z",
                    "created_by": "|1 CONAN_VERSION=1.40.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:a2058116350e2fc011be7737926e851effb5430bd4fa5752d394252833798889",
                    "sha256:85eb2673d38189b8b3432bdf9d2c942540e74205f3fed6b7a425693a804d0830"
                ]
            }
        },
        "1.40.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:371f55c07571e9e2a0f306cd32810060513bf6dc7bd3bd4a18b8c4ef39d5ae3a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6eddabb0acc8dc051d663a3d14de9e730bef1427d754e88cf2936afd27836e44",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:371f55c07571e9e2a0f306cd32810060513bf6dc7bd3bd4a18b8c4ef39d5ae3a",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-09-29T17:30:31.157572636Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:27:11.357836895Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:27:12.20201896Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:27:13.195960874Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:30:27.892028235Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-09-29T17:30:29.063457384Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:30:29.850663041Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-09-29T17:30:31.157572636Z",
                    "created_by": "|1 CONAN_VERSION=1.40.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c1c13e7380a6ad3ffffc9e5f9518ed4dbb43c9c94c63c8f1fbe9bb841825146c",
                    "sha256:5162fe1f6decd2c2730d919c71ac139f982f6cd59274952fe5d0c27a61667bac"
                ]
            }
        },
        "1.40.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:374b3560f4930fa1890b18ab82bf0c0e7b48a6483394c672c2df3e8151a43b3b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "24808f0faec4036a041defc7f9165baba79a44a5d08686f8774d6b95233fe3a4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:374b3560f4930fa1890b18ab82bf0c0e7b48a6483394c672c2df3e8151a43b3b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-07T19:50:10.648471216Z",
            "docker_version": "20.10.8+azure",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:31.773295839Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:32.076088746Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:46:32.367298146Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:06.439968378Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-07T19:50:07.78786125Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:08.819350658Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-07T19:50:10.648471216Z",
                    "created_by": "|1 CONAN_VERSION=1.40.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c8be3ed0bd7fd3584decdfbaec4d660cf2f3b94a0e02032b9aaa14ce93d0b5d0",
                    "sha256:ba9d4efe053fbcd083026ebdbed920a8637b5a4bc7d1a97bb9287f07482b7607"
                ]
            }
        },
        "1.40.4": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:5e207245fa6321bf3a6755ffbab3ce128bdcda18b034523453663204243ee8a3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "734e8dd891a447aeda0c36f80b618da33c869e86e1b7359ffcda49de4e95ddd0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.40.4",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5e207245fa6321bf3a6755ffbab3ce128bdcda18b034523453663204243ee8a3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-10-19T13:48:10.335551622Z",
            "docker_version": "20.10.9+azure-1",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:44:28.611932187Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:44:28.888391571Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:44:29.286894257Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:48:05.91463331Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-10-19T13:48:07.367357427Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:48:08.362271148Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-10-19T13:48:10.335551622Z",
                    "created_by": "|1 CONAN_VERSION=1.40.4 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:b89618a3aed8979dde3eb3ef7e72e89deea4a73d2bf6ec10ff2eaadc1c14347d",
                    "sha256:34169750e01af3a3bdc59cb416a08bb481b2e75cd834e48d6ebe15564ae84488"
                ]
            }
        },
        "1.41.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b8f3416c7128c701ec404558ef48d42f2e6a7f1817424e888f2a354b79c55ceb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "9cfd4c4ebf0c6d5f5c44d0d0db65ef6868f36c4921ca86771ae1d5ab1cf51bf3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.41.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b8f3416c7128c701ec404558ef48d42f2e6a7f1817424e888f2a354b79c55ceb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T17:38:36.633573874Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:35:29.938504523Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:35:30.217249505Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:35:31.221820033Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:38:32.877950099Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T17:38:34.043374844Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:38:34.817254864Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T17:38:36.633573874Z",
                    "created_by": "|1 CONAN_VERSION=1.41.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:5b17df206e8e361c7c7bcd9897b35acdc6cce01bf595cadd8f12d94b43e5e5f5",
                    "sha256:9a31364fe87866f839a113677de021c890f67828ff94b5efc79e25b785f276e6"
                ]
            }
        },
        "1.42.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:55e4dac5f730a7014686a238888b2129d243d15daeab14b3dd41419508fb5edd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ea7624c05f66a0f05ba3cb72c172190b1c5d1d1d615792a17cd7cdabc68c6ed2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:55e4dac5f730a7014686a238888b2129d243d15daeab14b3dd41419508fb5edd",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-03T18:12:59.12505358Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:09:55.722334432Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:09:55.946057604Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:09:56.212467748Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:55.495355008Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-03T18:12:56.68128732Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:57.481233739Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-03T18:12:59.12505358Z",
                    "created_by": "|1 CONAN_VERSION=1.42.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c6d258a01bf8caceefa7750ead52aa88d0386cb5ead2716987944533df8ee4c0",
                    "sha256:ab2bc2e7bc4d8a49a1e5ab003a610dc201b760f931674330bd3ecf0bc9df5e92"
                ]
            }
        },
        "1.42.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:5b96ee1c1509a161e67d0e301b121eb7cfdd8404073ba8fe7472e8d6e5590889",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "e078d78e2859f6bfd906ebbe2ceaab1d3b85dff6ceb0547e713cb3e9304136e4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5b96ee1c1509a161e67d0e301b121eb7cfdd8404073ba8fe7472e8d6e5590889",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-08T21:34:18.687098982Z",
            "docker_version": "20.10.10+azure-1",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:08.043089578Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:08.274427747Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:31:09.229286842Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:34:14.895845264Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-08T21:34:16.114157979Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:34:16.940659165Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-08T21:34:18.687098982Z",
                    "created_by": "|1 CONAN_VERSION=1.42.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:7e44734e0062d1364ebf7d6b567f89194b2796d4b7e491e169a897ded2a4ee64",
                    "sha256:fe0a99fb8c5dc4e69f30bad0a84e6d233baa761aa44fcf028f8d1f1267edaffe"
                ]
            }
        },
        "1.42.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:5a4929042a76236fc4a68cb7288fcfcd98395d5b9db92848be1c52d43f118337",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6909f2addb42b4039eff8941322eb9fd6db2af5c0dcae591b8227394ff148b3a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.42.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:5a4929042a76236fc4a68cb7288fcfcd98395d5b9db92848be1c52d43f118337",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-11-30T17:58:57.326459788Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:55:28.183949781Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:55:28.462348225Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:55:29.27263218Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:58:53.560412525Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-11-30T17:58:54.949849863Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:58:55.949068813Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-11-30T17:58:57.326459788Z",
                    "created_by": "|1 CONAN_VERSION=1.42.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:e903860493d6041d36c6ec9d78201036bd44b62824ab6d7e297b060a05ed3a71",
                    "sha256:e1acbbcfd02ea09a5416dff572a98136925320c22c3a8e88504a15db7a54e43d"
                ]
            }
        },
        "1.43.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:e9b0bf71327b70005ddf8cf68e904b1df4a59f87a818ce45e09d56699a518433",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "ef5f043a8f99ab5ec8d4349861c16c7733b148cd81b08b0147be658a894d8b2c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e9b0bf71327b70005ddf8cf68e904b1df4a59f87a818ce45e09d56699a518433",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-06T09:25:40.390331206Z",
            "docker_version": "20.10.11+azure-1",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:21:38.363880773Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:21:38.672449325Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:21:39.331264669Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:25:36.190974351Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-06T09:25:37.717729638Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:25:38.796875512Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-06T09:25:40.390331206Z",
                    "created_by": "|1 CONAN_VERSION=1.43.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:4675bf6135f0d04381b0fbb20ac5a3ddaf3ea097642eb9107fae6335420db976",
                    "sha256:315e56ae26c567555e74e738d12fdb4019cdb3ee1483b44f40cf3e3acad4bd09"
                ]
            }
        },
        "1.43.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:40100bc8db44df5089142765ad0cd733add9e58ca0e91d695b204863b3c6b868",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a3bbadc038ed878e0b281b76d86fc5ccf7b7997fa539f3993bf0e574b5d1bf7e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:40100bc8db44df5089142765ad0cd733add9e58ca0e91d695b204863b3c6b868",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2021-12-30T12:32:00.148605871Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:46.893118771Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:47.129352064Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:28:47.366632065Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:31:56.927761567Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo=1.*        build-essential=12.*        wget=1.*        git=1:2.*        libc6-dev-i386=2.*        g++-multilib=4:5.*        libgmp-dev=2:6.*        libmpfr-dev=3.*        libmpc-dev=1.*        libc6-dev=2.*        nasm=2.*        dh-autoreconf=11        ninja-build=1.*         libffi-dev=3.*        libssl-dev=1.*        pkg-config=0.*        subversion=1.*        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2021-12-30T12:31:58.13636663Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:31:58.932250796Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2021-12-30T12:32:00.148605871Z",
                    "created_by": "|1 CONAN_VERSION=1.43.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:e2564b2f2689165209a19b7eac2195afdaaac151f06a98fbca23b4041cd9235c",
                    "sha256:ccb28be1205a55017f279e0f7e5188b77e686dc1942f087e2b26d1d0fc27b280"
                ]
            }
        },
        "1.43.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:6ae42f9cbeede7117568bfd2476ee423f4ea4fee4c82c19850bb6b4ab806501f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0f1f9920968ee4abee5afcf559ab9245a357e958829f0af668e9fe114a7ccf2a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.43.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6ae42f9cbeede7117568bfd2476ee423f4ea4fee4c82c19850bb6b4ab806501f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-01-28T10:36:47.363472438Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:33:38.898460304Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:33:39.241198872Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:33:40.245317525Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:43.973285425Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-01-28T10:36:45.230660107Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:46.106836235Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-01-28T10:36:47.363472438Z",
                    "created_by": "|1 CONAN_VERSION=1.43.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:da58179cbaa32ed30366830b819034a97e798b228fd9674cf5ef0874bf44d962",
                    "sha256:eeb2c92f1eff9d881d748ed88ccfed302a170b00d64ec94a49aea6d7252840eb"
                ]
            }
        },
        "1.44.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:34a06196c6293af2d0602ca8f0d7cdffc9a802c569fee7ba5915a419a03c14e1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7352634d5fe67d99fc0e8c02864d89b42e875e5f9aa813b94bcecc9560927c5f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:34a06196c6293af2d0602ca8f0d7cdffc9a802c569fee7ba5915a419a03c14e1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-02-01T11:10:15.409814019Z",
            "docker_version": "20.10.11+azure-3",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:26.880142518Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:27.266851554Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:06:28.270433852Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:10:11.547684738Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-02-01T11:10:13.045664068Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:10:14.032903981Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-01T11:10:15.409814019Z",
                    "created_by": "|1 CONAN_VERSION=1.44.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c0e5e494a66ac488f5cf95a2cf5d0ddcbe2ebb7971a8143d47eb45ab901732e4",
                    "sha256:c3556620838420d0c5c2040d2c5fc8592d17bdc01897b65b5c5604f1ffbefc4e"
                ]
            }
        },
        "1.44.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:bce9345499aaa0b4b5bb783dd95cdd8e3932124adc4f67e813a2b2f9a75c69c3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "96fa89210f6a5043533bdb0078077fd8817c164edd191289a8faeb6367b7d4b0",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.44.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bce9345499aaa0b4b5bb783dd95cdd8e3932124adc4f67e813a2b2f9a75c69c3",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-18T15:17:40.173298465Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:17:32.79360318Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-18T15:17:39.23779614Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:17:39.353035066Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-18T15:17:40.173298465Z",
                    "created_by": "|1 CONAN_VERSION=1.44.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:cc82175340468f548e0973fa000c47a65851715f10ffdd9f5bc3c2695a8df2f8",
                    "sha256:70a9d792f53b5f0cc72ec37bbe38dcc97205394b867ae6419a39f4ca67b9f4ed"
                ]
            }
        },
        "1.45.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:0fae05c1667fe44229998f2aa567c94116d662a6d4556f1583ea0d676ea82775",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1d63a193d6f0ec3c77dfb5af5978ab603b0760eb774b1536374ad103b451b929",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.45.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:0fae05c1667fe44229998f2aa567c94116d662a6d4556f1583ea0d676ea82775",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T15:54:30.473938127Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:54:23.299775414Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T15:54:29.573170776Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:54:29.685541454Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T15:54:30.473938127Z",
                    "created_by": "|1 CONAN_VERSION=1.45.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:45a4c8638828f1a43385298314ed5408b0194726ab22c915cba3b33ebe9bdec6",
                    "sha256:0cb6d268f1b41232bbc01f15a136bdb80efdaeddbb2c23fdbb772857279aafc0"
                ]
            }
        },
        "1.46.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b846584a527db84d6de235e4cdfbeca76279f39b03a4a261b16d14ff08233480",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dbb1de29de38184caaa29b939c9e6ad5192e9ace69fba4dfaa9b178b490b15b3",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b846584a527db84d6de235e4cdfbeca76279f39b03a4a261b16d14ff08233480",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T16:29:43.358703915Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:29:35.974769479Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T16:29:42.383471558Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:29:42.506675375Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T16:29:43.358703915Z",
                    "created_by": "|1 CONAN_VERSION=1.46.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:4d96e56e39dc096de18b41fff48d8bfd7af80ffdd5dbd7e0df1a6d92570a62b6",
                    "sha256:a9601a3e0b01250b9ab1fdb357635ec40e777814197ad5724bf141719ee49462"
                ]
            }
        },
        "1.46.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:184d242e22c500c07eb66d700a4bdc98c28ffb41e9603daaa8fc5a8387b49fc2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "74c2acef60dcedb9d45d7900e6cdb67eecb8621e224208daec349a3d0ca29733",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:184d242e22c500c07eb66d700a4bdc98c28ffb41e9603daaa8fc5a8387b49fc2",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-03-31T17:05:04.000841032Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:04:56.697112669Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.5        && pyenv global 3.7.5        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.5/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-03-31T17:05:02.918461269Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:05:03.096088955Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-03-31T17:05:04.000841032Z",
                    "created_by": "|1 CONAN_VERSION=1.46.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:8709cd648e3d208a93e6e8b8f59f1b470b4c334bd06c7e1e3b8278552b2a380e",
                    "sha256:7a03bd8c1ea777d7dfb0e7144c0e2cb5018a107ae7fdcf14a9762c9113566c0c"
                ]
            }
        },
        "1.46.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:6a08da15ee81f8e69df7e86f9e318695f68dd472eafd4727ec76729649839d6b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "986eca34c7598a3e590c03e8e4fa26f90e6169e6cc36795cb3346c8141a6c9dc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.46.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6a08da15ee81f8e69df7e86f9e318695f68dd472eafd4727ec76729649839d6b",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-05-18T11:43:35.124178025Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:27.944228715Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2022-05-18T11:43:34.122211608Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:34.273576842Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-05-18T11:43:35.124178025Z",
                    "created_by": "|1 CONAN_VERSION=1.46.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c2c2a6e1ab44442e042887a9e3d3648a8717765a46e138b394051907aef62026",
                    "sha256:40e916b5e73e8b7d2fda87d5847f0c2052fee4269c1a271fa88e5e0d8be0abf8"
                ]
            }
        },
        "1.47.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:79ef8f641bb6e6c9c75c225f86af7461fea09f053ae1fc7d339d52dd4df69b7f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a109574cc91e8e4f6bf6ddc01dfbb1f17816114dcb5c9242a324649e8f75402c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.47.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:79ef8f641bb6e6c9c75c225f86af7461fea09f053ae1fc7d339d52dd4df69b7f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:03:53.541203653Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:03:45.990336553Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:03:52.581478799Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:03:52.706150478Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:03:53.541203653Z",
                    "created_by": "|1 CONAN_VERSION=1.47.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:2b6a1b3d43dc33684b93d6197367eff870babd52876f894656ec098b14b08644",
                    "sha256:0cf8f88d6e8f5f15a606b667250f65c7b280d57c23a9f7740adfb9c338c4a547"
                ]
            }
        },
        "1.48.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:e51093144d83d7d662e62774761e5d94397c8c34d6a1fc0fe909dfd24547bce5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "7e246da4a7bed097b6103ec9fad8b5b0f127f6a9d871bb8846333840af191cde",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e51093144d83d7d662e62774761e5d94397c8c34d6a1fc0fe909dfd24547bce5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T14:41:12.802884286Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:41:10.250948914Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T14:41:11.807983006Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:41:11.939274323Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T14:41:12.802884286Z",
                    "created_by": "|1 CONAN_VERSION=1.48.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:58ab0834cecc25eefb3d8f4120c306a647ee401feddd87529382c8988e949b4b",
                    "sha256:d8e9b5dd6c8a8e31eef6bc3ff240833012af5cc132fcfa0797d90e11fe274dcc"
                ]
            }
        },
        "1.48.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:e86c06bdec5b26d6dabc112c18d8ac1e8abfbf6a1b26536552753b2e06db97a1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a2492f97ef908a59469e502f7dcb6e4f59e634b7733551a7cb200088368264c4",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:e86c06bdec5b26d6dabc112c18d8ac1e8abfbf6a1b26536552753b2e06db97a1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T15:16:05.700945986Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:03.32148946Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T15:16:04.649444736Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:04.774234673Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T15:16:05.700945986Z",
                    "created_by": "|1 CONAN_VERSION=1.48.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:5fb6758a09c22a9ab935bdcdafd45c0027aad377e548f63242c461fa1d8d51bf",
                    "sha256:f9d91af3ccc5201b6f52eff0dace05ce45dc5c7f641f15e30a2a51905377a8ed"
                ]
            }
        },
        "1.48.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:de375806d94f84e81b63367079ec32d30a5c1b6ede2713dcecfe3b71d666c953",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "5fa934890074ed656900673df48a48ce4dd2b0ae434a6cefedbec9f1cad4a8e2",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.48.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:de375806d94f84e81b63367079ec32d30a5c1b6ede2713dcecfe3b71d666c953",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-06-29T16:08:49.126036359Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:08:41.568770696Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-06-29T16:08:48.180387943Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:08:48.297290872Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-06-29T16:08:49.126036359Z",
                    "created_by": "|1 CONAN_VERSION=1.48.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:eeb7cae228901da7fe5f4c5bdab1bd31ee14764560272b695af1699de7f51193",
                    "sha256:3c5db90f7f8c7becb4bc5451979a342109a8d1db464352a68ac8800daf242330"
                ]
            }
        },
        "1.49.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:10ccc804ea33138e7a85bf2a493e690dc7963a39e46222dea9650295f605025f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "172f9de1e482e69a6f2c077a137155d4c7c3060465be7c09929b2fdb6682ad3d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.49.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:10ccc804ea33138e7a85bf2a493e690dc7963a39e46222dea9650295f605025f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:07:54.23810866Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:07:52.006592527Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:07:53.244035527Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:07:53.368558773Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:07:54.23810866Z",
                    "created_by": "|1 CONAN_VERSION=1.49.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:e4a813ef00d267803769956c778cbcde881828b97f03e63b4499a33d78515355",
                    "sha256:7fd4a47913074ccb5d44cc3a3b849ede78cca1baee44ab0492e546e3dba94216"
                ]
            }
        },
        "1.50.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:8fe32d8097d0eec6eb41945263a78034b24b09a062a2ec98ef04b4b1dbd36371",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "4f17a72596a5dc508a4422ed820f3b77763642c350b0a00ddb526e050d7d644a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8fe32d8097d0eec6eb41945263a78034b24b09a062a2ec98ef04b4b1dbd36371",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T11:43:09.953866331Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:43:03.082631245Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T11:43:08.942800736Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:43:09.089045568Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T11:43:09.953866331Z",
                    "created_by": "|1 CONAN_VERSION=1.50.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:7c643558ff0d758be5427699da0d3cfa94a2bfe3951d2242e16ef9635cf348a3",
                    "sha256:71ebad0551c4ac86a430349f63c6fcf0c1f10a3465822450a92d2d084f3c5b2f"
                ]
            }
        },
        "1.50.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:9aaf2a5cbb4fef88ba29928373b6c8ab715a82fd1400fed4043c8833dc4ea2a1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "68b019db8af4df0a866552f324e4e454e74167786905df0fd2175b9bd951779a",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:9aaf2a5cbb4fef88ba29928373b6c8ab715a82fd1400fed4043c8833dc4ea2a1",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T12:17:55.110880295Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:17:52.953980259Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T12:17:54.034736836Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:17:54.156649611Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T12:17:55.110880295Z",
                    "created_by": "|1 CONAN_VERSION=1.50.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:fadfa83d1c67a77519710494357e6eca544507c0fdeea3644da64a17a3c916cd",
                    "sha256:fe0bb6625d80674f041ba8adc850f1194c157e0124d71aad4c5d3e7e1def0b77"
                ]
            }
        },
        "1.50.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:b787a0e7ead6438c1ed3b3682bac3eb4f13e882c1e09e9825cd4f9fae50e4339",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "cfc9ece5c0a36ec4ec62669e5755fe7f61f5bcef7648f70ef7c7384e1451e0c8",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.50.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:b787a0e7ead6438c1ed3b3682bac3eb4f13e882c1e09e9825cd4f9fae50e4339",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:09:05.139112638Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:08:57.86695066Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:09:04.126042256Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:04.262710024Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:09:05.139112638Z",
                    "created_by": "|1 CONAN_VERSION=1.50.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:8d6636e0a462a01286bcfeb16d4ef9c2cba56a5ea1aed7b47ddcf30f9f891adc",
                    "sha256:c50d7e654df19ded4e082476925a65d56beb080008e1ea6beaf9ae7d73ddf6c0"
                ]
            }
        },
        "1.51.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:6d583ef071611da5e67819e9418c109808815a424027cb530026ce9d175168fb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "a24c3f22825fb389ee1df328459742067f31791c78526c7c6d50606bf7fe55da",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:6d583ef071611da5e67819e9418c109808815a424027cb530026ce9d175168fb",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T13:44:54.569187628Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:44:47.437314872Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T13:44:53.60660436Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:44:53.730003503Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T13:44:54.569187628Z",
                    "created_by": "|1 CONAN_VERSION=1.51.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:e67ecbb46bcbb10731c0b6e00e0b6d8feac1ddbafd8c0a9e6a9f26e1a1dc6e7d",
                    "sha256:b312fcff15dc17b51195d261601c513a8fbd61357e5341fdecc9259df8638b95"
                ]
            }
        },
        "1.51.1": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:2a5aefb7e20be264bc18ac74860737a9ff95f5b9984dfe527f547e345963c206",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "360f03e9f852e039c5706e6dae44b7d8fac213d95afb76e8cd5adb50f3d227f9",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.1",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2a5aefb7e20be264bc18ac74860737a9ff95f5b9984dfe527f547e345963c206",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T14:19:37.302380058Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:19:30.042355712Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T14:19:36.373111847Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:19:36.489780063Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T14:19:37.302380058Z",
                    "created_by": "|1 CONAN_VERSION=1.51.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:35ef2c67abe8c706d0031d00487a0d427c2f3dc9d1b42e1b44bba92c0c29b521",
                    "sha256:46ee946d00520cef20a953a438ceded3bab0f3725af056769f6f52031b45cea1"
                ]
            }
        },
        "1.51.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:8d84273cf1c634bb31e62e0b7a8013f2b62add067d6fb9547dde569de6c12790",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "dc09ca28b7ca1108a8f68955ae150261e0e0656ec71821a9e88590980cbf83fc",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.2",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8d84273cf1c634bb31e62e0b7a8013f2b62add067d6fb9547dde569de6c12790",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-08-31T15:13:50.361521758Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:13:43.422674448Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-08-31T15:13:49.414132413Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:13:49.529491407Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-08-31T15:13:50.361521758Z",
                    "created_by": "|1 CONAN_VERSION=1.51.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:b7ddd9b760547bc026e0b3c9f50697e006ccf95a2d17fdbf890c566607e762a3",
                    "sha256:f0b6b6a4781cc0bfad8ea70afa3a5c2a449d0d930a51eb26193674c464171831"
                ]
            }
        },
        "1.51.3": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:620d65821567460670023ace56333133396a5d74d6a088c23b155572751efb05",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "1e2c6b8a049be27961e250605b8df060f1eb30a6aafe1f06aa523dd8b2c4862c",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.51.3",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:620d65821567460670023ace56333133396a5d74d6a088c23b155572751efb05",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:16:07.57624472Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:00.190951609Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:16:06.649746646Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:06.769951265Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:16:07.57624472Z",
                    "created_by": "|1 CONAN_VERSION=1.51.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:585a54a8b2cfa5d115f7803c0c43e72bf7f8849889df12fc5cad735304308267",
                    "sha256:cd173e8ea0b82e730b2c25b5db3cc44fbb2c8073f52bfbd009c5d5154a1a9267"
                ]
            }
        },
        "1.52.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:54b960a9a2faa213d2e28fe6643886746e6bf3bc0ec7270e03ba8209630c06a5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "c84350fc5d32ed603e878cd00c828e9148df68dcf80fabc8a0738ba30b8a3f4b",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.52.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:54b960a9a2faa213d2e28fe6643886746e6bf3bc0ec7270e03ba8209630c06a5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T15:49:58.445739064Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:49:51.643417808Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T15:49:57.51379109Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:49:57.628237853Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T15:49:58.445739064Z",
                    "created_by": "|1 CONAN_VERSION=1.52.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:12065254fe334b38479de5d0b103905011e59a1f319575d757fa23d94245ab9a",
                    "sha256:2fe278892af947e9f9b3552eb6e97a8a7564e4c59459ec0c0ce6ff1a0029e90b"
                ]
            }
        },
        "1.53.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:8a44fde718b3444ada771e37f9edf7cdf61a9884ae0978a9770eb7ba4309072f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "92943d1e2bcb0f4fa9759314b277e5be5b4cedbe843aa69761698579f0f7bd08",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.53.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:8a44fde718b3444ada771e37f9edf7cdf61a9884ae0978a9770eb7ba4309072f",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2022-11-30T16:27:13.739700601Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:27:06.85711822Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2022-11-30T16:27:12.763051491Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:27:12.893666795Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-30T16:27:13.739700601Z",
                    "created_by": "|1 CONAN_VERSION=1.53.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:1e8455879f312b48af4196611d7d3ed91d4c7b6449374fc8b14f9444a1851c19",
                    "sha256:65140adb49282f970a0bfa9ed34f4c903c52a4289eb771145493fd466640a6d4"
                ]
            }
        },
        "1.54.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:574dc122194c72e292dc029e5be5ecd843c13590ff8cf0de7dbc2af089ebabe5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "2304aafb38b6c0ab4eeb8021c0b913cd6825911b74b4b9eb68338450f93f809f",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.54.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:574dc122194c72e292dc029e5be5ecd843c13590ff8cf0de7dbc2af089ebabe5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:07:49.612207863Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:07:42.157907681Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:07:48.697918562Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:07:48.812244618Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:07:49.612207863Z",
                    "created_by": "|1 CONAN_VERSION=1.54.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:aa3c2fa7f1b4e781a6b1eb4422b587833e2613cbab4a3180986507e33ffa8b3f",
                    "sha256:755cb8732002d14dec59c143b2e7bdba0b79fa017a81238b175b9712aa4d6f6f"
                ]
            }
        },
        "1.55.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:268e1cb413f5181a2d1af09d00220b802d96c7564d671576c83cb9ec59183604",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "efad74a755cee3c3fa9193dcbb34ae4c101bf9937c39af328a5cae74813262e5",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.55.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:268e1cb413f5181a2d1af09d00220b802d96c7564d671576c83cb9ec59183604",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T07:40:53.121914922Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:40:50.879114043Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T07:40:52.196478158Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:40:52.310412177Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T07:40:53.121914922Z",
                    "created_by": "|1 CONAN_VERSION=1.55.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:394c8ecea98dfe254c4b02a8aeed3e763d2cbb377fac58d9c028d2c00b2c9d53",
                    "sha256:91fee6d6bc2a571712015b5cad847ae0f0a2dd894339f131948064e193dc1d9e"
                ]
            }
        },
        "1.56.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:bb66402424c9e864ece7a442e684ff265166d759ae73f3f3805dd8ba5b4a4fe8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "203809d41d6bd5d77736af428ce9bdfa3d1f5199c962f1ffe539c1de24f25809",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.56.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:bb66402424c9e864ece7a442e684ff265166d759ae73f3f3805dd8ba5b4a4fe8",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T08:15:34.168685812Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:15:27.042861162Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T08:15:33.197513243Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:15:33.318434239Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T08:15:34.168685812Z",
                    "created_by": "|1 CONAN_VERSION=1.56.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:cd8bac61466bd59dbd5d4ba1b0527a20897be0ed4d4f6ed11fa1b4f837d24022",
                    "sha256:31ce2aa7c8bb6b2c354ee09a2bc419a960b6b0028d917ecd665a09d791c6d4aa"
                ]
            }
        },
        "1.57.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:1c756711ba7ce40b9e261eeeb92bca016713948d1733395e6ea560e08814fd5d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "0a2de6a4378496a74816f86191a1f16085d645fbc37d38158420fd80f01db445",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.57.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:1c756711ba7ce40b9e261eeeb92bca016713948d1733395e6ea560e08814fd5d",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-12T09:07:04.013574889Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:06:56.708484719Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-12T09:07:03.039947234Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:03.16835322Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-12T09:07:04.013574889Z",
                    "created_by": "|1 CONAN_VERSION=1.57.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:a6b779be3332a1dbc710c50e37d80f80508930a61593ae7e84a0406cd0f8b0b9",
                    "sha256:7ff5ea7b8ae5020f0479f863a6c3fc3bf8ac0cf420a42a0053c403955c498a72"
                ]
            }
        },
        "1.58.0": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:432c833a5699e9c2207ebe458fe3705cc4bb1d43781ff0a3a69c226331ee7fa5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "26c81be826a4fb7e016787be377d2df80f8aebef8ae6877bc7791b905336c7cf",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.58.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:432c833a5699e9c2207ebe458fe3705cc4bb1d43781ff0a3a69c226331ee7fa5",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-01-30T20:34:15.117314023Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:34:07.779477697Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-01-30T20:34:14.176341907Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:34:14.300726601Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-01-30T20:34:15.117314023Z",
                    "created_by": "|1 CONAN_VERSION=1.58.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:f3469d647d71d229652e18c97f5bce188baf3342be21fe484a1002950db81602",
                    "sha256:49bdd9547bc198ed6eaa49dc8d9498dc92bdf19afdd0525ba95f2bd18a61f744"
                ]
            }
        },
        "1.59.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "OnBuild": null
            },
            "created": "2023-06-01T15:52:53.692443915Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:52:53.137294942Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:52:53.137294942Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:52:53.137294942Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:52:53.137294942Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:52:53.137294942Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T15:52:53.166381573Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T15:52:53.692443915Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:f733712403f8e3134cfed225ae1bf626a611ae663618fb2399b6898c1dffb32e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88fbb064437c6e3c3d95fe9fb88916feddef89969d8ac938e2d6fb61008c657c"
                ]
            }
        },
        "1.60.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "OnBuild": null
            },
            "created": "2023-06-01T16:27:56.521609409Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:55.808330038Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:55.808330038Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:55.808330038Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:55.808330038Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:27:55.808330038Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-06-01T16:27:55.890780425Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-06-01T16:27:56.521609409Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:603616bcb611b91800f8cf2057cb6c56f386d56413a17661351fc08a935425b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b9ffb8434be60f829f4a762c55c2d59a0a10e1a2d4f184ab4fdbfcf6ddd2eab"
                ]
            }
        },
        "1.60.1": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "OnBuild": null
            },
            "created": "2023-08-03T11:49:42.781398352Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:49:42.13512896Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:49:42.13512896Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:49:42.13512896Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:49:42.13512896Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:49:42.13512896Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-08-03T11:49:42.171104224Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-08-03T11:49:42.781398352Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:e8974a60bf566d22d42d1146e5309d40929d760459860963f965aa990ec5ed88",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:43c80f5e28ca583da384c2d23b2a5e5a9cb2e1daffb81fbae372e571da6c8938"
                ]
            }
        },
        "1.60.2": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "OnBuild": null
            },
            "created": "2023-09-28T10:39:01.014214006Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:00.459229027Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:00.459229027Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:00.459229027Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:00.459229027Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:39:00.459229027Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-09-28T10:39:00.494591301Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-09-28T10:39:01.014214006Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.60.2 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:e9f2b128f2f4263a42f86c5ab4d66bdd1b5f3dc10dc9b733ad1728c8271e7962",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34b475df59107c45ebc9d5393d60e7555f5f0a599b1b7df7b9d50cc1bd6c0d7f"
                ]
            }
        },
        "1.61.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                },
                "OnBuild": null
            },
            "created": "2024-01-10T15:56:11.733784369Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:11.123864598Z",
                    "created_by": "LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:11.123864598Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:11.123864598Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:11.123864598Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        gfortran-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:56:11.123864598Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-10T15:56:11.140686305Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-10T15:56:11.733784369Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.61.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:98db8fdbfcc1e32767dd7af813975ae5772ba531214115cf1c0b81813e146da7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2b5626a9663fa593d6cc4355bcd6564a949b8c1143f41fb29134ce7df8f8a3de"
                ]
            }
        },
        "1.62.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "OnBuild": null
            },
            "created": "2024-03-21T07:42:20.430688162Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:38:41.035307347Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:38:41.035307347Z",
                    "created_by": "ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:38:41.035307347Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        gfortran-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:38:44.285009304Z",
                    "created_by": "RUN /bin/sh -c wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:38:46.963198393Z",
                    "created_by": "RUN /bin/sh -c curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:23.755071261Z",
                    "created_by": "RUN /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:46.691785547Z",
                    "created_by": "RUN /bin/sh -c chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:51.567207246Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:41:51.567207246Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:42:19.820096714Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.62.0 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:42:19.820096714Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-21T07:42:19.868011347Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-21T07:42:20.430688162Z",
                    "created_by": "RUN |1 CONAN_VERSION=1.62.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:46295e93b7bb0ab075d7f74883e1bac2c2f16ed059b303678d815c1b5a6924af",
                    "sha256:74cb0e67afd168689173b208b6fcec08b9b9d8136cc19125d775d6e0355918b2",
                    "sha256:131083ecb89c087be5529d38fd572747f4e0da1ef42d9227152a506b7c5fd683",
                    "sha256:89a9aecdde00f0484307523ecb0065bd54f89425d96c04683589446e0facd108",
                    "sha256:fd3ac12e2913bf75f5fec08060ea78dc1ece18c73f87acc69f2e6af9d3c27e02",
                    "sha256:2ee657d19f8a64bb6220d673b2fba53b76556a7b5a635d4064be844f0e8035ff",
                    "sha256:d186241cd62734e32b892ace9084c5cbe1143ed3c21fbe6443bee304ebced4b9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cada9a8bd055c27100cd950a74789040c5c767622db0d07ad50b3e9ca27c28b8"
                ]
            }
        },
        "1.63.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "OnBuild": null
            },
            "created": "2024-03-27T15:53:11.476252005Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        gfortran-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:50.849978327Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64        && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:52:19.528038313Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}        && pyenv global ${PYTHON_VERSION}        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:40.680476902Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:53:10.903532982Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.63.0 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:53:10.903532982Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:53:10.94282358Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:53:11.476252005Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.63.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3sibGF5ZXJzIjpbeyJsYXllciI6MTIsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTM6MTEuNDgwMDYyMzcxWiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjViMGY2MzNmZDQ2N2RiMmI3YzAzNDM5ZDg4MmExNzgzYWQzYmNlNTAyMmQ2YjM4ZjljYjBhNGU5ZDc0MGJkN2UiLCJpbnB1dHMiOltbeyJsaW5rIjo4fV1dfSx7ImRpZ2VzdCI6InNoYTI1Njo3M2M4MzUyMTZhYTM1ZjFkYTQ5YTNmNzhlZjQ3MzY1OGM3OWExZTkzMDcwOGZkMTM3MWU0NzE0MzMyMzViZWVlIiwiaW5wdXRzIjpbW3sibGluayI6Nn1dXX0seyJkaWdlc3QiOiJzaGEyNTY6OGNlZTU3ZGZmZWYxMDgzYWY2MjBkMjU5MTY2NTg1ZTA4ODQ4ZjQwNjE4MWM0OWI1NjIyNGM0NzJhMTVhMTQxZCJ9LHsibGF5ZXJzIjpbeyJsYXllciI6OCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1Mjo0MC42ODUwMzE3MTNaIn1dLCJkaWdlc3QiOiJzaGEyNTY6OTMxNWNiNWMzMjVlYTViYjk5MDU1NjUwZDkxYjA0ZDhmYjdmMzAxMzk4N2RhNGQwODNmYmE0MzFjNWZlZWZmMiIsImlucHV0cyI6W1t7ImxpbmsiOjV9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6OSwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1Mjo0NS4zNDA5NjM1MTZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6YThkZjI2YzkzZjlmMzAxMjIyYjdiMmEwMTdlN2E4ODMwMmYxMzA1ZjhkYjNmMDU3YzY5NjNlNDk2NTBkNDMxNiIsImlucHV0cyI6W1t7ImxpbmsiOjN9XV19LHsiZGlnZXN0Ijoic2hhMjU2OmI5OWQwYjBkNjYwMTViYzMwMTY1Zjc4ZTQ2ZmY3ZjMxMGQwODc1Y2IwY2RhNzYyY2RmMmVjZTE1MGMyYTZlYjgiLCJpbnB1dHMiOltbeyJsaW5rIjo3fV1dfSx7ImRpZ2VzdCI6InNoYTI1NjpkNDM3ZjRhMjE0ODg0MWVlMjg4Mjc5NjAyNWEzMTMxOGIwNzJlM2UwNWRhMmU5MDcxOGVmNTQ5ZmQxY2VkMTcyIiwiaW5wdXRzIjpbW3sibGluayI6Mn1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo2LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjQ5OjU0LjAzMDE3NTM1MVoifV0sImRpZ2VzdCI6InNoYTI1NjpkYmViY2UwOTU4YzVkZWY1MDU0ODUwZDk0NzBlNjQ4MGIyNDQ1NjQ4NTU5MjI3NTZiODQxMWVjYzNjZTAyNjkxIiwiaW5wdXRzIjpbW3sibGluayI6MX1dXX0seyJkaWdlc3QiOiJzaGEyNTY6ZGU0MTlmNTU1YTg2YjMxOTdiYWFhMzljYjg1YzMxM2M5Mzk5OGQ2YzdhNmU0OTA3YTFhMmU3OWNjYjJhNjBjMiIsImlucHV0cyI6W1t7ImxpbmsiOjl9XV19LHsiZGlnZXN0Ijoic2hhMjU2OmUzZGM5MmI1NmUyYzIxZTljMjQwOTlmMDA1YzZlODQ3NGI3NzEyNWIwOTUyN2FmZDBiZDJiYTU4Y2Y2NWI3MWUiLCJpbnB1dHMiOltbeyJsaW5rIjo0fV1dfV0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c47ffd097e3f4b46376b875f234b05f2d18d76b8afe8bfbadfef42b3d8e8c00e",
                    "sha256:d5b18a81f70658942c8383e6c327692d7a7c74c70a8eb7d81c9ef6a1cf251e59",
                    "sha256:5a9b775eaeeafbfbd5af5b87c3499a732a9f7eae071b18220416a0d70fc5ce26",
                    "sha256:cd0fe5340dc969b17de62bc242ad97bf1e628d3db686574469b8d0877e60a106",
                    "sha256:bfaa19d8a6b970356abb1f087dc1bf25eaf299bb6e73dff9e288e977b7f7590c",
                    "sha256:d5aeb1f79569f038d555a3f7508c8c6b0589ffe61de9bce7fc0709664dc0fa92",
                    "sha256:32c29fe204bfdacefe8faecf36f5eb8ad2bc7740d1c6022ce3cff98aa785b89f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4cb99b3ab708962a7dc190facb4a0fb905c0e3871b0edb1a25f1601aa11b6c64"
                ]
            }
        },
        "1.64.0": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "OnBuild": null
            },
            "created": "2024-04-04T14:24:30.414701323Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        gfortran-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:50.849978327Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64        && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:52:19.528038313Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}        && pyenv global ${PYTHON_VERSION}        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:40.680476902Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-04T14:24:29.820726127Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.0 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-04T14:24:29.820726127Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-04T14:24:29.862787749Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-04T14:24:30.414701323Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3sibGF5ZXJzIjpbeyJsYXllciI6MTAsImNyZWF0ZWRBdCI6IjIwMjQtMDQtMDRUMTQ6MjQ6MjkuODI2MTUzNTE0WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjJkNzM1YWQ0ZTRjMTA2MjFhOWFjZWYwY2I4ZTJiZmQzMTUwY2E3ZmY1OWJkMjllNzhjMTcyYTdkOWIwMDg0MGQiLCJpbnB1dHMiOltbeyJsaW5rIjo1fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjEyLCJjcmVhdGVkQXQiOiIyMDI0LTA0LTA0VDE0OjI0OjMwLjQyMDI2ODQzOVoifV0sImRpZ2VzdCI6InNoYTI1Njo1MGJjZjFlMTkxOTNkOTgwNjY5Yzc3NTBjZGZkZGIxYWI5ZTFmZjg3MDM0OTNjZTI3ZmI3NjVjZjQwNmU3MmEzIiwiaW5wdXRzIjpbW3sibGluayI6OX1dXX0seyJkaWdlc3QiOiJzaGEyNTY6NzNjODM1MjE2YWEzNWYxZGE0OWEzZjc4ZWY0NzM2NThjNzlhMWU5MzA3MDhmZDEzNzFlNDcxNDMzMjM1YmVlZSIsImlucHV0cyI6W1t7ImxpbmsiOjd9XV19LHsiZGlnZXN0Ijoic2hhMjU2OjhjZWU1N2RmZmVmMTA4M2FmNjIwZDI1OTE2NjU4NWUwODg0OGY0MDYxODFjNDliNTYyMjRjNDcyYTE1YTE0MWQifSx7ImxheWVycyI6W3sibGF5ZXIiOjgsImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTI6NDAuNjg1MDMxNzEzWiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjkzMTVjYjVjMzI1ZWE1YmI5OTA1NTY1MGQ5MWIwNGQ4ZmI3ZjMwMTM5ODdkYTRkMDgzZmJhNDMxYzVmZWVmZjIiLCJpbnB1dHMiOltbeyJsaW5rIjo2fV1dfSx7ImxheWVycyI6W3sibGF5ZXIiOjksImNyZWF0ZWRBdCI6IjIwMjQtMDMtMjdUMTU6NTI6NDUuMzQwOTYzNTE2WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmE4ZGYyNmM5M2Y5ZjMwMTIyMmI3YjJhMDE3ZTdhODgzMDJmMTMwNWY4ZGIzZjA1N2M2OTYzZTQ5NjUwZDQzMTYiLCJpbnB1dHMiOltbeyJsaW5rIjo0fV1dfSx7ImRpZ2VzdCI6InNoYTI1NjpiOTlkMGIwZDY2MDE1YmMzMDE2NWY3OGU0NmZmN2YzMTBkMDg3NWNiMGNkYTc2MmNkZjJlY2UxNTBjMmE2ZWI4IiwiaW5wdXRzIjpbW3sibGluayI6OH1dXX0seyJkaWdlc3QiOiJzaGEyNTY6ZDQzN2Y0YTIxNDg4NDFlZTI4ODI3OTYwMjVhMzEzMThiMDcyZTNlMDVkYTJlOTA3MThlZjU0OWZkMWNlZDE3MiIsImlucHV0cyI6W1t7ImxpbmsiOjN9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6NiwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo0OTo1NC4wMzAxNzUzNTFaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZGJlYmNlMDk1OGM1ZGVmNTA1NDg1MGQ5NDcwZTY0ODBiMjQ0NTY0ODU1OTIyNzU2Yjg0MTFlY2MzY2UwMjY5MSIsImlucHV0cyI6W1t7ImxpbmsiOjJ9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTEsImNyZWF0ZWRBdCI6IjIwMjQtMDQtMDRUMTQ6MjQ6MjkuODY2NTM4ODMyWiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmRlNDE5ZjU1NWE4NmIzMTk3YmFhYTM5Y2I4NWMzMTNjOTM5OThkNmM3YTZlNDkwN2ExYTJlNzljY2IyYTYwYzIiLCJpbnB1dHMiOltbeyJsaW5rIjowfV1dfV0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c47ffd097e3f4b46376b875f234b05f2d18d76b8afe8bfbadfef42b3d8e8c00e",
                    "sha256:d5b18a81f70658942c8383e6c327692d7a7c74c70a8eb7d81c9ef6a1cf251e59",
                    "sha256:5a9b775eaeeafbfbd5af5b87c3499a732a9f7eae071b18220416a0d70fc5ce26",
                    "sha256:cd0fe5340dc969b17de62bc242ad97bf1e628d3db686574469b8d0877e60a106",
                    "sha256:bfaa19d8a6b970356abb1f087dc1bf25eaf299bb6e73dff9e288e977b7f7590c",
                    "sha256:d5aeb1f79569f038d555a3f7508c8c6b0589ffe61de9bce7fc0709664dc0fa92",
                    "sha256:f042fab5198960614fb665904af79c3bc95609bd020a35d947fbf6144aa3b0c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c5a1ee4e00d9f8f6b35e5e9ca49317daa78350ced895a1cb7643e5df2505cf2e"
                ]
            }
        },
        "1.64.1": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "OnBuild": null
            },
            "created": "2024-05-21T08:05:33.299896545Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        gfortran-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:50.849978327Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64        && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:52:19.528038313Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}        && pyenv global ${PYTHON_VERSION}        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:40.680476902Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T08:05:32.757915848Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.1 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T08:05:32.757915848Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-21T08:05:32.785057186Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-21T08:05:33.299896545Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=1.64.1 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3sibGF5ZXJzIjpbeyJsYXllciI6MTIsImNyZWF0ZWRBdCI6IjIwMjQtMDUtMjFUMDg6MDU6MzMuMzAzOTYzODU3WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OjFmYzA1NWZlYmM0OWRlZDFjYzQxMzUyNmY2ZmUzNTQ2M2FhNDBjMTA2Y2MwNjU3NzM2ZjFmMzE4MDFmMDUwMTEiLCJpbnB1dHMiOltbeyJsaW5rIjo5fV1dfSx7ImRpZ2VzdCI6InNoYTI1Njo3M2M4MzUyMTZhYTM1ZjFkYTQ5YTNmNzhlZjQ3MzY1OGM3OWExZTkzMDcwOGZkMTM3MWU0NzE0MzMyMzViZWVlIiwiaW5wdXRzIjpbW3sibGluayI6N31dXX0seyJkaWdlc3QiOiJzaGEyNTY6OGNlZTU3ZGZmZWYxMDgzYWY2MjBkMjU5MTY2NTg1ZTA4ODQ4ZjQwNjE4MWM0OWI1NjIyNGM0NzJhMTVhMTQxZCJ9LHsibGF5ZXJzIjpbeyJsYXllciI6OCwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1Mjo0MC42ODUwMzE3MTNaIn1dLCJkaWdlc3QiOiJzaGEyNTY6OTMxNWNiNWMzMjVlYTViYjk5MDU1NjUwZDkxYjA0ZDhmYjdmMzAxMzk4N2RhNGQwODNmYmE0MzFjNWZlZWZmMiIsImlucHV0cyI6W1t7ImxpbmsiOjZ9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6OSwiY3JlYXRlZEF0IjoiMjAyNC0wMy0yN1QxNTo1Mjo0NS4zNDA5NjM1MTZaIn1dLCJkaWdlc3QiOiJzaGEyNTY6YThkZjI2YzkzZjlmMzAxMjIyYjdiMmEwMTdlN2E4ODMwMmYxMzA1ZjhkYjNmMDU3YzY5NjNlNDk2NTBkNDMxNiIsImlucHV0cyI6W1t7ImxpbmsiOjN9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTAsImNyZWF0ZWRBdCI6IjIwMjQtMDUtMjFUMDg6MDU6MzIuNzYxODIzNzVaIn1dLCJkaWdlc3QiOiJzaGEyNTY6YWFhNTc0YmNiMjkyOTM1YmZkMmFmMTY4MmZmZjJiODVkNmEyZmYxNjdmNzZkNTE0MWI1ZjJiNTZjNjhmZjRlNSIsImlucHV0cyI6W1t7ImxpbmsiOjR9XV19LHsiZGlnZXN0Ijoic2hhMjU2OmI5OWQwYjBkNjYwMTViYzMwMTY1Zjc4ZTQ2ZmY3ZjMxMGQwODc1Y2IwY2RhNzYyY2RmMmVjZTE1MGMyYTZlYjgiLCJpbnB1dHMiOltbeyJsaW5rIjo4fV1dfSx7ImRpZ2VzdCI6InNoYTI1NjpkNDM3ZjRhMjE0ODg0MWVlMjg4Mjc5NjAyNWEzMTMxOGIwNzJlM2UwNWRhMmU5MDcxOGVmNTQ5ZmQxY2VkMTcyIiwiaW5wdXRzIjpbW3sibGluayI6Mn1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo2LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjQ5OjU0LjAzMDE3NTM1MVoifV0sImRpZ2VzdCI6InNoYTI1NjpkYmViY2UwOTU4YzVkZWY1MDU0ODUwZDk0NzBlNjQ4MGIyNDQ1NjQ4NTU5MjI3NTZiODQxMWVjYzNjZTAyNjkxIiwiaW5wdXRzIjpbW3sibGluayI6MX1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMSwiY3JlYXRlZEF0IjoiMjAyNC0wNS0yMVQwODowNTozMi43OTMwMjU3OTFaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZGU0MTlmNTU1YTg2YjMxOTdiYWFhMzljYjg1YzMxM2M5Mzk5OGQ2YzdhNmU0OTA3YTFhMmU3OWNjYjJhNjBjMiIsImlucHV0cyI6W1t7ImxpbmsiOjV9XV19XQ==",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c47ffd097e3f4b46376b875f234b05f2d18d76b8afe8bfbadfef42b3d8e8c00e",
                    "sha256:d5b18a81f70658942c8383e6c327692d7a7c74c70a8eb7d81c9ef6a1cf251e59",
                    "sha256:5a9b775eaeeafbfbd5af5b87c3499a732a9f7eae071b18220416a0d70fc5ce26",
                    "sha256:cd0fe5340dc969b17de62bc242ad97bf1e628d3db686574469b8d0877e60a106",
                    "sha256:bfaa19d8a6b970356abb1f087dc1bf25eaf299bb6e73dff9e288e977b7f7590c",
                    "sha256:d5aeb1f79569f038d555a3f7508c8c6b0589ffe61de9bce7fc0709664dc0fa92",
                    "sha256:662a485a9948b7975d3b56dafbc59854158ca94273300f51aee660383eae60dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d3bdd755952dc141d66e11a555c6e5de0b7c684ae2dea055d06ea64a9dd0778"
                ]
            }
        },
        "1.9.2": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:571e7264ddacd20d6ef0e0f6b9d343d9da6f867e90b503fb245416bba68ee2ca",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "6109c333f28243c88cf37162db143843e864e095d2113b441f3bd3d05750829d",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv"
                ],
                "Cmd": [
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "ArgsEscaped": true,
                "Image": "sha256:571e7264ddacd20d6ef0e0f6b9d343d9da6f867e90b503fb245416bba68ee2ca",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2018-12-04T15:52:58.623552727Z",
            "docker_version": "18.06.0-ce",
            "history": [
                {
                    "created": "2018-11-19T21:23:51.037171729Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:efec03b785a78c01a6ade862d9a309f500ffa9f5f9314be26621f7fda0d5dfb8 in / "
                },
                {
                    "created": "2018-11-19T21:23:51.855666335Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2018-11-19T21:23:52.559321408Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2018-11-19T21:23:53.235657088Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2018-11-19T21:23:53.455319926Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:48:33.360965084Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:48:33.539554882Z",
                    "created_by": "/bin/sh -c #(nop)  ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:52:52.174487613Z",
                    "created_by": "/bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends        sudo=1.8.*        build-essential=12.*        wget=1.17.*        git=1:2.7.*        vim=2:7.4.*        libc6-dev-i386=2.23-*        g++-multilib=4:5.3.*        libgmp-dev=2:6.1.*        libmpfr-dev=3.1.*        libmpc-dev=1.0.*        libc6-dev=2.23-*        nasm=2.11.*        dh-autoreconf=11        valgrind=1:3.11.*        ninja-build=1.5.*         libffi-dev=3.2.*        libssl-dev=1.0.2*        pkg-config=0.29.1-0ubuntu1        subversion=1.9.3-2ubuntu1.1        zlib1g-dev=1:1.*        libbz2-dev=1.*        libsqlite3-dev=3.*        libreadline-dev=6.*        xz-utils=5.*        curl=7.*        libncurses5-dev=6.*        libncursesw5-dev=6.*        liblzma-dev=5.*        ca-certificates        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz        && tar -xzf cmake-3.12.1-Linux-x86_64.tar.gz        && cp -fR cmake-3.12.1-Linux-x86_64/* /usr        && rm -rf cmake-3.12.1-Linux-x86_64        && rm cmake-3.12.1-Linux-x86_64.tar.gz        && groupadd 1001 -g 1001        && groupadd 1000 -g 1000        && groupadd 2000 -g 2000        && groupadd 999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.1        && pyenv global 3.7.1        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan        && chown -R conan:1001 /opt/pyenv        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100"
                },
                {
                    "created": "2018-12-04T15:52:57.743393782Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:52:57.91921635Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2018-12-04T15:52:58.623552727Z",
                    "created_by": "/bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:41c002c8a6fd36397892dc6dc36813aaa1be3298be4de93e4fe1f40b9c358d99",
                    "sha256:647265b9d8bc572a858ab25a300c07c0567c9124390fd91935430bf947ee5c2a",
                    "sha256:819a824caf709f224c414a56a2fa0240ea15797ee180e73abe4ad63d3806cae5",
                    "sha256:3db5746c911ad8c3398a6b72aa30580b25b6edb130a148beed4d405d9c345a29",
                    "sha256:d460eeb158cb277ffada78ade543c171020ba8caf732084abcc6513eaf2015d2",
                    "sha256:b6874140c0141cc7876d473e28ec105b17912892e3911a10038c3024ffa68092"
                ]
            }
        },
        "2.2.3": {
            "architecture": "amd64",
            "config": {
                "User": "conan",
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc",
                    "FC=/usr/bin/gfortran"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "WorkingDir": "/home/conan",
                "Labels": {
                    "maintainer": "Conan.io <info@conan.io>"
                },
                "OnBuild": null
            },
            "created": "2024-04-18T06:46:14.158469691Z",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "LABEL maintainer=Conan.io <info@conan.io>",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ENV PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc FC=/usr/bin/gfortran",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "RUN /bin/sh -c apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        gfortran-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:45.821730826Z",
                    "created_by": "ARG CMAKE_VERSION=3.18.6",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:49:50.849978327Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION%.*}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION%.*}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION}-Linux-x86_64        && rm cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "RUN |1 CMAKE_VERSION=3.18.6 /bin/sh -c curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:49:54.026647672Z",
                    "created_by": "ARG PYTHON_VERSION=3.7.17",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-27T15:52:19.528038313Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}        && pyenv global ${PYTHON_VERSION}        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/${PYTHON_VERSION}/lib/python${PYTHON_VERSION%.*}/lsb_release.py # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:40.680476902Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "RUN |2 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 /bin/sh -c apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-27T15:52:45.337640403Z",
                    "created_by": "ARG CONAN_VERSION",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-18T06:46:13.595516597Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=2.2.3 /bin/sh -c pip install -q --upgrade --no-cache-dir pip     && pip install -q --no-cache-dir conan==${CONAN_VERSION} # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-18T06:46:13.595516597Z",
                    "created_by": "USER conan",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-18T06:46:13.625929269Z",
                    "created_by": "WORKDIR /home/conan",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-18T06:46:14.158469691Z",
                    "created_by": "RUN |3 CMAKE_VERSION=3.18.6 PYTHON_VERSION=3.7.17 CONAN_VERSION=2.2.3 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "moby.buildkit.cache.v0": "W3siZGlnZXN0Ijoic2hhMjU2OjczYzgzNTIxNmFhMzVmMWRhNDlhM2Y3OGVmNDczNjU4Yzc5YTFlOTMwNzA4ZmQxMzcxZTQ3MTQzMzIzNWJlZWUiLCJpbnB1dHMiOltbeyJsaW5rIjo2fV1dfSx7ImRpZ2VzdCI6InNoYTI1Njo4Y2VlNTdkZmZlZjEwODNhZjYyMGQyNTkxNjY1ODVlMDg4NDhmNDA2MTgxYzQ5YjU2MjI0YzQ3MmExNWExNDFkIn0seyJsYXllcnMiOlt7ImxheWVyIjo4LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjUyOjQwLjY4NTAzMTcxM1oifV0sImRpZ2VzdCI6InNoYTI1Njo5MzE1Y2I1YzMyNWVhNWJiOTkwNTU2NTBkOTFiMDRkOGZiN2YzMDEzOTg3ZGE0ZDA4M2ZiYTQzMWM1ZmVlZmYyIiwiaW5wdXRzIjpbW3sibGluayI6NX1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo5LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjUyOjQ1LjM0MDk2MzUxNloifV0sImRpZ2VzdCI6InNoYTI1NjphOGRmMjZjOTNmOWYzMDEyMjJiN2IyYTAxN2U3YTg4MzAyZjEzMDVmOGRiM2YwNTdjNjk2M2U0OTY1MGQ0MzE2IiwiaW5wdXRzIjpbW3sibGluayI6Mn1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMCwiY3JlYXRlZEF0IjoiMjAyNC0wNC0xOFQwNjo0NjoxMy42MDM1MDc4NTVaIn1dLCJkaWdlc3QiOiJzaGEyNTY6YWQ4YmJmYmNjNmZlMTRiN2QyYTVlOGUzOTU3YTgzNzM0YjE1YjgzMDQzNTc4NDhmOGQ1OWIwOGMyYWQ5ZDUxMiIsImlucHV0cyI6W1t7ImxpbmsiOjN9XV19LHsiZGlnZXN0Ijoic2hhMjU2OmI5OWQwYjBkNjYwMTViYzMwMTY1Zjc4ZTQ2ZmY3ZjMxMGQwODc1Y2IwY2RhNzYyY2RmMmVjZTE1MGMyYTZlYjgiLCJpbnB1dHMiOltbeyJsaW5rIjo3fV1dfSx7ImRpZ2VzdCI6InNoYTI1NjpkNDM3ZjRhMjE0ODg0MWVlMjg4Mjc5NjAyNWEzMTMxOGIwNzJlM2UwNWRhMmU5MDcxOGVmNTQ5ZmQxY2VkMTcyIiwiaW5wdXRzIjpbW3sibGluayI6MX1dXX0seyJsYXllcnMiOlt7ImxheWVyIjo2LCJjcmVhdGVkQXQiOiIyMDI0LTAzLTI3VDE1OjQ5OjU0LjAzMDE3NTM1MVoifV0sImRpZ2VzdCI6InNoYTI1NjpkYmViY2UwOTU4YzVkZWY1MDU0ODUwZDk0NzBlNjQ4MGIyNDQ1NjQ4NTU5MjI3NTZiODQxMWVjYzNjZTAyNjkxIiwiaW5wdXRzIjpbW3sibGluayI6MH1dXX0seyJsYXllcnMiOlt7ImxheWVyIjoxMSwiY3JlYXRlZEF0IjoiMjAyNC0wNC0xOFQwNjo0NjoxMy42MzMyMDYyNTVaIn1dLCJkaWdlc3QiOiJzaGEyNTY6ZGU0MTlmNTU1YTg2YjMxOTdiYWFhMzljYjg1YzMxM2M5Mzk5OGQ2YzdhNmU0OTA3YTFhMmU3OWNjYjJhNjBjMiIsImlucHV0cyI6W1t7ImxpbmsiOjR9XV19LHsibGF5ZXJzIjpbeyJsYXllciI6MTIsImNyZWF0ZWRBdCI6IjIwMjQtMDQtMThUMDY6NDY6MTQuMTYyNTcxMDg4WiJ9XSwiZGlnZXN0Ijoic2hhMjU2OmViOWExYjgyNjFhOTVjNDQ1ZDBjMjc4NjFiZWYyMGE1MjY5NTJiYmVkMTZlNTNiMjA3YTQyOTljMjNmYmY5OTIiLCJpbnB1dHMiOltbeyJsaW5rIjo4fV1dfV0=",
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:c47ffd097e3f4b46376b875f234b05f2d18d76b8afe8bfbadfef42b3d8e8c00e",
                    "sha256:d5b18a81f70658942c8383e6c327692d7a7c74c70a8eb7d81c9ef6a1cf251e59",
                    "sha256:5a9b775eaeeafbfbd5af5b87c3499a732a9f7eae071b18220416a0d70fc5ce26",
                    "sha256:cd0fe5340dc969b17de62bc242ad97bf1e628d3db686574469b8d0877e60a106",
                    "sha256:bfaa19d8a6b970356abb1f087dc1bf25eaf299bb6e73dff9e288e977b7f7590c",
                    "sha256:d5aeb1f79569f038d555a3f7508c8c6b0589ffe61de9bce7fc0709664dc0fa92",
                    "sha256:8e5c8da276401adcedc9046fb5f77408b6851eb86aa0b9d7de44541410f6ba90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dbf19e50b6c13ef7497ceafeb20e0777c6cc5e4d79bbc7aceacc639425fb0ecd"
                ]
            }
        },
        "latest": {
            "architecture": "amd64",
            "config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "/bin/bash"
                ],
                "Image": "sha256:2c79c49d2b3a23e2fdc65ad4371b8b9b8fcf63239b2f4829046068c7b5239a5c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "container": "47cbae77bb8b639c836a65dd84dd9ff3ff3550f68bc49b9ce5656bc7d762974e",
            "container_config": {
                "Hostname": "",
                "Domainname": "",
                "User": "conan",
                "AttachStdin": false,
                "AttachStdout": false,
                "AttachStderr": false,
                "Tty": false,
                "OpenStdin": false,
                "StdinOnce": false,
                "Env": [
                    "PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "CMAKE_VERSION_MAJOR_MINOR=3.18",
                    "CMAKE_VERSION_FULL=3.18.2",
                    "PYENV_ROOT=/opt/pyenv",
                    "CXX=/usr/bin/g++",
                    "CC=/usr/bin/gcc"
                ],
                "Cmd": [
                    "|1",
                    "CONAN_VERSION=1.59.0",
                    "/bin/sh",
                    "-c",
                    "mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                ],
                "Image": "sha256:2c79c49d2b3a23e2fdc65ad4371b8b9b8fcf63239b2f4829046068c7b5239a5c",
                "Volumes": null,
                "WorkingDir": "/home/conan",
                "Entrypoint": null,
                "OnBuild": null,
                "Labels": {
                    "maintainer": "Luis Martinez de Bartolome <luism@jfrog.com>"
                }
            },
            "created": "2023-02-16T16:54:39.754715425Z",
            "docker_version": "19.03.15",
            "history": [
                {
                    "created": "2021-08-31T01:21:27.577690932Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:11b425d4c08e81a3e0cb2e0345d27cd5fc844dd83f1096af4cc05f635824ff5d in / "
                },
                {
                    "created": "2021-08-31T01:21:28.751673238Z",
                    "created_by": "/bin/sh -c set -xe \t\t&& echo '#!/bin/sh' > /usr/sbin/policy-rc.d \t&& echo 'exit 101' >> /usr/sbin/policy-rc.d \t&& chmod +x /usr/sbin/policy-rc.d \t\t&& dpkg-divert --local --rename --add /sbin/initctl \t&& cp -a /usr/sbin/policy-rc.d /sbin/initctl \t&& sed -i 's/^exit.*/exit 0/' /sbin/initctl \t\t&& echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \t\t&& echo 'DPkg::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' > /etc/apt/apt.conf.d/docker-clean \t&& echo 'APT::Update::Post-Invoke { \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; };' >> /etc/apt/apt.conf.d/docker-clean \t&& echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \t\t&& echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \t\t&& echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \t\t&& echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests"
                },
                {
                    "created": "2021-08-31T01:21:29.65334794Z",
                    "created_by": "/bin/sh -c rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2021-08-31T01:21:30.454442334Z",
                    "created_by": "/bin/sh -c mkdir -p /run/systemd && echo 'docker' > /run/systemd/container"
                },
                {
                    "created": "2021-08-31T01:21:30.672229355Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:30.968455352Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Luis Martinez de Bartolome <luism@jfrog.com>",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.075028589Z",
                    "created_by": "/bin/sh -c #(nop)  ARG CONAN_VERSION",
                    "empty_layer": true
                },
                {
                    "created": "2022-02-22T20:53:31.185308906Z",
                    "created_by": "/bin/sh -c #(nop)  ENV CMAKE_VERSION_MAJOR_MINOR=3.18 CMAKE_VERSION_FULL=3.18.2 PYENV_ROOT=/opt/pyenv PATH=/opt/pyenv/shims:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin CXX=/usr/bin/g++ CC=/usr/bin/gcc",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:54:32.29838Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c dpkg --add-architecture i386     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends software-properties-common     && add-apt-repository ppa:git-core/ppa -y     && apt-get -qq update     && apt-get -qq install -y --no-install-recommends --no-install-suggests        sudo        build-essential        wget        git        libc6-dev-i386        g++-multilib        libgmp-dev        libmpfr-dev        libmpc-dev        libc6-dev        nasm        dh-autoreconf        ninja-build         libffi-dev        libssl-dev        pkg-config        subversion        zlib1g-dev        libbz2-dev        libsqlite3-dev        libreadline-dev        xz-utils        curl        libncurses5-dev        libncursesw5-dev        liblzma-dev        ca-certificates        autoconf-archive        && rm -rf /var/lib/apt/lists/*        && wget -q --no-check-certificate https://cmake.org/files/v${CMAKE_VERSION_MAJOR_MINOR}/cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && tar -xzf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz           --exclude=bin/cmake-gui           --exclude=doc/cmake           --exclude=share/cmake-${CMAKE_VERSION_MAJOR_MINOR}/Help        --exclude=share/vim        && cp -fR cmake-${CMAKE_VERSION_FULL}-Linux-x86_64/* /usr        && rm -rf cmake-${CMAKE_VERSION_FULL}-Linux-x86_64        && rm cmake-${CMAKE_VERSION_FULL}-Linux-x86_64.tar.gz        && curl -fL https://getcli.jfrog.io | sh        && mv jfrog /usr/local/bin/jfrog        && chmod +x /usr/local/bin/jfrog        && groupadd -f conan-1001 -g 1001        && groupadd -f conan-1000 -g 1000        && groupadd -f conan-2000 -g 2000        && groupadd -f conan-999 -g 999        && useradd -ms /bin/bash conan -g 1001 -G 1000,2000,999        && printf \"conan:conan\" | chpasswd        && adduser conan sudo        && printf \"conan ALL= NOPASSWD: ALL\\\\n\" >> /etc/sudoers        && wget --no-check-certificate --quiet -O /tmp/pyenv-installer https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer        && chmod +x /tmp/pyenv-installer        && /tmp/pyenv-installer        && rm /tmp/pyenv-installer        && update-alternatives --install /usr/bin/pyenv pyenv /opt/pyenv/bin/pyenv 100        && PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.13        && pyenv global 3.7.13        && ln -s /usr/lib/python3/dist-packages/lsb_release.py /opt/pyenv/versions/3.7.13/lib/python3.7/lsb_release.py        && pip install -q --upgrade --no-cache-dir pip        && pip install -q --no-cache-dir conan==${CONAN_VERSION} conan-package-tools        && chown -R conan:1001 /opt/pyenv        && find /opt/pyenv -iname __pycache__ -print0 | xargs -0 rm -rf        && update-alternatives --install /usr/bin/python python /opt/pyenv/shims/python 100        && update-alternatives --install /usr/bin/python3 python3 /opt/pyenv/shims/python3 100        && update-alternatives --install /usr/bin/pip pip /opt/pyenv/shims/pip 100        && update-alternatives --install /usr/bin/pip3 pip3 /opt/pyenv/shims/pip3 100        && apt-get -qq purge -y           libgmp-dev           libmpfr-dev           libmpc-dev           ninja-build           libffi-dev           libssl-dev           zlib1g-dev           libbz2-dev           libsqlite3-dev           libreadline-dev           libncurses5-dev           libncursesw5-dev           liblzma-dev        && apt-get -qq autoremove -y        && apt-get -qq autoclean        && apt-get -qq update        && rm -rf /var/lib/apt/lists/*"
                },
                {
                    "created": "2023-02-16T16:54:38.807848931Z",
                    "created_by": "/bin/sh -c #(nop)  USER conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:54:38.928306426Z",
                    "created_by": "/bin/sh -c #(nop) WORKDIR /home/conan",
                    "empty_layer": true
                },
                {
                    "created": "2023-02-16T16:54:39.754715425Z",
                    "created_by": "|1 CONAN_VERSION=1.59.0 /bin/sh -c mkdir -p /home/conan/.conan     && printf 'eval \"$(pyenv init -)\"\\n' >> ~/.bashrc     && printf 'eval \"$(pyenv virtualenv-init -)\"\\n' >> ~/.bashrc"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:be96a3f634de79f523f07c7e4e0216c28af45eb5776e7a6238a2392f71e01069",
                    "sha256:df54c846128da3c71cc11b2150a3df39ec86fb170e299765daf6bb016a0705c2",
                    "sha256:47ef83afae74745639f6738a05fe5320fcfca9e6c7765fba4f25e270bc0df9dc",
                    "sha256:1251204ef8fc20da275e09f6e3ab9205421d4ff34732f2d50a1d3e86d2995edd",
                    "sha256:594dd94aab904a3d3cc63730ab7ecfdf1ae886b438817a3f84d700fbd5368231",
                    "sha256:f1032a2ad492ade71a7996b40aabc427e46feae308a9df6802e1e447837b71cc"
                ]
            }
        }
    }
}